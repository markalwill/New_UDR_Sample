{"version":3,"sources":["./src/$_gendir lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/index.ts","./src/app/model/data-objects/manifest.data-object.ts","./src/app/model/data-objects/page-file-Url.data-object.ts","./src/app/model/data-objects/pop-up.data-object.ts","./src/app/model/data-objects/variable.playable.data-object.ts","./src/app/model/services/player-service.ts","./src/app/model/services/pop-up.service.ts","./src/app/model/services/scorm-service.ts","./src/app/model/services/scorm/api-wrapper.ts","./src/app/model/services/scorm/interaction.ts","./src/app/model/services/scorm/lms.constant.ts","./src/app/model/services/scorm/objective.ts","./src/app/model/services/startup-configuration-service.ts","./src/app/model/transactions/load-manifest.transaction.ts","./src/app/model/transactions/load-page-directory.transaction.ts","./src/app/model/transactions/load-player-init-data.transaction.ts","./src/app/model/transactions/transaction-task-handlers/load-Manifest.task-handler.ts","./src/app/model/transactions/transaction-task-handlers/load-page-directory.task-handler.ts","./src/app/player/model/data-objects/action-system/framework-action.playable.data-object.ts","./src/app/player/model/data-objects/action-system/framework-event.playable.data-object.ts","./src/app/player/model/data-objects/action-system/framework-function.playable.data-object.ts","./src/app/player/model/data-objects/event-system/case.playable.data-object.collection.ts","./src/app/player/model/data-objects/event-system/case.playable.data-object.ts","./src/app/player/model/data-objects/event-system/condition-branch.playable.data-object.ts","./src/app/player/model/data-objects/event-system/condition-leaf.playable.data-object.ts","./src/app/player/model/data-objects/event-system/event-handler.playable.data-object.ts","./src/app/player/model/data-objects/event-system/event.playable.data-object.collection.ts","./src/app/player/model/data-objects/event-system/event.playable.data-object.ts","./src/app/player/model/data-objects/event-system/function-group.playable.data-object.collection.ts","./src/app/player/model/data-objects/event-system/function-groups/function-group.playable.data-object.ts","./src/app/player/model/data-objects/event-system/function.playable.data-object.collection.ts","./src/app/player/model/data-objects/event-system/functions/animate.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/change-page.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/delay.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/display-message.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/get-math.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/get-property.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/get-random-number.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/get-typed-constant.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/get-variable.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/motion-path.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/set-property.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/set-scorm.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/set-variable.playable.data-object.ts","./src/app/player/model/data-objects/event-system/functions/wait.playable.data-object.ts","./src/app/player/model/data-objects/event-system/value.playable.data-object.ts","./src/app/player/player.module.ts","./src/app/player/view/abstract.component.ts","./src/app/player/view/audio.component.html","./src/app/player/view/audio.component.ts","./src/app/player/view/button.component.html","./src/app/player/view/button.component.ts","./src/app/player/view/checkbox.component.html","./src/app/player/view/checkbox.component.ts","./src/app/player/view/content-window.component.html","./src/app/player/view/content-window.component.ts","./src/app/player/view/directive/audio-event-handler.directive.ts","./src/app/player/view/directive/checkbox-event-handler.directive.ts","./src/app/player/view/directive/dropdown-list-event-handler.directive.ts","./src/app/player/view/directive/event-handler.directive.ts","./src/app/player/view/directive/radio-button-event-handler.directive.ts","./src/app/player/view/directive/text-event-handler.directive.ts","./src/app/player/view/directive/video-event-handler.directive.ts","./src/app/player/view/dropdown-list.component.html","./src/app/player/view/dropdown-list.component.ts","./src/app/player/view/html.component.html","./src/app/player/view/html.component.ts","./src/app/player/view/image.component.html","./src/app/player/view/image.component.ts","./src/app/player/view/menu.component.html","./src/app/player/view/menu.component.ts","./src/app/player/view/page.component.html","./src/app/player/view/page.component.ts","./src/app/player/view/player.component.html","./src/app/player/view/player.component.ts","./src/app/player/view/player.module.css","./src/app/player/view/quiz-fill-in-blank.component.html","./src/app/player/view/quiz-fill-in-blank.component.ts","./src/app/player/view/quiz-match.component.html","./src/app/player/view/quiz-match.component.ts","./src/app/player/view/quiz-multiple-choice.component.html","./src/app/player/view/quiz-multiple-choice.component.ts","./src/app/player/view/quiz-result.component.html","./src/app/player/view/quiz-result.component.ts","./src/app/player/view/quiz.component.ts","./src/app/player/view/radio-button.component.html","./src/app/player/view/radio-button.component.ts","./src/app/player/view/text-display.component.html","./src/app/player/view/text-display.component.ts","./src/app/player/view/text-input-area.component.html","./src/app/player/view/text-input-area.component.ts","./src/app/player/view/text-input.component.html","./src/app/player/view/text-input.component.ts","./src/app/player/view/text.component.ts","./src/app/player/view/video.component.html","./src/app/player/view/video.component.ts","./src/app/shared/system-shared/log.ts","./src/app/shared/system-shared/model/content-window.ts","./src/app/shared/system-shared/model/data-objects/action-system/framework-action.data-object.ts","./src/app/shared/system-shared/model/data-objects/action-system/framework-event.data-object.ts","./src/app/shared/system-shared/model/data-objects/action-system/framework-function.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/audio.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/button.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/checkbox.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/component-container.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/dropdown-list.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/html.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/image.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/quiz-fill-in-blank.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/quiz-match.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/quiz-multiple-choice.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/quiz-result.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/radio-button.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/text-display.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/text-input-area.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/text-input.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/text.data-object.ts","./src/app/shared/system-shared/model/data-objects/components/video.data-object.ts","./src/app/shared/system-shared/model/data-objects/config.data-object.ts","./src/app/shared/system-shared/model/data-objects/data-types/color.data-type.ts","./src/app/shared/system-shared/model/data-objects/data-types/markup-text.data-type.ts","./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts","./src/app/shared/system-shared/model/data-objects/element.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/case.data-object.collection.ts","./src/app/shared/system-shared/model/data-objects/event-system/case.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/condition-branch.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/condition-leaf.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/condition-node.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/event-handler.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.collection.ts","./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/function-group.data-object.collection.ts","./src/app/shared/system-shared/model/data-objects/event-system/function-groups/function-group.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/function.data-object.collection.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/animate.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/change-page.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/delay.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/display-message.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/get-math.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/get-property.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/get-random-number.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/get-typed-constant.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/get-variable.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/motion-path.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/set-property.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/set-scorm.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/set-variable.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/functions/wait.data-object.ts","./src/app/shared/system-shared/model/data-objects/event-system/value.data-object.ts","./src/app/shared/system-shared/model/data-objects/page-properties.data-object.ts","./src/app/shared/system-shared/model/data-objects/page.data-object.ts","./src/app/shared/system-shared/model/data-objects/query-string.data-object.ts","./src/app/shared/system-shared/model/data-objects/reference.data-object.ts","./src/app/shared/system-shared/model/data-objects/unit-type.data-object.ts","./src/app/shared/system-shared/model/data-objects/unit.data-object.ts","./src/app/shared/system-shared/model/data-objects/variable.data-object.ts","./src/app/shared/system-shared/model/services/injector.service.ts","./src/app/shared/system-shared/model/services/page.service.ts","./src/app/shared/system-shared/model/services/reference.service.ts","./src/app/shared/system-shared/model/services/unit-type.service.ts","./src/app/shared/system-shared/model/services/unit.service.ts","./src/app/shared/system-shared/model/services/variable.service.ts","./src/app/shared/system-shared/model/transactions/external-interface-handler.ts","./src/app/shared/system-shared/model/transactions/http-request-handler.ts","./src/app/shared/system-shared/model/transactions/load-config.transaction.ts","./src/app/shared/system-shared/model/transactions/load-page.transaction.ts","./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-config.task-handler.ts","./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-page.task-handler.ts","./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-references.task-handler.ts","./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-unit-type.task-handler.ts","./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-unit.task-handler.ts","./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-user-variables.task-handler.ts","./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts","./src/app/shared/system-shared/model/transactions/transaction.ts","./src/app/shared/system-shared/model/transactions/xml-parser.ts","./src/app/shared/system-shared/system-shared.module.ts","./src/app/user-interface/user-interface.module.ts","./src/app/user-interface/view/app-bar.component.html","./src/app/user-interface/view/app-bar.component.ts","./src/app/user-interface/view/comments-button.component.html","./src/app/user-interface/view/comments-button.component.ts","./src/app/user-interface/view/control-bar.component.html","./src/app/user-interface/view/control-bar.component.ts","./src/app/user-interface/view/pop-up.component.html","./src/app/user-interface/view/pop-up.component.ts","./src/app/user-interface/view/sidenav-components/course-map.component.html","./src/app/user-interface/view/sidenav-components/course-map.component.ts","./src/app/user-interface/view/sidenav-components/reference-display.component.html","./src/app/user-interface/view/sidenav-components/reference-display.component.ts","./src/app/user-interface/view/sidenav-components/references.component.html","./src/app/user-interface/view/sidenav-components/references.component.ts","./src/app/user-interface/view/sidenav-components/unit-display.component.html","./src/app/user-interface/view/sidenav-components/unit-display.component.ts","./src/app/user-interface/view/sidenav-content.component.html","./src/app/user-interface/view/sidenav-content.component.ts","./src/app/user-interface/view/sub-component/page-indicator.component.html","./src/app/user-interface/view/sub-component/page-indicator.component.ts","./src/app/user-interface/view/sub-component/pathed-page-title.component.html","./src/app/user-interface/view/sub-component/pathed-page-title.component.ts","./src/app/user-interface/view/user-interface.module.css","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir lazy\n// module id = ./src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \".window {\\r\\n    background-color: #fafafa;\\r\\n    color: #424242;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.player {\\r\\n    /* temporary to see boundary of player until sizing fully implemented */\\r\\n    /*border: 1px solid light grey;*/\\r\\n    margin: 0 auto;\\r\\n    -webkit-transform-origin: top center;\\r\\n            transform-origin: top center;\\r\\n}\\r\\n\\r\\n.loading {\\r\\n    /* horizontally and vertically center block */\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n    /* setup font and horizontally center within block */\\r\\n    font: 20px 'Open Sans', sans-serif;\\r\\n    text-align: center;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    z-index: 2;\\r\\n}\\r\\n\\r\\n.hidden {\\r\\n    display: none !important;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--\\nNOTE: The idea of this implementation is to show the loading interface or the player based on the loading flag.\\n        Initially the flag is set to true.  Once the content is loaded and the interface has been rendered,\\n        we would set the loading flag to false to show player and the content of the appropriate page.\\n\\n        This implementation is probably not quite right though, because once the processes are properly setup,\\n        the component for the player and page stuff probably wouldn't actually be created until after the flag is\\n        switched.  We still want those UI components to be created, just not shown until after everything is loaded.\\n\\n        Not sure if we will continue to try to size the player window, but for now reading width and height to\\n        size this component.  This will likely need to be changed / adjusted when we have a better idea how everything\\n        goes together.\\n\\n        TODO: Will probably want to modify this so that the PlayerComponent is just not visible until the loading\\n        flag is set to false.  Based on this article though, binding the hidden property is not recommended though\\n        http://angularjs.blogspot.com/2016/04/5-rookie-mistakes-to-avoid-with-angular.html\\n        Can try binding hidden, but might not work.  Recommend setting display:none !important\\n-->\\n\\n<div class=\\\"window player\\\" [ngStyle]=\\\"{'width.px': width, 'height.px': height, 'transform': 'scale('+ playerScale +')'}\\\">\\n\\n    <!-- Loading message and spinner -->\\n    <div *ngIf=\\\"isLoading\\\" class=\\\"window loading\\\" [@loadingScreen]='state'>\\n        <div style=\\\"position: relative; top: 47%; left: 50%; transform: translate(-50%, -50%);\\\">\\n            <md-progress-spinner mode=\\\"indeterminate\\\" style=\\\"margin: 0 auto; width: 72px; height: 72px;\\\">\\n            </md-progress-spinner>\\n            <p>Loading, please wait.</p>\\n        </div>\\n    </div>\\n\\n    <!-- Player with chrome -->\\n    <div *ngIf=\\\"showUserInterface\\\">\\n        <player-app-bar *ngIf=\\\"isDataLoadingComplete\\\" style=\\\"width: 100%\\\" [appBarHeight]=\\\"appBarHeight\\\"\\n                        (menuButtonClicked)=\\\"sidenav.toggle()\\\">\\n        </player-app-bar>\\n\\n        <md-sidenav-container [ngStyle]=\\\"{'height.px': height - 27}\\\">\\n            <md-sidenav #sidenav (close)=\\\"onSideNavClosed()\\\" style=\\\"overflow-x: hidden\\\">\\n                <player-sidenav-content #sideNavContent (closeSideNav)=\\\"sidenav.close()\\\"></player-sidenav-content>\\n            </md-sidenav>\\n\\n            <!-- player content -->\\n            <app-player *ngIf=\\\"isDataLoadingComplete\\\" [ngClass]=\\\"{hidden: isLoading}\\\"\\n                        [width]=\\\"width\\\" [height]=\\\"height\\\" [showUserInterface]=\\\"showUserInterface\\\">\\n                Root Module Root Component Loading ...\\n            </app-player>\\n\\n            <player-control-bar *ngIf=\\\"isDataLoadingComplete\\\"\\n                                [controlBarHeight]=\\\"controlBarHeight\\\">\\n            </player-control-bar>\\n\\n            <!-- Set z-index to arbitrary high value to keep comments action button on top - should be able to use\\n                    position and stacking context to accomplish this, but not working b/c template components being\\n                    layered above this for some reason (z-index is higher, but since they are children of app-player\\n                    should be layered below if position and z-index of app-player set, but didn't work -->\\n            <player-comments-button *ngIf=\\\"showCommentLink\\\"\\n                                    style=\\\"position: absolute; z-index: 1000000; top: 0px; left: 0px;\\\"\\n                                    [width]=\\\"width\\\" [height]=\\\"height\\\">\\n            </player-comments-button>\\n        </md-sidenav-container>\\n    </div>\\n\\n    <!-- Player with no chrome -->\\n    <div *ngIf=\\\"!showUserInterface\\\">\\n        <!-- player content -->\\n        <app-player *ngIf=\\\"isDataLoadingComplete\\\" [ngClass]=\\\"{hidden: isLoading}\\\"\\n                    [width]=\\\"width\\\" [height]=\\\"height\\\" [showUserInterface]=\\\"showUserInterface\\\">\\n            Root Module Root Component Loading ...\\n        </app-player>\\n\\n        <player-comments-button *ngIf=\\\"showCommentLink\\\"\\n                                style=\\\"z-index: 1000000; position: absolute; top: 0px; left: 0px;\\\"\\n                                [width]=\\\"width\\\" [height]=\\\"height\\\">\\n        </player-comments-button>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { animate, state, style, transition, trigger }   from '@angular/animations';\nimport { Component, OnInit, AfterViewChecked, ViewChild, HostListener} from '@angular/core';\n\nimport { Observable }   from 'rxjs/Observable';\n\nimport { InjectorService }              from './shared/system-shared/model/services/injector.service';\nimport { PageService }                  from './shared/system-shared/model/services/page.service';\nimport { PlayerService }                from './model/services/player-service';\nimport { StartupConfigurationService }  from './model/services/startup-configuration-service';\nimport { SideNavContentComponent }        from './user-interface/view/sidenav-content.component';\nimport { ScormService }                 from './model/services/scorm-service';\n\nimport {PopUpService} from './model/services/pop-up.service';\nimport {MdDialog, MdDialogConfig} from '@angular/material';\nimport {PopUpComponent} from './user-interface/view/pop-up.component';\n\n\n@Component({\n    selector: 'player-root',\n    // host: { 'window:beforeunload': 'doSomething($event)' },  TODO: Can we remove?\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    animations: [\n        trigger('loadingScreen', [\n            state('visible', style({\n                opacity: '1'\n            })),\n            state('void', style({\n                opacity: '0',\n            })),\n            transition('* => void', animate('1000ms ease-in'))\n        ])\n    ]\n})\n\n\n/**\n * The root component, of the root module, of the Player application.\n *\n * One of the key responsibilities of this component is to facilitate the startup/initialization sequence of the Player\n * application.  There are two key routes this process can take depending on what mode the Player is executing in.\n *\n * Standalone / Offline Mode\n *\n *  1. Load config XML.\n *  2. Load manifest XML.\n *  3. Load page directory XML.\n *  4. Load Player initialization data.\n *  5. Load launch page data.\n *\n * All Other Modes\n *\n *  1. Load config XML.\n *  2. Load Player initialization data.\n *  3. Load launch page data.\n *\n * TODO: Add a more detailed description of its relationship to the UI and content modules once structure is finalized.\n */\nexport class AppComponent implements OnInit {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Instance Variables / Properties\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    /**\n     * A reference to the sideNavContent Component.\n     * For Informing the sideNavContent for it has closed.\n     */\n    @ViewChild('sideNavContent')\n    sideNavContent: SideNavContentComponent;\n\n    /**\n     * This flag indicates when all initial Player, Course, and Page data is loaded.  Used to determine when player's\n     * user interface and course content can be shown.\n     *\n     * @internal: Always the inverse of isLoading?  Do we need this?\n     *\n     * @default false\n     */\n    public isDataLoadingComplete: boolean = false;\n\n    /**\n     * It is used to determine whether to show user interface.\n     *\n     * @default false\n     */\n    public showUserInterface: boolean = false;\n\n    public showCommentLink: boolean = false;\n\n    /**\n     *  The animation state.\n     *\n     *  TODO: Why isn't this named animationState?\n     *  TODO: Write a proper description.\n     *  TODO: Incorporate state with loading somehow.\n     *\n     * @default 'visible'\n     */\n    public state: string = 'visible';\n\n    /**\n     * This flag indicates whether to show the loading interface, or the user interface and page content.  It is only\n     * used during startup.\n     *\n     * The loading interface should be shown until the point when all initial Player, Course, and Page data is loaded\n     * and the UI components have been created.\n     *\n     * @default true\n     */\n    public isLoading: boolean = true;\n\n    /**\n     * The height of the entire Player application, including any user interface that may be shown, but not including\n     * any browser chrome.\n     *\n     * @default undefined\n     */\n    public height: number;\n\n    /**\n     * The width of the entire Player application, including any user interface that may be shown, but not including\n     * any browser chrome.\n     *\n     * @default undefined\n     */\n    public width: number;\n    /**\n     *  The height of the AppBar component that by default is part of the user interface and sits above the content\n     *  area.\n     *\n     *  @default 47\n     */\n    public appBarHeight: number = 47;\n\n    /**\n     *  The height of the ControlBar component that by default is part of the user interface and sits below the content\n     *  area.\n     *\n     *  @default 29\n     */\n    public controlBarHeight: number = 29;\n\n    public playerScale: number = 1;\n\n    /**\n     * Add a listener to event beforeunload to terminate the lms if scorm api is initialized\n     * TODO: Not sure where this should be placed - here?  top of class (linter complains if placed before instance\n     *          variables)?  with other functions / methods?  with callback methods?\n     */\n    @HostListener('window:beforeunload', ['$event'])\n    terminateScormConnection(e: Event): void {\n        if (this.scormService.isInitialized()) {\n            this.scormService.Terminate();\n        }\n\n        // return undefined so that Browser won't prompt a popup\n        return undefined;\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Constructor / Initialization\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Constructor - creates a new AppComponent instance.\n     *\n     * NOTE: We are injecting the InjectorService to ensure its static reference setup so that it's ready for use.\n     *\n     * TODO:    Refactor AppComponent constructor to not use TypeScript's parameter properties.\n     *          They are confusing and make documentation more difficult.\n     * TODO:    Refactor AppComponent constructor so its parameters are listed alphabetically per coding conventions.\n     *          In the absence of any other logical ordering, parameters should be listed alphabetically.\n     *\n     * @param   injectorService             A reference to the Player application's InjectorService.\n     * @param   startupConfigurationService A reference to the Player application's StartupConfigurationService.\n     * @param   playerService               A reference to the Player application's PlayerService.\n     * @param   pageService                 A reference to the Player application's PageService.\n     */\n    constructor(private injectorService: InjectorService,\n                private startupConfigurationService: StartupConfigurationService,\n                private playerService: PlayerService,\n                private pageService: PageService,\n                private scormService: ScormService,\n                private popUpService: PopUpService,\n                private mdDialog: MdDialog\n    ) { }\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Angular Lifecycle Hooks\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * The AppComponent's implementation of the ngOnInit lifecycle hook starts the Player application's initialization\n     * process by loading external XML config data via the StartupConfigurationService.\n     *\n     * When the Player is running in standalone/offline mode, then XML manifest and page directory data is also\n     * loaded.\n     *\n     * We also subscribe to our popUpService here! Alowing us to know when to open a pop-up\n     *\n     * @inheritDoc\n     */\n    ngOnInit(): void {\n        console.log('On Init WORK!!!!');\n        this.startupConfigurationService.loadConfig().subscribe(\n            (data) => {\n                this.onLoadConfigComplete();\n            },\n            (error) => { this.onObservableError(error); },\n            () => { }\n        );\n\n        this.popUpService.displayPopUp.subscribe( () => this.onOpenPopup());\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Event Handling\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    public scalePlayer(): void {\n\n        this.playerScale = Math.max(1,Math.min(window.innerWidth / this.width, window.innerHeight / this.height));\n\n        console.log(\"playerScale = \" + this.playerScale + \" window.innerWidth = \" + window.innerWidth + \" this.width = \" + this.width + \" window.innerHeight = \" + window.innerHeight + \" this.height = \" + this.height);\n    }\n\n    /**\n     * Handles the load configuration data is completed event.\n     *\n     * After loading our configuration data from an external XML file, if the Player is in standalone/offline mode\n     * continue on to loading the manifest XML file, otherwise trigger the onStartupConfigurationComplete event.\n     */\n    private onLoadConfigComplete(): void {\n\n        if (this.startupConfigurationService.caller === 'Player') {\n\n            this.startupConfigurationService.loadManifest().subscribe(\n                (data) => {\n                    this.onLoadManifestComplete();\n                },\n                (error) => { this.onObservableError(error); },\n                () => { }\n            );\n        } else {\n\n            this.onStartupConfigurationComplete();\n        }\n    }\n\n    /**\n     * Handles the load manifest data is completed event.\n     *\n     * After loading the manifest data (which we only do in standalone/offline mode), continue on to load the page\n     * directory (also used only in standalone/offline mode).\n     */\n    private onLoadManifestComplete(): void {\n\n        this.startupConfigurationService.loadPageDirectory().subscribe(\n            (data) => {\n                this.onStartupConfigurationComplete();\n            },\n            (error) => { this.onObservableError(error); },\n            () => { }\n        );\n    }\n\n    /**\n     * Handles the startup configuration is completed event.\n     *\n     * After loading all external configuration data (including manifest and page directory data when the Player is in\n     * standalone/offline mode), startup configuration is now complete.\n     *\n     * Continue the Player application's initialization process by loading the Player initialization data (unit type,\n     * unit hierarchy/structure [TOC], references, and variables).\n     */\n    private onStartupConfigurationComplete(): void {\n        this.width = this.startupConfigurationService.playerWidth;\n        this.height = this.startupConfigurationService.playerHeight;\n        this.resizeWindow();\n        // window.addEventListener('resize', this.scalePlayer);\n        window.onresize = (event) => { this.scalePlayer(); };\n        this.scalePlayer();\n        if (this.startupConfigurationService.caller === 'Template') {\n            // If launched from Template Designer can skip loading course related data (b/c it doesn't apply)\n            this.onLoadInitDataComplete();\n        } else {\n            // Otherwise start loadInitData process to load course related data\n            this.playerService.loadInitData().subscribe(\n                (data) => {\n                    this.onLoadInitDataComplete();\n                },\n                (error) => {\n                    this.onObservableError(error);\n                },\n                () => {\n                }\n            );\n        }\n    }\n\n    /**\n     * Handles the load Player initialization data is completed event.\n     *\n     * After loading the Player initialization data, continue on to loading the launch page data.\n     */\n    private onLoadInitDataComplete(): void {\n        const getLaunchPage: Observable<any> = this.pageService.getLaunchPage();\n\n        // Check observable to handle scenario where there is no launch page\n        if (getLaunchPage) {\n            // If observable returned, subscribe to initiate process of loading the launch page\n            getLaunchPage.subscribe(\n                (data) => {\n                    this.showInterface();\n                },\n                (error) => {\n                    this.onObservableError(error);\n                },\n                () => {\n                }\n            );\n        } else {\n            // If no observable returned, there is no launch page to load - show user interface (if applicable) with no\n            // content\n            this.showInterface();\n        }\n    }\n\n    /**\n     *\n     */\n    public onSideNavClosed(): void {\n        this.sideNavContent.menuState = 'mainMenu';\n    }\n\n    /**\n     *\n     */\n    public onOpenPopup(): void {\n        const mdDialogConfig: MdDialogConfig = new MdDialogConfig();\n        mdDialogConfig.disableClose = true;\n        this.mdDialog.open(PopUpComponent, mdDialogConfig);\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Functions / Methods\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    /**\n     * resize player window based on player width and height\n     */\n    public resizeWindow(): void {\n        resizeBy(this.startupConfigurationService.playerWidth - window.innerWidth,\n        this.startupConfigurationService.playerHeight - window.innerHeight);\n    };\n\n    /**\n     * Show player user interface (chrome, comment button, etc.)\n     */\n    private showInterface(): void {\n        this.showUserInterface = this.startupConfigurationService.showUserInterface;\n        this.isDataLoadingComplete = true;\n\n        // set showCommentLink (should not show when running as Player or previewing from Template Designer)\n        if (this.startupConfigurationService.caller !== 'Player' &&\n            this.startupConfigurationService.caller !== 'Template') {\n            this.showCommentLink = true;\n        }\n\n        // This should hide the loading interface once the page data has been loaded.  If this is still too\n        // soon, may have to try moving to an Angular lifecycle hook\n        this.isLoading = false;\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Error Handling\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    /**\n     * A general error handler for Observables.\n     *\n     * @param   error   The particular Error to pass to the error notification.\n     *\n     * @returns Observable An error Observable: emits only the error notification using the given error argument.\n     */\n    private onObservableError(error: any): Observable<any> {\n        InjectorService.injector.get(PopUpService).openSystemMessage(error.message);\n        return Observable.throw(error.message || error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule }                from '@angular/platform-browser';\nimport { HttpModule }                   from '@angular/http';\nimport { MdButtonModule,\n         MdDialog,\n         MdDialogContainer,\n         MdDialogModule,\n         MdProgressSpinnerModule,\n         MdSidenavModule }              from '@angular/material';\nimport { NgModule }                     from '@angular/core';\n\nimport { SimpleTimer }  from 'ng2-simple-timer';\nimport 'hammerjs';\n\nimport { PlayerModule }         from './player/player.module';\nimport { SystemSharedModule }   from './shared/system-shared/system-shared.module';\nimport { UserInterfaceModule }  from './user-interface/user-interface.module';\n\nimport { InjectorService }              from './shared/system-shared/model/services/injector.service';\nimport { PageService }                  from './shared/system-shared/model/services/page.service';\nimport { PlayerService }                from './model/services/player-service';\nimport {PopUpService}                   from './model/services/pop-up.service';\nimport { ReferenceService }             from './shared/system-shared/model/services/reference.service';\nimport { ScormService }                 from './model/services/scorm-service';\nimport { StartupConfigurationService }  from './model/services/startup-configuration-service';\nimport { UnitService }                  from './shared/system-shared/model/services/unit.service';\nimport { UnitTypeService }              from './shared/system-shared/model/services/unit-type.service';\nimport { VariableService }              from './shared/system-shared/model/services/variable.service';\n\nimport { AppComponent } from './app.component';\nimport {PopUpComponent} from './user-interface/view/pop-up.component';\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [\n        BrowserModule,\n        HttpModule,\n        MdButtonModule,\n        MdProgressSpinnerModule,\n        MdSidenavModule,\n        PlayerModule,\n        SystemSharedModule,\n        UserInterfaceModule,\n        MdDialogModule\n    ],\n    providers: [\n        SimpleTimer,\n        MdDialog,\n        InjectorService,\n        PageService,\n        PlayerService,\n        PopUpService,\n        ReferenceService,\n        ScormService,\n        StartupConfigurationService,\n        UnitService,\n        UnitTypeService,\n        VariableService\n    ],\n    entryComponents: [ MdDialogContainer, PopUpComponent ],\n    bootstrap: [AppComponent]\n})\n\n/**\n * The root module of the Player application.\n */\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\n * App Barrel file\n *\n * A barrel file is a way to roll up exports from several ES2015 modules into a single convenient ES2015 module. The\n * barrel itself is an ES2015 module file that re-exports selected exports of other ES2015 modules.  The idea is to make\n * it easier when it's necessary to import many related modules.  With the barrel file you can import all the modules\n * in a single statement from one source instead of many statements pulling from many sources.  The use of barrel files\n * is optional (sort of.  See note below).\n *\n * NOTE:\n *          This file was originally created by the angular CLI (1.0.0beta.17) when we created our new project.  Since\n *          the AppModule and AppComponent are only imported in a few places its usefulness is dubious.  Especially\n *          since as barrel files grow large they can be difficult to maintain as order becomes important to avoid\n *          circular dependencies.  We attempted to remove this file and change the format of the import statement in\n *          main.ts but for some reason this causes (at least it's the cause as far as we can tell) the webpack bundles\n *          to break in an inexplicable way at run-time.  So it stays for now...for now.\n */\nexport * from './app.component';\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/index.ts","import { Log, Logger } from '../../shared/system-shared/log';\r\nimport { XmlParser } from '../../shared/system-shared/model/transactions/xml-parser';\r\n\r\n/**\r\n * data object holder for offline IMIManifest.xml file\r\n *\r\n */\r\nexport class ManifestDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  \r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     */\r\n    // private logger: Logger = Log.getInstance().getLogger('ManifestDataObject');\r\n  \r\n  \r\n    public courseDir: string;\r\n    public courseTOC: string;\r\n    public courseUnitType: string;\r\n    public pageDir: string;\r\n    public referenceDir: string;\r\n    public courseVariables: string;\r\n    public pages: string;\r\n    public content: string;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new ManifestDataObject instance.\r\n     *\r\n     * @param   sourceXml\r\n     */\r\n    public constructor(sourceXml: Element) {\r\n        this.constructFromXml(sourceXml);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n    /**\r\n     * constructFromXML method is used to populate the ManifestDataObject with source XML element\r\n     *\r\n     * @param   sourceXML               the source XML of manifest file.\r\n     */\r\n    private constructFromXml(sourceXml: Element): void {\r\n        let children: Array<Element> = XmlParser.getChildElements(sourceXml);\r\n\r\n        for ( let child of children ) {\r\n            switch (child.tagName) {\r\n            case 'Pages':\r\n                this.pages = XmlParser.getTextContent(child);\r\n                break;\r\n            case 'Content':\r\n                this.content = XmlParser.getTextContent(child);\r\n                break;\r\n            case 'Course':\r\n                let courseInfos: Array<Element> = XmlParser.getChildElements(child);\r\n                for ( let info of courseInfos ) {\r\n                    switch (info.tagName) {\r\n                    case 'CourseDir':\r\n                        this.courseDir = XmlParser.getTextContent(info);\r\n                        break;\r\n                        case 'CourseTOC':\r\n                            this.courseTOC = XmlParser.getTextContent(info);\r\n                            break;\r\n                        case 'CourseUnitType':\r\n                            this.courseUnitType = XmlParser.getTextContent(info);\r\n                            break;\r\n                        case 'PageDir':\r\n                            this.pageDir = XmlParser.getTextContent(info);\r\n                            break;\r\n                        case 'ReferenceDir':\r\n                            this.referenceDir = XmlParser.getTextContent(info);\r\n                            break;\r\n                        case 'Variables':\r\n                            this.courseVariables = XmlParser.getTextContent(info);\r\n                            break;\r\n                    }\r\n                };\r\n                break;\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/data-objects/manifest.data-object.ts","import { Log, Logger } from '../../shared/system-shared/log';\r\n\r\n/**\r\n * data object holder for offline Page file URL\r\n *\r\n */\r\nexport class PageFileUrlDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  \r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     */\r\n    // private logger: Logger = Log.getInstance().getLogger('ElementDataObject');\r\n  \r\n    public pageID: string;\r\n    public pageUrl: string;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor of page url data object class.\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/data-objects/page-file-Url.data-object.ts","/**\r\n *  This is configuration for a Pop Up (System Message) create one of these and pass it into the PopUpService to create\r\n *  your Pop Up.\r\n */\r\nexport class PopUpDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The message to display in the Pop Up\r\n     *\r\n     * @type {string}\r\n     * @default ''\r\n     */\r\n    public message: string = '';\r\n\r\n    /**\r\n     * The text to display in the title bar.\r\n     *\r\n     * @type {string}\r\n     * @default 'System Message'\r\n     */\r\n    public titleText: string = 'System Message';\r\n\r\n    /**\r\n     * The material icon font string identifier for the title bar icon. Set this to '' if you don't want any icon.\r\n     *\r\n     * @type {string}\r\n     * @default 'error'\r\n     */\r\n    public titleIcon: string = 'error';\r\n\r\n    /**\r\n     * The color of the title bar.\r\n     *\r\n     * @type {string}\r\n     * @default '#FFFFFF'\r\n     */\r\n    public titleBarColor: string = '#FFFFFF';\r\n\r\n    /**\r\n     * The color of the title text.\r\n     *\r\n     * @type {string}\r\n     * @default '#000000'\r\n     */\r\n    public titleTextColor: string = '#000000';\r\n\r\n    /**\r\n     * Defines what button configuration this Pop Up has.\r\n     * The two valid configurations are 'ok' and 'okCancel'\r\n     *\r\n     * @type {string}\r\n     * @default 'ok'\r\n     */\r\n    public buttonConfiguration: string = 'ok'; // can also be set to 'okCancel';\r\n\r\n    /**\r\n     * A callback function to call when ok is pressed. if undefined nothing will occur.\r\n     *\r\n     * @type {any}\r\n     * @default undefined\r\n     */\r\n    public callBackFunction: () => void = undefined;\r\n\r\n    /**\r\n     * Determines if the Pop Up can be closed by clicking away from it.\r\n     * @type {boolean}\r\n     * @default true\r\n     */\r\n    public disableClose: boolean = true;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     *\r\n     */\r\n    constructor( message: string ) {\r\n        // Currently the string passed in (typically constructed by Flash interface at this point) contains carriage\r\n        // returns as \\n so they need to be replaced with <br>\r\n        // NOTE: If we find ourselves needing this elsewhere, we should consolidate the functionality to some service\r\n        this.message = message.replace(/[\\n]/g, '<br>');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/data-objects/pop-up.data-object.ts","import { Subject }  from 'rxjs/Subject';\r\n\r\nimport { EventDataObject }\r\n    from '../../shared/system-shared/model/data-objects/event-system/event.data-object';\r\nimport { EventPlayableDataObjectCollection }\r\n    from '../../player/model/data-objects/event-system/event.playable.data-object.collection';\r\nimport { VariableDataObject }\r\n    from '../../shared/system-shared/model/data-objects/variable.data-object';\r\n\r\n\r\n/**\r\n * Playable version of base variable data object.\r\n */\r\nexport class VariablePlayableDataObject extends VariableDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new VariablePlayableDataObject instance.\r\n     */\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        // Create a new asynchronous EventEmitter for when our value property changes.\r\n        this.onValueChanged = new Subject<any>();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The value of the variable that is represented by this data object.\r\n     *\r\n     * Changing this value triggers two events:\r\n     *\r\n     *  1.  An Event System EventDataObject.ON_CHANGE event.\r\n     *\r\n     *  2.  A VariableDataObject.onValueChanged event used by text components that can have variable references embedded\r\n     *      in their content.\r\n     *\r\n     * // TODO: Enumerate actual default values for each variable type.\r\n     * @default Varies depending upon the variable type.  The value is provided by the DataBase.\r\n     */\r\n    public set value(value: string) {\r\n\r\n        this._value = value;\r\n\r\n        // Process of loading another page clears out eventCollection for all variables.  Need to check if\r\n        // eventCollection exists before processing it.\r\n        if (this.eventCollection) {\r\n            // Trigger the Event System's Variable onChange Event.\r\n            (this.eventCollection as EventPlayableDataObjectCollection).processEvent(EventDataObject.ON_CHANGE);\r\n        }\r\n\r\n        // Trigger our own onValueChanged event.\r\n        this.onValueChanged.next();\r\n    }\r\n\r\n    public get value(): string {\r\n\r\n        return this._value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/data-objects/variable.playable.data-object.ts","import { Observable } from 'rxjs/Observable';\r\nimport { LoadPlayerInitDataTransaction } from '../transactions/load-player-init-data.transaction';\r\n\r\n\r\n/*\r\n *  Service class to provide player related tasks, like load player init data.\r\n **/\r\n\r\nexport class PlayerService {\r\n\r\n\r\n    constructor() {\r\n    }\r\n\r\n    /*\r\n    * Load player init data - unit,type,reference,variable\r\n    *\r\n    *\r\n    **/\r\n    public loadInitData(): Observable<any> {\r\n        const loadPlayerInitTransaction: LoadPlayerInitDataTransaction = new LoadPlayerInitDataTransaction();\r\n        return loadPlayerInitTransaction.startTransaction();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/services/player-service.ts","import {PopUpDataObject} from '../data-objects/pop-up.data-object';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n/**\r\n * This Service Acts as a centralized place for opening popup\r\n */\r\nexport class PopUpService {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Comment me!\r\n     */\r\n    public popUpDataObject: PopUpDataObject;\r\n\r\n    /**\r\n     *Comment me!\r\n     *\r\n     * @type {Subject}\r\n     */\r\n    public displayPopUp: Subject<any> = new Subject<any>();\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * The constructor for this service.\r\n     */\r\n    constructor() {}\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Once You Pop the Fun Don't Stop\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     *\r\n     * @param popUpDataObject\r\n     */\r\n    public openPopUp( popUpDataObject: PopUpDataObject): void {\r\n        this.popUpDataObject = popUpDataObject;\r\n        this.displayPopUp.next();\r\n    }\r\n\r\n    /**\r\n     * Convenience method for opening a generic system message.\r\n     */\r\n    public openSystemMessage( message: string ): void {\r\n        const popUpData: PopUpDataObject = new PopUpDataObject(message);\r\n        this.popUpDataObject = popUpData;\r\n\r\n        this.displayPopUp.next();\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/services/pop-up.service.ts","import { APIWrapper } from './scorm/api-wrapper';\r\nimport { Interaction } from './scorm/interaction';\r\nimport { Objective } from './scorm/objective';\r\nimport { LMSConstant } from './scorm/lms.constant';\r\n\r\n\r\n/*\r\n * Service class to provide SCORM related tasks, like ...\r\n *\r\n * TODO: get/set/commit/terminate are set to public for test purpuse, will change to private\r\n **/\r\n\r\n\r\nexport class ScormService {\r\n\r\n    // private apiwrapper\r\n    private apiwrapper: APIWrapper;\r\n\r\n\r\n    /**\r\n     * List of interactions currently stored locally.\r\n     */\r\n    public interactions: Array<Interaction> = [];\r\n\r\n\r\n    /**\r\n     * constructor for ScormService. ScormService is a singalton. This Constructor is not to be called directly!\r\n     */\r\n    constructor() {\r\n        console.log('@@@ ScormService.constructor @@@');\r\n        this.initializeScorm();\r\n\r\n        // check interactions. Debug code\r\n        // for (let i: number = 0; i < this.interactions.length; i++) {\r\n        //     console.log('@@@ ScormService.constructor @@@ interactions=' + this.interactions[i].serializeToString());\r\n\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * get API version\r\n     */\r\n    public getAPIVersion(): string {\r\n        return this.apiwrapper.version;\r\n    }\r\n\r\n    /**\r\n     * wirte API session log information\r\n     */\r\n    public writeLogToConsole(): void {\r\n\r\n        for (let i: number = 0; i < this.apiwrapper.sessionLogs.length; i++) {\r\n            console.log('\\n apiwrapper.sessionLogs [' + i + ']' +\n                this.apiwrapper.sessionLogs[i].timestamp + '---' +\n                this.apiwrapper.sessionLogs[i].scormFn + '---' +\n                this.apiwrapper.sessionLogs[i].scormFnArgs + '---' +\n                this.apiwrapper.sessionLogs[i].errorCode + '---' +\n                this.apiwrapper.sessionLogs[i].errorCodeString + '---' +\n                this.apiwrapper.sessionLogs[i].diagnostic);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * check is initialized\r\n     *\r\n     * @returns boolean\r\n     */\r\n    public isInitialized(): boolean {\r\n        return this.apiwrapper.isInitialized();\r\n    }\r\n\r\n    /**\r\n     * Get an Interaction out of the interactions array using an interaction ID.\r\n     *\r\n     * \r\n     * @param \tinteractionID \tID used to return the interaction we are looking for\r\n     * \r\n     * @return\tInteraction\t\tInteraction whose ID matches the interactionID passed into this function\r\n     */\r\n    public GetInteractionByID(interactionID: string): Interaction {\r\n\r\n        for (let i: number = 0; i < this.interactions.length; i++) {\r\n\r\n            if (this.interactions[i].id === interactionID) {\r\n\r\n                return this.interactions[i];\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * \tSave the interaction to the interactions array and the LMS\r\n     * \r\n     * @param\tinteraction\t interaction to be Saved\r\n     */\r\n    public saveInteraction(interaction: Interaction): void {\r\n\r\n        let questionLocation: number = this.getInteractionLocation(interaction);\r\n\r\n        console.log('@@@ScormService.saveInteraction questionLocation=' + questionLocation);\r\n\r\n        this.interactions[questionLocation] = interaction;\r\n\r\n        if (this.isInitialized()) {\r\n            this.writeInteraction(interaction);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \tFind if the given interaction is in the interactions array\r\n     * \r\n     * @param interaction \tthe interaction to find\r\n     * \r\n     * @return boolean\treturn true\tif its exists otherwise  return false\r\n     */\r\n    public isInteractionSaved(interaction: Interaction): boolean {\r\n\r\n        for (let i: number = 0; i < this.interactions.length; i++) {\r\n\r\n            if (this.interactions[i].id === interaction.id) {\r\n\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * A convenience method to initialize the communication with the lms\r\n     * It will\r\n     *      1) check SCORM API first;\r\n     *      2) Initialize API and set the session start time;\r\n     *      3) if completion_status is passed/completed, terminate the LMS\r\n     *              else initializeSCORMValues and getInitalQuizData\r\n     * \r\n     * @param \r\n     * @returns boolean\r\n     *\r\n     */\r\n    private initializeScorm(): boolean {\r\n\r\n        this.apiwrapper = new APIWrapper();\r\n        if (this.apiwrapper.initialize()) {\r\n\r\n            // Get completion status\r\n            let completion_status: string = this.get(LMSConstant.CMI_COMPLETION_STATUS);\r\n\r\n            // If course has already been completed, then terminate from the LMS\r\n            if (completion_status === 'passed' || completion_status === 'completed') {\r\n\r\n                // Terminate from the LMS.\r\n                this.Terminate();\r\n                return false;\r\n\r\n            } else {\r\n\r\n                this.initializeSCORMValues();\r\n                this.getInitalQuizData();\r\n            }\r\n\r\n            return true;\r\n\r\n        } else {\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     *  Get the index of a perticular Interaction from the interations array.\r\n     * \r\n     * @param \tinteraction \tinteraction to find\r\n     * \r\n     * @return \tnumber \tindex of the interaction array or next available index if not existed\r\n     */\r\n    private getInteractionLocation(interaction: Interaction): number {\r\n\r\n        let interactionLength: number = this.interactions.length;\r\n        for (let i: number = 0; i < interactionLength; i++) {\r\n\r\n            if (this.interactions[i].id === interaction.id) {\r\n\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return interactionLength;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Write interaction to the LMS\r\n     * \r\n     * @param \tinteraction\t\tinteraction being written to the LMS\r\n     */\r\n    private writeInteraction(interaction: Interaction): void {\r\n\r\n        // first find if interactin exists\r\n        let count: number = parseInt( this.get('cmi.interactions._count'), 10);\r\n        let interactionFound: boolean = false;\r\n        let position: number = 0;\r\n        while (position < count && !interactionFound) {\r\n            if (interaction.id === this.get('cmi.interactions.' + position + '.id')) {\r\n                interactionFound = true;\r\n            } else {\r\n                position++;\r\n            }\r\n        }\r\n\r\n        // we have the position (existed or new) to put it at, now write it. \r\n        this.set('cmi.interactions.' + position + '.id', interaction.id);\r\n        this.set('cmi.interactions.' + position + '.type', interaction.type);\r\n        for (let i: number = 0; i < interaction.objectives.length; i++) {\r\n            this.set('cmi.interactions.' + position + '.objectives.' + i + '.id', interaction.objectives[i]);\r\n        }\r\n\r\n        this.set('cmi.interactions.' + position + '.timestamp', interaction.timestamp);\r\n        // for (let n: number = 0; n < interaction.correctResponses.length; n++) {\r\n        //    this.set('cmi.interactions.' + position + '.correct_responses.' + n + '.pattern',\r\n        //        interaction.correctResponses[n]);\r\n        // }\r\n\r\n        // correctResponses is just a string\r\n        this.set('cmi.interactions.' + position + '.correct_responses.' + '0' + '.pattern',\r\n                interaction.correctResponses);\r\n\r\n        this.set('cmi.interactions.' + position + '.weighting', interaction.weighting);\r\n        this.set('cmi.interactions.' + position + '.learner_response', interaction.learnerResponse);\r\n        this.set('cmi.interactions.' + position + '.result', interaction.result);\r\n        this.set('cmi.interactions.' + position + '.latency', interaction.latency);\r\n        this.set('cmi.interactions.' + position + '.description', interaction.description);\r\n\r\n        this.commit();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Run the possess necessary for course completion. ie seting succes_status completion_status...\r\n     */\r\n    public executeCourseCompletetion(): void {\r\n\r\n        if(this.isInitialized()) {\r\n            this.set(LMSConstant.CMI_COMPLETION_STATUS, LMSConstant.COMPLETED);\r\n\r\n            // Set whether the course is successful\r\n            //  internal base behaviour is always successful when set\r\n            this.set(LMSConstant.CMI_SUCCESS_STATUS, LMSConstant.PASSED);\r\n\r\n            // Tell scorm api that upon closing the course this attempt is finished and will NOT be resumed\r\n            this.set(LMSConstant.CMI_EXIT, LMSConstant.NORMAL);\r\n\r\n            this.commit();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Set cmi.location\r\n     * \r\n     * @param \t\tLocation value being set\r\n     * \r\n     * @return boolean\tif it was succesful\r\n     */\r\n    public saveLocation(location: string): boolean {\r\n\r\n        let bool: boolean = this.set('cmi.location', location);\r\n        this.commit();\r\n        return bool;\r\n    }\r\n\r\n    /**\r\n     * Get the current location from the LMS\r\n     * \r\n     * @return string\tthe location\r\n     */\r\n    public getLocation(): string {\r\n\r\n        return this.get('cmi.location');\r\n    }\r\n\r\n    /**\r\n     *\tGet Quiz from interations vector by name. Compiles a Vector of interactions who have the same Quiz name.\r\n     * \r\n     * @param\tquizName \tto look for in our interactions\r\n     * \r\n     * @return\tArray<Interactions>\tList of interactions who have the Quiz name we are looking for\r\n     */\r\n    public getQuiz(quizName: string): Array<Interaction> {\r\n\r\n        let quizArray: Array<Interaction> = [];\r\n\r\n        for (let i: number = 0; i < this.interactions.length; i++) {\r\n\r\n            if ((this.interactions[i]).objectives[0] === quizName) {\r\n\r\n                quizArray[quizArray.length] = this.interactions[i];\r\n            }\r\n        }\r\n\r\n        return quizArray;\r\n    }\r\n\r\n    /**\r\n     * Wirte an objective to the LMS\r\n     * \r\n     * @param \tObjective\tobjective to be written\r\n     */\r\n    public writeObjective(objective: Objective): void {\r\n\r\n        let i: number = this.getObjectiveLocation(objective.objectiveName);\r\n\r\n        this.set('cmi.objectives.' + i + '.id', objective.objectiveName);\r\n        this.set('cmi.objectives.' + i + '.score.min', '' + objective.scoreMin);\r\n        this.set('cmi.objectives.' + i + '.score.max', '' + objective.scoreMax);\r\n        this.set('cmi.objectives.' + i + '.score.scaled', '' + objective.scoreScaled);\r\n        this.set('cmi.objectives.' + i + '.score.raw', '' + objective.scoreRaw);\r\n\r\n        // We do not use cmi.objectives.n.success_status\r\n        // this.set('cmi.objectives.' + i + '.success_status', objective.successStatus);\r\n\r\n        this.set('cmi.objectives.' + i + '.completion_status', objective.completionStatus);\r\n        this.set('cmi.objectives.' + i + '.description', objective.objectiveDesc);\r\n\r\n        this.commit();\r\n    }\r\n\r\n    /**\r\n     * Get Objective from the LMS by Name\r\n     * Note: Should likely be named GetObjectiveByName\r\n     * \r\n     * @param \tobjectiveName\tName of the objective\r\n     * \r\n     * @return\t\tObjective \r\n     */\r\n    public getObjective(objectiveName: string): Objective {\r\n\r\n        let i: number = this.getObjectiveLocation(objectiveName);\r\n\r\n        let objective: Objective = new Objective();\r\n\r\n        objective.objectiveName = objectiveName;\r\n        objective.objectiveDesc = objectiveName;\r\n        objective.objectiveID = i;\r\n\r\n        if (i < parseInt(this.get('cmi.objectives._count'), 10)) {\r\n            objective.scoreMin = parseInt(this.get('cmi.objectives.' + i + '.score.min'), 10);\r\n            objective.scoreMax = parseInt(this.get('cmi.objectives.' + i + '.score.max'), 10);\r\n            objective.scoreRaw = parseFloat(this.get('cmi.objectives.' + i + '.score.raw'));\r\n            objective.scoreScaled = parseFloat(this.get('cmi.objectives.' + i + '.score.scaled'));\r\n            objective.completionStatus = this.get('cmi.objectives.' + i + '.completion_status');\r\n\r\n            // We do not use cmi.objectives.n.success_status\r\n            // objective.successStatus = this.get('cmi.objectives.' + i + '.success_status');\r\n        }\r\n        return objective;\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Objective Location by Name\r\n     * \r\n     * @param \tobjectiveName\tname of the objective that will be found\r\n     * \r\n     * @return number\tindex of the Objective we are finding, or next available index if not existed\r\n     */\r\n    private getObjectiveLocation(objectiveName: string): number {\r\n\r\n        let objectiveCount: number = parseInt(this.get('cmi.objectives._count'), 10);\r\n\r\n        for (let i: number = 0; i < objectiveCount; i++) {\r\n\r\n            if (this.get('cmi.objectives.' + i + '.id') === objectiveName) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return objectiveCount;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Set parameter\r\n     *\r\n     * @param dataObject\r\n     * @param value\r\n     *\r\n     * @returns boolean\r\n     */\r\n    public set(dataObject: string, value: string): boolean {\r\n\r\n        return this.apiwrapper.setScormValue(dataObject, value);\r\n    }\r\n\r\n    /**\r\n     * Get parameter from the LMS\r\n     * \r\n     * @return string\r\n     */\r\n    public get(param: string): string {\r\n\r\n        return this.apiwrapper.getScormValue(param);\r\n    }\r\n\r\n    /**\r\n     * Get parameter from the LMS\r\n     *\r\n     */\r\n    public commit(): void {\r\n\r\n        return this.apiwrapper.commit();\r\n    }\r\n\r\n    /**\r\n     * terminate comunication with the LMS.\r\n     * It will\r\n     *      1) LMScommit/commit;\r\n     *      2) set session_time;\r\n     *      3) LMSFinish/Terminate\r\n     *\r\n     */\r\n    public Terminate(): void {\r\n\r\n        this.apiwrapper.finish();\r\n    }\r\n\r\n    /**\r\n     * Set SCORM values to the desired initail state\r\n     * \r\n     * @internal this was put into its own function to be able to be overidden in client specific code\r\n     */\r\n    private initializeSCORMValues(): void {\r\n\r\n        this.setDefaultCompleteStatus();\r\n\r\n        this.markAttemptToBeSuspended();\r\n\r\n        this.setupScore();\r\n\r\n        this.commit();\r\n    }\r\n\r\n\r\n    /**\r\n     * Call to the LMS tor retrieve any interactions that were stored before this attempt was suspended.\r\n     *\r\n     * Most of LMS 'get' call don't work in SCORM1.2 since those properties are set to WO (write only)\r\n     *\r\n     */\r\n    private getInitalQuizData(): void {\r\n\r\n        this.interactions = [];\r\n        let numberInteractions: number = parseInt(this.get('cmi.interactions._count'), 10);\r\n        if (numberInteractions > 0 && this.getAPIVersion() !== '1.2') {\r\n\r\n            for (let i: number = 0; i < numberInteractions; i++) {\r\n\r\n                let id: string = this.get('cmi.interactions.' + i + '.id');\r\n                let type: string = this.get('cmi.interactions.' + i + '.type');\r\n\r\n                // objectives\r\n                let numObjectives: number = parseInt(this.get('cmi.interactions.' + i + '.objectives._count'), 10);\r\n\r\n                let objectiveArray: Array<string> = [];\r\n                for (let z: number = 0; z < numObjectives; z++) {\r\n\r\n                    objectiveArray[z] = this.get('cmi.interactions.' + i + '.objectives.' + z + '.id');\r\n                }\r\n\r\n                let interaction: Interaction = new Interaction(id, type, objectiveArray);\r\n\r\n\r\n                interaction.timestamp = this.get('cmi.interactions.' + i + '.timestamp');\r\n\r\n                interaction.weighting = this.get('cmi.interactions.' + i + '.weighting');\r\n\r\n                let numCorrect: number = parseInt(this.get('cmi.interactions.' + i + '.correct_responses._count'), 10);\r\n                for (let n: number = 0; n < numCorrect; n++) {\r\n\r\n                    interaction.addCorrectResponse(this.get('cmi.interactions.' + i + '.correct_responses.'\r\n                        + n + '.pattern'));\r\n                }\r\n\r\n                interaction.learnerResponse = this.get('cmi.interactions.' + i + '.learner_response');\r\n                interaction.latency = this.get('cmi.interactions.' + i + '.latency');\r\n                interaction.result = this.get('cmi.interactions.' + i + '.result');\r\n                interaction.description = this.get('cmi.interactions.' + i + '.description');\r\n\r\n                this.interactions[i] = interaction;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set CMI_COMPLETION_STATUS to be INCOMPLETE\r\n     *\r\n     * @internal base behaviour sets only cmi.exit\r\n     */\r\n    private setDefaultCompleteStatus(): void {\r\n\r\n        this.set(LMSConstant.CMI_COMPLETION_STATUS, LMSConstant.INCOMPLETE);\r\n    }\r\n\r\n    /**\r\n     * Tell scorm api that upon closing the course this attempt not finished and will be resumed\r\n     * \r\n     * Note: These are the default settings to ensure that the course is suspended upon exiting the course. \r\n     * \r\n     * @internal base behaviour sets only cmi.exit\r\n     */\r\n    private markAttemptToBeSuspended(): void {\r\n\r\n        this.set(LMSConstant.CMI_EXIT, LMSConstant.SUSPEND);\r\n    }\r\n\r\n    /**\r\n     * Set the scorm values required to setup score\r\n     * \r\n     * @internal these base values will be overriden in client specific code\r\n     */\r\n    private setupScore(): void {\r\n        this.set('cmi.score.min', '0');\r\n        this.set('cmi.score.max', '100');\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/services/scorm-service.ts","import { SCORMAPI } from './api.interface';\r\nimport { LOG } from './log.interface';\r\n\r\nexport class APIWrapper {\r\n\r\n    private LMS_INITIALIZED: boolean = false;\r\n    private API: SCORMAPI;\r\n\r\n    private startDatetime: Date;\r\n\r\n    private scormLog: boolean = false;\r\n\r\n    public version: string;\r\n    public sessionLogs: Array<LOG> = [];\r\n\r\n    /**\r\n     * timeintervalConvertion \r\n     * Convert miliseconds to timeinterval (Scorm 2004 data model values)\r\n     *\r\n     * @param  miliseconds (int)\r\n     * @returns 2004 timeinterval  P[yY][mM][dD][T[hH][nM][s[.s]S]] (string)\r\n     *\r\n     */\r\n    public static timeintervalConvertion(miliseconds: number): string {\r\n\r\n        if (miliseconds !== 0) {\r\n            let _miliseconds: number = miliseconds;\r\n\r\n            let milisec: number = _miliseconds % 1000;\r\n            let remainder: number = (_miliseconds - milisec) / 1000;\r\n            let sec: number = remainder % 60;\r\n            remainder = (remainder - sec) / 60;\r\n\r\n            // SCORM only supports Centiseconds\r\n            sec = +(sec + milisec / 100).toFixed(2);\r\n\r\n            let min: number = remainder % 60;\r\n            remainder = (remainder - min) / 60;\r\n\r\n            let hours: number = remainder % 24;\r\n            remainder = (remainder - hours) / 24;\r\n\r\n            let days: number = remainder;\r\n\r\n            let _asString: string = 'P';\r\n            _asString = _asString + (days > 0 ? days + 'D' : '');\r\n            _asString = _asString + ((hours > 0 || min > 0 || sec > 0) ? 'T' : '');\r\n            _asString = _asString + (hours > 0 ? hours + 'H' : '');\r\n            _asString = _asString + (min > 0 ? min + 'M' : '');\r\n            _asString = _asString + (sec > 0 ? sec + 'S' : '');\r\n\r\n            return _asString;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n\t * Constructor\r\n\t * @param \r\n\t */\r\n    constructor() {}\r\n\r\n    public unset(): void {\r\n        this.LMS_INITIALIZED = false;\r\n        this.API = undefined;\r\n    }\r\n\r\n    /**\r\n     * A convenience method that do the correct sequence of calls to initialize the communication with the lms\r\n     * It checks SCORM API first, then Initialize API and set the session start time\r\n     * \r\n     * @param \r\n     * @returns boolean\r\n     *\r\n     */\r\n    public initialize(): boolean {\r\n\r\n        this.configure();\r\n\r\n        if (this.API) {\r\n            return this.lmsInitialize();\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * A convenience method that instantiate the SCORM API\r\n     * \r\n     * @param \r\n     *\r\n     */\r\n    public configure(): void {\r\n\r\n        this.API = this.findAPI(window);\r\n        if ((!this.API) && (window.opener)) {\r\n            this.API = this.findAPI(window.opener);\r\n        }\r\n\r\n        // if (!this.API) {\r\n        //    throw new Error('A valid SCORM API Adapter can not be found in the window or in the window.opener');\r\n        // }\r\n    }\r\n\r\n\r\n    /**\r\n     * A convenience method that find the SCORM API\r\n     * \r\n     * @param Window object\r\n     * @returns SCORMAPI\r\n     *\r\n     */\r\n    private findAPI(win: any): SCORMAPI {\r\n        const maxTries: number = 7;\r\n        let findedAPI: SCORMAPI = undefined;\r\n        let findAPITries: number = 0;\r\n\r\n        if (!win) {\r\n            return undefined;\r\n        }\r\n\r\n        while ((!win.API && !win.API_1484_11) && (win.parent) && (win.parent !== win) && findAPITries < maxTries) {\r\n            findAPITries++;\r\n            win = win.parent;\r\n        }\r\n\r\n        if (this.version) {\t\t\t\t\t\t\t\t\t\t\t// If SCORM version is specified by user, look for specific API\r\n            switch (this.version) {\r\n                case '2004':\r\n\r\n                    if (win.API_1484_11) {\r\n                        findedAPI = win.API_1484_11;\r\n                    } else {\r\n                        console.log('SCORM version 2004 was specified by user, but API_1484_11 cannot be found.');\r\n                    }\r\n                    break;\r\n\r\n                case '1.2':\r\n                    if (win.API) {\r\n                        findedAPI = win.API;\r\n                    } else {\r\n                        console.log('SCORM version 1.2 was specified by user, but API cannot be found.');\r\n                    }\r\n                    break;\r\n            }\r\n        } else {\r\n\r\n            if (win.API_1484_11) {\t\t\t\t\t\t\t\t\t// SCORM 2004-specific API\r\n                this.version = '2004'; \t\t\t\t\t\t\t    // Set version\r\n                findedAPI = win.API_1484_11;\r\n            } else if (win.API) {\t\t\t\t\t\t\t\t    // SCORM 1.2-specific API\r\n                this.version = '1.2'; \t\t\t\t\t\t\t    // Set version\r\n                findedAPI = win.API;\r\n            }\r\n\r\n        }\r\n\r\n         // check scorm api\r\n         // if (!win.API) {\r\n         //   console.log('@@@@@@@@@win.API not found@@@@@@@@ ' + win.API);\r\n         // }\r\n         // if (!win.API_1484_11) {\r\n         //   console.log('@@@@@@@@@win.API_1484_11 not found@@@@@@@@' + win.API_1484_11);\r\n         // }\r\n\r\n        return findedAPI;\r\n    }\r\n\r\n\r\n    /**\r\n     * A convenience method that initialize \r\n     * \r\n     * @param\r\n     * @returns boolean\r\n     *\r\n     */\r\n    public lmsInitialize(): boolean {\r\n\r\n        const operationName: string = 'Initialize';\r\n        this.LMS_INITIALIZED = this.isSucceeded((this.version === '1.2') ?\r\n            this.API.LMSInitialize('') : this.API.Initialize(''));\r\n        this.logOperation(operationName, null);\r\n\r\n        if (!this.isInitialized()) {\r\n            this.abort(operationName);\r\n            return false;\r\n        } else {\r\n\r\n            // set start time\r\n            this.startDatetime = new Date();\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * A convenience method that check the SCORM API\r\n     * \r\n     * @param\r\n     * @returns boolean\r\n     *\r\n     */\r\n    public isConfigured(): boolean {\r\n        return !(this.API === undefined);\r\n    }\r\n\r\n    /**\r\n     * A convenience method to get LMS_INITIALIZED\r\n     * \r\n     * @param\r\n     * @returns boolean (LMS_INITIALIZED)\r\n     *\r\n     */\r\n    public isInitialized(): boolean {\r\n        return this.LMS_INITIALIZED;\r\n    }\r\n\r\n\r\n    public lmsCommit(): void {\r\n        const operationName: string = 'Commit';\r\n\r\n        // log commit\r\n        this.logOperation(operationName, null);\r\n        if (!this.isSucceeded((this.version === '1.2') ? this.API.LMSCommit('') : this.API.Commit(''))) {\r\n            this.abort(operationName);\r\n        }\r\n    }\r\n\r\n    public lmsFinish(): void {\r\n        const operationName: string = 'Terminate';\r\n\r\n        // log \r\n        this.logOperation(operationName, null);\r\n\r\n        // set session_time \r\n        let elapsedTime: number = (new Date()).getTime() - this.startDatetime.getTime();\r\n\r\n        this.logOperation('LMSSetValue', 'cmi.session_time:' + elapsedTime);\r\n\r\n        this.setScormValue('cmi.session_time', APIWrapper.timeintervalConvertion(elapsedTime));\r\n        if (!this.isSucceeded((this.version === '1.2') ? this.API.LMSFinish('') : this.API.Terminate(''))) {\r\n            this.abort(operationName);\r\n        }\r\n\r\n        this.unset();\r\n    }\r\n\r\n    /**\r\n     * Requests information from the LMS.\r\n     * All maxChar related code is comentted out since maxChar is not used in flash code\r\n     * \r\n     * @param parameter (string, name of the 2004 SCORM data model element)\r\n     * @param value (string, value for the data model element)\r\n     *\r\n     *              \r\n     * @returns boolean (the value of the specified data model element)\r\n     *\r\n     */\r\n    // public setScormValue(parameter: string, value: string, maxChar: number): boolean {\r\n    public setScormValue(parameter: string, value: string): boolean {\r\n\r\n        // return true if parameter or value is undefined or empty\r\n        if (!parameter ||!value || parameter === '' || value === '') {\r\n            return true;\r\n        }\r\n\r\n        // Convert Scorm 2004 data model and session_time value to Scorm 1.2\r\n        if (this.version === '1.2') {\r\n            parameter = this.scorm12datamodel(parameter);\r\n            if (parameter === 'cmi.core.session_time') {\r\n                value = this.timeintervalToCMITimespan(value);\r\n            }\r\n\r\n            // Comment out since 1. we don't know waht logout doing; 2. Should use constant\r\n            // if (parameter === 'cmi.core.exit' && value === 'normal') {\r\n            //    value = 'logout';\r\n            // }\r\n\r\n\r\n        }\r\n\r\n        // Modification to truncate description @MOD\r\n        // maxChar = (typeof maxChar) ? maxChar : 0;\r\n        // if (maxChar > 0 && parameter.search('cmi.interactions.') !== -1 && parameter.search('.description') !== -1) {\r\n        //    if (value.length > maxChar) {\r\n        //        value = value.substr(0, maxChar - 3);\r\n        //        value += '...';\r\n        //    }\r\n        // }\r\n\r\n        // log set\r\n        this.logOperation('LMSSetValue', 'parameter: ' + parameter + '  value: ' + value);\r\n\r\n        if (this.isSucceeded((this.version === '1.2') ?\r\n            this.API.LMSSetValue(parameter, value) : this.API.SetValue(parameter, value))) {\r\n            return true;\r\n        } else {\r\n\r\n            // Templorarily comment out abort which We should to make it work like existed flash player\r\n            // this.abort('LMSSetValue');\r\n\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Requests information from the LMS.\r\n     * \r\n     * @param parameter (string, name of the 2004 SCORM data model element)\r\n     * @returns string (the value of the specified data model element)\r\n     *\r\n     */\r\n    public getScormValue(parameter: string): string {\r\n\r\n        // return '' if parameter is undefined or empty\r\n        if (!parameter || parameter === '') {\r\n            return '';\r\n        }\r\n\r\n        // Convert Scorm 2004 data model to Scorm 1.2\r\n        parameter = this.scorm12datamodel(parameter);\r\n\r\n        let value: string = (this.version === '1.2') ? this.API.LMSGetValue(parameter) : this.API.GetValue(parameter);\r\n\r\n        // log get\r\n        this.logOperation('LMSGetValue', 'parameter: ' + parameter + '  value: ' + value);\r\n\r\n        return value;\r\n    }\r\n\r\n\r\n    // A convenience method with a more\r\n    public commit(): void {\r\n        this.lmsCommit();\r\n    }\r\n\r\n    // A convenience method that do the correct sequence of calls to close the communication with the lms\r\n    public finish(): void {\r\n        this.lmsCommit();\r\n        this.lmsFinish();\r\n    }\r\n\r\n    public abort(action: string): void {\r\n        this.LMS_INITIALIZED = false;\r\n        this.API = null;\r\n\r\n        // throw new Error('' + action + ' failed');\r\n    }\r\n\r\n\r\n    public logOperation(scormAPIFn: string, scormAPIFnArguments: string): void {\r\n\r\n        if (this.scormLog) {\r\n\r\n            const scormLastErrCode: string = (this.version === '1.2') ?\r\n                this.API.LMSGetLastError() : this.API.GetLastError();\r\n            this.sessionLogs.push({\r\n                'timestamp': Date.now(),\r\n                'scormFn': scormAPIFn,\r\n                'scormFnArgs': scormAPIFnArguments,\r\n                'errorCode': scormLastErrCode,\r\n                'errorCodeString': (this.version === '1.2') ? this.API.LMSGetErrorString(scormLastErrCode) :\r\n                    this.API.GetErrorString(scormLastErrCode),\r\n                'diagnostic': (this.version === '1.2') ? this.API.LMSGetDiagnostic(scormLastErrCode) :\r\n                    this.API.GetDiagnostic(scormLastErrCode)\r\n            });\r\n        }\r\n    }\r\n\r\n    private isSucceeded(apiCall: any): boolean {\r\n\r\n        return 'true' === String(apiCall);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Convert Scorm 2004 data model to Scorm 1.2 data model if Scorm vesion is 1.2\r\n     * \r\n     * @param data2004 for 2004 data model\r\n     * @returns string of scorm 1.2 data model\r\n     * TODO: Its a uncompleted list, need to add more if necessary;\r\n     *\r\n     */\r\n    private scorm12datamodel(data2004: string): string {\r\n\r\n        let convertstr: string = data2004;\r\n\r\n        if (this.version === '1.2') {\r\n\r\n            if (data2004 === 'cmi.completion_status') {\r\n                convertstr = 'cmi.core.lesson_status';\r\n\r\n            } else if (data2004 === 'cmi.exit') {\r\n                convertstr = 'cmi.core.exit';\r\n\r\n            } else if (data2004 === 'cmi.location') {\r\n                convertstr = 'cmi.core.lesson_location';\r\n\r\n            } else if (data2004 === 'cmi.learner_id') {\r\n                convertstr = 'cmi.core.student_id';\r\n\r\n            } else if (data2004 === 'cmi.learner_name') {\r\n                convertstr = 'cmi.core.student_name';\r\n\r\n            } else if (data2004 === 'cmi.score.raw') {\r\n                convertstr = 'cmi.core.score.raw';\r\n\r\n            } else if (data2004 === 'cmi.score.min') {\r\n                convertstr = 'cmi.core.score.min';\r\n\r\n            } else if (data2004 === 'cmi.score.max') {\r\n                convertstr = 'cmi.core.score.max';\r\n\r\n            } else if (data2004.indexOf('cmi.interactions.') === 0 && data2004.indexOf('.timestamp') > 16) {\r\n                convertstr = data2004.replace('.timestamp', '.time');\r\n\r\n            } else if (data2004.indexOf('cmi.interactions.') === 0 && data2004.indexOf('.learner_response') > 16) {\r\n                convertstr = data2004.replace('.learner_response', '.student_response');\r\n\r\n            } else if (data2004 === 'adl.nav.request') {\r\n                convertstr = '';\r\n\r\n            } else if (data2004 === 'cmi.success_status') {\r\n                convertstr = 'cmi.core.lesson_status';\r\n\r\n            } else if (data2004.indexOf('cmi.interactions.') === 0 && data2004.indexOf('.description') > 16) {\r\n                convertstr = '';\r\n\r\n            } else if (data2004 === 'cmi.session_time') {\r\n                convertstr = 'cmi.core.session_time';\r\n            }\r\n        }\r\n\r\n        return convertstr;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * timeintervalToCMITimespant()\r\n     * Convert Scorm 2004 data model values to Scorm 1.2 data model values if Scorm vesion is 1.2\r\n     *\r\n     *  Convert Scorm 2004 timeinterval to Scorm 1.2 CMITimespan\r\n     *\r\n     *  Example:\r\n     *  2 days 3 hours 4 minutes and 55.66 seconds\r\n     *  is passed in as a timeinterval that = 'P2DT3H4M55.66S'\r\n     *\r\n     *  its returned as a CMITimespan that = '0051:04:55.66';\r\n     * \r\n     * @param timeinterval 2004 timeinterval  P[yY][mM][dD][T[hH][nM][s[.s]S]] (string)\r\n     * @returns {string} 1.2 CMITimespan hhhh:mm:ss.ss \r\n     *\r\n     */\r\n     private timeintervalToCMITimespan(timeinterval: string): string {\r\n    // public timeintervalToCMITimespan(timeinterval: string): string{ // public is for test only\r\n        let lastIndexFound: number = 1;\r\n        let years: number = 0;\r\n        let months: number = 0;\r\n        let days: number = 0;\r\n        let hours: number = 0;\r\n        let minutes: number = 0;\r\n        let seconds: number = 0;\r\n        let fractSeconds: number = 0; // 100th of a second \r\n\r\n        if (timeinterval.indexOf('Y') !== -1) {\r\n            years = parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('Y')), 10);\r\n            lastIndexFound = timeinterval.indexOf('Y') + 1;\r\n        }\r\n        if (timeinterval.indexOf('M') !== -1 && timeinterval.indexOf('M') < timeinterval.indexOf('T')) {\r\n            months = parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('M')), 10);\r\n            lastIndexFound = timeinterval.indexOf('M') + 1;\r\n        }\r\n        if (timeinterval.indexOf('D') !== -1) {\r\n            days = parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('D')), 10);\r\n            lastIndexFound = timeinterval.indexOf('D') + 1;\r\n        }\r\n\r\n        timeinterval = timeinterval.substring(timeinterval.indexOf('T'));\r\n        lastIndexFound = timeinterval.indexOf('T') + 1; // adjusting for The T\r\n\r\n        if (timeinterval.indexOf('H') !== -1) {\r\n            hours = parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('H')), 10);\r\n            lastIndexFound = timeinterval.indexOf('H') + 1;\r\n        }\r\n        if (timeinterval.indexOf('M') !== -1) {\r\n            minutes = parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('M')), 10);\r\n            lastIndexFound = timeinterval.indexOf('M') + 1;\r\n        }\r\n        if (timeinterval.indexOf('S') !== -1) {\r\n            seconds = Math.floor(parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('S')), 10));\r\n            fractSeconds = parseInt(timeinterval.substring(timeinterval.indexOf('.') +\r\n                1, timeinterval.indexOf('S')), 10);\r\n            lastIndexFound = timeinterval.indexOf('S') + 1;\r\n        }\r\n\r\n        // months is impossible to convert to hours but this shouldn't be an issue for us \r\n        // in fact it should never be used\r\n        let numberCMIHours: number = (years * 8760) + (months * 730) + (days * 24) + hours;\r\n\r\n        if (numberCMIHours > 9999) {\r\n            return '9999:99:99.99'; // caped at 4 digits or 9999 hours.\r\n        }\r\n\r\n        // make sure hours has 4 characters\r\n        let CMIHours: string = '' + numberCMIHours;\r\n        if (CMIHours.length < 4) {\r\n            for (let i: number = 4 - CMIHours.length; i > 0; i--) {\r\n                CMIHours = '0' + CMIHours;\r\n            }\r\n        }\r\n\r\n        let CMIMinutes: string = (minutes < 10) ? '0' + minutes : '' + minutes; // make sure minutes has 2 characters\r\n        let CMISeconds: string = (seconds < 10) ? '0' + seconds : '' + seconds; // make sure seconds has 2 characters\r\n        let CMIFractSeconds: string = (fractSeconds < 10) ? '0' + fractSeconds  : '' + fractSeconds;\r\n\r\n        let CMITimespan: string = CMIHours + ':' + CMIMinutes + ':' + CMISeconds + '.' + CMIFractSeconds;\r\n        return CMITimespan;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/services/scorm/api-wrapper.ts","import { APIWrapper } from './api-wrapper';\r\nimport { LMSConstant } from './lms.constant';\r\n\r\n/*\r\n *  Interaction class for supported cmi.objectives data model\r\n */\r\n\r\nexport class Interaction {\r\n\r\n    private _id: string;\r\n\r\n    private _type: string;\r\n\r\n    private _objectives: Array<string>;\r\n\r\n    /**\r\n    * time of creation of Interaceion (when question is displayed)\r\n    * SCORM Data Type: time(second,10,0)\r\n    */\r\n    private _timestamp: TimestampObject;\r\n\r\n    private _correct_responses: string;\r\n\r\n    private _correct_responses_text: string;\r\n\r\n    private _wieghting: string = '1';\r\n\r\n    private _learner_response: string;\r\n\r\n    private _learner_response_text: string;\r\n\r\n    private _result: string = LMSConstant.UNANTICIPATED;\r\n\r\n    /**\r\n     * The cmi.interactions.n.latency data element is the time elapsed between the time the interaction was made\r\n     * available to the learner for response and the time of the first response\r\n     *\r\n     * SCORM Data Type: timeinterval (second,10,2) for 2004, CMITime for 1.2\r\n     */\r\n    private _latency: TimeintervalObject;\r\n\r\n    private _description: string;\r\n\r\n\r\n    /**\r\n     * Constructor - Init properties\r\n     *\r\n     * @param   id          PageID\r\n     *          type        Quiz type\r\n     *          objectives  array of objective\r\n     */\r\n\r\n    constructor(id: string, type: string, objectives: Array<string> = null) {\r\n\r\n        // this._correct_responses = '';\r\n        // this._correct_responses_text = '';\r\n        this._id = id;\r\n\r\n        if (!(type === LMSConstant.TRUE_FALSE || type === LMSConstant.MULTIPLE_CHOICE\r\n            || type === LMSConstant.FILL_IN || type === LMSConstant.LONG_FILL_IN\r\n            || type === LMSConstant.MATCHING || type === LMSConstant.PERFORMANCE\r\n            || type === LMSConstant.SEQUENCING || type === LMSConstant.LIKERT\r\n            || type === LMSConstant.NUMERIC || type === LMSConstant.OTHER)) {\r\n\r\n            throw (new Error('Invalid Interaction type ' + type));\r\n        }\r\n        this._type = type;\r\n        this._objectives = objectives;\r\n        this._timestamp = new TimestampObject();\r\n    }\r\n\r\n    /**\r\n     * retreives interaction id, read-only\r\n     */\r\n    public get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * retreives interaction type, read-only\r\n     */\r\n    public get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * retreives interaction objectives (an array of strings [QuizIDs]), read-only\r\n     */\r\n    public get objectives(): Array<string> {\r\n        return this._objectives;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////\r\n    // read & write getters and setters\r\n    //////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Timestamp is generally handle automatically. it represents when the user is presented with the question\r\n     * it is created when the Interaction is created.\r\n     *\r\n     * The setter can be used to load in an existing timestamp, when the information is retrieved from SCORM\r\n     * If the user is presented with the question that is loaded in from SCORM again, there should be a new timestamp\r\n     */\r\n    public get timestamp(): string {\r\n        return this._timestamp.toString();\r\n    }\r\n\r\n    public set timestamp(value: string) {\r\n        this._timestamp.parseSCORMTimestamp(value);\r\n    }\r\n\r\n    /**\r\n     * question weight, defaults to 1\r\n     */\r\n    public get weighting(): string {\r\n        return this._wieghting;\r\n    }\r\n\r\n    public set weighting(value: string) {\r\n        this._wieghting = value;\r\n    }\r\n\r\n    /**\r\n     * Interactinon Description (Question Text?)\r\n     */\r\n    public get description(): string {\r\n        return this._description;\r\n    }\r\n    public set description(value: string) {\r\n        this._description = value;\r\n    }\r\n\r\n    /**\r\n     * Interactinon Result set either from LMS of via CalculateResult function\r\n     * values accepted by scorm are are:\r\n         * 'correct'\r\n         * 'incorrect'\r\n         * 'unanticipated\r\n         * 'neutral'\r\n     *\r\n     */\r\n    public get result(): string {\r\n        return this._result;\r\n    }\r\n\r\n    public set result(value: string) {\r\n        this._result = value;\r\n    }\r\n\r\n    /**\r\n     * compares correct response to learner response, and determines 'result'\r\n     * calculation can be different based on quesion type\r\n     *\r\n     * @return\r\n     */\r\n    public calculateResult(): string {\r\n\r\n        switch (this._type) {\r\n            case LMSConstant.MULTIPLE_CHOICE:\r\n            case LMSConstant.MATCHING:\r\n            /*    for (let i: number = 0; i < this._correct_responses.length; i++) {\r\n                    if (this._correct_responses[i] === this._learner_response) {\r\n                        return LMSConstant.CORRECT;\r\n                    }\r\n                }\r\n                return LMSConstant.INCORRECT;\r\n\r\n            case LMSConstant.FILL_IN:\r\n                // Fill in the blanks should not be case sensitve so use toLowerCase here, \r\n                // also trim leading white space when comparing\r\n                for (let n: number = 0; n < this._correct_responses.length; n++) {\r\n                    if (this.trimWhitespace(this._correct_responses[n].toLowerCase())\r\n                        === this.trimWhitespace(this._learner_response.toLowerCase())) {\r\n                        return LMSConstant.CORRECT;\r\n                    }\r\n                }\r\n                return LMSConstant.INCORRECT;\r\n            */\r\n            case LMSConstant.FILL_IN:\r\n                if (this._correct_responses.toLowerCase() === this._learner_response.toLowerCase()) {\r\n\r\n                        return LMSConstant.CORRECT;\r\n                }\r\n                return LMSConstant.INCORRECT;\r\n\r\n            default:\r\n                throw (new Error('Invalid Interaction type(' + this._type + ')'));\r\n        }\r\n\r\n        // Unreachable code\r\n        // return LMSConstant.UNANTICIPATED;\r\n    }\r\n\r\n\r\n    protected trimWhitespace(value: string): string {\r\n\r\n        if (value) {\r\n            return value.replace(/^\\s+|\\s+$/g, '');\r\n        }\r\n        return '';\r\n    }\r\n\r\n\r\n    /**\r\n     * how long it took the user to answer the question\r\n     */\r\n    public get latency(): string {\r\n        return this._latency.toString();\r\n    }\r\n\r\n    public set latency(value: string) {\r\n\r\n\r\n        if (this._latency === undefined) {\r\n            this._latency = new TimeintervalObject();\r\n        };\r\n\r\n\r\n        this._latency.parseSCORMTimeinterval(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Question response Notes:\r\n     *\r\n     *\r\n     * Each question type expects responses in a different format\r\n     *\r\n     *\r\n     * (from Table 4.2.9.1a: Correct Response Pattern Format Requirements of SCORM 2004 4th Edition\r\n     * Run-Time Environment (RTE) Version 1.1 document)\r\n     *\r\n     * TRUE_FALSE: acceptable resoponses include 'true' and 'false'\r\n     *\r\n     * MULTIPLE_CHOICE: An ISO-10646-1 characterstring representing a set of short_identifier_types,\r\n     * where each element of the set is separated by a special reserved token ('[,]').\r\n     * (accepts up to 36 short_identifier_types)\r\n     * a multiple choice question can have more than 1 selected option be required for a correct answer\r\n     *\r\n     * FILL_IN: localized_string_type (250 chars). answer possibly preceded by {case_matters=<boolean>} and/or\r\n     * {order_matters=<boolean>}\r\n     * if more than one answer is required then the responses are delimited by a comma.\r\n     *\r\n     * LONG_FILL_IN: localized_string_type (4000 chars). answer possibly preceded by {case_matters=<boolean>}\r\n     *\r\n     * LIKERT: short_identifier_type\r\n     *\r\n     * MATCHING: matching are stored as a sereies of short_identifier_types, sorted as\r\n     * <source a>[.]<target a>[,]<source b>[.]<target b>\r\n     * where source a matches target a and source b matches target b\r\n     *\r\n     * PERFORMANCE: i do not forsee us using this one and it is complicated. for more info see official document\r\n     *\r\n     * SEQUENCING: a series of short_identifier_type in the format of <short_identifier_type>[,]<short_identifier_type>\r\n     *\r\n     * NUMERIC: a range of numbers in the format <min>[:]<max>\r\n     * if min and max are the same number, then only one response will result to true.\r\n     *\r\n     * OTHER: characterstring (ISO-10646-1) 4000 characters\r\n     *\r\n     *\r\n     */\r\n\r\n    /**\r\n     * AddCorrectResponse\r\n     *\r\n     * http://www.moschorus.com/centre/MosPub/documents/contenu/pages/SCORM_2004_4ED_RTE.pdf\r\n     *\r\n     * used to add the correct responses available to the user.\r\n     * everytime it is called it adds a new acceptable response to the _correct_response array\r\n     *\r\n     * it is possible that an interaction will be loaded from SCORM and then used for a question,\r\n     * for this reason we will need to check for duplicates\r\n     *\r\n     * accepts a variable number of parameters, depending on question type the information can be handled differently\r\n     * I know that is messy, but it is better than trying to call a different function (or several functions)\r\n     * for each possible question type\r\n     *\r\n     * if the question is a multiple choice question:\r\n         *\r\n         * it accepts a series of unique identifiers (elementIds for Radio/Checkbox) which are stored\r\n         *      as a comma delimited string (expected by SCORM)\r\n         * if more than one id is passed in, all id's are required for answer to be correct.\r\n         *\r\n         * when data is read in from SCORM, it will be passed to this function as one parameter which is an allready\r\n         *      comma delimited string, the end results will be the the same\r\n         *\r\n         * SCORM only requires the LMS to support 10 correct responses for multiple choice\r\n         *\r\n     * if the question if fill in the blank:\r\n         *\r\n         *\r\n         *\r\n         * there are two types of fill in the blank. fill_in and long_fill_in:\r\n             * fill_in supports 250 chacters, can have multiple strings seperated in comma delimited format\r\n                * {case_matters=[boolean]}{order_matters=[boolean]}[localized_string_type][,][localized_string_type]\r\n                 * if more than one string is present, each string must be contained in the answer to evaluate to true.\r\n                 * SCORM only requrires LMS to handle 10 of these strings in one 'correct response'\r\n                 * SCORM only requires LMS to support 5 correct responses for fill_in\r\n                 * supports the following tags (they go in the front of the string):\r\n                     *\r\n                     * Reserved Delimiter Syntax \tDefault Value       \tExample\r\n                     * -----------------------------------------------------------------------\r\n                     * {lang=[language_type]}    \t{lang=en}            \t{lang=en}\r\n                     * {case_matters=[boolean]} \t{case_matters=false} \t{case_matters=true}\r\n                     *                          \t                     \t{case_matters=false}\r\n                     * {order_matters=[boolean]} \t{order_matters=true} \t{order_matters=true}\r\n                     *                           \t                     \t{order_matters=false}\r\n                 *\r\n             *\r\n             * long_fill_in requires exact match but supports 4000 characters\r\n                * only supports the {case_matters=[boolean]} &#38; {lang=[language_type]} tags\r\n                * SCORM only requires LMS to support 5 correct responses for long_fill_in\r\n            *\r\n         *\r\n            * matching :\r\n                * Value Space:\r\n                * An ISO-10646-1 characterstring representing a set of short_identifier_types, where each element of\r\n                * the set isseparated by a special reserved token ('[,]'). The LMS shall support characterstrings that\r\n                * include at least36 (the required SPM) short_identifier_types, separated by the reserved '[,]' token.\r\n                * The LMS may extend theability to support more; however, this is implementation specific. The LMS is\r\n                * only responsible for managing the SPM of 36 short_identifier_types.\r\n                * Format:\r\n                * The format of the characterstring shall be:\r\n                    * [short_identifier_type][,][short_identifier_type]\r\n                *\r\n            *\r\n        *\r\n     *\r\n     *\r\n     * @param\tresponsesAsStrings\r\n     */\r\n    public addCorrectResponse(responsesAsStrings: string): void {\r\n        switch (this._type) {\r\n            case LMSConstant.MULTIPLE_CHOICE:\r\n            case LMSConstant.FILL_IN:\r\n            case LMSConstant.MATCHING:\r\n                this._correct_responses = responsesAsStrings;\r\n                break;\r\n            default:\r\n                throw (new Error('Invalid Interaction type(' + this._type + ')'));\r\n\r\n        }\r\n    }\r\n\r\n    public get correctResponses(): string {\r\n\r\n        return this._correct_responses;\r\n    }\r\n\r\n    public addCorrectResponseText(responsesAsStrings: string): void {\r\n\r\n        switch (this._type) {\r\n            case LMSConstant.MULTIPLE_CHOICE:\r\n            case LMSConstant.FILL_IN:\r\n            case LMSConstant.MATCHING:\r\n\r\n                this._correct_responses_text = responsesAsStrings;\r\n                break;\r\n            default:\r\n                throw (new Error('Invalid Interaction type(' + this._type + ')'));\r\n\r\n        }\r\n    }\r\n\r\n    public get correctResponsesText(): string {\r\n\r\n        return this._correct_responses_text;\r\n    }\r\n\r\n\r\n    /**\r\n     * SetLearnerResponse\r\n     *\r\n     * used to set the learner's responses to the question.\r\n     *\r\n     * called when the user answers the question, but NOT when data is read in from SCORM. Because it also signifies\r\n     * the time that the question has been answer and sets the latency variable\r\n     *\r\n     * it also inderectly sets the Result variable\r\n     *\r\n     * accepts a variable number of parameters, depending on question type the information can be handled differently\r\n     * I know that is messy, but it is better than trying to call a different function for each possible question type\r\n     *\r\n     * if the question is a multiple choice question:\r\n         *\r\n         * it accepts a series of unique identifiers (elementIds for Radio/Checkbox) which are stored as\r\n         * a comma delimited string (expected by SCORM)\r\n         * if more than one id is passed in, it shows that the user made more than one selection\r\n         *\r\n         * when read in from SCORM, it will passed in an all ids in one parameter as an allready comma delimited string,\r\n         * the end results will be the the same\r\n         *\r\n     * @param\tstring responsesAsStrings\r\n     */\r\n    public setLearnerResponse(responsesAsStrings: string): void {\r\n\r\n        this._latency = new TimeintervalObject((new TimestampObject()).date.getTime() - this._timestamp.date.getTime());\r\n\r\n        switch (this._type) {\r\n            case LMSConstant.MULTIPLE_CHOICE:\r\n            case LMSConstant.FILL_IN:\r\n            case LMSConstant.MATCHING:\r\n                this._learner_response = responsesAsStrings;\r\n                break;\r\n            default:\r\n                throw (new Error('Invalid Interaction type(' + this._type + ')'));\r\n        }\r\n        this._result = this.calculateResult();\r\n    }\r\n\r\n    public get learnerResponse(): string {\r\n\r\n        return this._learner_response;\r\n    }\r\n\r\n    /**\r\n     * Called by SCORM to load in allready answered question data\r\n     */\r\n    public set learnerResponse(value: string) {\r\n\r\n        this._learner_response = value;\r\n    }\r\n\r\n    public setLearnerResponseText(responsesAsStrings: string): void {\r\n        switch (this._type) {\r\n            case LMSConstant.MULTIPLE_CHOICE:\r\n            case LMSConstant.FILL_IN:\r\n            case LMSConstant.MATCHING:\r\n                this._learner_response_text = responsesAsStrings;\r\n                break;\r\n            default:\r\n                throw (new Error('Invalid Interaction type(' + this._type + ')'));\r\n        }\r\n    }\r\n\r\n    public get learnerResponseText(): string {\r\n\r\n        return this._learner_response_text;\r\n    }\r\n\r\n    public set learnerResponseText(value: string) {\r\n\r\n        this._learner_response_text = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Interaction Object:\\n';\r\n\r\n        outString += '_id = ' + this._id + '\\n';\r\n        outString += '_type = ' + this._type + '\\n';\r\n        outString += '_timestamp = ' + this._timestamp + '\\n';\r\n        outString += '_description = ' + this._description + '\\n';\r\n        outString += '_correct_responses = ' + this._correct_responses + '\\n';\r\n        outString += '_correct_responses_text = ' + this._correct_responses_text + '\\n';\r\n        outString += '_wieghting = ' + this._wieghting + '\\n';\r\n        outString += '_learner_response = ' + this._learner_response + '\\n';\r\n        outString += '_learner_response_text = ' + this._learner_response_text + '\\n';\r\n        outString += '_result = ' + this._result + '\\n';\r\n\r\n        outString += '_objectives array:' + '\\n';\r\n        for (let i: number = 0; i < this._objectives.length; i++) {\r\n            outString += this._objectives[i] + '\\n';\r\n        }\r\n\r\n        return outString;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass TimestampObject {\r\n\r\n    private _date: Date;\r\n    /**\r\n     * Constructor - creates a new TimestampObject instance.\r\n     *\r\n     * @param\r\n     */\r\n\r\n    constructor() {\r\n\r\n        this._date = new Date();\r\n    }\r\n\r\n\r\n    private makeString(numDigits: number, theNumber: number): string {\r\n\r\n        let returnVar: string = '' + theNumber;\r\n        while (returnVar.length < numDigits) {\r\n\r\n            returnVar = '0' + returnVar;\r\n        }\r\n\r\n        return returnVar;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.makeString(4, this._date.getFullYear()) + '-' + this.makeString(2, this._date.getMonth()) + '-'\r\n            + this.makeString(2, this._date.getDate()) + 'T' + this.makeString(2, this._date.getHours()) + ':'\r\n            + this.makeString(2, this._date.getMinutes()) + ':' + this.makeString(2, this._date.getSeconds());\r\n    }\r\n\r\n    /**\r\n     * Convert time format from YYYY[-MM[-DD[Thh[:mm[:ss[.s[TZD]]]]]]] to Date\r\n     * self explanitory except for:\r\n     * s: One or more digits representing a decimal fraction of a second. If fractions of a second are used,\r\n     *      SCORM further restricts the string to a maximum of 2 digits\r\n     * TZD: Time zone designator (Z for UTC or +hh:mm or -hh:mm).\r\n     *\r\n     * @param string\r\n     */\r\n    public parseSCORMTimestamp(value: string): void {\r\n\r\n        let year: number = 0;\r\n        let month: number = 0;\r\n        let date: number = 0;\r\n        let hours: number = 0;\r\n        let minutes: number = 0;\r\n        let seconds: number = 0;\r\n        let ms: number = 0;\r\n\r\n        year = parseInt((value.substr(0, 4)), 10); // YYYY\r\n\r\n        if (value.charAt(4) === '-') {\r\n\r\n            month = parseInt((value.substr(5, 2)), 10); // -MM\r\n            if (value.charAt(7) === '-') {\r\n\r\n                date = parseInt((value.substr(8, 2)), 10); // -DD\r\n                if (value.charAt(10) === 'T') {\r\n\r\n                    hours = parseInt((value.substr(11, 2)), 10); // Thh\r\n                    if (value.charAt(13) === ':') {\r\n\r\n                        minutes = parseInt((value.substr(14, 2)), 10); // :mm\r\n                        if (value.charAt(16) === ':') {\r\n\r\n                            seconds = parseInt((value.substr(17, 2)), 10); // :ss\r\n                            if (value.charAt(19) === '.') {\r\n\r\n                                if (isNaN(parseInt((value.substr(21, 1)), 10))) {\r\n\r\n                                        // second digit not a number\r\n                                    ms = parseInt((value.substr(20, 1)), 10); // :ss\r\n                                    ms = ms * 100;\r\n                                } else {\r\n\r\n                                    ms = parseInt((value.substr(20, 2)), 10); // .s\r\n                                    ms = ms * 10;\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._date = new Date(year, month, date, hours, minutes, seconds, ms);\r\n    }\r\n\r\n    public get date(): Date {\r\n\r\n        return this._date;\r\n    }\r\n}\r\n\r\n\r\nclass TimeintervalObject {\r\n\r\n    private _miliseconds: number = 0;\r\n    private _asString: string;\r\n\r\n    /**\r\n     * Constructor - creates a new TimeintervalObject instance.\r\n     * Convert miliseconds to timeinterval (P[yY][mM][dD][T[hH][nM][s[.s]S]] Scorm 2004 data model values)\r\n     *\r\n     * @param miliseconds\r\n     */\r\n    constructor(miliseconds: number = 0) {\r\n\r\n        if (miliseconds !== 0) {\r\n\r\n            this._miliseconds = miliseconds;\r\n            // use the APIWrapper.timeintervalConvertion to Convert miliseconds to timeinterval\r\n            this._asString = APIWrapper.timeintervalConvertion(miliseconds);\r\n        }\r\n    }\r\n\r\n    public toString(): string {\r\n\r\n        return this._asString;\r\n    }\r\n\r\n    public parseSCORMTimeinterval(value: string): void {\r\n\r\n        // dont need to parse and calculate the miliseconds at this point since we are only accessing the string version\r\n        // function named this way to be consistant with TimestampObject\r\n        this._asString = value;\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/services/scorm/interaction.ts","/**\r\n * A collection of LMS constant\r\n *\r\n */\r\nexport class LMSConstant {\r\n\r\n    // these are the kinds of question types that the lms can accept\r\n    public static TRUE_FALSE: string = 'true-false';\r\n    public static MULTIPLE_CHOICE: string = 'choice';\r\n    public static FILL_IN: string = 'fill-in';\r\n    public static LONG_FILL_IN: string = 'long-fill-in';\r\n    public static MATCHING: string = 'matching';\r\n    public static PERFORMANCE: string = 'performance';\r\n    public static SEQUENCING: string = 'sequencing';\r\n    public static LIKERT: string = 'likert';\r\n    public static NUMERIC: string = 'numeric';\r\n    public static OTHER: string = 'other';\r\n\r\n    // the lms accept these values for result\r\n    public static CORRECT: string = 'correct';\r\n    public static INCORRECT: string = 'incorrect';\r\n    public static UNANTICIPATED: string = 'unanticipated';\r\n    public static NEUTRAL: string = 'neutral';\r\n    // it also accepts real numbers\r\n\r\n    /**\r\n     * The exit field in the scorm data model. cmi.exit\r\n     */\r\n    public static CMI_EXIT: string = 'cmi.exit';\r\n    // cmi.exit possible values\r\n    public static TIMEOUT: string = 'timeout';\r\n    public static SUSPEND: string = 'suspend';\r\n    public static LOGOUT: string = 'logout';\r\n    public static NORMAL: string = 'normal';\r\n    // it also accepts an empty charstring\r\n\r\n    /**\r\n     * the success status field in the scorm 2004 data model. cmi.succes_status\r\n     */\r\n    public static CMI_SUCCESS_STATUS: string = 'cmi.success_status';\r\n    // lms values for success status (objective)\r\n    public static PASSED: string = 'passed';\r\n    public static FAILED: string = 'failed';\r\n    public static UNKNOWN: string = 'unknown';\r\n\r\n    /**\r\n     * the success status field in the scorm 2004 data model. cmi.succes_status\r\n     */\r\n    public static CMI_COMPLETION_STATUS: string = 'cmi.completion_status';\r\n    // lms values for completion status (objective)\r\n    public static COMPLETED: string = 'completed';\r\n    public static INCOMPLETE: string = 'incomplete';\r\n    public static NOT_ATTEMPTED: string = 'not attempted';\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/services/scorm/lms.constant.ts","import { LMSConstant } from './lms.constant';\r\n/*\r\n *  Objective class for supported cmi.objectives data model\r\n */\r\n\r\nexport class Objective {\r\n\r\n        private _objectiveID: number;\r\n\r\n        private _objectiveName: string;\r\n\r\n        private _objectiveDesc: string;\r\n\r\n        private _score_min: number;\r\n\r\n        private _score_max: number;\r\n\r\n    /**\r\n     * The cmi.objectives.n.score.scaled data model element is a number that reflects the performance of the learner\r\n     * for the objective. The value of the data model element is scaled to fit the range -1 to 1 inclusive\r\n     */\r\n        private _score_scaled: number; \t\r\n\r\n    /**\r\n     * The cmi.objectives.n.score.raw data model element is a number that reflects the performance of the learner,\r\n     * for the objective, relative to the range bounded by the values of min and max\r\n     *\r\n     */\r\n        private _score_raw: number;\t\t\r\n\r\n        private _success_status: string;\r\n\r\n        private _completion_status: string;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new Objective instance.\r\n     *\r\n     * @param\r\n     */\r\n\r\n    constructor() {\r\n\t\t\t\r\n        this._objectiveID = 0;\r\n        this._objectiveDesc = '';\r\n        this._objectiveName = '';\r\n        this._score_min = 0;\r\n        this._score_max = 100;\r\n\r\n        // We do not use cmi.objectives.n.success_status \r\n        // instead we use cmi.success_status\r\n        // this._success_status = LMSConstant.UNKNOWN;\r\n\r\n        this._completion_status = LMSConstant.INCOMPLETE;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * The unique objectiveID\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get objectiveID(): number {\r\n\r\n        return this._objectiveID;\r\n    }\r\n\r\n    public set objectiveID(value: number) {\r\n\r\n        this._objectiveID = value;\r\n    }\r\n      \r\n    public get objectiveName(): string {\r\n\r\n        return this._objectiveName;\r\n    }\r\n\r\n    public set objectiveName(value: string) {\r\n\r\n            this._objectiveName = value;\r\n    }\r\n      \r\n    public get objectiveDesc(): string {\r\n\r\n        return this._objectiveDesc;\r\n    }\r\n\r\n    public set objectiveDesc(value: string) {\r\n\r\n        this._objectiveDesc = value;\r\n    }\r\n\r\n    public set scoreRaw(value: number) {\r\n\r\n        this._score_raw = value;\r\n\r\n        // score_raw/100 * 2 - 1\r\n        this._score_scaled = +((value / 50) - 1).toFixed(2);\r\n    }\r\n\r\n    public get scoreRaw(): number {\r\n\r\n        return this._score_raw;\r\n    }\r\n\r\n\r\n    public get scoreScaled(): number {\r\n\r\n        return this._score_scaled;\r\n    }\r\n\r\n    public set scoreScaled(value: number) {\r\n\r\n        this._score_scaled = value;\r\n\r\n    }\r\n\r\n    public get scoreMin(): number {\r\n\r\n        return this._score_min;\r\n\r\n    }\r\n\r\n    public set scoreMin(value: number) {\r\n\r\n        this._score_min = value;\r\n    }\r\n\r\n    public get scoreMax(): number {\r\n\r\n        return this._score_max;\r\n    }\r\n\r\n    public set scoreMax(value: number) {\r\n\r\n        this._score_max = value;\r\n    }\r\n           \r\n\r\n    public get successStatus(): string {\r\n\r\n        return this._success_status;\r\n    }\r\n\r\n    public set successStatus(value: string) {\r\n\r\n        this._success_status = value;\r\n    }\r\n\r\n      \r\n    public get completionStatus(): string {\r\n\r\n        return this._completion_status;\r\n    }\r\n\r\n    public set completionStatus(value: string) {\r\n\r\n        this._completion_status = value;\r\n    }\r\n      \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/services/scorm/objective.ts","import { Observable }   from 'rxjs/Observable';\r\nimport { parse }        from 'querystring';\r\n\r\nimport { LoadConfigTransaction }        from '../../shared/system-shared/model/transactions/load-config.transaction';\r\nimport { LoadManifestTransaction }      from '../transactions/load-manifest.transaction';\r\nimport { LoadPageDirectoryTransaction } from '../transactions/load-page-directory.transaction';\r\n\r\nimport { ConfigDataObject }         from '../../shared/system-shared/model/data-objects/config.data-object';\r\nimport { ManifestDataObject }       from '../data-objects/manifest.data-object';\r\nimport { PageFileUrlDataObject }    from '../data-objects/page-file-Url.data-object';\r\nimport { QueryStringDataObject }    from '../../shared/system-shared/model/data-objects/query-string.data-object';\r\n\r\nimport { Log, Logger }  from '../../shared/system-shared/log';\r\n\r\n\r\n/**\r\n * This service provides access to Player configuration data that is loaded during startup.  This includes parameters\r\n * received from the server via query string, and from external files such as config, manifest, and page directory (when\r\n * running offline).\r\n *\r\n * @see LoadConfigTransaction\r\n * @see LoadManifestTransaction\r\n * @see LoadPageDirectoryTransaction\r\n * @see ConfigDataObject\r\n * @see ManifestDataObject\r\n * @see PageFileUrlDataObject\r\n * @see QueryStringDataObject\r\n */\r\nexport class StartupConfigurationService {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @see config\r\n     */\r\n    private _config: ConfigDataObject;\r\n\r\n    /**\r\n     * @see manifest\r\n     */\r\n    private _manifest: ManifestDataObject ;\r\n\r\n    /**\r\n     * @see pageFileUrls\r\n     */\r\n    private _pageFileUrls: Array<PageFileUrlDataObject> = [];\r\n\r\n    /**\r\n     * Contains all the data the Player application was passed via query string parameters when it was launched.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private queryString: QueryStringDataObject;\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * NOTE:\r\n     *          At this point configuration info not read in yet, so logger will default to log at INFO level.\r\n     *\r\n     * @default A logger object named after the containing class.\r\n     */\r\n    private logger: Logger = Log.getInstance().getLogger('StartupConfigurationService');\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new StartupConfigurationService instance.\r\n     */\r\n    constructor() {\r\n\r\n        this.queryString = new QueryStringDataObject();\r\n\r\n        // Get info from query string\r\n        const params: any = parse(location.search.substring(1));\r\n        if (params) {\r\n\r\n            // NOTE: If the caller is the Page Designer then the unit ID supplied is really a page ID\r\n            this.queryString.unitId = params.UnitID;\r\n            // TODO: Add PageID to distinguish from UnitID\r\n\r\n            this.queryString.caller = params.Caller; // possible value=> Admin,Module,Page,Template,Player\r\n            this.queryString.previewerWidth = +params.PreviewerWidth;\r\n            this.queryString.previewerHeight = +params.PreviewerHeight;\r\n            this.queryString.playerCode = params.PlayerCode;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Indicates which of the framework's applications invoked the Player application.\r\n     *\r\n     * Possible values:\r\n     *\r\n     *  Admin\r\n     *  Module\r\n     *  Page\r\n     *  Template\r\n     *  Player\r\n     *\r\n     * TODO: Change this to an enum.\r\n     *\r\n     * @default 'Player'\r\n     */\r\n    public get caller(): string {\r\n\r\n        if (this.queryString.caller) {\r\n            return this.queryString.caller;\r\n        } else {\r\n            return 'Player';\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Contains the configuration file data that we loaded via the load configuration file transaction.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get config(): ConfigDataObject {\r\n\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: ConfigDataObject) {\r\n\r\n        this._config = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Reword this description so it actually makes sense.\r\n     *\r\n     * get offline page file which holds page data\r\n     *\r\n     * @param pageID    The page ID of which page file we want to retrieve.\r\n     */\r\n    public getPageFileUrl(pageID: string): string {\r\n\r\n        return this._pageFileUrls.find((page) => page.pageID === pageID).pageUrl;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Contains the manifest file data that we loaded via the load manifest file transaction.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get manifest(): ManifestDataObject {\r\n\r\n        return this._manifest;\r\n    }\r\n\r\n    public set manifest(value: ManifestDataObject ) {\r\n\r\n        this._manifest = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An array of all the page file URLs that we loaded via the load page directory transaction.\r\n     *\r\n     * @default An empty array of PageFileUrlDataObject.\r\n     */\r\n    public get pageFileUrls(): Array<PageFileUrlDataObject>  {\r\n        return this._pageFileUrls;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Write description.\r\n     *\r\n     * @default ?\r\n     */\r\n    public get playerCode(): string {\r\n\r\n        if (this.queryString.playerCode) {\r\n            return this.queryString.playerCode;\r\n        } else {\r\n            return this._config.playerCode;\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Reword this description so it actually makes sense.\r\n     *\r\n     * holding offline page file directory (PageDIR.xml generated from server package process)\r\n     *\r\n     * @default ?\r\n     */\r\n    public get pageDirectoryUrl(): string  {\r\n\r\n        return './' + this.manifest.courseDir + '/' + this.manifest.pageDir;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The total height of the Player window not including any of the browser interface.\r\n     *\r\n     * @default ?\r\n     */\r\n    public get playerHeight(): number {\r\n\r\n        if (this.queryString.previewerHeight) {\r\n            return this.queryString.previewerHeight;\r\n        } else {\r\n            return this._config.playerHeight;\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The total width of the Player window not including any of the browser interface.\r\n     *\r\n     * @default ?\r\n     */\r\n    public get playerWidth(): number {\r\n\r\n        if (this.queryString.previewerWidth) {\r\n            return this.queryString.previewerWidth;\r\n        } else {\r\n            return this._config.playerWidth;\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Reword this description so it actually makes sense.\r\n     *\r\n     * holding offline unit structure data\r\n     *\r\n     * @default ?\r\n     */\r\n    public get unitFileUrl(): string  {\r\n\r\n        return './' + this.manifest.courseDir + '/' + this.manifest.courseTOC;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default ?\r\n     */\r\n    public get unitId(): string {\r\n\r\n        return this.queryString.unitId;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Reword this description so it actually makes sense.\r\n     *\r\n     * holding offline unit type data\r\n     *\r\n     * @default ?\r\n     */\r\n    public get unitTypeFileUrl(): string  {\r\n\r\n        return './' + this.manifest.courseDir + '/' + this.manifest.courseUnitType;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Reword this description so it actually makes sense.\r\n     *\r\n     * holding offline references data\r\n     *\r\n     * @default ?\r\n     */\r\n    public get referenceFileUrl(): string  {\r\n\r\n        return './' + this.manifest.courseDir + '/' + this.manifest.referenceDir;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default ?\r\n     */\r\n    public get showUserInterface(): boolean {\r\n\r\n        return !this.playerCode.includes('NOUI_');\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Reword this description so it actually makes sense.\r\n     *\r\n     * holding offline variables data\r\n     *\r\n     * @default ?\r\n     */\r\n    public get variableFileUrl(): string  {\r\n\r\n        return './' + this.manifest.courseDir + '/' + this.manifest.courseVariables;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Data Loading\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Creates and starts the load configuration file transaction.\r\n     *\r\n     * TODO: finish this description.\r\n     *\r\n     * @returns TODO: add return description.\r\n     */\r\n    public loadConfig(): Observable<any> {\r\n\r\n        const loadConfigTransaction: LoadConfigTransaction = new LoadConfigTransaction();\r\n        return loadConfigTransaction.startTransaction().\r\n        map( () => {\r\n            // Reassign logger with new instance configured with settings from config file for future use in this class\r\n            this.logger = Log.getInstance().getLogger('StartupConfigurationService');\r\n            return this.config;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates and starts the load manifest file transaction.\r\n     *\r\n     * TODO: finish this description.\r\n     *\r\n     * @returns TODO: add return description.\r\n     */\r\n    public loadManifest(): Observable<any> {\r\n\r\n        const loadManifestTransaction: LoadManifestTransaction = new LoadManifestTransaction();\r\n        return loadManifestTransaction.startTransaction().\r\n        map( () => { return this.manifest;  } );\r\n    }\r\n\r\n    /**\r\n     * Creates and starts the load page directory file transaction.\r\n     *\r\n     * TODO: finish this description.\r\n     *\r\n     * @returns TODO: add return description.\r\n     */\r\n    public loadPageDirectory(): Observable<any> {\r\n\r\n        const loadPageDirectoryTransaction: LoadPageDirectoryTransaction = new LoadPageDirectoryTransaction();\r\n        return loadPageDirectoryTransaction.startTransaction().\r\n        map( () => { return this.pageFileUrls;  } );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/services/startup-configuration-service.ts","import { Observable }   from 'rxjs/Observable';\r\n\r\nimport { Transaction }  from '../../shared/system-shared/model/transactions/transaction';\r\n\r\nimport { LoadManifestTaskHandler }  from './transaction-task-handlers/load-Manifest.task-handler';\r\n\r\n\r\n/**\r\n * This class is responsible for loading the manifest file's data from the various TransactionDataSources\r\n * (server/file/memory).\r\n *\r\n * @see Transaction\r\n * @see TransactionDataSource\r\n */\r\nexport class LoadManifestTransaction extends Transaction {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new LoadManifestTransaction instance.\r\n     */\r\n    constructor() {\r\n\r\n        super('LoadManifest');\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public startTransaction(): Observable<any> {\r\n\r\n        // add TaskHandler for loading Manifest data\r\n        const taskHandler: LoadManifestTaskHandler = new LoadManifestTaskHandler();\r\n        taskHandler.buildRequestXml();\r\n        this.addTaskHandler(taskHandler);\r\n\r\n        // Send request to get processed\r\n        return super.startTransaction();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/transactions/load-manifest.transaction.ts","import { Observable }   from 'rxjs/Observable';\r\n\r\nimport { Transaction }  from '../../shared/system-shared/model/transactions/transaction';\r\n\r\nimport { LoadPageDirectoryTaskHandler } from './transaction-task-handlers/load-page-directory.task-handler';\r\n\r\n\r\n/**\r\n * This class is responsible for loading page directory data from the various TransactionDataSources\r\n * (server/file/memory).\r\n *\r\n * @see Transaction\r\n * @see TransactionDataSource\r\n */\r\nexport class LoadPageDirectoryTransaction extends Transaction {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new LoadPageDirectoryTransaction instance.\r\n     */\r\n    constructor() {\r\n\r\n        super('LoadPageDirectory');\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public startTransaction(): Observable<any> {\r\n\r\n        // add TaskHandler for loading PageDirectory data\r\n        const taskHandler: LoadPageDirectoryTaskHandler = new LoadPageDirectoryTaskHandler();\r\n        taskHandler.buildRequestXml();\r\n        this.addTaskHandler(taskHandler);\r\n\r\n        // Send request to get processed\r\n        return super.startTransaction();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/transactions/load-page-directory.transaction.ts","/* tslint:disable:max-line-length */\r\nimport { Observable }   from 'rxjs/Observable';\r\n\r\nimport { Transaction }  from '../../shared/system-shared/model/transactions/transaction';\r\n\r\nimport { LoadUnitTypeTaskHandler }      from '../../shared/system-shared/model/transactions/transaction-task-handlers/load-unit-type.task-handler';\r\nimport { LoadUserVariablesTaskHandler } from '../../shared/system-shared/model/transactions/transaction-task-handlers/load-user-variables.task-handler';\r\nimport { LoadUnitTaskHandler }          from '../../shared/system-shared/model/transactions/transaction-task-handlers/load-unit.task-handler';\r\nimport { LoadReferencesTaskHandler }    from '../../shared/system-shared/model/transactions/transaction-task-handlers/load-references.task-handler';\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * This class is responsible for loading all initial player data from the various TransactionDataSources\r\n * (server/file/memory).\r\n *\r\n * Currently the following data is loaded:\r\n *      - UnitType TODO: Not sure if we need this since we don't have the hover card on the page number.\r\n *      - Unit (unit hierarchy / course structure)\r\n *      - UserVariables\r\n *      - References\r\n *\r\n * @see Transaction\r\n * @see TransactionDataSource\r\n */\r\nexport class LoadPlayerInitDataTransaction extends Transaction {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new LoadPlayerInitDataTransaction instance.\r\n     */\r\n    constructor() {\r\n\r\n        super('LoadPlayerInitData');\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public startTransaction(): Observable<any> {\r\n\r\n        // add TaskHandler for loading unit type list\r\n        const loadUnitTypeTaskHandler: LoadUnitTypeTaskHandler = new LoadUnitTypeTaskHandler();\r\n        loadUnitTypeTaskHandler.buildRequestXml();\r\n        this.addTaskHandler(loadUnitTypeTaskHandler);\r\n\r\n        // add TaskHandler for loading Unit\r\n        const loadUnitTaskHandler: LoadUnitTaskHandler = new LoadUnitTaskHandler();\r\n        if (this.startupConfigurationService.caller === 'Page') {\r\n            // pass pageID (the passed unitId from page designer is actually a pageID)\r\n            loadUnitTaskHandler.buildRequestXml(null, this.startupConfigurationService.unitId);\r\n        } else {\r\n            loadUnitTaskHandler.buildRequestXml(this.startupConfigurationService.unitId); // pass unitID\r\n        }\r\n\r\n        this.addTaskHandler(loadUnitTaskHandler);\r\n\r\n        // add request for loading user variables\r\n        const loadUserVariablesTaskHandler: LoadUserVariablesTaskHandler = new LoadUserVariablesTaskHandler();\r\n        if (this.startupConfigurationService.caller === 'Page') {\r\n            // pass pageID (the passed unitId from page designer is actually a pageID)\r\n            loadUserVariablesTaskHandler.buildRequestXml(null, this.startupConfigurationService.unitId);\r\n        } else {\r\n            loadUserVariablesTaskHandler.buildRequestXml(this.startupConfigurationService.unitId);\r\n        }\r\n        this.addTaskHandler(loadUserVariablesTaskHandler);\r\n\r\n        // add TaskHandler for loading references\r\n        const loadReferencesTaskHandler: LoadReferencesTaskHandler = new LoadReferencesTaskHandler();\r\n        if (this.startupConfigurationService.caller === 'Page') {\r\n            // pass pageID (the passed unitId from page designer is actually a pageID)\r\n            loadReferencesTaskHandler.buildRequestXml(null, this.startupConfigurationService.unitId);\r\n        } else {\r\n            loadReferencesTaskHandler.buildRequestXml(this.startupConfigurationService.unitId);\r\n        }\r\n        this.addTaskHandler(loadReferencesTaskHandler);\r\n\r\n        // After building up all requests, sending out all requests to get processed\r\n        return super.startTransaction();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/transactions/load-player-init-data.transaction.ts","/* tslint:disable:max-line-length */\nimport { InjectorService }              from '../../../shared/system-shared/model/services/injector.service';\nimport { StartupConfigurationService }  from '../../services/startup-configuration-service';\n\nimport { ManifestDataObject }       from '../../data-objects/manifest.data-object';\nimport { TransactionTaskHandler }   from '../../../shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler';\n/* tslint:enable:max-line-length */\n\n\n/**\n * This task handler makes the request to load the application's manifest file.  The response is then parsed and from\n * that data a manifest data object is created in the startup configuration service for use by the rest of the\n * application.\n *\n * @see TransactionTaskHandler\n * @see StartupConfigurationService\n * @see ManifestDataObject\n */\nexport class LoadManifestTaskHandler extends TransactionTaskHandler {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Constructor / Initialization\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Constructor - creates a new LoadManifestTaskHandler instance.\n     */\n    constructor() {\n\n        super('LoadManifest');\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Accessors\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Set our source file URL after the super's implementation sets the data source.\n     *\n     * @inheritDoc\n     */\n    protected setDataSource(): void {\n\n        super.setDataSource();\n        this.fileUrl = './IMImanifest.xml';\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Request Handling\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Builds the XML for load manifest request.\n     *\n     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the\n     * response if a valid one is received.\n     *\n     * @returns The root element of the load manifest request XML.\n     */\n    public buildRequestXml(): Element {\n\n        return this.requestXml;\n    }\n\n    /**\n     * Parses the received XML and creates a ManifestDataObject in the StartupConfigurationService.\n     *\n     * @inheritDoc\n     */\n    public processResponse(): void {\n\n        const startupConfigurationService: StartupConfigurationService =\n            InjectorService.injector.get(StartupConfigurationService);\n        startupConfigurationService.manifest = new ManifestDataObject(this.responseData);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/transactions/transaction-task-handlers/load-Manifest.task-handler.ts","/* tslint:disable:max-line-length */\nimport { PageFileUrlDataObject }    from '../../data-objects/page-file-Url.data-object';\n\nimport { TransactionTaskHandler }   from '../../../shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler';\n\nimport { XmlParser }    from '../../../shared/system-shared/model/transactions/xml-parser';\n/* tslint:enable:max-line-length */\n\n\n/**\n * This task handler makes the request to load the application's page directory URL file.  The response is then parsed\n * and from that data a page file URL data object is created in the startup configuration service for use by the rest of\n * the application.\n *\n * That data object contains URLs for all of the page files that were generated during the server's course packaging\n * process.  This information is used to locate the local page content when the course is being consumed in an offline\n * environment.\n *\n * @see TransactionTaskHandler\n * @see StartupConfigurationService\n * @see PageFileUrlDataObject\n */\nexport class LoadPageDirectoryTaskHandler extends TransactionTaskHandler {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Constructor / Initialization\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Constructor - creates a new LoadPageDirectoryTaskHandler instance.\n     */\n    constructor() {\n\n        super('LoadPageDirectory');\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Accessors\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Set our source file URL after the super's implementation sets the data source.\n     *\n     * @inheritDoc\n     */\n    protected setDataSource(): void {\n\n        super.setDataSource();\n        this.fileUrl =  this.startupConfigurationService.pageDirectoryUrl;\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Request Handling\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Builds the XML for the load PageDirectory request.\n     *\n     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the\n     * response if a valid one is received.\n     *\n     * @returns The root element of the load PageDirectory request XML.\n     */\n    public buildRequestXml(): Element {\n\n        return this.requestXml;\n    }\n\n    /**\n     * Parses the received XML and creates an array of PageFileUrlDataObjects in the StartupConfigurationService.\n     *\n     * @inheritDoc\n     */\n    public processResponse(): void {\n\n        const pages: Array<Element> = XmlParser.getChildElements\n        (XmlParser.findFirstDescendantByName(this.responseData, 'Response'));\n        for (const page of pages) {\n             const pageUrl: PageFileUrlDataObject = new PageFileUrlDataObject();\n             const childElements: Array<Element> = XmlParser.getChildElements(page);\n             for (const child of childElements) {\n                switch (child.tagName) {\n                case 'PageID':\n                    pageUrl.pageID = XmlParser.getTextContent(child);\n                    break;\n                case 'PageURL':\n                    pageUrl.pageUrl = XmlParser.getTextContent(child);\n                    break;\n                }\n             }\n             this.startupConfigurationService.pageFileUrls.push(pageUrl);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/transactions/transaction-task-handlers/load-page-directory.task-handler.ts","import { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { FrameworkActionDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/action-system/framework-action.data-object';\r\nimport { FrameworkEventPlayableDataObject } from './framework-event.playable.data-object';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\nimport { FrameworkFunctionDataObject } from '../../../../shared/system-shared/model/data-objects/action-system/framework-function.data-object';\r\nimport { FrameworkFunctionPlayableDataObject } from './framework-function.playable.data-object';\r\n\r\n\r\n/**\r\n * Playable version of FrameworkActionDataObject\r\n * @inheritDoc\r\n */\r\nexport class FrameworkActionPlayableDataObject extends FrameworkActionDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private frameworkActionPlayableLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.frameworkActionPlayableLogger = Log.getInstance().getLogger('FrameworkActionDataObject');\r\n        this.frameworkActionPlayableLogger.debug('constructorPreprocessing(): Playable FrameworkAction');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    public get defaultFunction(): FrameworkFunctionPlayableDataObject {\r\n        return this.frameworkEvent.frameworkFunction as FrameworkFunctionPlayableDataObject;\r\n    }\r\n\r\n\r\n    public get correctFunction(): FrameworkFunctionPlayableDataObject {\r\n        // TODO: Get the right function\r\n        return this.frameworkEvent.frameworkFunction as FrameworkFunctionPlayableDataObject;\r\n    }\r\n\r\n    public get inCorrectFunction(): FrameworkFunctionPlayableDataObject {\r\n        // TODO: Get the right function\r\n        return this.frameworkEvent.frameworkFunction as FrameworkFunctionPlayableDataObject;\r\n    }\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates and returns playable version of FrameworkEvent.\r\n     *\r\n     * @param element -> root level Element to construct FrameworkEvent from\r\n     * @returns {FrameworkEventPlayableDataObject}\r\n     */\r\n    protected createFrameworkEvent(element: ElementDataObject): FrameworkEventPlayableDataObject {\r\n        return new FrameworkEventPlayableDataObject(element);\r\n    }\r\n\r\n    /**\r\n     * Starts Action System processing\r\n     */\r\n    public processFrameworkAction(value?: string): void {\r\n        this.frameworkActionPlayableLogger.debug('processFrameworkAction()');\r\n        /*\r\n        console.log('7777777 value = ');\r\n        console.log(value);\r\n        console.log('7777777 parent correct value = ');\r\n        console.log(this.parent.correctValue);\r\n        */\r\n\r\n        (this.frameworkEvent as FrameworkEventPlayableDataObject).processFrameworkEvent();\r\n\r\n        /*\r\n        if (value === undefined) {\r\n            this.defaultFunction.processFrameworkFunction();\r\n        } else if (value === this.parent.correctValue) {\r\n            this.correctFunction.processFrameworkFunction();\r\n        } else {\r\n            this.inCorrectFunction.processFrameworkFunction();\r\n        }\r\n        */\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/action-system/framework-action.playable.data-object.ts","import { FrameworkEventDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/action-system/framework-event.data-object';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\nimport { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { FrameworkFunctionPlayableDataObject } from './framework-function.playable.data-object';\r\n\r\n\r\n/**\r\n * Playable version of FrameworkEventDataObject\r\n * @inheritDoc\r\n */\r\nexport class FrameworkEventPlayableDataObject extends FrameworkEventDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private frameworkEventPlayableLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.frameworkEventPlayableLogger = Log.getInstance().getLogger('FrameworkEventDataObject');\r\n        this.frameworkEventPlayableLogger.debug('constructorPreprocessing(): Playable FrameworkEvent');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates playable version of FrameworkFunction.\r\n     *\r\n     * @param element -> root level Element to construct FrameworkFunction from\r\n     * @returns {FrameworkFunctionPlayableDataObject}\r\n     */\r\n    protected createFrameworkFunction(element: ElementDataObject): FrameworkFunctionPlayableDataObject {\r\n        return new FrameworkFunctionPlayableDataObject(element);\r\n    }\r\n\r\n    /**\r\n     * Starts processing FrameworkEvent\r\n     */\r\n    public processFrameworkEvent(): void {\r\n        this.frameworkEventPlayableLogger.debug('processFrameworkEvent()');\r\n        (this.frameworkFunction as FrameworkFunctionPlayableDataObject).processFrameworkFunction();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/action-system/framework-event.playable.data-object.ts","import { InjectorService } from '../../../../shared/system-shared/model/services/injector.service';\r\nimport { PageService } from '../../../../shared/system-shared/model/services/page.service';\r\n\r\nimport { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { FrameworkFunctionDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/action-system/framework-function.data-object';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\nimport {PopUpService} from '../../../../model/services/pop-up.service';\r\n\r\n\r\n/**\r\n * Playable version of FrameworkFunctionDataObject\r\n *\r\n * @internal: Typically we would create separate classes to handle the different functions for better encapsulation,\r\n *              but Designers already setup all functions in this one object and since the Action System should\r\n *              eventually be fully replaced by the Event System, hopefully all this can be dropped at some point.\r\n *\r\n * @inheritDoc\r\n */\r\nexport class FrameworkFunctionPlayableDataObject extends FrameworkFunctionDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private frameworkFunctionPlayableLogger: Logger =\r\n        Log.getInstance().getLogger('FrameworkFunctionPlayableDataObject');\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.frameworkFunctionPlayableLogger = Log.getInstance().getLogger('FrameworkFunctionPlayableDataObject');\r\n        this.frameworkFunctionPlayableLogger.debug('constructorPreprocessing(): Playable FrameworkFunction');\r\n\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Starts processing FrameworkFunction\r\n     */\r\n    public processFrameworkFunction(): void {\r\n        this.frameworkFunctionPlayableLogger.debug('processFrameworkFunction()');\r\n\r\n        switch (this.functionName) {\r\n            case FrameworkFunctionDataObject.GOTO_PAGE_FUNCTION:\r\n                this.loadPage();\r\n                break;\r\n            case FrameworkFunctionDataObject.NEXT_PAGE_FUNCTION:\r\n                this.loadNextPage();\r\n                break;\r\n            case FrameworkFunctionDataObject.PREV_PAGE_FUNCTION:\r\n                this.loadPrevPage();\r\n                break;\r\n            case FrameworkFunctionDataObject.MESSAGE_FUNCTION:\r\n                this.showMessage();\r\n                break;\r\n            case FrameworkFunctionDataObject.VALIDATE_FUNCTION:\r\n                this.validate();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load next page via PageService\r\n     */\r\n    private loadNextPage(): void {\r\n        InjectorService.injector.get(PageService).loadNextPage();\r\n    }\r\n\r\n    /**\r\n     * Load prev page via PageService\r\n     */\r\n    private loadPrevPage(): void {\r\n        InjectorService.injector.get(PageService).loadPreviousPage();\r\n    }\r\n\r\n    /**\r\n     * Load pageID specified in FrameworkParam Element via PageService\r\n     */\r\n    private loadPage(): void {\r\n        // Get pageID from data\r\n        const pageID: string =\r\n            this._localRoot.getFirstChildElementByName('FrameworkParam').\r\n                getFirstChildElementByName('FrameworkConst').value;\r\n\r\n        InjectorService.injector.get(PageService).loadPage(pageID);\r\n    }\r\n\r\n    /**\r\n     * Show message\r\n     */\r\n    private showMessage(): void {\r\n        // Get message from data\r\n        const message: string =\r\n            this._localRoot.getFirstChildElementByName('FrameworkParam').\r\n                getFirstChildElementByName('FrameworkConst').value;\r\n\r\n        InjectorService.injector.get(PopUpService).openSystemMessage(message);\r\n    }\r\n\r\n    /**\r\n     * Perform Component validation and run appropriate function\r\n     *\r\n     * @internal: Data structure for validate function looks like this.  Unlike other functions it has 2 FrameworkParams\r\n     *              that contain FrameworkFunctions.  So processing is a little different as detailed in the code.\r\n     * <FrameworkFunction>\r\n     *     <ElementID>3023923</ElementID>\r\n     *     <IsTemplate>false</IsTemplate>\r\n     *     <IsProperty>true</IsProperty>\r\n     *     <Value><![CDATA[Validate]]></Value>\r\n     *     <FrameworkParam>\r\n     *         <ElementID>3023924</ElementID>\r\n     *         <IsTemplate>false</IsTemplate>\r\n     *         <IsProperty>true</IsProperty>\r\n     *         <Value><![CDATA[0]]></Value>\r\n     *         <FrameworkFunction>\r\n     *             <ElementID>3023925</ElementID>\r\n     *             <IsTemplate>false</IsTemplate>\r\n     *             <IsProperty>true</IsProperty>\r\n     *             <Value><![CDATA[NextPage]]></Value>\r\n     *         </FrameworkFunction>\r\n     *     </FrameworkParam>\r\n     *     <FrameworkParam>\r\n     *         <ElementID>3023926</ElementID>\r\n     *         <IsTemplate>false</IsTemplate>\r\n     *         <IsProperty>true</IsProperty>\r\n     *         <Value><![CDATA[1]]></Value>\r\n     *         <FrameworkFunction>\r\n     *             <ElementID>3023927</ElementID>\r\n     *             <IsTemplate>false</IsTemplate>\r\n     *             <IsProperty>true</IsProperty>\r\n     *             <Value><![CDATA[PrevPage]]></Value>\r\n     *         </FrameworkFunction>\r\n     *     </FrameworkParam>\r\n     * </FrameworkFunction>\r\n     */\r\n    private validate(): void {\r\n        console.log('!!! validate !!!');\r\n\r\n        // Variable to hold FrameworkParam value we want based on whether or not validation is passed\r\n        let getFrameworkParamValue: string;\r\n\r\n        // Run component validation method via FrameworkEvent->FrameworkAction->ComponentDataObject.validate\r\n        if (this._parent.parent.parent.validate()) {\r\n            // When validation passed we want the function in FrameworkParam that has a value of 0\r\n            // This data structure is pretty crappy, but will leave it, this system should be deprecated anyway\r\n            getFrameworkParamValue = '0';\r\n        } else {\r\n            // When validation passed we want the function in FrameworkParam that has a value of 1\r\n            getFrameworkParamValue = '1';\r\n        }\r\n\r\n        /*\r\n        This process, which mirrors what's done in Flash, is also a little strange.  The 2 FrameworkParams of the\r\n        validate method are FrameworkFunctions that are parsed and created on the fly at run time (rather than built\r\n        during data loading).  This is simplest for now since the data structure is different from other functions.\r\n        When implementing the Designers, if we are still supporting this system, we'll likely want to review the data\r\n        structure and processing.\r\n         */\r\n\r\n        // Get the FrameworkParam Element that we're looking for based on whether or not validation was passed\r\n        const frameworkParamElement: ElementDataObject = this._localRoot.children.find((element: ElementDataObject) => {\r\n            return (element.name === 'FrameworkParam' && element.value === getFrameworkParamValue);\r\n        });\r\n\r\n        // Get the FrameworkFunction Element contained in the FrameworkParam that we want\r\n        const frameworkFunctionElement: ElementDataObject = frameworkParamElement.getFirstChildElementByName(\r\n            FrameworkFunctionDataObject.FRAMEWORK_FUNCTION_ELEMENT_NAME);\r\n\r\n        // Create the FrameworkFunction (this is the function we want to run based on the results of validation)\r\n        const frameworkFunction: FrameworkFunctionPlayableDataObject =\r\n            new FrameworkFunctionPlayableDataObject(frameworkFunctionElement);\r\n\r\n        // Run the function\r\n        frameworkFunction.processFrameworkFunction();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/action-system/framework-function.playable.data-object.ts","import { CaseDataObjectCollection }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/case.data-object.collection';\r\nimport { CasePlayableDataObject } from './case.playable.data-object';\r\nimport { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { EventHandlerPlayableDataObject } from './event-handler.playable.data-object';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\n\r\n\r\n/**\r\n * Playable version of Case Collection data object\r\n */\r\nexport class CasePlayableDataObjectCollection extends CaseDataObjectCollection {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private casePlayableCollectionLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.casePlayableCollectionLogger = Log.getInstance().getLogger('CasePlayableDataObjectCollection');\r\n        this.casePlayableCollectionLogger.debug('constructorPreprocessing(): Playable Case Collection');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates and returns playable version of Case.\r\n     *\r\n     * @param sourceElement -> root level Element to construct an CaseDataObject from.\r\n     */\r\n    protected createCase(sourceElement: ElementDataObject): CasePlayableDataObject {\r\n        return new CasePlayableDataObject(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Runs processing for Case Collection\r\n     */\r\n    public processCaseCollection(): void {\r\n        this.casePlayableCollectionLogger.debug('processCaseCollection()');\r\n\r\n        /*\r\n            NOTE: AS version of this code calls method to sort Case Collection.  This is already done during\r\n            construction of base.  Probably shouldn't have to do it again here.  Keep an eye on it.\r\n        */\r\n\r\n        /*\r\n            Process Case objects, evaluating conditions and running functions as needed.\r\n\r\n            NOTE: Array.some will run function for every item in array until function returns true (or function run for\r\n            every item in array and returning false\r\n        */\r\n        const caseConditionPassed: boolean = this.caseCollection.some((caseObject: CasePlayableDataObject) => {\r\n            return caseObject.processCase();\r\n        });\r\n\r\n        // If no default case or one with passing condition then nothing needs to be done, Case Collection processing\r\n        // is complete, can notify parent Event Handler.\r\n        if (!caseConditionPassed) {\r\n            this.casePlayableCollectionLogger.debug('processCaseCollection(): NO DEFAULT OR PASSING CASE');\r\n            this.childProcessComplete();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To be called in one of the following 2 scenarios:\r\n     *\r\n     *      1 - by child Playable Case objects when they are the default case or when their conditions are satisfied\r\n     *          and their processing is complete\r\n     *      2 - by this class's processCaseCollection when there is no default case or none of the cases are satisfied\r\n     *\r\n     * Once either of these things happen, the Case Collection can notify the parent Event Handler that case processing\r\n     * is complete.\r\n     *\r\n     * @param event -> the EventHandlerPlayableDataObject that is reporting that its processing is complete\r\n     */\r\n    public childProcessComplete(): void {\r\n        this.casePlayableCollectionLogger.debug('childProcessComplete()');\r\n        (this._parent as EventHandlerPlayableDataObject).childProcessComplete();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/case.playable.data-object.collection.ts","import { CaseDataObject }   from '../../../../shared/system-shared/model/data-objects/event-system/case.data-object';\r\nimport { CasePlayableDataObjectCollection }             from './case.playable.data-object.collection';\r\nimport { ConditionBranchPlayableDataObject }            from './condition-branch.playable.data-object';\r\nimport { ConditionNodePlayableDataObjectInterface }     from './condition-node.playable.data-object.interface';\r\nimport { ConditionLeafPlayableDataObject }              from './condition-leaf.playable.data-object';\r\nimport { ElementDataObject }    from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { EventSystemDataObjectInterface }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/event-system.data-object.interface';\r\nimport { FunctionGroupPlayableDataObjectCollection }    from './function-group.playable.data-object.collection';\r\nimport { Log, Logger }      from '../../../../shared/system-shared/log';\r\n\r\n\r\n/**\r\n * Playable version of Case data object\r\n */\r\nexport class CasePlayableDataObject extends CaseDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private casePlayableLogger: Logger;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.casePlayableLogger = Log.getInstance().getLogger('CasePlayableDataObject');\r\n        this.casePlayableLogger.debug('constructorPreprocessing(): Playable Case');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates playable version of this Condition Leaf.\r\n     * @param sourceElement -> root level Element to construct Condition Leaf from.\r\n     * @returns {ConditionLeafPlayableDataObject}\r\n     */\r\n    protected createConditionLeaf(sourceElement: ElementDataObject): ConditionLeafPlayableDataObject {\r\n        return new ConditionLeafPlayableDataObject(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Creates and returns a playable version of the Condition Branch object.\r\n     * @param sourceElement -> root level Element to construct Condition Branch from.\r\n     * @returns {ConditionBranchDataObject}\r\n     */\r\n    protected createConditionBranch(sourceElement: ElementDataObject): ConditionBranchPlayableDataObject {\r\n        return new ConditionBranchPlayableDataObject(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Creates playable version of Function Group Collection.\r\n     * @param sourceElement -> root level Element to construct Condition Branch from.\r\n     * @returns {FunctionGroupDataObjectCollection}\r\n     */\r\n    protected createFunctionGroupCollection(sourceElement: ElementDataObject):\r\n        FunctionGroupPlayableDataObjectCollection {\r\n\r\n        return new FunctionGroupPlayableDataObjectCollection(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Runs processing for Case\r\n     * @returns {boolean} -> true if case satisfied (default case or conditions passed), otherwise false\r\n     */\r\n    public processCase(): boolean {\r\n        let conditionNodeResult: boolean;\r\n\r\n        // Evaluate result of Condition Node if not default and if there is one\r\n        // NOTE: Found instances in data where a case is default (doesn't need a conditionNode), but has an invalid\r\n        //          conditionNode (not undefined).  So need to check default explicitly to prevent errors.\r\n        if (!this.isDefaultCase && this.conditionNode) {\r\n            conditionNodeResult =\r\n                ((this.conditionNode as EventSystemDataObjectInterface) as ConditionNodePlayableDataObjectInterface)\r\n                    .evaluateCondition();\r\n        }\r\n\r\n        // Debugging\r\n        this.casePlayableLogger.debug('processCase(): isDefaultCase = ' + this.isDefaultCase);\r\n        this.casePlayableLogger.debug('processCase(): evaluateCondition = ' + conditionNodeResult);\r\n\r\n        // If default or conditions passed process function group\r\n        if (this.isDefaultCase || conditionNodeResult) {\r\n            this.casePlayableLogger.debug('processCase(): FOUND DEFAULT AND/OR PASSING CASE');\r\n\r\n            // Call method to process function group\r\n            (this.functionGroupCollection as FunctionGroupPlayableDataObjectCollection)\r\n                .processFunctionGroupCollection();\r\n\r\n            return true;\r\n        } else {\r\n            // Do nothing\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To be called by child Function Group Collection object when its processing is complete.  At this point Case\r\n     * processing is also complete so parent Case Collection can be notified.\r\n     */\r\n    public childProcessComplete(): void {\r\n        this.casePlayableLogger.debug('childProcessComplete()');\r\n        (this._parent as CasePlayableDataObjectCollection).childProcessComplete();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/case.playable.data-object.ts","import { ConditionBranchDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/condition-branch.data-object';\r\nimport { ConditionLeafPlayableDataObject } from './condition-leaf.playable.data-object';\r\nimport { ConditionNodeDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/condition-node.data-object';\r\nimport { ConditionNodePlayableDataObjectInterface } from './condition-node.playable.data-object.interface';\r\nimport { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { EventSystemDataObjectInterface }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/event-system.data-object.interface';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\n\r\n\r\n/**\r\n * Playable version of Condition Branch data object\r\n * @inheritDoc\r\n */\r\nexport class ConditionBranchPlayableDataObject extends ConditionBranchDataObject\r\n    implements ConditionNodePlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private conditionBranchPlayableLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.conditionBranchPlayableLogger = Log.getInstance().getLogger('ConditionBranchPlayableDataObject');\r\n        this.conditionBranchPlayableLogger.debug('constructorPreprocessing(): Playable Condition Branch');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates and returns playable version of Condition Leaf object.\r\n     * @inheritDoc\r\n     * @param sourceElement -> root level Element to construct Condition Leaf from.\r\n     * @returns {ConditionLeafPlayableDataObject}\r\n     */\r\n    protected createConditionLeaf(sourceElement: ElementDataObject): ConditionLeafPlayableDataObject {\r\n        return new ConditionLeafPlayableDataObject(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Creates and returns playable version of Condition Branch object.\r\n     * @inheritDoc\r\n     * @param sourceElement -> root level Element to construct Condition Branch from.\r\n     * @returns {ConditionBranchPlayableDataObject}\r\n     */\r\n    protected createConditionBranch(sourceElement: ElementDataObject): ConditionBranchDataObject {\r\n        return new ConditionBranchPlayableDataObject(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Evaluates result of Condition Node data structure by recursively evaluating and comparing the child nodes.\r\n     * @returns {boolean}\r\n     */\r\n    public evaluateCondition(): boolean {\r\n        this.conditionBranchPlayableLogger.debug('evaluateCondition()');\r\n\r\n        let result: boolean;\r\n\r\n        switch (this.logicalOperator) {\r\n            case ConditionBranchDataObject.AND_OPERATOR:\r\n                // Returns true if result of all Condition Nodes is true\r\n                result = false;\r\n                result = this.conditionNodeCollection.every((conditionNode: ConditionNodeDataObject) => {\r\n                    return (\r\n                        ((conditionNode as EventSystemDataObjectInterface) as ConditionNodePlayableDataObjectInterface)\r\n                            .evaluateCondition()\r\n                    );\r\n                });\r\n                this.conditionBranchPlayableLogger.debug('evaluateCondition(): AND - result - ' + result);\r\n                break;\r\n            case ConditionBranchDataObject.OR_OPERATOR:\r\n                // Returns true if the result of any Condition node is true\r\n                result = false;\r\n                result = this.conditionNodeCollection.some((conditionNode: ConditionNodeDataObject) => {\r\n                    return (\r\n                        ((conditionNode as EventSystemDataObjectInterface) as ConditionNodePlayableDataObjectInterface)\r\n                            .evaluateCondition()\r\n                    );\r\n                });\r\n                this.conditionBranchPlayableLogger.debug('evaluateCondition(): OR - result - ' + result);\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/condition-branch.playable.data-object.ts","import { ConditionLeafDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/condition-leaf.data-object';\r\nimport { ConditionNodePlayableDataObjectInterface } from './condition-node.playable.data-object.interface';\r\nimport { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\nimport { ValuePlayableDataObject } from './value.playable.data-object';\r\nimport { ValueDataObject } from '../../../../shared/system-shared/model/data-objects/event-system/value.data-object';\r\n\r\n\r\n/**\r\n * Playable version of Condition Leaf data object\r\n * @inheritDoc\r\n */\r\nexport class ConditionLeafPlayableDataObject extends ConditionLeafDataObject\r\n    implements ConditionNodePlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private conditionLeafPlayableLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.conditionLeafPlayableLogger = Log.getInstance().getLogger('ConditionLeafPlayableDataObject');\r\n        this.conditionLeafPlayableLogger.debug('constructorPreprocessing(): Playable Condition Leaf');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates playable versions of Value object.\r\n     * @param sourceElement\r\n     * @returns {ValuePlayableDataObject}\r\n     */\r\n    protected createValueDataObject(sourceElement: ElementDataObject): ValuePlayableDataObject {\r\n        return new ValuePlayableDataObject(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * At this point only supports comparing 2 values.  Would need to be modified to support more.\r\n     */\r\n    public evaluateCondition(): boolean {\r\n        // Sort comparisonItems vector by order property to make sure they are evaluated in the correct order\r\n        this.sortValueCollection();\r\n\r\n        // NOTE: Not sure if there will ever be a scenario where more than 2 items are being compared and not sure how\r\n        //          a scenario like that should be compared.  So for now this method will assume there are only 2 items\r\n        //          to be compared.  In the future this can be modified to handle more items if needed.\r\n        // Get value for 2 items being compared\r\n        let firstValue: any = (this.comparisonValueCollection[0] as ValuePlayableDataObject).returnValue;\r\n        let secondValue: any = (this.comparisonValueCollection[1] as ValuePlayableDataObject).returnValue;\r\n\r\n        // Debugging\r\n        this.conditionLeafPlayableLogger.debug('evaluateCondition(): ' +\r\n            'firstItemValue = ' + firstValue +\r\n            '  -  secondItemValue = ' + secondValue);\r\n        this.conditionLeafPlayableLogger.debug('evaluateCondition(): comparisonOperator = ' + this.comparisonOperator);\r\n\r\n        // NOTE: May eventually need to consider data types for comparisons.\r\n        switch (this.comparisonOperator) {\r\n            case this.EQUAL_TO:\r\n                return (firstValue === secondValue);\r\n            case this.EQUAL_TO_CASE_SENSITIVE:\r\n                // Convert to string first in case numbers are being compared\r\n                return (firstValue.toString().toLowerCase() === secondValue.toString().toLowerCase());\r\n            case this.NOT_EQUAL_TO:\r\n                return (firstValue !== secondValue);\r\n            case this.GREATER_THAN:\r\n                return (firstValue > secondValue);\r\n            case this.GREATER_THAN_OR_EQUAL_TO:\r\n                return (firstValue >= secondValue);\r\n            case this.LESS_THAN:\r\n                return (firstValue < secondValue);\r\n            case this.LESS_THAN_OR_EQUAL_TO:\r\n                return (firstValue <= secondValue);\r\n        }\r\n\r\n        // If for some reason we get out of the case statement without returning something\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Sorts the Value objects stored in comparisonValueCollection\r\n     * NOTE: AS code only sorts in playable, not sure how editable handles this (may want to move to base if\r\n     *          editable can use it too)\r\n     */\r\n    private sortValueCollection(): void {\r\n        this.comparisonValueCollection.sort(\r\n            (valueObjectA: ValueDataObject, valueObjectB: ValueDataObject) => {\r\n                return valueObjectA.order - valueObjectB.order;\r\n            }\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/condition-leaf.playable.data-object.ts","import { CasePlayableDataObjectCollection } from './case.playable.data-object.collection';\r\nimport { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { EventContainerPlayableDataObjectInterface } from './event-container.playable.data-object.inerface';\r\nimport { EventDataObject } from '../../../../shared/system-shared/model/data-objects/event-system/event.data-object';\r\nimport { EventHandlerDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/event-handler.data-object';\r\nimport { EventPlayableDataObject } from './event.playable.data-object';\r\nimport { EventPlayableDataObjectCollection } from './event.playable.data-object.collection';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\n\r\n\r\n\r\n/**\r\n * Playable version of Event Handler data object\r\n */\r\nexport class EventHandlerPlayableDataObject extends EventHandlerDataObject\r\n    implements EventContainerPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private eventHandlerPlayableLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.eventHandlerPlayableLogger = Log.getInstance().getLogger('EventHandlerPlayableDataObject');\r\n        this.eventHandlerPlayableLogger.debug('constructorPreprocessing(): Playable Event Handler');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates and returns playable version of Case Collection.\r\n     *\r\n     * @param sourceElement -> root level Element to construct CasePlayableDataObjectCollection from.\r\n     */\r\n    protected createCaseCollection(sourceElement: ElementDataObject): CasePlayableDataObjectCollection {\r\n        return new CasePlayableDataObjectCollection(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Creates and returns playable version of Event Collection.\r\n     *\r\n     * @param sourceElement -> root level Element to construct an EventPlayableDataObjectCollection from.\r\n     */\r\n    protected createEventCollection(sourceElement: ElementDataObject): EventPlayableDataObjectCollection {\r\n        return new EventPlayableDataObjectCollection(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Runs processing for Event Handler which entails starting the processing of its Case Collection.\r\n     */\r\n    public processEventHandler(): void {\r\n        this.eventHandlerPlayableLogger.debug('processEventHandler()');\r\n\r\n        // Process Case Collection\r\n        if (this._caseCollection) {\r\n            (this._caseCollection as CasePlayableDataObjectCollection).processCaseCollection();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To be called by child Case Collection objects when their processing is complete.  In this case it runs the Event\r\n     * Handler onComplete Event (via _eventCollection) if there is one.\r\n     */\r\n    public childProcessComplete(): void {\r\n        this.eventHandlerPlayableLogger.debug('childProcessComplete() - Try to run OnComplete event');\r\n\r\n        // Try to process the OnComplete event for this Event Handler\r\n        if (!(this._eventCollection as EventPlayableDataObjectCollection).processEvent(EventDataObject.ON_COMPLETE)) {\r\n            // If the processEvent method returns undefined (either b/c there are no event handlers or the event is\r\n            // already being processed, Event Handler processing can be considered complete and parent can be notified\r\n            this.eventHandlerPlayableLogger.debug('childProcessComplete() - No OnComplete event notify parent done');\r\n            (this._parent as EventPlayableDataObject).childProcessComplete(this);\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods to implement EventContainerPlayableDataObjectInterface\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * @inheritDoc\r\n     *\r\n     * @internal\r\n     * At this point the only Event that would make this callback is an on complete from another Event, so don't really\r\n     * need to check the Event object being passed.  May need to if this ever changes.\r\n     */\r\n    public childEventComplete(event: EventPlayableDataObject): void {\r\n        this.eventHandlerPlayableLogger.debug('childEventComplete() - OnComplete Event processing complete');\r\n\r\n        // Event Handler and OnComplete Event processing complete, notify parent Event\r\n        (this._parent as EventPlayableDataObject).childProcessComplete(this);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/event-handler.playable.data-object.ts","import { EventContainerDataObjectInterface }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/event-container.data-object.interface';\r\nimport { EventContainerPlayableDataObjectInterface } from './event-container.playable.data-object.inerface';\r\nimport { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { EventDataObjectCollection }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/event.data-object.collection';\r\nimport { EventPlayableDataObject } from './event.playable.data-object';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\n\r\n\r\n/**\r\n * Playable version of Event System data object class\r\n */\r\nexport class EventPlayableDataObjectCollection extends EventDataObjectCollection {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private eventPlayableCollectionLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.eventPlayableCollectionLogger = Log.getInstance().getLogger('EventPlayableDataObjectCollection');\r\n        this.eventPlayableCollectionLogger.debug('constructorPreprocessing(): Playable Event Collection');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates playable version of an Event.\r\n     *\r\n     * @param sourceElement -> root level Element to construct an EventPlayableDataObject from.\r\n     */\r\n    protected createEvent(sourceElement: ElementDataObject): EventPlayableDataObject {\r\n        return new EventPlayableDataObject(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Runs the Event associated with the passed trigger.\r\n     *\r\n     * @internal\r\n     * TODO: May eventually want to create a separate method that will register the Event with some centralized Event\r\n     *          Processor which will call this method to run the Event.\r\n     *\r\n     * @param trigger -> matched against the value of the EventDataObject.trigger property to identify the Event that\r\n     *                      should be run by this method\r\n     *\r\n     * @returns {EventPlayableDataObject|undefined}\r\n     * In scenarios where this call doesn't actually do anything (when the Event has no Event Handlers or the event is\r\n     * already being processed), this call will return undefined.  Otherwise it returns a reference to the Event object\r\n     * that is being processed\r\n     */\r\n    public processEvent(trigger: string): EventPlayableDataObject {\r\n        console.log('********** EXECUTE EVENT - ' + trigger + ' **********');\r\n\r\n        // Get Event associated with trigger\r\n        let eventObject: EventPlayableDataObject = this.getEventByTrigger(trigger) as EventPlayableDataObject;\r\n\r\n        // If it exists\r\n        if (eventObject) {\r\n            // Process the event\r\n            if (eventObject.processEvent()) {\r\n                console.log('********** processed **********');\r\n                // Return the event if it has Event Handlers and is not already being processed\r\n                return eventObject;\r\n            } else {\r\n                console.log('********** not processed - no event handler or already running **********');\r\n                // Otherwise return undefined to indicate that no new processing was started\r\n                return undefined;\r\n            }\r\n        } else {\r\n            console.log('********** NO EVENT FOR - ' + trigger + '**********');\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To be called by child Playable Event objects when their processing is complete so that processing at the Event\r\n     * Collection level can continue.\r\n     *\r\n     * @param event -> the EventPlayableDataObject that is reporting that its processing is complete\r\n     */\r\n    public childProcessComplete(event: EventPlayableDataObject): void {\r\n        this.eventPlayableCollectionLogger.debug('childProcessComplete()');\r\n\r\n        // Check if Event Container is playable\r\n        if (this.isPlayableEventContainer(this._parent)) {\r\n            // If it is, call childEventComplete to notify it that it's Event Collection is complete\r\n            (this._parent as EventContainerPlayableDataObjectInterface).childEventComplete(event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Type Guard function to check if Event Container is playable\r\n     *\r\n     * @param eventContainer\r\n     * @returns {boolean}\r\n     */\r\n    private isPlayableEventContainer(\r\n        eventContainer: EventContainerDataObjectInterface | EventContainerPlayableDataObjectInterface):\r\n            eventContainer is EventContainerPlayableDataObjectInterface {\r\n\r\n        return (<EventContainerPlayableDataObjectInterface>eventContainer).childEventComplete !== undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/event.playable.data-object.collection.ts","import { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { EventDataObject } from '../../../../shared/system-shared/model/data-objects/event-system/event.data-object';\r\nimport { EventHandlerPlayableDataObject } from './event-handler.playable.data-object';\r\nimport { EventPlayableDataObjectCollection } from './event.playable.data-object.collection';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\n\r\n\r\n/**\r\n * Playable version of Event System data object class\r\n */\r\nexport class EventPlayableDataObject extends EventDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Array used to track Event Handlers that are in progress (running)\r\n     */\r\n    private eventHandlersInProgress: Array<EventHandlerPlayableDataObject>;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private eventPlayableLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.eventPlayableLogger = Log.getInstance().getLogger('EventPlayableDataObject');\r\n        this.eventPlayableLogger.debug('constructorPreprocessing(): Playable Event');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n        this.eventHandlersInProgress = [];\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base method to return playable version of Event Handler\r\n     *\r\n     * @param sourceElement -> root level Element to construct an Event Handler from.\r\n     */\r\n    protected createEventHandler(sourceElement: ElementDataObject): EventHandlerPlayableDataObject {\r\n        return new EventHandlerPlayableDataObject(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Runs processing for Event which entails asynchronously starting the processing of all its Event Handlers.\r\n     *\r\n     * @returns (boolean) - True when the processEventHandler can be called (one exists and is not already running),\r\n     *                      False otherwise\r\n     */\r\n    public processEvent(): boolean {\r\n        this.eventPlayableLogger.debug('processEvent()');\r\n\r\n        // Check to ensure event has Event Handlers and is not already being processed\r\n        if (this.eventHandlerCollection.length > 0 && this.eventHandlersInProgress.length === 0) {\r\n            // Kick off processing of all Event Handlers (asynchronously)\r\n            this.eventHandlerCollection.forEach((eventHandler: EventHandlerPlayableDataObject) => {\r\n                // Add Event Handler to list of Handlers that are in progress\r\n                this.eventHandlersInProgress.push(eventHandler);\r\n                // Process Event Handler\r\n                (eventHandler as EventHandlerPlayableDataObject).processEventHandler();\r\n            });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To be called by child Playable Event Handler objects when their processing is complete so that processing at the\r\n     * Event level can continue.  In this case checks to see whether there are any other asynchronously running Event\r\n     * Handlers that are still processing, and if not tell the parent Event Collection that Event processing is done.\r\n     *\r\n     * @param event -> the EventHandlerPlayableDataObject that is reporting that its processing is complete\r\n     */\r\n    public childProcessComplete(eventHandler: EventHandlerPlayableDataObject): void {\r\n        this.eventPlayableLogger.debug('childProcessComplete(): number previously in queue = ' +\r\n            this.eventHandlersInProgress.length);\r\n\r\n        // Remove Event Handler from in progress list\r\n        this.eventHandlersInProgress.splice(this.eventHandlersInProgress.indexOf(eventHandler), 1);\r\n\r\n        this.eventPlayableLogger.debug('childProcessComplete(): number remaining in queue = ' +\r\n            this.eventHandlersInProgress.length);\r\n\r\n        // If eventHandlersInProgress is empty all event handler processing is done.  Run parent childProcessComplete\r\n        if (this.eventHandlersInProgress.length === 0) {\r\n            (this._parent as EventPlayableDataObjectCollection).childProcessComplete(this);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/event.playable.data-object.ts","import { CasePlayableDataObject } from './case.playable.data-object';\r\nimport { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { FunctionGroupDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/function-groups/function-group.data-object';\r\nimport { FunctionGroupDataObjectCollection }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/function-group.data-object.collection';\r\nimport { FunctionGroupPlayableDataObject } from './function-groups/function-group.playable.data-object';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\n\r\n\r\n/**\r\n * Playable version of Function Group Collection\r\n */\r\nexport class FunctionGroupPlayableDataObjectCollection extends FunctionGroupDataObjectCollection {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Keeps track of which Function Groups in functionGroupCollection have been processed (since portions of the list\r\n     * can be run both synchronously and asynchronously)\r\n     */\r\n    private processIndex: number;\r\n\r\n    /**\r\n     * Holds reference to the \"Previous\" Function Group that the \"Run After Previous\" Function Group is waiting for to\r\n     * complete before running\r\n     */\r\n    private waitForPreviousFunctionGroup: FunctionGroupDataObject;\r\n\r\n    /**\r\n     * List of Function Groups whose processing has completed (could probably be a simple count, but this is a little\r\n     * more robust if more details is needed)\r\n     */\r\n    private completedFunctionGroups: Array<FunctionGroupPlayableDataObject>;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private functionGroupPlayableCollectionLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.functionGroupPlayableCollectionLogger =\r\n            Log.getInstance().getLogger('FunctionGroupPlayableDataObjectCollection');\r\n        this.functionGroupPlayableCollectionLogger.debug(\r\n            'constructorPreprocessing(): Playable Function Group Collection');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates and returns a Playable version of Function Group object\r\n     *\r\n     * @param sourceElement -> root level Element to construct Function Group from.\r\n     * @returns {FunctionGroupPlayableDataObject}\r\n     */\r\n    protected createFunctionGroup(sourceElement: ElementDataObject): FunctionGroupPlayableDataObject {\r\n        return new FunctionGroupPlayableDataObject(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Run all Function Groups in collection.\r\n     */\r\n    public processFunctionGroupCollection(): void {\r\n        this.functionGroupPlayableCollectionLogger.debug('processFunctionGroupCollection()');\r\n\r\n        // Reset index and completedFunctionGroups to start from beginning\r\n        this.processIndex = 0;\r\n        this.completedFunctionGroups = [];\r\n\r\n        // Start running the Function Groups\r\n        this.runFunctionGroupUntilDoneOrAfter();\r\n    }\r\n\r\n    /**\r\n     * Runs all Function Groups in functionGroupCollection asynchronously until either there aren't any left or a run\r\n     * \"After Previous\" Function Group is encountered\r\n     */\r\n    private runFunctionGroupUntilDoneOrAfter(): void {\r\n        this.functionGroupPlayableCollectionLogger.debug(\r\n            'runFunctionGroupUntilDoneOrAfter(): starting index = ' + this.processIndex);\r\n\r\n        // Start running Function Groups in collection until either there are none left or an execute after is reached\r\n        do {\r\n            const functionGroup: FunctionGroupDataObject = this.functionGroupCollection[this.processIndex];\r\n            const nextFunctionGroup: FunctionGroupDataObject = this.functionGroupCollection[this.processIndex + 1];\r\n\r\n            // If the next Function Group runs \"after\" this one, set waitForPreviousFunctionGroup to this one\r\n            if (nextFunctionGroup && nextFunctionGroup.execute === FunctionGroupDataObject.EXECUTE_AFTER_VALUE) {\r\n                this.waitForPreviousFunctionGroup = functionGroup;\r\n            }\r\n\r\n            this.functionGroupPlayableCollectionLogger.debug(\r\n                'runFunctionGroupUntilDoneOrAfter(): @index = ' + this.processIndex);\r\n            // Run the Function Group\r\n            (this.functionGroupCollection[this.processIndex++] as FunctionGroupPlayableDataObject)\r\n                .processFunctionGroup();\r\n        } while (\r\n            (this.processIndex < this.functionGroupCollection.length) &&\r\n            (this.functionGroupCollection[this.processIndex].execute !== FunctionGroupDataObject.EXECUTE_AFTER_VALUE));\r\n    }\r\n\r\n    /**\r\n     * To be called by child Playable Function Group objects when their processing is complete so that processing at the\r\n     * Collection level can continue.  In this case, if processing of the next Function Group in the collection is\r\n     * waiting for a particular one to complete, it checks the completedFunctionGroup to the one its waiting for\r\n     * (waitForPreviousFunctionGroup).  If it matches, it can call runFunctionGroupUntilDoneOrAfter to continue\r\n     * processing.  If all of the Function Groups in the collection have been processed the parent Playable Case can\r\n     * be notified (by calling its childProcessComplete method).\r\n     *\r\n     * @param event -> the FunctionGroupPlayableDataObject that is reporting that its processing is complete\r\n     */\r\n    public childProcessComplete(completedFunctionGroup: FunctionGroupPlayableDataObject): void {\r\n        this.functionGroupPlayableCollectionLogger.debug(\r\n            'childProcessComplete(): functionGroup = ' + completedFunctionGroup.name);\r\n\r\n        // Track that the Function Group was completed\r\n        this.completedFunctionGroups.push(completedFunctionGroup);\r\n\r\n        this.functionGroupPlayableCollectionLogger.debug(\r\n            'childProcessComplete(): total function groups = ' + this.functionGroupCollection.length);\r\n        this.functionGroupPlayableCollectionLogger.debug(\r\n            'childProcessComplete(): total function groups complete = ' + this.completedFunctionGroups.length);\r\n\r\n        if (completedFunctionGroup === this.waitForPreviousFunctionGroup) {\r\n            this.functionGroupPlayableCollectionLogger.debug(\r\n                'childProcessComplete(): After Previous Function Group complete');\r\n            // If the Function Group completed is the one we're waiting for, start running Function Groups again\r\n            this.runFunctionGroupUntilDoneOrAfter();\r\n        } else if (this.completedFunctionGroups.length === this.functionGroupCollection.length) {\r\n            // If all of the Function Groups have finished processing, notify parent\r\n            this.functionGroupPlayableCollectionLogger.debug('childProcessComplete(): All Function Groups completed');\r\n            (this._parent as CasePlayableDataObject).childProcessComplete();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/function-group.playable.data-object.collection.ts","import { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { FunctionGroupDataObject } from '../../../../../shared/system-shared/model/data-objects/event-system/function-groups/function-group.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { FunctionGroupPlayableDataObjectCollection } from '../function-group.playable.data-object.collection';\r\nimport { FunctionPlayableDataObjectCollection } from '../function.playable.data-object.collection';\r\n\r\n\r\n/**\r\n * Playable version of Function Group data object\r\n */\r\nexport class FunctionGroupPlayableDataObject extends FunctionGroupDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private functionGroupPlayableLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.functionGroupPlayableLogger = Log.getInstance().getLogger('FunctionGroupPlayableDataObject');\r\n        this.functionGroupPlayableLogger.debug('constructorPreprocessing(): Playable Function Group');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates and returns a playable version of FunctionDataObjectCollection object\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {FunctionPlayableDataObjectCollection}\r\n     */\r\n    protected createFunctionCollection(element: ElementDataObject): FunctionPlayableDataObjectCollection {\r\n        return new FunctionPlayableDataObjectCollection(element);\r\n    }\r\n\r\n    /**\r\n     * Run all Function Groups in collection.\r\n     */\r\n    public processFunctionGroup(): void {\r\n        this.functionGroupPlayableLogger.debug('processFunctionGroup()');\r\n\r\n        (this.functionCollection as FunctionPlayableDataObjectCollection).processFunctionCollection();\r\n    }\r\n\r\n    public childProcessComplete(): void {\r\n        (this._parent as FunctionGroupPlayableDataObjectCollection).childProcessComplete(this);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/function-groups/function-group.playable.data-object.ts","import { AnimatePlayableDataObject } from './functions/animate.playable.data-object';\r\nimport { ChangePagePlayableDataObject } from './functions/change-page.playable.data-object';\r\nimport { DelayPlayableDataObject } from './functions/delay.playable.data-object';\r\nimport { DisplayMessagePlayableDataObject } from './functions/display-message.playable.data-object';\r\nimport { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { EventSystemDataObjectInterface }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/event-system.data-object.interface';\r\nimport { FunctionDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/functions/function.data-object';\r\nimport { FunctionDataObjectCollection }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/function.data-object.collection';\r\nimport { FunctionGroupPlayableDataObject } from './function-groups/function-group.playable.data-object';\r\nimport { FunctionPlayableDataObjectInterface } from './functions/function.playable.data-object.interface';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\nimport { SetPropertyPlayableDataObject } from './functions/set-property.playable.data-object';\r\nimport { SetScormPlayableDataObject } from './functions/set-scorm.playable.data-object';\r\nimport { SetVariablePlayableDataObject } from './functions/set-variable.playable.data-object';\r\nimport { WaitPlayableDataObject } from './functions/wait.playable.data-object';\r\n\r\n\r\n/**\r\n * Playable version of Function Collection\r\n */\r\nexport class FunctionPlayableDataObjectCollection extends FunctionDataObjectCollection {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private functionPlayableCollectionLogger: Logger;\r\n\r\n    private functionsToRun: Array<FunctionDataObject>;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n        this.sortFunctionCollection();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.functionPlayableCollectionLogger = Log.getInstance().getLogger('FunctionPlayableDataObjectCollection');\r\n        this.functionPlayableCollectionLogger.debug('constructorPreprocessing(): Playable Function Collection');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Override base.  Creates playable versions of the Animate Function.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {AnimatePlayableDataObject}\r\n     */\r\n    protected createAnimate(element: ElementDataObject): AnimatePlayableDataObject {\r\n        return new AnimatePlayableDataObject(element);\r\n    }\r\n\r\n    /**\r\n     * Override base.  Creates playable version of Change Page Function\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {ChangePagePlayableDataObject}\r\n     */\r\n    protected createChangePage(element: ElementDataObject): ChangePagePlayableDataObject {\r\n        return new ChangePagePlayableDataObject(element);\r\n    }\r\n\r\n    /**\r\n     * Override base.  Creates playable version of Delay Function\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {DelayPlayableDataObject}\r\n     */\r\n    protected createDelay(element: ElementDataObject): DelayPlayableDataObject {\r\n        return new DelayPlayableDataObject(element);\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Creates playable versions of DisplayMessage Function.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {DisplayMessagePlayableDataObject}\r\n     */\r\n    protected createDisplayMessage(element: ElementDataObject): DisplayMessagePlayableDataObject {\r\n        return new DisplayMessagePlayableDataObject(element);\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Creates playable versions of SetProperty Function.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {SetPropertyPlayableDataObject}\r\n     */\r\n    protected createSetProperty(element: ElementDataObject): SetPropertyPlayableDataObject {\r\n        return new SetPropertyPlayableDataObject(element);\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Creates playable versions of SetScorm Function.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {SetScormPlayableDataObject}\r\n     */\r\n    protected createSetScorm(element: ElementDataObject): SetScormPlayableDataObject {\r\n        return new SetScormPlayableDataObject(element);\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Creates playable versions of SetVariable Function.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {SetVariablePlayableDataObject}\r\n     */\r\n    protected createSetVariable(element: ElementDataObject): SetVariablePlayableDataObject {\r\n        return new SetVariablePlayableDataObject(element);\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Creates playable versions of Wait Function.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {WaitPlayableDataObject}\r\n     */\r\n    protected createWait(element: ElementDataObject): WaitPlayableDataObject {\r\n        return new WaitPlayableDataObject(element);\r\n    }\r\n\r\n    /**\r\n     * Sorts the Function objects stored in functionCollection based on their order property.  Currently this only\r\n     * needs to be done in the playable version of this class.\r\n     */\r\n    private sortFunctionCollection(): void {\r\n        this.functionCollection.sort(\r\n            (functionA: FunctionDataObject, functionB: FunctionDataObject) => {\r\n                return functionA.order - functionB.order;\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Starts processing the Function Collection by running the individual Functions\r\n     */\r\n    public processFunctionCollection(): void {\r\n        /*\r\n        Reset functionsToRun list with functionCollection\r\n        NOTE: slice is supposed to produce \"shallow\" copy which seems to indicate it won't work on complex objects\r\n                but it seems to work ok here.  Keep an eye on this for problems.\r\n        */\r\n        this.functionsToRun = this.functionCollection.slice();\r\n\r\n        console.log(this.functionCollection);\r\n        console.log(this.functionsToRun);\r\n\r\n        this.runFunction();\r\n    }\r\n\r\n    /**\r\n     * Run individual Function from top of Collection\r\n     */\r\n    private runFunction(): void {\r\n        if (this.functionsToRun.length > 0) {\r\n            // Remove Function from top of functionsToRun array and run it\r\n            ((this.functionsToRun.shift() as EventSystemDataObjectInterface) as FunctionPlayableDataObjectInterface)\r\n                .runFunction();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * To be called by child Function objects when their processing is complete.  In this case it runs the next Function\r\n     * on the list if there are any left.  Otherwise it notifies parent that Function Collection processing is complete.\r\n     */\r\n    public childProcessComplete(): void {\r\n        if (this.functionsToRun.length > 0) {\r\n            this.runFunction();\r\n        } else {\r\n            (this._parent as FunctionGroupPlayableDataObject).childProcessComplete();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/function.playable.data-object.collection.ts","import { Power1, TweenLite }    from 'gsap';\r\n\r\nimport { AnimateDataObject }\r\n    from '../../../../../shared/system-shared/model/data-objects/event-system/functions/animate.data-object';\r\nimport { ComponentDataObject }\r\n    from '../../../../../shared/system-shared/model/data-objects/components/component.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { FunctionDataObjectCollection }\r\n    from '../../../../../shared/system-shared/model/data-objects/event-system/function.data-object.collection';\r\nimport { FunctionPlayableDataObjectCollection } from '../function.playable.data-object.collection';\r\nimport { FunctionPlayableDataObjectInterface } from './function.playable.data-object.interface';\r\nimport { InjectorService } from '../../../../../shared/system-shared/model/services/injector.service';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { MotionPathPlayableDataObject } from './motion-path.playable.data-object';\r\nimport { PageService } from '../../../../../shared/system-shared/model/services/page.service';\r\n\r\n\r\n/**\r\n * <p>Playable version of AnimateDataObject.  Changes value of a numeric component property over time.</p>\r\n */\r\nexport class AnimatePlayableDataObject extends AnimateDataObject implements FunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private animatePlayableLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.animatePlayableLogger = Log.getInstance().getLogger('AnimatePlayableDataObject');\r\n        this.animatePlayableLogger.debug('constructorPreprocessing(): Playable Animate Function');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Overrides base.  Creates playable version of class.\r\n     * @param element -> root level Element to construct Motion Path from.\r\n     * @returns {MotionPathPlayableDataObject}\r\n     */\r\n    protected createMotionPath(element: ElementDataObject): MotionPathPlayableDataObject {\r\n        return new MotionPathPlayableDataObject(element);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Implement FunctionPlayableDataObjectInterface\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public runFunction(): void {\r\n        this.animatePlayableLogger.debug('runFunction(): component = ' + this.componentElementID + '  - duration = ' +\r\n            this.duration);\r\n\r\n        if (this._motionPathDataObjectCollection.length > 0 && this.componentElementID && this.duration) {\r\n            this.animatePlayableLogger.debug('runFunction(): Running animation');\r\n\r\n            /*\r\n            Currently animation handled by tweening data object properties using GSAP.  Angular may provide\r\n            alternative via Renderer, AnimationPlayer, AnimationStyles, and AnimationKeyframe to dynamically define\r\n            animations.  Tried it.  It does work, but seems to work by modifying CSS styles, so may require access\r\n            to DOM object.  Seems to be fairly new at this point with limited samples and documentation, so probably\r\n            not ready at this point, but may want to look into it again in the future.\r\n            https://netbasal.com/angular-2-explore-the-renderer-service-e43ef673b26c\r\n            */\r\n\r\n            // TODO: Move this logic into more central location - maybe PageService?  or maybe its own service?\r\n            const pageService: PageService = InjectorService.injector.get(PageService);\r\n\r\n            // Get reference to component\r\n            const component: ComponentDataObject = pageService.getComponent(+this.componentElementID);\r\n            // console.log('!!!!!! runFunction(): !!!!! componentElementID = ' + (+this.componentElementID));\r\n\r\n            if (component) {\r\n                this.animatePlayableLogger.debug('runFunction(): component found -> ' + component.name);\r\n                this.animatePlayableLogger.debug('runFunction(): searching for display object ... ');\r\n                console.log(component.viewComponent);\r\n            } else {\r\n                this.animatePlayableLogger.debug('runFunction(): component not found -> ' + component.name);\r\n            }\r\n\r\n            // Get MotionPath\r\n            /*\r\n            Currently Event System only generates Animate functions with a single MotionPath.  So for now, just tween\r\n            for one MotionPath.  If eventually additional functionality is added to chain or create curves using\r\n            multiple MotionPaths we'll need to use other parts of the library such as Timeline (Lite or Max for\r\n            chaining) and/or TweenMax (for stuff like Bezier curves using SVG)\r\n            */\r\n            const motionPath: MotionPathPlayableDataObject =\r\n                this._motionPathDataObjectCollection[0] as MotionPathPlayableDataObject;\r\n\r\n            // Get Property to Animate (property as recognized by DB)\r\n            const dbProperty: string = motionPath.property;\r\n            // console.log('!!!!! DB property = ' + dbProperty);\r\n\r\n            // Get valueFrom, valueTo, and valueBy values from motionPath\r\n            const valueFrom: number = motionPath.valueFrom();\r\n            if (valueFrom !== undefined) {\r\n                // console.log('!!!!! valueFrom = ' + valueFrom);\r\n            }\r\n\r\n            const valueTo: number = motionPath.valueTo();\r\n            if (valueTo !== undefined) {\r\n                // console.log('!!!!! valueTo = ' + valueTo);\r\n            }\r\n\r\n            const valueBy: number = motionPath.valueBy();\r\n            if (valueBy !== undefined) {\r\n                // console.log('!!!!! valueBy = ' + valueBy);\r\n            }\r\n\r\n            // Check for Wipe type animation via maskScale properties\r\n            /*\r\n            Special check for wipe animations - In Flash defined with motionPath property of maskScaleX or Y.  Our\r\n            HTML components don't implement equivalent properties or handle clipping using a similar concept.  Need to\r\n            translate data\r\n\r\n            This special handling for wipe should be changed to preserve what should be a generic animation / tweening\r\n            function.  Until the data can be changed to be more representative of what actually needs to happen in the\r\n            HTML player, the data should be parsed as below and turned into motionPath / valueFrom/To/By and passed into\r\n            a more general animation function\r\n            */\r\n            if (dbProperty === 'maskScaleX' || dbProperty === 'maskScaleY') {\r\n                // Special setup to handle Wipe by tweening css clip\r\n\r\n                // Get FunctionGroup data to see if this is an Entrance or Exit\r\n                /*\r\n                NOTE: In AS code Entrance and Exit is accomplished by a combination of SetValue and Animate functions.\r\n                Not Animate alone.  Animate doesn't have sufficient info on its own to determine whether we have an\r\n                Entrance or Exit.  To avoid having to access and inspect sibling Functions, for now, easiest to go to\r\n                parent FunctionGroup to determine whether we have an Entrance or Exit.\r\n                */\r\n                // Parent of an Animate Function should be FunctionDataObjectCollection.  Check and get name.\r\n                let functionGroupName: string;\r\n                if (this._parent instanceof FunctionDataObjectCollection) {\r\n                    functionGroupName = (this._parent as FunctionDataObjectCollection).parent.name;\r\n                    // console.log('$$$$$$$$$$ Parent Function Group name = ' + functionGroupName);\r\n                }\r\n\r\n                // Set default values for clip rectangle\r\n                let top: number = 0;\r\n                let right: number = component.width;\r\n                let bottom: number = component.height;\r\n                let left: number = 0;\r\n\r\n                // Update clip rectangle properties based on motionPath and functionGroupName\r\n                if (dbProperty === 'maskScaleY' && valueFrom === 1 && valueTo === 0) {\r\n                    // Wipe - Up (from bottom)\r\n                    if (functionGroupName === 'Entrance') {\r\n                        top = component.height;\r\n                    } else if (functionGroupName === 'Exit') {\r\n                        bottom = 0;\r\n                    }\r\n                } else if (dbProperty === 'maskScaleY' && valueFrom === 0 && valueTo === 1) {\r\n                    // Wipe - Down (from top)\r\n                    if (functionGroupName === 'Entrance') {\r\n                        bottom = 0;\r\n                    } else if (functionGroupName === 'Exit') {\r\n                        top = component.height;\r\n                    }\r\n                } else if (dbProperty === 'maskScaleX' && valueFrom === 1 && valueTo === 0) {\r\n                    // Wipe - Left (from right)\r\n                    if (functionGroupName === 'Entrance') {\r\n                        left = component.width;\r\n                    } else if (functionGroupName === 'Exit') {\r\n                        right = 0;\r\n                    }\r\n                } else if (dbProperty === 'maskScaleX' && valueFrom === 0 && valueTo === 1) {\r\n                    // Wipe - Right (from left)\r\n                    if (functionGroupName === 'Entrance') {\r\n                        right = 0;\r\n                    } else if (functionGroupName === 'Exit') {\r\n                        left = component.width;\r\n                    }\r\n                }\r\n\r\n                // Build target clip string\r\n                const targetClip: string = 'rect(' + top + 'px,' + right + 'px,' + bottom + 'px,' + left + 'px)';\r\n\r\n                // Add clip rectangle with default initial setting (component fully visible)\r\n                // NOTE: Adding dynamically since presence of clip causes problems with IE.  Problems with scrolling and\r\n                //          in text components and with playing videos full screen\r\n                component.viewComponent.addClip();\r\n\r\n                // Animate Wipe\r\n                if (functionGroupName === 'Entrance') {\r\n                    // Animate from clip rectangle\r\n                    TweenLite.from(component.viewComponent.elementRef.nativeElement, this.duration, {\r\n                        clip: targetClip,\r\n                        ease: Power1.easeInOut,\r\n                        onComplete: this.completeHandler, onCompleteParams: [this, component, true],\r\n                        onOverwrite: this.overwriteHandler\r\n                    });\r\n                } else if (functionGroupName === 'Exit') {\r\n                    // Animate to clip rectangle\r\n                    TweenLite.to(component.viewComponent.elementRef.nativeElement, this.duration, {\r\n                        clip: targetClip,\r\n                        ease: Power1.easeInOut,\r\n                        onComplete: this.completeHandler, onCompleteParams: [this, component, true],\r\n                        onOverwrite: this.overwriteHandler\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                // If not a Wipe, can use normal process of tweening component property\r\n\r\n                // Convert property name as defined by DB to get actual class property\r\n                let classProperty: string;\r\n                let propertyValue: any;\r\n\r\n                // Check if property exists\r\n                /*\r\n                To accommodate stuff like maskScaleXY which exists in Flash, but not in HTML Player.  Wipe functionality\r\n                implemented completely differently.  May want to consider changing data structure when we redesign\r\n                PageDesigner.\r\n                */\r\n                if (component.getPropertyMap(dbProperty)) {\r\n                    classProperty = component.getPropertyMap(dbProperty).publicName;\r\n                }\r\n\r\n                /*\r\n                Special handle 'alpha' since generally stored in DB with upper case \"A\", but for some reason lower\r\n                case \"a\" used in Designer for Animate Function.\r\n                TODO: This should be fixed when PageDesigner redesigned\r\n                */\r\n                if (dbProperty === 'alpha') {\r\n                    classProperty = dbProperty;\r\n                }\r\n\r\n                // console.log('!!!!! class property = ' + classProperty);\r\n\r\n                if (classProperty) {\r\n                    propertyValue = component[classProperty];\r\n                    // console.log('!!!!! property value = ' + propertyValue);\r\n                }\r\n\r\n                /*\r\n                Note that this approach actually tweens the ComponentDataObject's property directly and relies on\r\n                data binding to actually animate the component.  Typically tweens done directly on DOM object.  Might\r\n                want to watch for performance related issues.\r\n                */\r\n                if (typeof valueFrom === 'number' && typeof valueTo === 'number') {\r\n                    TweenLite.fromTo(component, this.duration,\r\n                        {[classProperty]: valueFrom},\r\n                        {\r\n                            [classProperty]: valueTo,\r\n                            ease: Power1.easeInOut,\r\n                            onComplete: this.completeHandler, onCompleteParams: [this, component],\r\n                            onOverwrite: this.overwriteHandler\r\n                        }\r\n                    );\r\n                } else if (typeof valueBy === 'number') {\r\n                    const tweenTo: number = propertyValue + valueBy;\r\n                    TweenLite.to(component, this.duration,\r\n                        {\r\n                            [classProperty]: tweenTo,\r\n                            ease: Power1.easeInOut,\r\n                            onComplete: this.completeHandler, onCompleteParams: [this, component],\r\n                            onOverwrite: this.overwriteHandler\r\n                        }\r\n                    );\r\n                }   // NOTE: not sure if there are any other combinations used - add if needed\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Callback / Event Handlers\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Callback function used when animate function completes\r\n     * @param self -> reference to this object passed to retain reference\r\n     * @param component -> reference to component being animated (not actually being used at this point)\r\n     * @param isWipe -> optional - specifies clip rect to reset to (\r\n     */\r\n    private completeHandler(self: AnimatePlayableDataObject, component: ComponentDataObject,\r\n                           isWipe?: boolean): void {\r\n\r\n        self.animatePlayableLogger.debug('completeHandler(): function name = ' + self.name);\r\n\r\n        // After wipe animation remove clip rect that was dynamically added to prevent problems (noted above) in IE\r\n        /*\r\n        NOTE: Theoretically this should wait until after the visibility is set to hidden, but in practice, seems to\r\n        work fine here.  If problems are noticed, may need to change when this is done.\r\n        Like the other wipe specific handling, the special wipe handling here should not be part of a general animate\r\n        function.  When designer / data redesigned should probably consider adding a separate function in the function\r\n        group to do this.\r\n        */\r\n        if (isWipe) {\r\n            component.viewComponent.removeClip();\r\n        }\r\n\r\n        // Animation complete - notify parent\r\n        (self._parent as FunctionPlayableDataObjectCollection).childProcessComplete();\r\n    }\r\n\r\n    /**\r\n     * Callback function used when animation function interrupted by another animation.  Currently uses default \"auto\"\r\n     * setting which will only overwrite the individual tweening properties that overlap / conflict.\r\n     *\r\n     * @param overwrittenTween -> animation being interrupted\r\n     * @param overwritingTween -> animation that is interrupting\r\n     * @param target -> object being animated / tweened\r\n     * @param overwrittenProperties -> object properties being tweened\r\n     */\r\n    private overwriteHandler(overwrittenTween: gsap.Animation, overwritingTween: gsap.Animation, target: any,\r\n                             overwrittenProperties: Array<string>): void {\r\n\r\n        // this.animatePlayableLogger.debug('overwriteHandler()');\r\n\r\n        // Create reference to overwrittenTween's vars property which contains its configuration variables\r\n        const vars: any = overwrittenTween.vars;\r\n\r\n        // Get onComplete function and parameters from vars and call it so that Event System processing can continue\r\n        overwrittenTween.eventCallback('onComplete').apply(this, vars.onCompleteParams);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/animate.playable.data-object.ts","import { ChangePageDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/change-page.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { InjectorService } from '../../../../../shared/system-shared/model/services/injector.service';\r\nimport { PageService } from '../../../../../shared/system-shared/model/services/page.service';\r\nimport { UnitService } from '../../../../../shared/system-shared/model/services/unit.service';\r\nimport { FunctionPlayableDataObjectInterface } from './function.playable.data-object.interface';\r\nimport { FunctionPlayableDataObjectCollection } from '../function.playable.data-object.collection';\r\n\r\n\r\n\r\n/**\r\n * Playable version of ChangePage data object\r\n */\r\nexport class ChangePagePlayableDataObject extends ChangePageDataObject\r\n    implements FunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n     * TODO: Move this constant to ChangePageLibraryDataObject when available\r\n\t * <p>Type value to load the next page in the course sequence.</p>\r\n\t */\r\n    public static readonly TYPE_NEXT_PAGE: string = 'NextPage';\r\n\r\n\t/**\r\n     * TODO: Move this constant to ChangePageLibraryDataObject when available\r\n\t * <p>Type value to load the next page in the course sequence.</p>\r\n\t */\r\n    public static readonly TYPE_PREVIOUS_PAGE: string = 'PreviousPage';\r\n\r\n\t/**\r\n     * TODO: Move this constant to ChangePageLibraryDataObject when available\r\n\t * <p>Type value to load the next page in the course sequence.</p>\r\n\t */\r\n    public static readonly TYPE_SELECT_PAGE: string = 'SelectPage';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableChangePageLogger: Logger;\r\n\r\n    private pageService: PageService = InjectorService.injector.get(PageService);\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableChangePageLogger = Log.getInstance().getLogger('ChangePagePlayableDataObject');\r\n        this.playableChangePageLogger.debug('constructorPreprocessing(): Playable ChangePage');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * <p>Run ChangePage.</p>\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n        this.playableChangePageLogger.debug('runFunction(): type = ' + this.type + ' pageID = ' + this.pageID );\r\n\r\n        switch (this.type) {\r\n            // TODO: Get the following constant from ChangePageLibraryDataObject when available\r\n            // for example, case ChangePageLibraryDataObject.TYPE_NEXT_PAGE:\r\n            case ChangePagePlayableDataObject.TYPE_NEXT_PAGE:\r\n                this.pageService.loadNextPage();\r\n                break;\r\n            case ChangePagePlayableDataObject.TYPE_PREVIOUS_PAGE:\r\n                this.pageService.loadPreviousPage();\r\n                break;\r\n            case ChangePagePlayableDataObject.TYPE_SELECT_PAGE:\r\n                this.pageService.loadPage(this.pageID);\r\n                break;\r\n        }\r\n\r\n        /* NOTE:\tUnlike other functions, loading another page should prevent any subsequent functions from running.\r\n            To ensure consistency, childProcessComplete not called.  (Otherwise subsequent functions that run\r\n            almost immediately could sometimes execute properly while the player makes the asynchronous requests\r\n            needed to load another page)\r\n        */\r\n        // (this.parent as FunctionPlayableDataObjectCollection).childProcessComplete();\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/change-page.playable.data-object.ts","import { DelayDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/delay.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { SimpleTimer } from 'ng2-simple-timer';\r\nimport { InjectorService } from '../../../../../shared/system-shared/model/services/injector.service';\r\nimport { FunctionPlayableDataObjectCollection } from '../function.playable.data-object.collection';\r\n\r\n\r\n\r\n/**\r\n * Playable version of Delay data object\r\n */\r\nexport class DelayPlayableDataObject extends DelayDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableDelayLogger: Logger;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableDelayLogger = Log.getInstance().getLogger('DelayPlayableDataObject');\r\n        this.playableDelayLogger.debug('constructorPreprocessing(): Playable Delay');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * <p>Run Delay.</p>\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n        setTimeout(() =>  (this._parent as FunctionPlayableDataObjectCollection).childProcessComplete(),\r\n            this.duration * 1000);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/delay.playable.data-object.ts","import { DisplayMessageDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/display-message.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { FunctionPlayableDataObjectInterface } from './function.playable.data-object.interface';\r\nimport { FunctionPlayableDataObjectCollection } from '../function.playable.data-object.collection';\r\n\r\nimport { InjectorService } from '../../../../../shared/system-shared/model/services/injector.service';\r\nimport { PopUpService } from '../../../../../model/services/pop-up.service';\r\nimport {PopUpDataObject} from '../../../../../model/data-objects/pop-up.data-object';\r\n\r\n\r\n/**\r\n * Playable version of DisplayMessage data object\r\n */\r\nexport class DisplayMessagePlayableDataObject extends DisplayMessageDataObject\r\n    implements FunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableDisplayMessageLogger: Logger;\r\n\r\n    private popupService: PopUpService = InjectorService.injector.get(PopUpService);\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableDisplayMessageLogger = Log.getInstance().getLogger('DisplayMessagePlayableDataObject');\r\n        this.playableDisplayMessageLogger.debug('constructorPreprocessing(): Playable DisplayMessage');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * <p>Run DisplayMessage.</p>\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n        const popUpData: PopUpDataObject = new PopUpDataObject(this.message);\r\n        popUpData.titleText = this.messageTitle;\r\n        popUpData.titleTextColor = this.messageTitleBarTextColor;\r\n        popUpData.titleBarColor = this.messageTitleBarColor;\r\n        popUpData.callBackFunction = () => (this._parent as FunctionPlayableDataObjectCollection).childProcessComplete();\r\n        this.popupService.openPopUp(popUpData);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/display-message.playable.data-object.ts","import { GetMathDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/get-math.data-object';\r\nimport { ElementDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { ReturnValueFunctionPlayableDataObjectInterface } from './return-value-function.playable.data-object.interface';\r\nimport { ValuePlayableDataObject } from '../value.playable.data-object';\r\n\r\n\r\n/**\r\n * Playable version of GetMath data object\r\n */\r\nexport class GetMathPlayableDataObject extends GetMathDataObject\r\n    implements ReturnValueFunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableGetMathLogger: Logger;\r\n\r\n    /**\r\n\t * <p>The return value of the playable FunctionDataObject implements ReturnValueFunctionPlayableDataObject Interface.\r\n\t * It's public to allow its parent access to it when once its ready.\r\n\t * There is no way of knowing what data type this will be. (Possibly String, Number, or Boolean).</p>\r\n\t *\r\n\t */\r\n    public returnValue: any;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableGetMathLogger = Log.getInstance().getLogger('GetMathPlayableDataObject');\r\n        this.playableGetMathLogger.debug('constructorPreprocessing(): Playable GetMath');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs playable GetMath object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case GetMathDataObject.VALUE_OBJECT_ELEMENT_NAME:\r\n                const valueObject: ValuePlayableDataObject = new ValuePlayableDataObject(element);\r\n                valueObject.parent = this;\r\n                this._valueList.push(valueObject);\r\n                this.playableGetMathLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Run Math calculation process\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n\r\n        // list of numerical values\r\n        const numericalValueList: number[] = [];\r\n\r\n        let result: number;\r\n\r\n        this.sortOrder();\r\n\r\n        // first we get all the values of the children ValueDataObject;\r\n        for ( const value of this._valueList ) {\r\n            numericalValueList.push(+(value as ValuePlayableDataObject).returnValue);\r\n        }\r\n\r\n        if (numericalValueList.length > 1) {\r\n            switch (this.operator) {\r\n                case GetMathDataObject.ADD:\r\n                    result = this.add(numericalValueList);\r\n                    break;\r\n                case GetMathDataObject.SUBTRACT:\r\n                    result = this.subtract(numericalValueList);\r\n                    break;\r\n                case GetMathDataObject.MULTIPLY:\r\n                    result = this.multiply(numericalValueList);\r\n                    break;\r\n                case GetMathDataObject.DIVIDE:\r\n                    result = this.divide(numericalValueList);\r\n                    break;\r\n            }\r\n            this.playableGetMathLogger.debug('returned math calculation value = ' + result);\r\n            this.returnValue = result;\r\n        }\r\n    }\r\n\r\n\r\n  \t/**\r\n\t * Function for adding up 2 values in the given list\r\n\t */\r\n\r\n    private add(values: number[]): number {\r\n        return values[0] + values[1];\r\n    }\r\n\r\n\t/**\r\n\t * Function for subtracting value1 from value2 in the given list\r\n\t */\r\n    private subtract(values: number[]): number {\r\n        return values[0] - values[1];\r\n    }\r\n\r\n\t/**\r\n\t * Function for multiply 2 values in the given list\r\n\t */\r\n    private multiply(values: number[]): number {\r\n        return values[0] * values[1];\r\n    }\r\n\r\n\t/**\r\n\t * Function for dividing up 2 values in the given list\r\n\t */\r\n    private divide(values: number[]): number {\r\n        if (values[1] !== 0) {\r\n            return values[0] / values[1];\r\n        }\r\n        return values[0];\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/get-math.playable.data-object.ts","import { ComponentDataObject }\r\n    from '../../../../../shared/system-shared/model/data-objects/components/component.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { GetPropertyDataObject }\r\n    from '../../../../../shared/system-shared/model/data-objects/event-system/functions/get-property.data-object';\r\nimport { InjectorService } from '../../../../../shared/system-shared/model/services/injector.service';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { PageService } from '../../../../../shared/system-shared/model/services/page.service';\r\nimport { ReturnValueFunctionPlayableDataObjectInterface } from './return-value-function.playable.data-object.interface';\r\n\r\n\r\n/**\r\n * Playable version of GetProperty data object\r\n */\r\nexport class GetPropertyPlayableDataObject extends GetPropertyDataObject\r\n    implements ReturnValueFunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableGetPropertyLogger: Logger;\r\n\r\n    private pageService: PageService = InjectorService.injector.get(PageService);\r\n\r\n    /**\r\n     * <p>The return value of the playable FunctionDataObject implements ReturnValueFunctionPlayableDataObjectInterface\r\n     * It's public to allow its parent access to it when once its ready.\r\n     * There is no way of knowing what data type this will be. (Possibly String, Number, or Boolean).</p>\r\n     *\r\n     * @internal: Maybe we could use string|number|boolean?\r\n     */\r\n    public returnValue: any;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableGetPropertyLogger = Log.getInstance().getLogger('GetPropertyPlayableDataObject');\r\n        this.playableGetPropertyLogger.debug('constructorPreprocessing(): Playable GetProperty');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * <p>Run GetProperty.</p>\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n        if (this.componentElementID && this.propertyName) {\r\n            const component: ComponentDataObject  =  this.pageService.getComponent(+this.componentElementID);\r\n            if (component && component.getPropertyMap(this.propertyName)) {\r\n                this.playableGetPropertyLogger.debug('runFunction(): property found - ' + this.propertyName);\r\n                this.returnValue = component[component.getPropertyMap(this.propertyName).publicName];\r\n                this.playableGetPropertyLogger.debug('returned property value = ' + this.returnValue);\r\n            } else {\r\n                this.playableGetPropertyLogger.debug('ERROR: runFunction(): component (' + component.name +\r\n                    ') property (' + this.propertyName + ') not found');\r\n            }\r\n        } else {\r\n            this.playableGetPropertyLogger.debug(\r\n                'runFunction(): Error Missing required Data: ComponentElementID and PropertyName');\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/get-property.playable.data-object.ts","import { GetRandomNumberDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/get-random-number.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { ReturnValueFunctionPlayableDataObjectInterface } from './return-value-function.playable.data-object.interface';\r\n\r\n\r\n/**\r\n * Playable version of GetRandomNumber data object\r\n */\r\nexport class GetRandomNumberPlayableDataObject extends GetRandomNumberDataObject\r\n    implements ReturnValueFunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableGetRandomNumberLogger: Logger;\r\n\r\n    /**\r\n\t * <p>The return value of the playable FunctionDataObject implements ReturnValueFunctionPlayableDataObject Interface.\r\n\t * It's public to allow its parent access to it when once its ready.\r\n\t * There is no way of knowing what data type this will be. (Possibly String, Number, or Boolean).</p>\r\n\t *\r\n\t */\r\n    public returnValue: any;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableGetRandomNumberLogger = Log.getInstance().getLogger('GetRandomNumberPlayableDataObject');\r\n        this.playableGetRandomNumberLogger.debug('constructorPreprocessing(): Playable GetRandomNumber');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * <p>Run GetRandomNumber.</p>\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n\r\n        if (!isNaN (this.from) && !isNaN(this.to)) {\r\n            // set min and max based of the given numbers\r\n            let minimumValue: number = this.from;\r\n            let maximumValue: number = this.to;\r\n\r\n            if (this.from > this.to)\t{\r\n                minimumValue = this.to;\r\n                maximumValue = this.from;\r\n            }\r\n\r\n            // generate the random number within the range, this range\r\n            // is inclusive meaning both minimum and maximum are possible outcomes\r\n            const range: number = maximumValue - minimumValue;\r\n\r\n            let value: number = Math.random() * (range + 1);\r\n            value = Math.floor(value + minimumValue);\r\n\r\n            this.playableGetRandomNumberLogger.debug('returned random number = ' + value);\r\n            // Set returnValue to property value\r\n            this.returnValue = value;\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/get-random-number.playable.data-object.ts","import { ColorDataType } from '../../../../../shared/system-shared/model/data-objects/data-types/color.data-type';\r\nimport { GetTypedConstantDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/get-typed-constant.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { ReturnValueFunctionPlayableDataObjectInterface } from './return-value-function.playable.data-object.interface';\r\nimport { VariableDataObject } from '../../../../../shared/system-shared/model/data-objects/variable.data-object';\r\n\r\n\r\n/**\r\n * Playable version of GetTypedConstant data object\r\n */\r\nexport class GetTypedConstantPlayableDataObject extends GetTypedConstantDataObject\r\n    implements ReturnValueFunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableGetTypedConstantLogger: Logger;\r\n\r\n\t/**\r\n\t * <p>Value of unknown data type this function will return.</p>\r\n\t */\r\n    private _typedValue: any;\r\n\r\n\r\n    /**\r\n\t * <p>The return value of the playable FunctionDataObject implements ReturnValueFunctionPlayableDataObject Interface.\r\n\t * It's public to allow its parent access to it when once its ready.\r\n\t * There is no way of knowing what data type this will be. (Possibly String, Number, or Boolean).</p>\r\n\t *\r\n\t */\r\n    public returnValue: any;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableGetTypedConstantLogger = Log.getInstance().getLogger('GetTypedConstantPlayableDataObject');\r\n        this.playableGetTypedConstantLogger.debug('constructorPreprocessing(): Playable GetTypedConstant');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * <p>Run GetTypedConstant.</p>\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n\t\t// only ever needs to run once so first we check if _typedValue is still null\r\n        if (!this._typedValue) {\r\n            if (this.constantValue !== '' && this.type !== '') {\r\n                switch (this.type) {\r\n                    case VariableDataObject.VARIABLE_TYPE_BOOLEAN:\r\n                        this._typedValue = (this.constantValue.toLowerCase() === 'true');\r\n                        break;\r\n                    case VariableDataObject.VARIABLE_TYPE_NUMBER:\r\n                        const numberValue: number = +this.constantValue;\r\n                        if ( isNaN(numberValue) ) {\r\n                            this.playableGetTypedConstantLogger.debug\r\n                            ('ERROR: Variable Value convertion failed : Value '\r\n                            + this.constantValue + ' is not a Number');\r\n                        } else {\r\n                            this._typedValue = numberValue;\r\n                        }\r\n                        break;\r\n                    case VariableDataObject.VARIABLE_TYPE_STRING:\r\n                        // TODO: Should consider adding handling for color data types in constants\r\n                        // Setup RegExp to test if string is a hex color\r\n                        const colorPattern: RegExp = /^0x[0-9,a-f]{6}$/i;\r\n\r\n                        // Test pattern\r\n                        if (colorPattern.exec(this.constantValue)) {\r\n                            // If hex color convert to ColorDataType and set typedValue to webColor\r\n                            const color: ColorDataType = new ColorDataType(this.constantValue);\r\n                            this._typedValue = color.webColor;\r\n                        } else {\r\n                            // Otherwise handle as regular string\r\n                            this._typedValue = this.constantValue;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this.playableGetTypedConstantLogger.debug\r\n                        ('ERROR: Variable Value convertion failed : type '\r\n                        + this.type + ' Not Supported by the front end');\r\n                        break;\r\n                }\r\n            } else {\r\n                    this.playableGetTypedConstantLogger.debug\r\n                    ('runFunction(): Error Missing required Data: Value = '\r\n                    + this.constantValue + ' and Type = ' + this.type);\r\n            }\r\n        }\r\n        this.playableGetTypedConstantLogger.debug('returned constant = ' + this._typedValue);\r\n        // Set returnValue to value of constant\r\n        this.returnValue = this._typedValue;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/get-typed-constant.playable.data-object.ts","import { GetVariableDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/get-variable.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { InjectorService } from '../../../../../shared/system-shared/model/services/injector.service';\r\nimport { VariableService } from '../../../../../shared/system-shared/model/services/variable.service';\r\nimport { ReturnValueFunctionPlayableDataObjectInterface } from './return-value-function.playable.data-object.interface';\r\n\r\n\r\n\r\n/**\r\n * Playable version of GetVariable data object\r\n */\r\nexport class GetVariablePlayableDataObject extends GetVariableDataObject\r\n    implements ReturnValueFunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableGetVariableLogger: Logger;\r\n\r\n    private variableService: VariableService = InjectorService.injector.get(VariableService);\r\n\r\n    /**\r\n     * The return value of the playable FunctionDataObject implements ReturnValueFunctionPlayableDataObject Interface.\r\n     * It's public to allow its parent access to it when once its ready.\r\n     * There is no way of knowing what data type this will be. (Possibly String, Number, or Boolean).\r\n     *\r\n     */\r\n    public returnValue: any;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableGetVariableLogger = Log.getInstance().getLogger('GetVariablePlayableDataObject');\r\n        this.playableGetVariableLogger.debug('constructorPreprocessing(): Playable GetVariable');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * <p>Run GetVariable.</p>\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n        if (this.variableID) {\r\n            console.log('!!!!!!!!!! ' + this.variableID);\r\n            console.log('!!!!!!!!!! ' + this.variableService.findVariable(this.variableID));\r\n            this.returnValue =  this.variableService.findVariable(this.variableID).value;\r\n            this.playableGetVariableLogger.debug('returned variable value = ' + this.returnValue);\r\n        } else {\r\n            this.playableGetVariableLogger.debug('runFunction(): Error Missing required Data: VariableID');\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/get-variable.playable.data-object.ts","import { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { MotionPathDataObject }\r\n    from '../../../../../shared/system-shared/model/data-objects/event-system/functions/motion-path.data-object';\r\nimport { ValuePlayableDataObject } from '../value.playable.data-object';\r\n\r\n\r\n/**\r\n * <p>Playable version of MotionPathDataObject.  Provides access to properties of the MotionPathDataObject by\r\n * evaluating the ValueDataObjects that they are defined by.  Otherwise doesn't implement a process type method like\r\n * other playable Event Data Objects.</p>\r\n */\r\nexport class MotionPathPlayableDataObject extends MotionPathDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private motionPathPlayableLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this MotionPath object that include the parameters that it takes in and ultimately define what the\r\n     * MotionPath will do.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be undefined / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing():  void {\r\n        // Setup logger here so that it's available during construction\r\n        this.motionPathPlayableLogger = Log.getInstance().getLogger('MotionPathDataObject');\r\n        this.motionPathPlayableLogger.debug('constructorPreprocessing(): Playable MotionPath');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * ValueFrom value (returned from ValueFrom ValueDataObject)\r\n     * @returns {number|undefined}\r\n     */\r\n    public valueFrom(): number|undefined {\r\n        if (this._valueFromValueDataObject) {\r\n            return +(this._valueFromValueDataObject as ValuePlayableDataObject).returnValue;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ValueTo value (returned from ValueTo ValueDataObject)\r\n     * @returns {number|undefined}\r\n     */\r\n    public valueTo(): number|undefined {\r\n        if (this._valueToValueDataObject) {\r\n            // NOTE: May need more robust error handling if for some reason value object doesn't return a number\r\n            return +(this._valueToValueDataObject as ValuePlayableDataObject).returnValue;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ValueBy value (returned from ValueBy ValueDataObject)\r\n     * @returns {number|undefined}\r\n     */\r\n    public valueBy(): number|undefined {\r\n        if (this._valueByValueDataObject) {\r\n            return +(this._valueByValueDataObject as ValuePlayableDataObject).returnValue;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct ValueDataObject from.\r\n     * @returns {ValuePlayableDataObject}\r\n     */\r\n    protected createValue(element: ElementDataObject): ValuePlayableDataObject {\r\n        return new ValuePlayableDataObject(element);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/motion-path.playable.data-object.ts","import { SetPropertyDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/set-property.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { InjectorService } from '../../../../../shared/system-shared/model/services/injector.service';\r\nimport { ValuePlayableDataObject } from '../value.playable.data-object';\r\nimport { PageService } from '../../../../../shared/system-shared/model/services/page.service';\r\nimport { ComponentDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/components/component.data-object';\r\nimport { FunctionPlayableDataObjectInterface } from './function.playable.data-object.interface';\r\nimport { FunctionPlayableDataObjectCollection } from '../function.playable.data-object.collection';\r\n\r\n\r\n\r\n/**\r\n * Playable version of SetProperty data object\r\n */\r\nexport class SetPropertyPlayableDataObject extends SetPropertyDataObject\r\n    implements FunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableSetPropertyLogger: Logger;\r\n\r\n    private pageService: PageService = InjectorService.injector.get(PageService);\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableSetPropertyLogger = Log.getInstance().getLogger('SetPropertyPlayableDataObject');\r\n        this.playableSetPropertyLogger.debug('constructorPreprocessing(): Playable SetProperty');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * overrides base version\r\n     * @param sourceElement\r\n     */\r\n    protected createValueDataObject(sourceElement: ElementDataObject): void {\r\n        this._value =  new ValuePlayableDataObject(sourceElement);\r\n        this._value.parent = this;\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * <p>Run SetProperty.</p>\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n        // Get value from ValueDataObject\r\n        const value: any = (this._value as ValuePlayableDataObject).returnValue;\r\n\r\n        // Call method to set property\r\n        this.setProperty(value);\r\n\r\n        // send completion to parent\r\n        (this._parent as FunctionPlayableDataObjectCollection).childProcessComplete();\r\n\r\n    }\r\n\r\n\t/**\r\n\t * <p>Function that sets the property's value.</p>\r\n\t */\r\n    private setProperty(value: any): void {\r\n        if (!this.componentElementID || !this.propertyName) {\r\n            this.playableSetPropertyLogger.debug\r\n            ('runFunction(): Error Missing required Data: ComponentElementID and PropertyName');\r\n            return;\r\n        }\r\n        const component: ComponentDataObject = this.pageService.getComponent(+this.componentElementID);\r\n        if (!component) {\r\n            this.playableSetPropertyLogger.debug\r\n            ('ERROR: runFunction(): component not found - ' + this.componentElementID);\r\n            return;\r\n        }\r\n        if (!component.getPropertyMap(this.propertyName)) {\r\n            this.playableSetPropertyLogger.debug('ERROR: runFunction(): property not found - ' + this.propertyName);\r\n        } else {\r\n            this.playableSetPropertyLogger.debug\r\n            ('Vaule Before Set = ' + component[component.getPropertyMap(this.propertyName).publicName]);\r\n            component[component.getPropertyMap(this.propertyName).publicName] = value;\r\n            this.playableSetPropertyLogger.debug\r\n            ('Vaule After Set = ' + component[component.getPropertyMap(this.propertyName).publicName]);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/set-property.playable.data-object.ts","import { SetScormDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/set-scorm.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { InjectorService } from '../../../../../shared/system-shared/model/services/injector.service';\r\nimport { ValuePlayableDataObject } from '../value.playable.data-object';\r\nimport { FunctionPlayableDataObjectInterface } from './function.playable.data-object.interface';\r\nimport { ScormService } from '../../../../../model/services/scorm-service';\r\nimport { FunctionPlayableDataObjectCollection } from '../function.playable.data-object.collection';\r\n\r\n\r\n\r\n/**\r\n * Playable version of SetScorm data object\r\n */\r\nexport class SetScormPlayableDataObject extends SetScormDataObject\r\n    implements FunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableSetScormLogger: Logger;\r\n\r\n    private scormService: ScormService = InjectorService.injector.get(ScormService);\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableSetScormLogger = Log.getInstance().getLogger('SetScormPlayableDataObject');\r\n        this.playableSetScormLogger.debug('constructorPreprocessing(): Playable SetScorm');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * overrides base version\r\n     * @param sourceElement\r\n     */\r\n    protected createValueDataObject(sourceElement: ElementDataObject): void {\r\n        this._value =  new ValuePlayableDataObject(sourceElement);\r\n        this._value.parent = this;\r\n    }\r\n\r\n\r\n    /**\r\n     * <p>Run SetScorm.</p>\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n        // Get value from ValueDataObject\r\n        const value: any = (this._value as ValuePlayableDataObject).returnValue;\r\n        // Call method to set scorm\r\n        this.setScorm(value);\r\n\r\n        // send completion to parent\r\n        (this._parent as FunctionPlayableDataObjectCollection).childProcessComplete();\r\n\r\n    }\r\n\r\n\t/**\r\n\t * <p>Function that sets the scorm's value.</p>\r\n\t */\r\n    private setScorm(value: any): void {\r\n        this.playableSetScormLogger.debug('scorm object = ' + this.ScormDataObject);\r\n        this.playableSetScormLogger.debug('set value = ' + value);\r\n        if (this.scormService.isInitialized()) {\r\n            this.playableSetScormLogger.debug('Before set, Scorm object value = '\r\n            + this.scormService.get(this.ScormDataObject));\r\n            this.scormService.set(this.ScormDataObject, String(value));\r\n            this.scormService.commit();\r\n            this.playableSetScormLogger.debug('After set, Scorm object value = '\r\n            + this.scormService.get(this.ScormDataObject));\r\n        } else {\r\n            this.playableSetScormLogger.debug('Scorm service is not initialized!!!');\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/set-scorm.playable.data-object.ts","import { SetVariableDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/set-variable.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { InjectorService } from '../../../../../shared/system-shared/model/services/injector.service';\r\nimport { VariableService } from '../../../../../shared/system-shared/model/services/variable.service';\r\nimport { ValuePlayableDataObject } from '../value.playable.data-object';\r\nimport { VariablePlayableDataObject } from '../../../../../model/data-objects/variable.playable.data-object';\r\nimport { FunctionPlayableDataObjectInterface } from './function.playable.data-object.interface';\r\nimport { FunctionPlayableDataObjectCollection } from '../function.playable.data-object.collection';\r\n\r\n\r\n\r\n/**\r\n * Playable version of SetVariable data object\r\n */\r\nexport class SetVariablePlayableDataObject extends SetVariableDataObject\r\n    implements FunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableSetVariableLogger: Logger;\r\n\r\n    private variableService: VariableService = InjectorService.injector.get(VariableService);\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableSetVariableLogger = Log.getInstance().getLogger('SetVariablePlayableDataObject');\r\n        this.playableSetVariableLogger.debug('constructorPreprocessing(): Playable SetVariable');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * overrides base version\r\n     * @param sourceElement\r\n     */\r\n    protected createValueDataObject(sourceElement: ElementDataObject): void {\r\n        this._value =  new ValuePlayableDataObject(sourceElement);\r\n        this._value.parent = this;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * <p>Run SetVariable.</p>\r\n     *\r\n     */\r\n    public runFunction(): void {\r\n        // Get value from ValueDataObject\r\n        const value: any = (this._value as ValuePlayableDataObject).returnValue;\r\n\r\n        // Call method to set variable\r\n        this.setVariable(value);\r\n\r\n        // send completion to parent\r\n        (this._parent as FunctionPlayableDataObjectCollection).childProcessComplete();\r\n\r\n    }\r\n\r\n\t/**\r\n\t * <p>Function that sets the variable's value.</p>\r\n\t */\r\n    private setVariable(value: any): void {\r\n        const targetVariable: VariablePlayableDataObject = this.variableService.findVariable(this.variableID);\r\n        if (targetVariable) {\r\n            this.playableSetVariableLogger.debug('Value Before Set = ' + targetVariable.value);\r\n            targetVariable.value = value;\r\n            this.playableSetVariableLogger.debug('Value After Set = ' + targetVariable.value);\r\n        } else {\r\n            this.playableSetVariableLogger.debug('ERROR: Variable does not exsist.');\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/set-variable.playable.data-object.ts","import { WaitDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/event-system/functions/wait.data-object';\r\nimport { ElementDataObject } from '../../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { Log, Logger } from '../../../../../shared/system-shared/log';\r\nimport { InjectorService } from '../../../../../shared/system-shared/model/services/injector.service';\r\nimport { FunctionPlayableDataObjectInterface } from './function.playable.data-object.interface';\r\nimport { PageService } from '../../../../../shared/system-shared/model/services/page.service';\r\nimport { ComponentDataObject }\r\nfrom '../../../../../shared/system-shared/model/data-objects/components/component.data-object';\r\nimport { FunctionPlayableDataObjectCollection } from '../function.playable.data-object.collection';\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Playable version of Wait data object\r\n */\r\nexport class WaitPlayableDataObject extends WaitDataObject\r\n    implements FunctionPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableWaitLogger: Logger;\r\n\r\n    private pageService: PageService = InjectorService.injector.get(PageService);\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableWaitLogger = Log.getInstance().getLogger('WaitPlayableDataObject');\r\n        this.playableWaitLogger.debug('constructorPreprocessing(): Playable Wait');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * <p>Run Wait Function</p>\r\n\t * If Event does not exist or is never fired then this funciton won't return completetion.\r\n\t */\r\n    public runFunction(): void\t{\r\n        if (this.componentElementID) {\r\n            const component: ComponentDataObject  =  this.pageService.getComponent(+this.componentElementID);\r\n\r\n            if (component) {\r\n                // subscribe component onComplete event\r\n                component.onComplete.subscribe( () => {\r\n                    this.sendCompletion(component);\r\n                } );\r\n            } else {\r\n                 this.playableWaitLogger.debug('ERROR: component not found');\r\n            }\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * <p>Function called on the competion</p>\r\n\t */\r\n    private sendCompletion(component: ComponentDataObject): void {\r\n        this.playableWaitLogger.debug('Wait completed!!!!!!!!!!');\r\n\t\t// component.onComplete.unsubscribe();\r\n        (this._parent as FunctionPlayableDataObjectCollection).childProcessComplete();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/functions/wait.playable.data-object.ts","import { ElementDataObject } from '../../../../shared/system-shared/model/data-objects/element.data-object';\r\nimport { FunctionDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/functions/function.data-object';\r\nimport { GetMathDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/functions/get-math.data-object';\r\nimport { GetPropertyDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/functions/get-property.data-object';\r\nimport { GetRandomNumberDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/functions/get-random-number.data-object';\r\nimport { GetTypedConstantDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/functions/get-typed-constant.data-object';\r\nimport { GetVariableDataObject }\r\n    from '../../../../shared/system-shared/model/data-objects/event-system/functions/get-variable.data-object';\r\nimport { GetMathPlayableDataObject } from './functions/get-math.playable.data-object';\r\nimport { GetPropertyPlayableDataObject } from './functions/get-property.playable.data-object';\r\nimport { GetRandomNumberPlayableDataObject } from './functions/get-random-number.playable.data-object';\r\nimport { GetTypedConstantPlayableDataObject } from './functions/get-typed-constant.playable.data-object';\r\nimport { GetVariablePlayableDataObject } from './functions/get-variable.playable.data-object';\r\nimport { Log, Logger } from '../../../../shared/system-shared/log';\r\nimport { ReturnValueFunctionPlayableDataObjectInterface }\r\n    from './functions/return-value-function.playable.data-object.interface';\r\nimport { ValueDataObject } from '../../../../shared/system-shared/model/data-objects/event-system/value.data-object';\r\n\r\n\r\n/**\r\n * Playable version of Value data object\r\n */\r\nexport class ValuePlayableDataObject extends ValueDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private playableValueLogger: Logger;\r\n\r\n    /**\r\n     * Reference to Function object that should be used to resolve the Value of this object\r\n     */\r\n    protected functionDataObject: ReturnValueFunctionPlayableDataObjectInterface;\r\n\r\n    /**\r\n     * <p>Return value of the ValueDataObject (typically set by the contained FunctionDataObject).\r\n     * There is no way of knowing what data type this will be (String, Number, or Boolean depending\r\n     * on returnValue of FunctionDataObject).<p>\r\n     *\r\n     */\r\n    private _returnValue: any;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.playableValueLogger = Log.getInstance().getLogger('ValuePlayableDataObject');\r\n        this.playableValueLogger.debug('constructorPreprocessing(): Playable Value');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * <p>Return value of the ValueDataObject.</p>\r\n     *\r\n     * @default true\r\n     */\r\n    public get returnValue(): any\r\n    {\r\n        this.executeGetValue();\r\n        return this._returnValue;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case FunctionDataObject.FUNCTION_ELEMENT_NAME:\r\n                this.functionDataObject = this.createPlayableFunction(element);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected createPlayableFunction(functionElement: ElementDataObject):\r\n        ReturnValueFunctionPlayableDataObjectInterface {\r\n\r\n        // Get Function Name\r\n        const functionName: string = functionElement.getFirstChildElementByName('Name').value;\r\n\r\n        switch (functionName) {\r\n            case GetTypedConstantDataObject.NAME_ELEMENT_NAME:\r\n                return new GetTypedConstantPlayableDataObject(functionElement);\r\n            case GetPropertyDataObject.NAME_ELEMENT_NAME:\r\n                return new GetPropertyPlayableDataObject(functionElement);\r\n            case GetVariableDataObject.NAME_ELEMENT_NAME:\r\n                 return new GetVariablePlayableDataObject(functionElement);\r\n            case GetMathDataObject.NAME_ELEMENT_NAME:\r\n                return new GetMathPlayableDataObject(functionElement);\r\n            case GetRandomNumberDataObject.NAME_ELEMENT_NAME:\r\n                return new GetRandomNumberPlayableDataObject(functionElement);\r\n            default:\r\n                this.playableValueLogger.debug(\r\n                    'ERROR: parseElement: ' + functionName + ' Not A Vaild Return Value Function');\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>Runs runFunction() on the playable FunctionDataObject starting the process of getting the value.</p>\r\n     */\r\n    private executeGetValue(): void {\r\n        this.functionDataObject.runFunction();\r\n        // Get returnValue of FunctionDataObject\r\n        this._returnValue = this.functionDataObject.returnValue;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/model/data-objects/event-system/value.playable.data-object.ts","import { BrowserAnimationsModule }  from '@angular/platform-browser/animations';\nimport { CommonModule }             from '@angular/common';\nimport { FormsModule }              from '@angular/forms';\nimport { HttpModule }               from '@angular/http';\nimport { NgModule }                 from '@angular/core';\nimport { MdButtonModule,\n         MdIconModule }             from '@angular/material';\n\nimport { AudioEventHandlerDirective }           from './view/directive/audio-event-handler.directive';\nimport { CheckboxEventHandlerDirective }        from './view/directive/checkbox-event-handler.directive';\nimport { DropdownListEventHandlerDirective }    from './view/directive/dropdown-list-event-handler.directive';\nimport { EventHandlerDirective }                from './view/directive/event-handler.directive';\nimport { RadioButtonEventHandlerDirective }     from './view/directive/radio-button-event-handler.directive';\nimport { TextEventHandlerDirective }            from './view/directive/text-event-handler.directive';\nimport { VideoEventHandlerDirective }           from './view/directive/video-event-handler.directive';\n\nimport { AudioComponent }               from './view/audio.component';\nimport { ButtonComponent }              from './view/button.component';\nimport { CheckboxComponent }            from './view/checkbox.component';\nimport { ContentWindowComponent }       from './view/content-window.component';\nimport { DropdownListComponent }        from './view/dropdown-list.component';\nimport { HtmlComponent }                from './view/html.component';\nimport { ImageComponent }               from './view/image.component';\nimport { MenuComponent }                from './view/menu.component';\nimport { PageComponent }                from './view/page.component';\nimport { PlayerComponent }              from './view/player.component';\nimport { QuizFillInBlankComponent }     from './view/quiz-fill-in-blank.component';\nimport { QuizMatchComponent }           from './view/quiz-match.component';\nimport { QuizMultipleChoiceComponent }  from './view/quiz-multiple-choice.component';\nimport { QuizResultComponent }          from './view/quiz-result.component';\nimport { RadioButtonComponent }         from './view/radio-button.component';\nimport { TextDisplayComponent }         from './view/text-display.component';\nimport { TextInputComponent }           from './view/text-input.component';\nimport { TextInputAreaComponent }       from './view/text-input-area.component';\nimport { VideoComponent }               from './view/video.component';\n\n\n@NgModule({\n    imports: [ BrowserAnimationsModule, CommonModule, FormsModule, HttpModule, MdButtonModule, MdIconModule ],\n    declarations: [\n        AudioEventHandlerDirective,\n        CheckboxEventHandlerDirective,\n        DropdownListEventHandlerDirective,\n        EventHandlerDirective,\n        RadioButtonEventHandlerDirective,\n        TextEventHandlerDirective,\n        VideoEventHandlerDirective,\n        AudioComponent,\n        ButtonComponent,\n        CheckboxComponent,\n        ContentWindowComponent,\n        DropdownListComponent,\n        HtmlComponent,\n        ImageComponent,\n        MenuComponent,\n        PageComponent,\n        PlayerComponent,\n        QuizFillInBlankComponent,\n        QuizMatchComponent,\n        QuizMultipleChoiceComponent,\n        QuizResultComponent,\n        RadioButtonComponent,\n        TextDisplayComponent,\n        TextInputComponent,\n        TextInputAreaComponent,\n        VideoComponent,\n    ],\n    exports: [ PlayerComponent ]\n})\n\n/**\n * Player module - contains view and model objects associated with Player\n *\n * TODO: might want to break this down into smaller player related modules (initialization?, player chrome?, player\n * TODO: content area?) in which case this would maybe be the module that takes handles the page content? Yes :) - PV\n * TODO: and then after renaming this module replace that useless description up above :P\n */\nexport class PlayerModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/player.module.ts","import { ElementRef, Input, OnInit, Renderer2, RendererFactory2, ViewChild }    from '@angular/core';\n\nimport { ComponentDataObject }  from '../../shared/system-shared/model/data-objects/components/component.data-object';\n\nimport { InjectorService }  from '../../shared/system-shared/model/services/injector.service';\n\n\n/**\n * TODO: rewrite this\n *\n * Abstract base class for all DIF components, like button, image, audio...\n * All angular view components of DIF component should be extended from this base class\n */\nexport abstract class AbstractComponent implements OnInit {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Instance Variables / Properties\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * A reference to the Data object that provides the data for this component.\n     *\n     * @default undefined\n     */\n    @Input()\n    public dataSource: ComponentDataObject;\n\n    /**\n     * Reference to the root DOM element for this component.\n     *\n     * @internal:   Needs to be added to the template for all components inheriting from this base class.  Used for\n     *              Event System Functions like Animate that need to access display object properties that aren't\n     *              otherwise accessible through component data objects.\n     *\n     * @default undefined\n     */\n    @ViewChild('elementRef', {read: ElementRef})\n    elementRef: ElementRef;\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Accessors\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * An Object containing style properties common to all of the application's Angular view components.\n     *\n     * A style is an object containing key/value pairs where the keys are CSS properties and the values are CSS values.\n     * It is used by the ngStyle directive to update the inline style attribute of HTML elements.  The inline style\n     * controls the way that elements are displayed.\n     *\n     * Angular view components may define one or more styles that are applied to one or more of the elements laid out\n     * in their template.  This application's Angular view components use the properties provided by this object to help\n     * define the styles they need.\n     *\n     * @default An Object containing style properties common to all application view components.\n     */\n    protected get commonStyleProperties(): Object {\n        return {\n            'top.px'        : this.dataSource.y,\n            'left.px'       : this.dataSource.x,\n            'width.px'      : this.dataSource.width,\n            'height.px'     : this.dataSource.height,\n            'position'      : 'absolute',\n            'z-index'       : this.dataSource.z,\n            'visibility'    : this.dataSource.visible ? 'visible' : 'hidden',\n            'opacity'       : this.dataSource.alpha\n        };\n    }\n\n    /**\n     * Clip setting to allow viewing entire component (typically used as an initial setting)\n     * @returns {string}\n     */\n    protected get clip(): string {\n        const clip: string =\n            'rect(0px,' + this.dataSource.width + 'px,' + this.dataSource.height + 'px,' + '0px)';\n\n        return clip;\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Angular Lifecycle Hooks\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @inheritDoc\n     */\n    public ngOnInit(): void {\n        this.dataSource.viewComponent = this;\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Functions / Methods\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Add clip via css style to the component\n     * @param clip -> clip rectangle to add (uses initial setting as default if none passed)\n     */\n    public addClip(clip: string = this.clip): void {\n        const renderer: Renderer2 =\n            InjectorService.injector.get(RendererFactory2).createRenderer(this.elementRef.nativeElement);\n\n        renderer.setStyle(this.elementRef.nativeElement, 'clip', this.clip);\n    }\n\n    /**\n     * Remove clip from style\n     */\n    public removeClip(): void {\n        const renderer: Renderer2 =\n            InjectorService.injector.get(RendererFactory2).createRenderer(this.elementRef.nativeElement);\n\n        renderer.removeStyle(this.elementRef.nativeElement, 'clip');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/abstract.component.ts","module.exports = \"<div [ngStyle]=\\\"wrapperDivTagStyleObject\\\" (click)=\\\"onClickDiv()\\\">\\r\\n    <audio #elementRef playerAudioEventHandler [dataSource]=\\\"dataSource\\\"\\r\\n           [ngStyle]=\\\"audioTagStyleObject\\\"\\r\\n           [controls] = \\\"audio.displayControls\\\"\\r\\n           [autoplay] = \\\"audio.autoPlay\\\">\\r\\n\\r\\n        <source *ngIf=\\\"audio.urlMp3\\\" type=\\\"audio/mpeg\\\" src={{audio.urlMp3}}>\\r\\n        <source *ngIf=\\\"audio.urlOgg\\\" type=\\\"audio/ogg\\\" src={{audio.urlOgg}}>\\r\\n        <source *ngIf=\\\"audio.urlWav\\\" type=\\\"audio/wav\\\" src={{audio.urlWav}}>\\r\\n\\r\\n    </audio>\\r\\n\\r\\n    <!--\\r\\n    NOTE: eventually will probably build custom component, for now using md-icon-button (since we're using an\\r\\n            md-icon) which by default has a transparent background.\\r\\n    -->\\r\\n    <button *ngIf=\\\"audio.transcript\\\" md-icon-button (click)=\\\"onClickTranscriptButton($event)\\\"\\r\\n            style=\\\"position:absolute; bottom:0px; right:0px; background-color: white\\\">\\r\\n\\r\\n        <md-icon>subject</md-icon>\\r\\n    </button>\\r\\n\\r\\n    <div [ngStyle]=\\\"transcriptDivTagStyleObject\\\" [innerHtml]=\\\"audio.transcript\\\"></div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/audio.component.html\n// module id = ./src/app/player/view/audio.component.html\n// module chunks = main","import { Component }  from '@angular/core';\r\n\r\nimport { AbstractComponent }    from './abstract.component';\r\nimport { AudioDataObject }      from '../../shared/system-shared/model/data-objects/components/audio.data-object';\r\n\r\n\r\n@Component({\r\n    selector: 'player-audio',\r\n    templateUrl: 'audio.component.html',\r\n    styleUrls:  [ '../../app.component.css' ]\r\n})\r\n\r\n\r\n/**\r\n * The view model of the application's Angular audio component.\r\n */\r\nexport class AudioComponent extends AbstractComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * A convenience reference to the dataSource that provides the model data for this component cast as an actual\r\n     * AudioDataObject.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public audio: AudioDataObject;\r\n\r\n    public transcriptVisibility: string = 'hidden';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the div tag wrapper for\r\n     * this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's wrapper div for the audio tag.\r\n     */\r\n    public get wrapperDivTagStyleObject(): any {\r\n        const tagStyle: Object = this.commonStyleProperties;\r\n\r\n        if (this.audio.displayIcon) {\r\n            // Add audio icon to component as background image\r\n            tagStyle['background'] = 'url(\"../../Images/audio-icon.png\") no-repeat center top/contain';\r\n        }\r\n\r\n        return tagStyle;\r\n    }\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the audio tag used in\r\n     * this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's audio tag.\r\n     */\r\n    public get audioTagStyleObject(): any {\r\n        let audioTagWidth: number;\r\n\r\n        if (this.audio.transcript) {\r\n            audioTagWidth = this.audio.width - 43; // component width - transcript button width (38px) + 5px\r\n        } else {\r\n            audioTagWidth = this.audio.width;\r\n        }\r\n        return {\r\n            'position': 'absolute',\r\n            'bottom.px': 0,\r\n            'left.px': 0,\r\n            'width.px': audioTagWidth\r\n        };\r\n    }\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute for the div tag used for\r\n     * this component's transcript.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's transcript div.\r\n     */\r\n    public get transcriptDivTagStyleObject(): any {\r\n        // TODO: Will have to see how this looks in different browsers - may need to dynamically calculate or\r\n        //          parameterize dimensions of transcript button\r\n        return {\r\n            'top.px': 0,\r\n            'left.px': 0,\r\n            'width.px': this.dataSource.width,\r\n            'height.px': this.dataSource.height - 33,   // height of transcript button (33px)\r\n            'position': 'absolute',\r\n            'z-index': this.dataSource.z + 1,\r\n            'background-color': 'white',\r\n            'visibility': this.transcriptVisibility,\r\n            'overflow-y': 'scroll',\r\n            'white-space': 'pre-wrap'\r\n        };\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handlers\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Event handler for clicking on wrapper div - toggles play state of the Audio component\r\n     */\r\n    public onClickDiv(): void {\r\n        // Check if click to play option is enabled\r\n        // NOTE: Might be better if there is a way to conditionally exclude the event handler based on option.\r\n        if (this.audio.clickToPlay) {\r\n            // NOTE: Don't want to toggle audio when transcript is being shown\r\n            if (this.transcriptVisibility === 'hidden') {\r\n                // NOTE: Though we could access the audio element and run play on it directly, we do this through the\r\n                // data object instead so that its playing property stays in sync (not sure if there is a way to two-way\r\n                // bind that).  This way it reflects the correct value to other parts of the Player such as the Event\r\n                // System which interacts with the components primarily through the data object.\r\n                // Toggle playing of audio\r\n                if (this.audio.playing) {\r\n                    this.audio.playing = false;\r\n                } else {\r\n                    this.audio.playing = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for clicking on the transcript button - toggles visibility of transcript\r\n     * @param event\r\n     */\r\n    public onClickTranscriptButton(event: Event): void {\r\n        // Block click event from triggering events on elements beneath it\r\n        event.stopPropagation();\r\n\r\n        if (this.transcriptVisibility === 'hidden') {\r\n            this.transcriptVisibility = 'visible';\r\n        } else {\r\n            // Currently can't be triggered b/c transcript covers button and no way to close it yet\r\n            this.transcriptVisibility = 'hidden';\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Angular Lifecycle Hooks\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ngOnInit(): void {\r\n\r\n        super.ngOnInit();\r\n\r\n        this.audio = this.dataSource as AudioDataObject;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/audio.component.ts","module.exports = \"<!-- Standard button -->\\r\\n<!--\\r\\n    Fixed inline styles added to override default MD settings since user defines size of button and we don't impose\\r\\n    limitations on that at this point.  In future may want to consider creating separate css file for things like this.\\r\\n    Overridden styles include:\\r\\n        padding - to override the default 16px added to left and right which causes problems when button is narrow\\r\\n        min-width - to override the default 88px which again causes problems when button is narrow\\r\\n        line-height - to override the default 36px which causes problems when button is short\\r\\n\\r\\n    By default md-raised-button (md-button as well) use the background color associated with the theme (so tends to\\r\\n    blend in).  Since we want it to be more visible, set it to use our accent color instead.  Eventually we might use a\\r\\n    more stylized accent color for the player which we might not want to apply to components in the page content.  Might\\r\\n    want to use separate pallet for components in page content vs the player.\\r\\n -->\\r\\n<button md-raised-button *ngIf=\\\"buttonDataSource.useDefaultImages; else elseBlock\\\"\\r\\n        #elementRef playerEventHandler\\r\\n        [dataSource]=\\\"dataSource\\\"\\r\\n        [ngStyle]=\\\"buttonTagStyle\\\"\\r\\n        color=\\\"accent\\\"\\r\\n        style=\\\"padding: 0px!important; min-width: 0px!important; line-height: 0px!important\\\">\\r\\n    {{buttonDataSource.text}}\\r\\n</button>\\r\\n\\r\\n<!-- Button with user defined background images -->\\r\\n<ng-template #elseBlock>\\r\\n    <button #elementRef playerEventHandler\\r\\n            [dataSource]=\\\"dataSource\\\"\\r\\n            [ngStyle]=\\\"buttonTagStyle\\\"\\r\\n            (mouseover)=\\\"onMouseOver()\\\"\\r\\n            (mouseout)=\\\"onMouseOut()\\\"\\r\\n            (mousedown)=\\\"onMouseDown()\\\"\\r\\n            (mouseup)=\\\"onMouseUp()\\\">\\r\\n        {{buttonDataSource.text}}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/button.component.html\n// module id = ./src/app/player/view/button.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\nimport { AbstractComponent }    from './abstract.component';\nimport { ButtonDataObject }     from '../../shared/system-shared/model/data-objects/components/button.data-object';\n\n\n@Component({\n    selector: 'player-button',\n    templateUrl: 'button.component.html',\n    styleUrls:  [ '../../app.component.css' ]\n})\n\n\n/**\n * The view model of the application's Angular button component.\n */\nexport class ButtonComponent extends AbstractComponent {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Instance Variables / Properties\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * A convenience reference to the dataSource that provides the model data for this component cast as an actual\n     * ButtonDataObject.\n     *\n     * @default undefined\n     */\n    private buttonDataSource: ButtonDataObject;\n\n    /**\n     * The URL for the image this button is currently displaying.  This will change depending on state thus allowing\n     * this component to support being an image button and/or a text button.\n     *\n     * @default undefined\n     */\n    private currentImageSource: string;\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Accessors\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * The color CSS property.  Color is used to implement the font color property for this component.\n     *\n     * In our model data, font color is stored as a hexadecimal value with a \"0x\" prefix.  We need to replace the prefix\n     * with \"#\" so we can use it as a CSS value.\n     *\n     * @default #000000 (black)\n     */\n    public get color(): string {\n\n        return this.buttonDataSource.fontColor.replace(/0x/i, '#');\n    }\n\n    //////////////////////////////////////////////////////////\n\n    /**\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the button tag used in\n     * this component's template.\n     *\n     * @default A style Object containing the CSS properties for this component's button tag.\n     */\n    public get buttonTagStyle(): Object {\n        const tagStyle: Object = this.commonStyleProperties;\n\n        tagStyle['font-family']     = this.buttonDataSource.font;\n        tagStyle['font-size.px']    = this.buttonDataSource.fontSize;\n        tagStyle['color']           = this.color;\n        tagStyle['font-style']      = (this.buttonDataSource.italic) ? 'italic' : 'normal';\n        tagStyle['text-decoration'] = (this.buttonDataSource.underline) ? 'underline' : 'none';\n        tagStyle['font-weight']     = (this.buttonDataSource.bold) ? 'bold' : 'normal';\n\n        // Set additional styles when using background images\n        if (!this.buttonDataSource.useDefaultImages) {\n            // Vit: Only this syntax works for all three button states\n            tagStyle['background'] = 'url(' + this.currentImageSource + ') 0% 0% / ' +\n                this.buttonDataSource.width + 'px ' +\n                this.buttonDataSource.height + 'px';\n            tagStyle['border'] = 'none';\n        }\n\n        return tagStyle;\n    }\n\n    /**\n     * Override base class clip setting to allow viewing entire component (typically used as an initial setting)\n     * @returns {string}\n     */\n    protected get clip(): string {\n        // Angular MD Raised Button requires a larger clip rectangle to accommodate drop shadows\n        // Dimensions added to clip rectangle at this point is a little arbitrary based on observation.  Might need to\n        // change if not sufficient for specific scenarios.  Tested - not tall enough (bottom not big enough) when\n        // in down state (which makes drop shadow larger).  Not fixing at this point until sure that we're going to use\n        // the md-raised-button over md-button (probably selected more b/c of current colors)\n        const clip: string = 'rect(-5px,' + (this.buttonDataSource.width + 5).toString() + 'px,' +\n            (this.buttonDataSource.height + 5).toString() + 'px,' + '-5px)';\n\n        return clip;\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Event Handling\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Handler for the mouse over event to keep the image we are currently displaying in sync with the current mouse\n     * state.\n     */\n    onMouseOver(): void {\n        this.currentImageSource = this.buttonDataSource.urlOverStateImage;\n    }\n\n    /**\n     * Handler for the mouse out event to keep the image we are currently displaying in sync with the current mouse\n     * state.\n     */\n    onMouseOut(): void {\n        console.log('onMouseOut');\n        this.currentImageSource = this.buttonDataSource.urlUpStateImage;\n    }\n\n    /**\n     * Handler for the mouse down event to keep the image we are currently displaying in sync with the current mouse\n     * state.\n     */\n    onMouseDown (): void {\n        this.currentImageSource = this.buttonDataSource.urlDownStateImage;\n    }\n\n    /**\n     * Handler for the mouse up event to keep the image we are currently displaying in sync with the current mouse\n     * state.\n     */\n    onMouseUp(): void {\n        this.currentImageSource = this.buttonDataSource.urlOverStateImage;\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Angular Lifecycle Hooks\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @inheritDoc\n     */\n    public ngOnInit(): void {\n\n        super.ngOnInit();\n\n        this.buttonDataSource = this.dataSource as ButtonDataObject;\n        this.currentImageSource = this.buttonDataSource.urlUpStateImage;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/button.component.ts","module.exports = \"<input #elementRef playerCheckboxEventHandler [dataSource]=\\\"dataSource\\\" type=\\\"checkbox\\\" [ngStyle]=\\\"inputTagStyle\\\"\\r\\n       [(ngModel)]= \\\"checkbox.checked\\\" >\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/checkbox.component.html\n// module id = ./src/app/player/view/checkbox.component.html\n// module chunks = main","import { Component }    from '@angular/core';\r\n\r\nimport { AbstractComponent }    from './abstract.component';\r\nimport { CheckboxDataObject }   from '../../shared/system-shared/model/data-objects/components/checkbox.data-object';\r\n\r\n\r\n@Component({\r\n    selector: 'player-checkbox',\r\n    templateUrl: 'checkbox.component.html',\r\n    styleUrls:  [ '../../app.component.css' ]\r\n})\r\n\r\n\r\n/**\r\n * The view model of the application's Angular checkbox component.\r\n */\r\nexport class CheckboxComponent extends AbstractComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * A convenience reference to the dataSource that provides the model data for this component cast as an actual\r\n     * CheckboxDataObject.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private checkbox: CheckboxDataObject;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the input tag used in\r\n     * this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's input tag.\r\n     */\r\n    public get inputTagStyle(): Object {\r\n\r\n        return this.commonStyleProperties;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Angular Lifecycle Hooks\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public ngOnInit(): void {\r\n\r\n        super.ngOnInit();\r\n\r\n        this.checkbox = this.dataSource as CheckboxDataObject;\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/checkbox.component.ts","module.exports = \"<div [ngStyle]=\\\"divTagStyleObject\\\">\\r\\n    <ng-template ngFor let-component [ngForOf]=\\\"contentWindow.components\\\">\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'AudioDataObject'\\\">\\r\\n            <player-audio [dataSource]=\\\"component\\\"></player-audio>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'ButtonDataObject'\\\">\\r\\n            <player-button [dataSource]=\\\"component\\\"></player-button>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'CheckboxDataObject'\\\">\\r\\n            <player-checkbox [dataSource]=\\\"component\\\"></player-checkbox>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'DropdownListDataObject'\\\">\\r\\n            <player-dropdown-list [dataSource]=\\\"component\\\"></player-dropdown-list>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'HtmlDataObject'\\\">\\r\\n            <player-html [dataSource]=\\\"component\\\"></player-html>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'ImageDataObject'\\\">\\r\\n            <player-image [dataSource]=\\\"component\\\"></player-image>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'VideoDataObject'\\\">\\r\\n            <player-video [dataSource]=\\\"component\\\"></player-video>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'QuizFillInBlankDataObject'\\\">\\r\\n            <player-quiz-fill-in-blank [quizFillInBlank]=\\\"component\\\"></player-quiz-fill-in-blank>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'QuizMatchDataObject'\\\">\\r\\n            <player-quiz-match [quizMatch]=\\\"component\\\"></player-quiz-match>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'QuizMultipleChoiceDataObject'\\\">\\r\\n            <player-quiz-multiple-choice [quizMultipleChoice]=\\\"component\\\"></player-quiz-multiple-choice>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'QuizResultDataObject'\\\">\\r\\n            <player-quiz-result [quizResult]=\\\"component\\\"></player-quiz-result>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'RadioButtonDataObject'\\\">\\r\\n            <player-radio-button [dataSource]=\\\"component\\\"></player-radio-button>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'TextDisplayDataObject'\\\">\\r\\n            <player-text-display [dataSource]=\\\"component\\\"></player-text-display>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'TextInputDataObject'\\\">\\r\\n            <player-text-input [dataSource]=\\\"component\\\"></player-text-input>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'TextInputAreaDataObject'\\\">\\r\\n            <player-text-input-area [dataSource]=\\\"component\\\"></player-text-input-area>\\r\\n        </ng-template>\\r\\n\\r\\n    </ng-template>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/content-window.component.html\n// module id = ./src/app/player/view/content-window.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\n\nimport { ContentWindow } from '../../shared/system-shared/model/content-window';\n\n@Component({\n    selector: 'player-content-window',\n    templateUrl: 'content-window.component.html',\n    styleUrls:  [ '../../app.component.css' ]\n})\n\n\n/*\n *\n * ComponentDataObject for DIF content window component\n *\n * */\nexport class ContentWindowComponent {\n    @Input()\n    contentWindow: ContentWindow;\n\n    newTargetX: number; // This is just to test ngOnChanges lifecycle event\n\n    /**\n     * Event handler for button click\n     *\n     * @param id\n     */\n    onButtonClick(id: number): void {\n        this.newTargetX = this.contentWindow.findChildComponent(id).x;\n    }\n\n    /**\n     *  The Object used in the ngStyle decorator that defines the style settings for the container div tag in this component's template.\n     *\n     * @returns     any\n     */\n    public get divTagStyleObject(): any {\n        // console.log(this.contentWindow.serializeToString());\n        let background: string = 'transparent';\n        let border: string = 'transparent';\n        if (this.contentWindow.backgroundAlpa === '1') {\n            background = this.contentWindow.backgroundColor;\n        }\n        if (this.contentWindow.borderAlpha === '1') {\n            border = this.contentWindow.borderColor;\n        }\n\n\n        return {\n            // 'opacity': 1 - parseInt(this.contentWindow.backgroundAlpa,10),\n            'width.px': this.contentWindow.width,\n            'height.px': this.contentWindow.height,\n            'position': 'absolute',\n            'top.px': this.contentWindow.y,\n            'left.px': this.contentWindow.x,\n            'overflow': 'hidden',\n            'z-index': this.contentWindow.z,\n            'border-style': 'solid',\n            'border-width': '1px',\n            'border-color': border, // this.contentWindow.borderColor,\n            'background-color': background, // this.contentWindow.backgroundColor,\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/content-window.component.ts","import { Directive } from '@angular/core';\r\nimport { Log, Logger } from '../../../shared/system-shared/log';\r\nimport { EventDataObject } from '../../../shared/system-shared/model/data-objects/event-system/event.data-object';\r\nimport { EventHandlerDirective } from './event-handler.directive';\r\nimport { AudioDataObject } from '../../../shared/system-shared/model/data-objects/components/audio.data-object';\r\n\r\n\r\n@Directive({\r\n  selector: '[playerAudioEventHandler]'\r\n})\r\nexport class AudioEventHandlerDirective extends EventHandlerDirective {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Lifecycle Hooks\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        // Add audio play/pause/stop related event emitter subscription\r\n        this.addSubscription();\r\n        // Always add on complete listener\r\n        this.createEventListener('ended', EventDataObject.ON_COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * Parse event triggers\r\n     *\r\n     * overrides base version\r\n     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...\r\n     */\r\n    protected parseEventTriggers(eventType: string): void {\r\n        super.parseEventTriggers(eventType);\r\n        switch (eventType) {\r\n            case EventDataObject.ON_PLAY:\r\n                this.createEventListener('play', eventType);\r\n                break;\r\n            case EventDataObject.ON_PAUSE:\r\n                this.createEventListener('pause', eventType);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n   /**\r\n     * Process event\r\n     * overrides base version.\r\n     *\r\n     * @param   event       TODO: Add param description.\r\n     * @param   eventType   An application defined event type (e.g. OnClick, OnDoubleClick, etc.).\r\n     */\r\n    protected processEvent(event: Event, eventType: string): void {\r\n        super.processEvent(event, eventType);\r\n\r\n        // Emit Audio's onComplete event\r\n        const audioDataObject: AudioDataObject = this.dataSource as AudioDataObject;\r\n        audioDataObject.onComplete.emit();\r\n    }\r\n\r\n\r\n    /**\r\n    * Add audio play/pause/stop related event emitter subscription\r\n    *\r\n    */\r\n    protected addSubscription(): void {\r\n        const audioDataObject: AudioDataObject = this.dataSource as AudioDataObject;\r\n        const audioHtmlObject: HTMLAudioElement = this.elementRef.nativeElement as HTMLAudioElement;\r\n        audioDataObject.onPlay.subscribe( () => {\r\n            audioHtmlObject.play();\r\n        } );\r\n        audioDataObject.onPause.subscribe( () => {\r\n            audioHtmlObject.pause();\r\n        } );\r\n        audioDataObject.onStop.subscribe( () => {\r\n            audioHtmlObject.pause();\r\n            audioHtmlObject.currentTime = 0;\r\n        } );\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/directive/audio-event-handler.directive.ts","import { CheckboxDataObject } from '../../../shared/system-shared/model/data-objects/components/checkbox.data-object';\r\nimport { Directive } from '@angular/core';\r\nimport { EventDataObject } from '../../../shared/system-shared/model/data-objects/event-system/event.data-object';\r\nimport { EventHandlerDirective } from './event-handler.directive';\r\nimport { Log, Logger } from '../../../shared/system-shared/log';\r\n\r\n\r\n@Directive({\r\n  selector: '[playerCheckboxEventHandler]'\r\n})\r\n\r\nexport class CheckboxEventHandlerDirective extends EventHandlerDirective {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parse event triggers\r\n     *\r\n     * overrides base version\r\n     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...\r\n     */\r\n    protected parseEventTriggers(eventType: string): void {\r\n        super.parseEventTriggers(eventType);\r\n        switch (eventType) {\r\n            case EventDataObject.ON_CHECKED:\r\n                this.createEventListener('change', eventType);\r\n                break;\r\n            case EventDataObject.ON_UNCHECKED:\r\n                this.createEventListener('change', eventType);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Process event\r\n     *\r\n     * overrides base version\r\n     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...\r\n     */\r\n    protected processEvent(event: Event , eventType: string): void {\r\n\r\n        if (eventType === EventDataObject.ON_CHECKED || eventType === EventDataObject.ON_UNCHECKED) {\r\n            this.updateCheckedInDataSource(event);\r\n        } else {\r\n            super.processEvent(event, eventType);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Adds call to updateCheckedInDataSource.\r\n     *\r\n     * @inheritDoc\r\n     */\r\n    protected processAction(event: Event): void {\r\n        console.log('!!! CheckboxDirective - processAction triggered !!!');\r\n        // NOTE: if Action and Event could run this method twice\r\n        // TODO: check to make sure this doesn't cause any bugs, otherwise will have to deal with it\r\n        this.updateCheckedInDataSource(event);\r\n        super.processAction(event);\r\n    }\r\n\r\n    /**\r\n     * Updates checked property in CheckboxDataObject to match state of component / display object\r\n     * TODO: Jay says the intention of this is to allow Event System to trigger the change event on the component to\r\n     *          trigger a further Event System ON_CHECKED or ON_UNCHECKED, and any Action System validation processes.\r\n     *          Not sure at this point whether this behavior is desirable (Flash Player doesn't do this).\r\n     */\r\n    private updateCheckedInDataSource(event: Event): void {\r\n        (this.dataSource as CheckboxDataObject).checked = (event.currentTarget as HTMLInputElement).checked;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/directive/checkbox-event-handler.directive.ts","import { Directive } from '@angular/core';\r\nimport { EventDataObject } from '../../../shared/system-shared/model/data-objects/event-system/event.data-object';\r\nimport { EventHandlerDirective } from './event-handler.directive';\r\n\r\n\r\n@Directive({\r\n  selector: '[playerDropdownListEventHandler]'\r\n})\r\n\r\nexport class DropdownListEventHandlerDirective extends EventHandlerDirective {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parse event triggers\r\n     *\r\n     * overrides base version\r\n     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...\r\n     */\r\n    protected parseEventTriggers(eventType: string): void {\r\n        super.parseEventTriggers(eventType);\r\n        switch (eventType) {\r\n            case EventDataObject.ON_SELECTION_CHANGE:\r\n                this.createEventListener('change', eventType);\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/directive/dropdown-list-event-handler.directive.ts","import { Directive, Input, OnInit, ElementRef, Renderer2, HostListener }  from '@angular/core';\r\n\r\nimport { ComponentDataObject }\r\n    from '../../../shared/system-shared/model/data-objects/components/component.data-object';\r\nimport { EventDataObject }\r\n    from '../../../shared/system-shared/model/data-objects/event-system/event.data-object';\r\nimport { EventPlayableDataObjectCollection }\r\n    from '../../model/data-objects/event-system/event.playable.data-object.collection';\r\nimport { FrameworkActionPlayableDataObject }\r\n    from '../../model/data-objects/action-system/framework-action.playable.data-object';\r\nimport { Log, Logger }\r\n    from '../../../shared/system-shared/log';\r\n\r\n\r\n@Directive({\r\n  selector: '[playerEventHandler]'\r\n})\r\n\r\nexport class EventHandlerDirective implements OnInit {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * A reference to the Data object of the referenced component.\r\n     */\r\n    @Input()\r\n    public dataSource: ComponentDataObject;\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default A logger object named after the containing class.\r\n     */\r\n    private logger: Logger = Log.getInstance().getLogger('EventHandlerDirective');\r\n\r\n    /**\r\n     * Flag to handle single-double click custom process\r\n     */\r\n    protected IsCustomClickHandling: boolean;\r\n\r\n\r\n    /**\r\n     * Used by click events(single,double...), calculate number of mouse clicks during the inteval\r\n     */\r\n    protected clickCount: number = 0;\r\n\r\n    /**\r\n     * Define mouse click the elapsed time between two single click\r\n     * default to half second\r\n     */\r\n    protected clickInterval: number = 0.5;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    constructor(protected elementRef: ElementRef, protected renderer: Renderer2) { }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Angular Lifecycle Hooks\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ngOnInit(): void {\r\n        this.IsCustomClickHandling = false;\r\n        // Setup event listeners for Event System\r\n        if (this.dataSource.eventCollection) {\r\n            for (const event of this.dataSource.eventCollection.eventCollection) {\r\n                // Skip if no event handler defined\r\n                if (event.eventHandlerCollection.length > 0) {\r\n                    this.parseEventTriggers(event.trigger);\r\n                }\r\n            }\r\n        }\r\n        // both single and double click will be handled by the click event\r\n        if (this.IsCustomClickHandling) {\r\n            this.createEventListener('click', EventDataObject.ON_CLICK);\r\n        }\r\n        // Check if component has FrameworkAction with a FrameworkEvent (apparently components can (maybe always) have\r\n        // empty FrameworkActions).  Then setup event listeners for Action System.\r\n        // NOTE: Might be more efficient to consolidate Event and Action System events into one set of listeners if we\r\n        //          have time to design the process in the future.\r\n        if (this.dataSource.frameworkAction.frameworkEvent) {\r\n            console.log('!!!!!!!!!! EventHandlerDirective.ngOnInit(): component ' + this.dataSource.name +\r\n                ' has FrameworkAction with a FrameworkEvent');\r\n            this.parseFrameworkEvent(this.dataSource.frameworkAction.frameworkEvent.eventName);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parse event triggers\r\n     * TODO: Add method description.\r\n     *\r\n     * @param   eventType   An application defined event type (e.g. OnClick, OnDoubleClick, etc.).\r\n     */\r\n    protected parseEventTriggers(eventType: string): void {\r\n\r\n        switch (eventType) {\r\n            case EventDataObject.ON_CLICK:\r\n                // Note: Do not remove this commentted line, it will be used for future custom click handling\r\n                // this.IsCustomClickHandling = true;\r\n                this.createEventListener('click', eventType);\r\n                break;\r\n            case EventDataObject.ON_DOUBLE_CLICK:\r\n                // Note: Do not remove this commentted line, it will be used for future custom click handling\r\n                // this.IsCustomClickHandling = true;\r\n                this.createEventListener('dblclick', eventType);\r\n                break;\r\n            case EventDataObject.ON_MOUSE_OVER:\r\n                this.createEventListener('mouseover', eventType);\r\n                break;\r\n            case EventDataObject.ON_MOUSE_OUT:\r\n                this.createEventListener('mouseleave', eventType);\r\n                break;\r\n            case EventDataObject.ON_FOCUS:\r\n                this.createEventListener('focus', eventType);\r\n                break;\r\n            case EventDataObject.ON_FOCUS_LOST:\r\n                this.createEventListener('blur', eventType);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse FrameworkEvent eventName to setup event listeners for Action System\r\n     *\r\n     * @param   eventName   An Action System defined event name / type (e.g. functionButtonPressed, etc.).\r\n     */\r\n    protected parseFrameworkEvent(eventName: string): void {\r\n\r\n        switch (eventName) {\r\n            case 'functionButtonPressed':\r\n                this.createEventListenerForActionSystem('click');\r\n                break;\r\n            default:\r\n                this.createEventListenerForActionSystem('change');\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create event listener\r\n     * TODO: Add method description.\r\n     *\r\n     * @param   eventName   An angular event name (e.g. click, dblclick, etc.).\r\n     * @param   eventType   An application defined event type (e.g. OnClick, OnDoubleClick, etc.).\r\n     */\r\n    protected createEventListener(eventName: string, eventType: string): void {\r\n\r\n        this.logger.debug('createEventListener(): ' + this.dataSource.name + ', event name = ' + eventName);\r\n\r\n        this.renderer.listen(this.elementRef.nativeElement, eventName, (e) => {\r\n            this.processEvent(e, eventType);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create event listener for Action System\r\n     *\r\n     * @param eventName\r\n     */\r\n    protected createEventListenerForActionSystem(eventName: string): void {\r\n        this.logger.debug('createEventListenerForActionSystem: ' + this.dataSource.name + ', event name = ' +\r\n            eventName);\r\n        this.renderer.listen(this.elementRef.nativeElement, eventName, (e: Event) => {\r\n            this.processAction(e);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Process event\r\n     * TODO: Add method description.\r\n     *\r\n     * @param   event       TODO: Add param description.\r\n     * @param   eventType   An application defined event type (e.g. OnClick, OnDoubleClick, etc.).\r\n     */\r\n    protected processEvent(event: Event, eventType: string): void {\r\n\r\n        this.logger.debug('processEvent(): ' + this.dataSource.name + ', event type = ' + eventType);\r\n        // Note: Do not remove the commentted lines, it will be used for future custom click handling\r\n        // if (eventType === EventDataObject.ON_CLICK) {\r\n            // this.processCustomClickEvent();\r\n        // } else {\r\n            (this.dataSource.eventCollection as EventPlayableDataObjectCollection).processEvent(eventType);\r\n        // }\r\n\r\n    }\r\n\r\n    // Note: Do not remove the method, it will be used for future custom click handling\r\n    protected processCustomClickEvent(): void {\r\n        setTimeout(() => this.processSingleOrDoubleClickEvent(), this.clickInterval * 1000);\r\n        this.clickCount++;\r\n    }\r\n\r\n    /**\r\n\t * Callback function when set time out ended.\r\n     * Check click count, if one click process single click, more than one click process double click event\r\n     * Reset click count\r\n\t */\r\n    // Note: Do not remove the method, it will be used for future custom click handling\r\n    private processSingleOrDoubleClickEvent(): void {\r\n        if (this.clickCount === 1) {\r\n            (this.dataSource.eventCollection as EventPlayableDataObjectCollection)\r\n            .processEvent(EventDataObject.ON_CLICK);\r\n        } else {\r\n            (this.dataSource.eventCollection as EventPlayableDataObjectCollection)\r\n            .processEvent(EventDataObject.ON_DOUBLE_CLICK);\r\n        }\r\n\r\n        this.clickCount = 0;\r\n\r\n    }\r\n\r\n    /**\r\n     * Start Action System processing\r\n     * @param event\r\n     */\r\n    protected processAction(event: Event): void {\r\n        this.logger.debug('processAction(): ' + this.dataSource.name);\r\n\r\n        (this.dataSource.frameworkAction as FrameworkActionPlayableDataObject).processFrameworkAction();\r\n    }\r\n\r\n    @HostListener('mouseenter') mouseover() {\r\n        this.dataSource.mouseOver = true;\r\n    };\r\n\r\n    @HostListener('mouseleave') mouseleave() {\r\n        this.dataSource.mouseOver = false;\r\n    }\r\n\r\n    @HostListener('focus') focus() {\r\n        this.dataSource.focus = true;\r\n    };\r\n\r\n    @HostListener('blur') focusLost() {\r\n        this.dataSource.focus = false;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/directive/event-handler.directive.ts","import { Directive } from '@angular/core';\r\n\r\nimport { EventDataObject } from '../../../shared/system-shared/model/data-objects/event-system/event.data-object';\r\nimport { EventHandlerDirective } from './event-handler.directive';\r\nimport { Log, Logger } from '../../../shared/system-shared/log';\r\nimport { RadioButtonDataObject }\r\n    from '../../../shared/system-shared/model/data-objects/components/radio-button.data-object';\r\n\r\n\r\n@Directive({\r\n  selector: '[playerRadioButtonEventHandler]'\r\n})\r\n\r\nexport class RadioButtonEventHandlerDirective extends EventHandlerDirective {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        // Always add on change listener\r\n        this.createEventListener('change', EventDataObject.ON_CHANGE);\r\n    }\r\n\r\n    /**\r\n     * Process event\r\n     *\r\n     * overrides base version\r\n     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...\r\n     */\r\n    protected processEvent(event: Event, eventType: string): void {\r\n        super.processEvent(event, eventType);\r\n        if (eventType === EventDataObject.ON_CHANGE) {\r\n            this.updateCheckedInDataSource(event);\r\n        } else {\r\n            super.processEvent(event, eventType);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Overrides base.  Adds call to updateCheckedInDataSource.\r\n     *\r\n     * @inheritDoc\r\n     */\r\n    protected processAction(event: Event): void {\r\n        // NOTE: if Action and Event could run this method twice\r\n        // TODO: check to make sure this doesn't cause any bugs, otherwise will have to deal with it\r\n        this.updateCheckedInDataSource(event);\r\n        super.processAction(event);\r\n    }\r\n\r\n    /**\r\n     * Updates checked property in RadioButtonDataObject to match state of component / display object\r\n     * TODO: Jay says the intention of this is to allow Event System to trigger the change event on the component to\r\n     *          trigger a further Event System ON_SELECTED and any Action System validation processes.  Not sure at this\r\n     *          point whether this behavior is desirable (Flash Player does have this behavior for the radio button, but\r\n     *          not for other components.\r\n     */\r\n    private updateCheckedInDataSource(event: Event): void {\r\n        (this.dataSource as RadioButtonDataObject).selected = (event.currentTarget as HTMLInputElement).checked;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/directive/radio-button-event-handler.directive.ts","import { Directive } from '@angular/core';\r\nimport { EventDataObject } from '../../../shared/system-shared/model/data-objects/event-system/event.data-object';\r\nimport { EventHandlerDirective } from './event-handler.directive';\r\n\r\n\r\n@Directive({\r\n  selector: '[playerTextEventHandler]'\r\n})\r\n\r\nexport class TextEventHandlerDirective extends EventHandlerDirective {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parse event triggers\r\n     *\r\n     * overrides base version\r\n     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...\r\n     */\r\n    protected parseEventTriggers(eventType: string): void {\r\n        super.parseEventTriggers(eventType);\r\n        switch (eventType) {\r\n            case EventDataObject.ON_CHANGE:\r\n                this.createEventListener('input', eventType);\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/directive/text-event-handler.directive.ts","import { Directive }    from '@angular/core';\r\n\r\nimport { EventHandlerDirective }    from './event-handler.directive';\r\n\r\nimport { EventDataObject }  from '../../../shared/system-shared/model/data-objects/event-system/event.data-object';\r\nimport { VideoDataObject }  from '../../../shared/system-shared/model/data-objects/components/video.data-object';\r\n\r\n\r\n@Directive({\r\n  selector: '[playerVideoEventHandler]'\r\n})\r\n\r\n\r\n/**\r\n * TODO: Add description.\r\n */\r\nexport class VideoEventHandlerDirective extends EventHandlerDirective {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Angular Lifecycle Hooks\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ngOnInit(): void {\r\n\r\n        super.ngOnInit();\r\n\r\n        // Add video play/pause/stop related event emitter subscription\r\n        this.addSubscription();\r\n\r\n        // Always add on complete listener\r\n        // TODO: This event listener is never removed (released), it could cause memory/performance issue ...\r\n        this.createEventListener('ended', EventDataObject.ON_COMPLETE);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected parseEventTriggers(eventType: string): void {\r\n\r\n        super.parseEventTriggers(eventType);\r\n\r\n        switch (eventType) {\r\n            case EventDataObject.ON_PLAY:\r\n                this.createEventListener('play', eventType);\r\n                break;\r\n            case EventDataObject.ON_PAUSE:\r\n                this.createEventListener('pause', eventType);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected processEvent(event: Event, eventType: string): void {\r\n\r\n        super.processEvent(event, eventType);\r\n\r\n        // Emit Video's onComplete event\r\n        const movieDataObject: VideoDataObject = this.dataSource as VideoDataObject;\r\n        movieDataObject.onComplete.emit();\r\n    }\r\n\r\n    /**\r\n     * Add video play/pause/stop related event emitter subscription.\r\n     */\r\n    protected addSubscription(): void {\r\n\r\n        const videoDataObject: VideoDataObject = this.dataSource as VideoDataObject;\r\n        const htmlVideoElement: HTMLVideoElement = this.elementRef.nativeElement as HTMLVideoElement;\r\n\r\n        videoDataObject.onPlay.subscribe( () => {\r\n            htmlVideoElement.play();\r\n        } );\r\n        videoDataObject.onPause.subscribe( () => {\r\n            htmlVideoElement.pause();\r\n        } );\r\n        videoDataObject.onStop.subscribe( () => {\r\n            htmlVideoElement.pause();\r\n            htmlVideoElement.currentTime = 0;\r\n        } );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/directive/video-event-handler.directive.ts","module.exports = \"<select #elementRef playerDropdownListEventHandler [dataSource]=\\\"dataSource\\\"\\r\\n        [(ngModel)]=\\\"dropdownList.selection\\\"\\r\\n        [ngStyle]=\\\"selectTagStyle\\\" >\\r\\n\\r\\n    <!-- Option for default option / prompt text -->\\r\\n    <option [ngValue]=\\\"dropdownList.defaultOption.text\\\" selected disabled hidden [ngStyle]=\\\"optionTagStyle\\\">\\r\\n        {{dropdownList.defaultOption.text}}\\r\\n    </option>\\r\\n\\r\\n    <!-- Loop to build the rest of the option elements -->\\r\\n    <ng-template ngFor let-option [ngForOf]=\\\"dropdownList.optionList\\\">\\r\\n        <option [ngValue]=\\\"option.text\\\" [ngStyle]=\\\"optionTagStyle\\\">{{option.text}}</option>\\r\\n    </ng-template>\\r\\n\\r\\n</select>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/dropdown-list.component.html\n// module id = ./src/app/player/view/dropdown-list.component.html\n// module chunks = main","import { Component }    from '@angular/core';\r\n\r\nimport { AbstractComponent }\r\n    from './abstract.component';\r\nimport { DropdownListDataObject }\r\n    from '../../shared/system-shared/model/data-objects/components/dropdown-list.data-object';\r\n\r\n\r\n@Component({\r\n    selector: 'player-dropdown-list',\r\n    templateUrl: 'dropdown-list.component.html',\r\n    styleUrls:  [ '../../app.component.css' ]\r\n})\r\n\r\n\r\n/**\r\n * The view model of the application's Angular drop-down list component.\r\n *\r\n * TODO: If autoSize is true we need to resize based on the largest option!!!\r\n * TODO: Figure how to implement this and implement it!\r\n * TODO: Figure out what we want to do about text-align (see comment below).\r\n */\r\nexport class DropdownListComponent extends AbstractComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * A convenience reference to the dataSource that provides the model data for this component cast as an actual\r\n     * DropdownListDataObject.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private dropdownList: DropdownListDataObject;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The color CSS property.  Color is used to implement the font color property for this component.\r\n     *\r\n     * In our model data, font color is stored as a hexadecimal value with a \"0x\" prefix.  We need to replace the prefix\r\n     * with \"#\" so we can use it as a CSS value.\r\n     *\r\n     * @default #000000 (black)\r\n     */\r\n    public get color(): string {\r\n\r\n        return this.dropdownList.fontColor.replace(/0x/i, '#');\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The font-weight CSS property.  Font-weight is used to implement the bold text property for this component.\r\n     *\r\n     * In our model data we store \"bold\" as a boolean value.  In order to use it as a CSS value we need to convert the\r\n     * value (true/false) to a string (\"bold\"/\"normal\").\r\n     *\r\n     * @default 'normal'\r\n     */\r\n    public get fontWeight(): string {\r\n\r\n        return (this.dropdownList.bold) ? 'bold' : 'normal';\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The font-style CSS property.  Font-style is used to implement the italic text property for this component.\r\n     *\r\n     * In our model data we store \"italic\" as a boolean value.  In order to use it as a CSS value we need to convert the\r\n     * value (true/false) to a string (\"italic\"/\"normal\").\r\n     *\r\n     * @default 'normal'\r\n     */\r\n    public get fontStyle(): string {\r\n\r\n        return (this.dropdownList.italic) ? 'italic' : 'normal';\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The text-decoration CSS property.  Text-decoration is used to implement the underline text property for this\r\n     * component.\r\n     *\r\n     * In our model data we store \"underline\" as a boolean value.  In order to use it as a CSS value we need to convert\r\n     * the value (true/false) to a string (\"underline\"/\"none\").\r\n     *\r\n     * @default 'none'\r\n     */\r\n    public get textDecoration(): string {\r\n\r\n        return (this.dropdownList.underline) ? 'underline' : 'none';\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The text-align CSS property.  Text-align is used to implement the align text property for this component.\r\n     *\r\n     * In our model data, the align property is stored as a string with an \"Align\" postfix.  We need to remove the\r\n     * postfix so we can use it as a CSS value.\r\n     *\r\n     * TODO:\r\n     *          This doesn't seem to do anything to the select option component in Chrome.\r\n     *          Text-align-last works in some browsers as long as text-align is set to justify.\r\n     *          See: http://stackoverflow.com/questions/10813528/is-it-possible-to-center-text-in-select-box\r\n     *          Not implementing for now.\r\n     *\r\n     * @default 'left' TODO: Verify this.\r\n     */\r\n    public get textAlign(): string {\r\n\r\n        return this.dropdownList.align.slice(0, this.dropdownList.align.length - 5);\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the select tag used in\r\n     * this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's select tag.\r\n     */\r\n    public get selectTagStyle(): Object {\r\n\r\n        const tagStyle: Object = this.commonStyleProperties;\r\n\r\n        tagStyle['font-family']     = this.dropdownList.font;\r\n        tagStyle['font-size.px']    = this.dropdownList.fontSize;\r\n        tagStyle['color']           = this.color;\r\n        tagStyle['font-style']      = this.fontStyle;\r\n        tagStyle['text-decoration'] = this.textDecoration;\r\n        tagStyle['font-weight']     = this.fontWeight;\r\n\r\n        return tagStyle;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the option tag used in\r\n     * this component's template.\r\n     *\r\n     * NOTE:\r\n     *          Text-decoration doesn't seem to work on the options themselves.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's option tag.\r\n     */\r\n    public get optionTagStyle(): Object {\r\n\r\n        return {\r\n            'font-family'       : this.dropdownList.font,\r\n            'font-weight'       : this.fontWeight,\r\n            'font-style'        : this.fontStyle,\r\n            'text-decoration'   : this.textDecoration,\r\n            'font-size.px'      : this.dropdownList.fontSize\r\n        };\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Angular Lifecycle Hooks\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public ngOnInit(): void {\r\n\r\n        super.ngOnInit();\r\n\r\n        this.dropdownList = this.dataSource as DropdownListDataObject;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/dropdown-list.component.ts","module.exports = \"<iframe [ngStyle]=\\\"htmlTagStyleObject\\\" [src]=\\\"sanitizedURL\\\" title={{html.description}} style=\\\"border:none\\\"></iframe>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/html.component.html\n// module id = ./src/app/player/view/html.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\r\nimport { HtmlDataObject } from '../../shared/system-shared/model/data-objects/components/html.data-object';\r\n// we need this to prevent error: unsafe value used in a resource URL context\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { AbstractComponent } from './abstract.component';\r\n\r\n@Component({\r\n    selector: 'player-html',\r\n    templateUrl: 'html.component.html',\r\n    styleUrls: ['../../app.component.css']\r\n})\r\n\r\n/**\r\n * Component for DIF Html component\r\n */\r\nexport class HtmlComponent extends AbstractComponent {\r\n\r\n    /**\r\n     * A reference to the Html Data object that provides the data for this component.\r\n     */\r\n    public html: HtmlDataObject;\r\n\r\n    private safeUrl: SafeResourceUrl;\r\n\r\n    constructor(private sanitizer: DomSanitizer) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.html = (this.dataSource as HtmlDataObject);\r\n        this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.html.URL);\r\n    }\r\n\r\n\r\n    /**\r\n     * Return ngStyle object for common properties\r\n     */\r\n    public get htmlTagStyleObject(): any {\r\n        return this.commonStyleProperties;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sanitize the URL to prevent error: unsafe value used in a resource URL context\r\n     */\r\n    public get sanitizedURL(): any {\r\n        return this.safeUrl\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/html.component.ts","module.exports = \"<img #elementRef playerEventHandler [dataSource]=\\\"dataSource\\\" src={{image.url}} alt={{image.description}} [ngStyle]=\\\"imgTagStyle\\\">\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/image.component.html\n// module id = ./src/app/player/view/image.component.html\n// module chunks = main","import { Component }    from '@angular/core';\n\nimport { AbstractComponent }    from './abstract.component';\nimport { ImageDataObject }      from '../../shared/system-shared/model/data-objects/components/image.data-object';\n\n\n@Component({\n    selector: 'player-image',\n    templateUrl: 'image.component.html',\n    styleUrls:  [ '../../app.component.css' ]\n})\n\n\n/**\n * The view model of the application's Angular image component.\n */\nexport class ImageComponent extends AbstractComponent {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Properties / Instance Variables\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * A convenience reference to the dataSource that provides the model data for this component cast as an actual\n     * ImageDataObject.\n     *\n     * @default undefined\n     */\n    public image: ImageDataObject;\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Accessors\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * The Object used in the ngStyle decorator that defines\n     * the style settings for the img tag in this component's template.\n     *\n     * @returns     any\n     */\n\n    /**\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the img tag used in\n     * this component's template.\n     *\n     * @default A style Object containing the CSS properties for this component's img tag.\n     */\n    public get imgTagStyle(): Object {\n\n        return this.commonStyleProperties;\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Angular Lifecycle Hooks\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @inheritDoc\n     */\n    public ngOnInit(): void {\n\n        super.ngOnInit();\n\n        this.image = this.dataSource as ImageDataObject;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/image.component.ts","module.exports = \"<div>\\n    <button md-raised-button type=\\\"button\\\" (click)=\\\"onSavePageClick()\\\">Save Page</button>\\n    <br><br>\\n\\n    <!-- <input id=\\\"menudatepicker\\\" /> -->\\n\\n    <!-- CAN ADD BACK IN IF KENDO ADDED TO CLI PROJECT\\n    jQuery initialized Kendo numerictextbox\\n    <input id=\\\"numerictextbox\\\" />\\n    <br><br>\\n    -->\\n\\n    Standard HTML5 number input element modified\\n    <input type=number id=\\\"testSpan2\\\" value={{this.testNum}} />\\n    <br><br>\\n\\n    <!-- CAN ADD BACK IN IF KENDO ADDED TO CLI PROJECT\\n    <div id=\\\"container\\\">\\n        Markup initialized Kendo numerictextbox\\n        <input data-role=\\\"numerictextbox\\\" data-value=\\\"10\\\"/>\\n        <input data-role=\\\"autocomplete\\\" data-bind=\\\"source: source\\\" />\\n        <br><br>\\n\\n        <input data-role=\\\"datepicker\\\" />\\n    </div>\\n    -->\\n\\n    <!-- CAN ADD BACK IN IF KENDO ADDED TO CLI PROJECT\\n    <div id=\\\"kendoWindow\\\">{{this.buttonString}}</div>\\n    -->\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/menu.component.html\n// module id = ./src/app/player/view/menu.component.html\n// module chunks = main","import {Component, Output, EventEmitter} from '@angular/core';\n\n//import { kendo } from '../js/kendo.web';   // Why don't we need TODO something like this to import the kendo - kendo typings are global (not exported so it can't be imported)\n\n@Component({\n    selector: \"player-menu\",\n    templateUrl: 'menu.component.html',\n    styleUrls:  [ '../../app.component.css' ]\n})\n\n\n/*\n*\n* This class is just a placeholder for some test code - can eventually be used for menu or some other part of the player chrome\n*\n* */\nexport class MenuComponent {\n    @Output()\n    onSavePageClickEmitter: EventEmitter<void> = new EventEmitter<void>();\n\n    buttonString: string = \"Save This Page\";\n    testNum: number = 9;\n    autoCompleteData: Array<string> = ['a', 'b', 'c'];\n\n    constructor() {}\n\n    /*\n    bindKendo(test:number) {\n        console.log(\"MenuComponent.bindNumericTextBox(): \" + test);\n\n        //$(\"#numerictextbox\").kendoNumericTextBox({\n        //    value: test\n        //});\n\n        $(\"#numerictextbox\").kendoNumericTextBox();\n        $(\"#numerictextbox\").data(\"kendoNumericTextBox\").value(this.testNum);\n\n        // Initialize the Kendo UI DatePicker by calling the kendoDatePicker jQuery plugin\n        //$(\"#menudatepicker\").kendoDatePicker();\n\n        kendo.bind($(\"#container\"), {});\n\n        $(\"#kendoWindow\").kendoWindow();\n    }\n    */\n\n    ngOnInit() {\n        // Don't really need to use jQuery on document ready event since Angular already has it covered\n        // $(document).ready(this.bindKendo(this.testNum));\n\n        // Call separate method to pass var to bind.  Needed when using jQuery event, but not needed without it\n        // this.bindKendo(this.testNum);\n\n        /* CAN ADD BACK IN IF KENDO ADDED TO CLI PROJECT\n        $(\"#numerictextbox\").kendoNumericTextBox();\n        $(\"#numerictextbox\").data(\"kendoNumericTextBox\").value(this.testNum);\n\n        //kendo.bind($(\"#container\"), {source: ['a', 'b', 'c']});\n        kendo.bind($(\"#container\"), {source: this.autoCompleteData});\n\n        $(\"#kendoWindow\").kendoWindow();\n        */\n    }\n\n    onSavePageClick(): void {\n        this.onSavePageClickEmitter.emit();\n        this.testNum += 1;\n        console.log('MenuComponent.onSavePageClick(): modified again ' + this.testNum);\n\n        // CAN ADD BACK IN IF KENDO ADDED TO CLI PROJECT\n        // $(\"#numerictextbox\").data(\"kendoNumericTextBox\").value(this.testNum);\n\n        // this.autoCompleteData = ['c', 'd', 'e'];  // This doesn't work\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/menu.component.ts","module.exports = \"<div style=\\\"border-width: 1px; border-style: solid; border-color: black; position: relative;\\\" [ngStyle]=\\\"{'width.px': width, 'height.px': height}\\\">\\n    <ng-template ngFor let-component [ngForOf]=\\\"page.components\\\">\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'ContentWindow'\\\">\\n            <player-content-window [contentWindow]=\\\"component\\\"></player-content-window>\\n        </ng-template>\\n\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'AudioDataObject'\\\">\\n            <player-audio [dataSource]=\\\"component\\\"></player-audio>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'ButtonDataObject'\\\">\\n            <player-button [dataSource]=\\\"component\\\"></player-button>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'CheckboxDataObject'\\\">\\n            <player-checkbox [dataSource]=\\\"component\\\"></player-checkbox>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'DropdownListDataObject'\\\">\\n            <player-dropdown-list [dataSource]=\\\"component\\\"></player-dropdown-list>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'HtmlDataObject'\\\">\\n            <player-html [dataSource]=\\\"component\\\"></player-html>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'ImageDataObject'\\\">\\n            <player-image [dataSource]=\\\"component\\\"></player-image>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'VideoDataObject'\\\">\\n            <player-video [dataSource]=\\\"component\\\"></player-video>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'QuizFillInBlankDataObject'\\\">\\n            <player-quiz-fill-in-blank [quizFillInBlank]=\\\"component\\\"></player-quiz-fill-in-blank>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'QuizMatchDataObject'\\\">\\n            <player-quiz-match [quizMatch]=\\\"component\\\"></player-quiz-match>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'QuizMultipleChoiceDataObject'\\\">\\n            <player-quiz-multiple-choice [quizMultipleChoice]=\\\"component\\\"></player-quiz-multiple-choice>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'QuizResultDataObject'\\\">\\n            <player-quiz-result [quizResult]=\\\"component\\\"></player-quiz-result>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'RadioButtonDataObject'\\\">\\n            <player-radio-button [dataSource]=\\\"component\\\"></player-radio-button>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'TextDisplayDataObject'\\\">\\n            <player-text-display [dataSource]=\\\"component\\\"></player-text-display>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'TextInputDataObject'\\\">\\n            <player-text-input [dataSource]=\\\"component\\\"></player-text-input>\\n        </ng-template>\\n\\n        <ng-template [ngIf]=\\\"component.constructor['name'] === 'TextInputAreaDataObject'\\\">\\n            <player-text-input-area [dataSource]=\\\"component\\\"></player-text-input-area>\\n        </ng-template>\\n\\n    </ng-template>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/page.component.html\n// module id = ./src/app/player/view/page.component.html\n// module chunks = main","import { AfterViewChecked, Component, Input } from '@angular/core';\n\nimport { EventDataObject } from '../../shared/system-shared/model/data-objects/event-system/event.data-object';\nimport { EventPlayableDataObjectCollection }\n    from '../model/data-objects/event-system/event.playable.data-object.collection';\nimport { PageDataObject }       from '../../shared/system-shared/model/data-objects/page.data-object';\nimport {PageService} from '../../shared/system-shared/model/services/page.service';\n\n\n@Component({\n    selector: 'player-page',\n    templateUrl: 'page.component.html',\n    styleUrls:  [ '../../app.component.css' ]\n})\n\n\n/*\n *  ComponentDataObject container that holds components that make up the page contents\n *  NOTE:   This would sort of replace the \"TemplateHolder\" class in the Player.  In this prototype, it acts like a\n *          Player component.\n *\n * //TODO :I just pulled out all the data we got it does't mean this is by any means complete or fully implemented\n */\nexport class PageComponent implements AfterViewChecked {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Instance Properties\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    /**\n     *\n     */\n    @Input()\n    page: PageDataObject;\n\n    /**\n     * Holds reference to previous PageDataObject.  Used to compare with current one to determine when new page loaded\n     */\n    prevPage: PageDataObject;\n\n     /**\n     *\n     */\n    @Input()\n    width: number;\n\n    /**\n     *\n     */\n    @Input()\n    height: number;\n\n    constructor(private pageService: PageService) {}\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Angular Lifecycle Hooks\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ngAfterViewChecked(): void {\n        // If new page loaded - trigger onLoad event\n        if (this.page !== this.prevPage) {\n            // we need to make sure pageProperties exists\n            if (this.page.pageProperties) {\n                /* setTimeout hack to insure that the proccessEvent doesn't cause a\n                ExpressionChangedAfterItHasBeenCheckedError. Aparently angular doesn't like us to add components to the\n                view in ngAfterViewChecked. There is likly a better solution than this.\n                #ToDo: find a better solution to this.\n                 */\n                // setTimeout(() => (this.page.pageProperties.eventCollection as EventPlayableDataObjectCollection).processEvent(EventDataObject.ON_LOAD));\n                this.pageService.isPageLoaded = true;\n            }\n\n            this.prevPage = this.page;\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/page.component.ts","module.exports = \"<div class=\\\"playerContainer\\\" [ngStyle]=\\\"{'height.px': contentAreaHeight}\\\">\\n    <div class=\\\"contentArea\\\" [ngStyle]=\\\"{'height.px': contentAreaHeight}\\\">\\n        <player-page *ngIf=\\\"page\\\" [page]=\\\"pageService.page\\\" [height]=\\\"contentAreaHeight\\\" [width]=\\\"width\\\"></player-page>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/player.component.html\n// module id = ./src/app/player/view/player.component.html\n// module chunks = main","import { Component, OnInit, Input, EventEmitter } from '@angular/core';\nimport { PageService }  from '../../shared/system-shared/model/services/page.service';\nimport { PageDataObject } from '../../shared/system-shared/model/data-objects/page.data-object';\nimport { UnitService } from '../../shared/system-shared/model/services/unit.service';\n\n\n@Component({\n    selector: 'app-player',\n    templateUrl: './player.component.html',\n    styleUrls:  [ './player.module.css' ]\n})\n\n\n/*\n *\n *  Root component for the player module.  Container for the components that make up the various portions of the player\n *  chrome and page content (if we don't decide to break those into separate modules)\n *\n */\nexport class PlayerComponent implements OnInit {\n    @Input()\n    width: number;\n\n    @Input()\n    height: number;\n\n    @Input()\n    showUserInterface: boolean;\n\n    /**\n     * page data object holder\n     */\n    page: PageDataObject;\n\n    // temporary hard coded values not sure how we wanna do this\n    private appBarHeight: number = 47;\n    private controlBarHeight: number = 29;\n    private contentAreaHeight: number;\n\n    /**\n     * TODO: Doesn't seem to be used for anything - should it be removed?\n     */\n    private courseName: string;\n\n\n    /*\n     *  Inject PageService\n     */\n    constructor(public pageService: PageService, private unitService: UnitService) {}\n\n    /*\n     *  Recommended to keep complex logic out of constructor.  Want to make sure complex logic run when we want.\n     *  ngOnInit - Called once after the first ngOnChanges after Angular first displays the data-bound properties and\n     *  sets the directive/component's input properties.\n     */\n    ngOnInit(): void {\n        if (this.showUserInterface) {\n            this.contentAreaHeight = this.height - this.appBarHeight - this.controlBarHeight;\n        } else {\n            this.contentAreaHeight = this.height;\n        }\n\n\n        // Set courseName from Unit if it exists (no unit when previewing from Template Designer)\n        if (this.unitService.unit) {\n            this.courseName = this.unitService.unit.unitName;\n        }\n\n        this.setPage();\n    }\n\n    /**\n     * on Previous Page Event handler\n     *\n     */\n    protected onPreviousPage(): void {\n        this.setPage();\n    }\n\n    /**\n     * on Next Page event handler\n     *\n     */\n    protected onNextPage(): void {\n        this.setPage();\n    }\n\n     /**\n     * set page data object\n     *\n     */\n    private setPage(): void {\n        this.page = this.pageService.page;\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/player.component.ts","module.exports = \".playerContainer{\\r\\n\\tmargin: auto;\\r\\n\\r\\n\\tbackground-color: grey;\\r\\n\\twidth: 100%;/*1005px;*/\\r\\n\\theight: 100%;/*695px;*/\\r\\n\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n\\r\\n.menuButtonDiv{\\r\\n\\theight: 47px;\\r\\n\\twidth: 50px;\\r\\n\\r\\n\\tfloat: left;\\r\\n}\\r\\n\\r\\n.heading {\\r\\n\\tpadding-top:16px;\\r\\n}\\r\\n\\r\\n.courseName{\\r\\n\\tfont-family: 'Open Sans', sans-serif;\\r\\n    color: white;\\r\\n\\tfont-size: 16px;\\r\\n}\\r\\n\\r\\n.pageName{\\r\\n\\tfont-family: 'Open Sans', sans-serif;\\r\\n    color: white;\\r\\n\\tfont-size: 14px;\\r\\n}\\r\\n\\r\\n.contentArea{\\r\\n\\twidth:100%; \\r\\n\\t/*height:619px;*/\\r\\n\\r\\n    overflow: hidden;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/player.module.css\n// module id = ./src/app/player/view/player.module.css\n// module chunks = main","module.exports = \"<div [ngStyle]='quizTagStyleObject'></div>\\r\\n<div [ngStyle]='quizQuestionStyleObject'>{{quizFillInBlank.question}}</div>\\r\\n<div [ngStyle] = 'quizTitleBoxStyleObject'></div>\\r\\n<div [ngStyle]='quizTitleStyleObject'>{{quizFillInBlank.quizAnswerTitle}}</div>\\r\\n<input type='text' [ngStyle]='quizAnswerStyleObject' [(ngModel)]=\\\"learnerResponse\\\">\\r\\n<button type='button' [ngStyle]='quizButtonStyleObject' (click)='submitPressed()'>Submit</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/quiz-fill-in-blank.component.html\n// module id = ./src/app/player/view/quiz-fill-in-blank.component.html\n// module chunks = main","/**\r\n * Created by vpozharov on 3/10/2017.\r\n */\r\nimport { Component, Input } from '@angular/core';\r\nimport { QuizFillInBlankDataObject } from '../../shared/system-shared/model/data-objects/components/quiz-fill-in-blank.data-object';\r\nimport { QuizComponent } from './quiz.component';\r\nimport { LMSConstant } from '../../model/services/scorm/lms.constant';\r\n\r\n@Component({\r\n    selector:  'player-quiz-fill-in-blank',\r\n    templateUrl: 'quiz-fill-in-blank.component.html'\r\n})\r\n\r\n/**\r\n * Component for DIF quiz Fill-In-Blank\r\n */\r\nexport class QuizFillInBlankComponent extends QuizComponent {\r\n    // Question text box\r\n    private questionTop: number = 29;\r\n    private questionLeft: number = 27;\r\n    private questionRight: number = 27;\r\n    private questionHeight: number = 107;\r\n    private questionPaddingLeft: number = 5;\r\n    private questionPaddingRight: number = 5;\r\n    // Answer title box\r\n    private titleBoxLeft: number = 27;\r\n    private titleBoxRight: number = 27;\r\n    private titleBoxTop: number = 160 - 10;\r\n    private titleBoxHeight: number = 40 + 70;\r\n    private titleBoxBackground: string = '#D8D8D8';\r\n    // Answer Title\r\n    private titleFontColor: string = 'Black';\r\n    private titleFontBold: string = 'Bold';\r\n    private titleFontSize: number = 18;\r\n    private titleHeight: number = 30;\r\n    private titleLeft: number = 43;\r\n    private titleTop: number = 160;\r\n    // Answer\r\n    private answerLeft: number = 43;\r\n    private answerRight: number = 43;\r\n    private answerInitTop: number = 198;\r\n    private answerHeight: number = 40;\r\n    private answerFontSize: number = 32;\r\n\r\n    /**\r\n     * The data object that contains the quizFillInBlank configuration information\r\n     */\r\n    @Input()   quizFillInBlank: QuizFillInBlankDataObject;\r\n\r\n    /**\r\n     * ngOnInit() call initQuizComponent to initialize QUIZ/SCORM by passing quizFillInBlank\r\n     * \r\n     */\r\n    ngOnInit(): void {\r\n\r\n        this.initQuizComponent(this.quizFillInBlank.quizName);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizFillInBlank frame\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizTagStyleObject(): any {\r\n        return super.getQuizOuterBoxStyle(this.quizFillInBlank);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz fill in blank question\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizQuestionStyleObject(): any {\r\n        const left: number = this.quizFillInBlank.x + this.questionLeft;\r\n        const top: number = this.quizFillInBlank.y + this.questionTop;\r\n        const width: number = this.quizFillInBlank.width\r\n                            - this.questionLeft - this.questionRight\r\n                            - this.questionPaddingLeft - this.questionPaddingRight;\r\n\r\n        return this.getQuizBoxStyle(this.quizFillInBlank, left, top, width, this.questionHeight);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz fill in blank title box\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizTitleBoxStyleObject(): any {\r\n        const top: number = this.quizFillInBlank.y + this.titleBoxTop;\r\n        const left: number = this.quizFillInBlank.x + this.titleBoxLeft;\r\n        const width: number = this.quizFillInBlank.width - this.titleBoxLeft\r\n            - this.titleBoxRight - this.paddingRight - this.paddingLeft;\r\n\r\n        return this.getQuizBoxStyle(this.quizFillInBlank, left, top, width, this.titleBoxHeight, this.titleBoxBackground);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz fill in blank title\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizTitleStyleObject(): any {\r\n        const top: number = this.quizFillInBlank.y + this.titleTop;\r\n        const left: number = this.quizFillInBlank.x + this.titleLeft;\r\n        const width: number = this.quizFillInBlank.width - this.titleBoxLeft - this.titleBoxRight;\r\n\r\n        return this.getQuizLabelStyle(this.quizFillInBlank,\r\n            left, top, width, this.titleFontSize, this.titleFontBold, 'left');\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz fill in blank answer\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerStyleObject(): any {\r\n        const top: number = this.quizFillInBlank.y + this.answerInitTop;\r\n        const left: number = this.answerLeft + this.quizFillInBlank.x;\r\n        const width: number = this.quizFillInBlank.width\r\n            - this.answerLeft\r\n            - this.paddingRight\r\n            - this.paddingLeft\r\n            - this.answerRight;\r\n\r\n        return this.getQuizBoxStyle(this.quizFillInBlank,\r\n            left, top, width, this.answerHeight,\r\n            this.backColor, this.answerFontSize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizFillInBlank submit buttom\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizButtonStyleObject(): any {\r\n        const left: number = this.quizFillInBlank.x + (this.quizFillInBlank.width - this.submitButtonWidth) / 2;\r\n        const top: number = this.quizFillInBlank.y + this.quizFillInBlank.height + 17;\r\n\r\n        return this.getQuizButtonStyle(this.quizFillInBlank, top, left);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * getQuizType\r\n     *\r\n     */\r\n    protected getQuizType(): string {\r\n\r\n        return LMSConstant.FILL_IN;\r\n    }\r\n\r\n    /**\r\n     * getLearnerResponse function\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getLearnerResponse(): string {\r\n        return this.learnerResponse;\r\n    }\r\n\r\n\r\n    /** \r\n     * getCorrectResponses function get correction response in array\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getCorrectResponses(): string {\r\n\r\n        return this.quizFillInBlank.correctAnswer;\r\n    }\r\n\r\n\r\n    /**\r\n     * getDescription question/description\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getDescription(): string {\r\n        return this.quizFillInBlank.question;\r\n    }\r\n\r\n\r\n    /** \r\n     * validateAnswer function validate learner's response\r\n     *\r\n     * @returns boolean true if\r\n     *          1) learner input is correct or\r\n     *          2) learner input is incorrect AND multipleAttemptFlag false\r\n     *          3) learner input is incorrect AND learnerAttempt is no less than allowedoption\r\n     *\r\n     */\r\n    protected validateAnswer(displayAlert: boolean = true): boolean {\r\n        let validate: boolean = true;\r\n\r\n        if (this.getLearnerResponse().trim() === '') {\r\n\r\n            validate = false;\r\n            this.displayMessage('You must enter an answer to continue.');\r\n\r\n        } else {\r\n\r\n            // Leaner response is correct\r\n            if (this.quizFillInBlank.correctAnswer === this.getLearnerResponse()) {\r\n\r\n                // if feedbackFlag is true and feedBackCorrectMessage is not empty\r\n                if (this.quizFillInBlank.feedBackFlag && this.quizFillInBlank.feedbackCorrectMessage !== '') {\r\n\r\n                    this.displayMessage(this.quizFillInBlank.feedbackCorrectMessage);\r\n                }\r\n                this.gotoNextPage = true;\r\n\r\n            } else { // Leaner response is incorrect\r\n\r\n                this.learnerAttempt = this.learnerAttempt + 1;\r\n\r\n                // if multipleAttemptFlag is true and learnerAttempt is less than allowed\r\n                if (this.quizFillInBlank.multipleAttemptFlag\r\n                    && this.quizFillInBlank.numberOfAttempts > this.learnerAttempt) {\r\n\r\n                    this.displayMessage(this.quizFillInBlank.feedbackIncorrectAttempt);\r\n\r\n                } else {\r\n\r\n                    // if feedbackFlag is true and feedbackIncorrectMessage is not empty\r\n                    if (this.quizFillInBlank.feedBackFlag && this.quizFillInBlank.feedbackIncorrectMessage !== '') {\r\n\r\n                        this.displayMessage(this.quizFillInBlank.feedbackIncorrectMessage);\r\n                    }\r\n                    this.gotoNextPage = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        console.log('---validateAnswer validate=' + validate);\r\n\r\n        return validate;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/quiz-fill-in-blank.component.ts","module.exports = \"<div [ngStyle]='quizTagStyleObject'></div>\\r\\n\\r\\n<div [ngStyle]='quizQuestionStyleObject'>{{quizMatch.question}}</div>\\r\\n\\r\\n<div *ngIf=\\\"quizMatch.aAnswerText != ''\\\" [ngStyle]=\\\"quizAnswerTitleStyleObject1\\\">{{quizMatch.aTitle}}</div>\\r\\n<div *ngIf=\\\"quizMatch.bAnswerText != ''\\\" [ngStyle]=\\\"quizAnswerTitleStyleObject2\\\">{{quizMatch.bTitle}}</div>\\r\\n<div *ngIf=\\\"quizMatch.cAnswerText != ''\\\" [ngStyle]=\\\"quizAnswerTitleStyleObject3\\\">{{quizMatch.cTitle}}</div>\\r\\n<div *ngIf=\\\"quizMatch.dAnswerText != ''\\\" [ngStyle]=\\\"quizAnswerTitleStyleObject4\\\">{{quizMatch.dTitle}}</div>\\r\\n\\r\\n<div *ngIf=\\\"quizMatch.aAnswerText != ''\\\" [ngStyle]=\\\"quizAnswerStyleObject1\\\">{{quizMatch.aAnswerText}}</div>\\r\\n<div *ngIf=\\\"quizMatch.bAnswerText != ''\\\" [ngStyle]=\\\"quizAnswerStyleObject2\\\">{{quizMatch.bAnswerText}}</div>\\r\\n<div *ngIf=\\\"quizMatch.cAnswerText != ''\\\" [ngStyle]=\\\"quizAnswerStyleObject3\\\">{{quizMatch.cAnswerText}}</div>\\r\\n<div *ngIf=\\\"quizMatch.dAnswerText != ''\\\" [ngStyle]=\\\"quizAnswerStyleObject4\\\">{{quizMatch.dAnswerText}}</div>\\r\\n\\r\\n<select *ngIf=\\\"quizMatch.aAnswerText != ''\\\" [ngStyle]=\\\"quizComboStyleObject1\\\" [(ngModel)]=\\\"learnerResponses[0]\\\">\\r\\n    <option *ngFor=\\\"let str of quizMatch.optionChoices\\\" [value]=\\\"str\\\">\\r\\n        {{ str }}\\r\\n    </option>\\r\\n</select>\\r\\n\\r\\n<select *ngIf=\\\"quizMatch.bAnswerText != ''\\\" [ngStyle]=\\\"quizComboStyleObject2\\\" [(ngModel)]=\\\"learnerResponses[1]\\\">\\r\\n    <option *ngFor=\\\"let str of quizMatch.optionChoices\\\" [value]=\\\"str\\\">\\r\\n        {{ str }}\\r\\n    </option>\\r\\n</select>\\r\\n\\r\\n<select *ngIf=\\\"quizMatch.cAnswerText != ''\\\" [ngStyle]=\\\"quizComboStyleObject3\\\" [(ngModel)]=\\\"learnerResponses[2]\\\">\\r\\n    <option *ngFor=\\\"let str of quizMatch.optionChoices\\\" [value]=\\\"str\\\">\\r\\n        {{ str }}\\r\\n    </option>\\r\\n</select>\\r\\n\\r\\n<select *ngIf=\\\"quizMatch.dAnswerText != ''\\\" [ngStyle]=\\\"quizComboStyleObject4\\\" [(ngModel)]=\\\"learnerResponses[3]\\\">\\r\\n    <option *ngFor=\\\"let str of quizMatch.optionChoices\\\" [value]=\\\"str\\\">\\r\\n        {{ str }}\\r\\n    </option>\\r\\n</select>\\r\\n\\r\\n<div *ngIf=\\\"quizMatch.aAnswerText != ''\\\" [ngStyle]=\\\"quizChoiceStyleObject1\\\">{{quizMatch.aDisplayText}}</div>\\r\\n<div *ngIf=\\\"quizMatch.bAnswerText != ''\\\" [ngStyle]=\\\"quizChoiceStyleObject2\\\">{{quizMatch.bDisplayText}}</div>\\r\\n<div *ngIf=\\\"quizMatch.cAnswerText != ''\\\" [ngStyle]=\\\"quizChoiceStyleObject3\\\">{{quizMatch.cDisplayText}}</div>\\r\\n<div *ngIf=\\\"quizMatch.dAnswerText != ''\\\" [ngStyle]=\\\"quizChoiceStyleObject4\\\">{{quizMatch.dDisplayText}}</div>\\r\\n\\r\\n<button type='button' [ngStyle]='quizButtonStyleObject' (click)=\\\"submitPressed()\\\">Submit</button>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/quiz-match.component.html\n// module id = ./src/app/player/view/quiz-match.component.html\n// module chunks = main","/**\r\n * Created by vpozharov.\r\n */\r\nimport { Component, Input } from '@angular/core';\r\nimport { QuizMatchDataObject } from '../../shared/system-shared/model/data-objects/components/quiz-match.data-object';\r\nimport { QuizComponent } from './quiz.component';\r\nimport { LMSConstant } from '../../model/services/scorm/lms.constant';\r\n\r\n@Component({\r\n    selector: 'player-quiz-match',\r\n    templateUrl: 'quiz-match.component.html'\r\n})\r\n\r\n/**\r\n * Component for DIF quiz match\r\n */\r\nexport class QuizMatchComponent extends QuizComponent {\r\n    // Question text box\r\n    private questionTop: number = 29;\r\n    private questionLeft: number = 27;\r\n    private questionHeight: number = 54;\r\n    private questionPaddingLeft: number = 5;\r\n    private questionPaddingRight: number = 5;\r\n    // Correlation between the quiz width and question width\r\n    private questionWidthSlope: number = 0.9996;\r\n    private questionWidthIntercept: number = -53.181;\r\n    // Answer Titles:\r\n    private answerTitleWidth: number = 40;\r\n    // Answer\r\n    private answerPaddingRight: number = 5;\r\n    private answerPaddingLeft: number = 5;\r\n    private answerInitTop: number = 117;\r\n    private answerHeight: number = 63;\r\n    // Correlation between the quiz width and question width\r\n    private answerWidthSlope: number = 0.398;\r\n    private answerWidthIntercept: number = -31.832;\r\n    private answerGap: number = 19;\r\n    // Combo\r\n    private comboWidth: number = 53;\r\n    private comboHeight: number = 30;\r\n    private comboFontSize: number = 12;\r\n\r\n    protected learnerResponses: string[] = [];\r\n\r\n    /**\r\n     * The data object that contains the quiz match configuration information\r\n     */\r\n    @Input()\r\n    quizMatch: QuizMatchDataObject;\r\n\r\n    /**\r\n     * Constructor for QuizMatchComponent\r\n     * (owerrides the base constructor to setup different modular variables)\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.fontSize = 16;\r\n    }\r\n\r\n    /**\r\n     * ngOnInit() call initQuizComponent to initialize QUIZ/SCORM by passing quizMatch data object name\r\n     * \r\n     */\r\n    ngOnInit(): void {\r\n        this.initQuizComponent(this.quizMatch.quizName);\r\n\r\n        // if get from LMS\r\n\r\n        if (this.interaction.learnerResponse !== undefined) {\r\n\r\n            // set learner response\r\n            let lResponse: string[] = this.interaction.learnerResponse.split('[,]');\r\n            for (let i: number = 0; i < lResponse.length; i++) {\r\n\r\n                this.learnerResponses[i] = lResponse[i].charAt(4);\r\n            }\r\n\r\n            this.quizMatch.setQuizColumn(this.interaction.correctResponses);\r\n\r\n        } else {\r\n\r\n            this.quizMatch.shuffle();\r\n            this.setLearnerResponses();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match frame\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizTagStyleObject(): any {\r\n        return super.getQuizOuterBoxStyle(this.quizMatch);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match question\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizQuestionStyleObject(): any {\r\n        const left: number = this.quizMatch.x + this.questionLeft;\r\n        const top: number = this.quizMatch.y + this.questionTop;\r\n        const width: number = this.quizMatch.width * this.questionWidthSlope + this.questionWidthIntercept\r\n            - this.questionPaddingLeft - this.questionPaddingRight;\r\n\r\n        return this.getQuizBoxStyle(this.quizMatch, left, top, width, this.questionHeight);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match submit buttom\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizButtonStyleObject(): any {\r\n        const left: number = this.quizMatch.x + (this.quizMatch.width - this.submitButtonWidth) / 2;\r\n        const top: number = this.quizMatch.y + this.quizMatch.height + 17;\r\n\r\n        return this.getQuizButtonStyle(this.quizMatch, top, left);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer A (1)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerStyleObject1(): any {\r\n        return this.calculateAnswerMetrix(1);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer B (2)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerStyleObject2(): any {\r\n        return this.calculateAnswerMetrix(2);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer C (3)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerStyleObject3(): any {\r\n        return this.calculateAnswerMetrix(3);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer D (4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerStyleObject4(): any {\r\n        return this.calculateAnswerMetrix(4);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer title A (1)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerTitleStyleObject1(): any {\r\n        return this.calculateAnswerTitleMetrix(1);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer title B (2)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerTitleStyleObject2(): any {\r\n        return this.calculateAnswerTitleMetrix(2);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer title C (3)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerTitleStyleObject3(): any {\r\n        return this.calculateAnswerTitleMetrix(3);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer title D (4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerTitleStyleObject4(): any {\r\n        return this.calculateAnswerTitleMetrix(4);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match choice A (1)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizChoiceStyleObject1(): any {\r\n        return this.calculateChoiceMetrix(1);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match choice B (2)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizChoiceStyleObject2(): any {\r\n        return this.calculateChoiceMetrix(2);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match choice C (3)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizChoiceStyleObject3(): any {\r\n        return this.calculateChoiceMetrix(3);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match choice D (4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizChoiceStyleObject4(): any {\r\n        return this.calculateChoiceMetrix(4);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match choice combo A (1)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizComboStyleObject1(): any {\r\n        return this.calculateAnswerComboMetrix(1);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match choice combo B (2)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizComboStyleObject2(): any {\r\n        return this.calculateAnswerComboMetrix(2);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match choice combo C (3)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizComboStyleObject3(): any {\r\n        return this.calculateAnswerComboMetrix(3);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match choice combo D (4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizComboStyleObject4(): any {\r\n        return this.calculateAnswerComboMetrix(4);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer\r\n     * @param - answer bumber (1-4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    private calculateAnswerMetrix(answerNumber: number): any {\r\n        const top: number = this.quizMatch.y\r\n            + this.answerInitTop\r\n            + (answerNumber - 1) * (this.answerHeight + this.answerGap);\r\n        const left: number = this.questionLeft + this.quizMatch.x + this.answerTitleWidth;\r\n        const width: number = this.quizMatch.width * this.answerWidthSlope + this.answerWidthIntercept\r\n            - this.answerPaddingLeft - this.answerPaddingRight;\r\n\r\n        return this.getQuizBoxStyle(this.quizMatch, left, top, width, this.answerHeight);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer\r\n     * @param - answer bumber (1-4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    private calculateChoiceMetrix(answerNumber: number): any {\r\n        const top: number = this.quizMatch.y\r\n            + this.answerInitTop\r\n            + (answerNumber - 1) * (this.answerHeight + this.answerGap);\r\n        const left: number = this.quizMatch.x + this.quizMatch.width / 2 + this.comboWidth;\r\n        const width: number = this.quizMatch.width * this.answerWidthSlope + this.answerWidthIntercept\r\n            - this.answerPaddingLeft - this.answerPaddingRight;\r\n\r\n        return this.getQuizBoxStyle(this.quizMatch, left, top, width, this.answerHeight);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer title (e.g. 'A:'\r\n     * @param - answer bumber (1-4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    private calculateAnswerTitleMetrix(answerNumber: number): any {\r\n        const top: number = this.quizMatch.y\r\n            + this.answerInitTop\r\n            + (answerNumber - 1) * (this.answerHeight + this.answerGap);\r\n        const left: number = this.questionLeft + this.quizMatch.x;\r\n\r\n        return this.getQuizAnswerTitleStyle(this.quizMatch, top, left, this.answerTitleWidth, this.answerHeight);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz match answer title (e.g. 'A:'\r\n     * @param - answer bumber (1-4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    private calculateAnswerComboMetrix(answerNumber: number): any {\r\n        const top: number = this.quizMatch.y\r\n            + this.answerInitTop\r\n            + (answerNumber - 1) * (this.answerHeight + this.answerGap)\r\n            + (this.answerHeight - this.comboHeight) / 2;\r\n        const left: number = this.quizMatch.x + this.quizMatch.width / 2;\r\n\r\n        return this.getQuizAnswerTitleStyle(this.quizMatch,\r\n                                            top,\r\n                                            left,\r\n                                            this.comboWidth - 2,\r\n                                            this.comboHeight,\r\n                                            this.comboFontSize);\r\n\r\n    }\r\n\r\n    /**\r\n     * set setLearnerResponses to '?'\r\n     *\r\n     */\r\n    private setLearnerResponses(): void {\r\n        this.learnerResponses = [];\r\n        for (let i: number = 0; i < this.quizMatch.correctAnswers.length; i++) {\r\n            this.learnerResponses[i] = '?';\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * getQuizType\r\n     *\r\n     */\r\n    protected getQuizType(): string {\r\n\r\n        return LMSConstant.MATCHING;\r\n    }\r\n\r\n    /** \r\n     * getCorrectResponses function get correction response\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getCorrectResponses(): string {\r\n\r\n        let returnString: string = '';\r\n\r\n        for (let i: number = 0; i < this.quizMatch.availableAnswersOrder.length; i++) {\r\n\r\n            if (returnString !== '') {\r\n                returnString = returnString + '[,]';\r\n            }\r\n            returnString = returnString + this.quizMatch.availableAnswersOrder[i] + '[.]' + this.quizMatch.correctAnswers[i];\r\n\r\n\r\n        }\r\n\r\n        return returnString;\r\n    }\r\n\r\n\r\n    /**\r\n     * getCorrectResponsesText function\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getCorrectResponsesText(): string {\r\n        let returnString: string = '';\r\n\r\n        for (let i: number = 0; i < this.quizMatch.availableAnswersOrder.length; i++) {\r\n\r\n            let j: number = (this.quizMatch.correctAnswers[i] === 'A') ? 0 :\r\n                (this.quizMatch.correctAnswers[i] === 'B') ? 1 :\r\n                    (this.quizMatch.correctAnswers[i] === 'C') ? 2 :\r\n                        (this.quizMatch.correctAnswers[i] === 'D') ? 3 : 0;\r\n\r\n            if (returnString !== '') {\r\n                returnString = returnString + '[,]';\r\n            }\r\n\r\n            returnString = returnString + this.quizMatch.availableAnswers[j] + '[.]' +\r\n                this.quizMatch.availableChoices[i];\r\n        }\r\n\r\n        return returnString;\r\n    }\r\n\r\n    /**\r\n     * getLearnerResponse function\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getLearnerResponse(): string {\r\n        let returnString: string = '';\r\n\r\n        for (let i: number = 0; i < this.quizMatch.availableAnswersOrder.length; i++) {\r\n\r\n            if (returnString !== '') {\r\n                returnString = returnString + '[,]';\r\n            }\r\n\r\n            returnString = returnString + this.quizMatch.availableAnswersOrder[i] + '[.]' + this.learnerResponses[i];\r\n        }\r\n\r\n        return returnString;\r\n    }\r\n\r\n    /**\r\n     * getLearnerResponseText function \r\n     *\r\n     * @returns string\r\n     */\r\n    protected getLearnerResponseText(): string {\r\n        let returnString: string = '';\r\n\r\n        for (let i: number = 0; i < this.quizMatch.availableAnswersOrder.length; i++) {\r\n\r\n            let j: number = (this.learnerResponses[i] === 'A') ? 0 :\r\n                (this.learnerResponses[i] === 'B') ? 1 :\r\n                    (this.learnerResponses[i] === 'C') ? 2 :\r\n                        (this.learnerResponses[i] === 'D') ? 3  : 0;\r\n\r\n            if (returnString !== '') {\r\n                returnString = returnString + '[,]';\r\n            }\r\n\r\n            returnString = returnString + this.quizMatch.availableAnswers[j] + '[.]'\r\n                + this.quizMatch.availableChoices[i];\r\n        }\r\n\r\n        return returnString;\r\n    }\r\n\r\n\r\n    /**\r\n     * getDescription question/description\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getDescription(): string {\r\n        return this.quizMatch.question;\r\n    }\r\n\r\n\r\n    /** \r\n     * validateAnswer function validate learner's response\r\n     *\r\n     * @returns boolean true if\r\n     *          1) learner input is correct or\r\n     *          2) learner input is incorrect AND multipleAttemptFlag false\r\n     *          3) learner input is incorrect AND learnerAttempt is no less than allowedoption\r\n     *\r\n     */\r\n    protected validateAnswer(displayAlert: boolean = true): boolean {\r\n        let validate: boolean = true;\r\n        // console.log('@@@@@@this.getCorrectResponses()=' + this.getCorrectResponses());\r\n        // console.log('@@@@@@this.getLearnerResponse()=' + this.getLearnerResponse());\r\n\r\n        if (this.getLearnerResponse().includes('?')) {\r\n\r\n            validate = false;\r\n            this.displayMessage('You must make all choices before continuing.');\r\n\r\n        } else if (!this.isLearnerResponseUnique()) {\r\n\r\n            validate = false;\r\n            this.displayMessage('You may only select each letter one time.');\r\n        } else {\r\n\r\n            if (this.getCorrectResponses() === this.getLearnerResponse()) {     // Leaner response is correct\r\n\r\n                // if feedbackFlag is true and feedbackCorrectMessage is not empty\r\n                if (this.quizMatch.feedBackFlag && this.quizMatch.feedbackCorrectMessage !== '') {\r\n\r\n                    this.displayMessage(this.quizMatch.feedbackCorrectMessage);\r\n                }\r\n                this.gotoNextPage = true;\r\n\r\n            } else { // Leaner response is incorrect\r\n\r\n                this.learnerAttempt = this.learnerAttempt + 1;\r\n\r\n                // if multipleAttemptFlag is true and learnerAttempt is less than allowed\r\n                if (this.quizMatch.multipleAttemptFlag && this.quizMatch.numberOfAttempts > this.learnerAttempt) {\r\n\r\n                    this.displayMessage(this.quizMatch.feedbackIncorrectAttempt);\r\n\r\n                } else {\r\n\r\n                    // if feedbackFlag is true and feedbackIncorrectMessage is not empty\r\n                    if (this.quizMatch.feedBackFlag && this.quizMatch.feedbackIncorrectMessage !== '') {\r\n\r\n                        this.displayMessage(this.quizMatch.feedbackIncorrectMessage);\r\n                    }\r\n                    this.gotoNextPage = true;\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        console.log('---validateAnswer validate=' + validate);\r\n\r\n        return validate;\r\n    }\r\n\r\n    /** \r\n     * isLearnerResponseUnique function\r\n     *\r\n     * @returns boolean\r\n     *\r\n     */\r\n    private isLearnerResponseUnique(): boolean {\r\n\r\n        for (let i: number = 0; i < this.learnerResponses.length; i++) {\r\n\r\n            for (let j: number = i + 1; j < this.learnerResponses.length; j++) {\r\n\r\n                if (this.learnerResponses[i] === this.learnerResponses[j]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/quiz-match.component.ts","module.exports = \"<div [ngStyle]='quizTagStyleObject'></div>\\r\\n<div [ngStyle]=\\\"quizQuestionStyleObject\\\">{{quizMultipleChoice.question}}</div>\\r\\n\\r\\n<input *ngIf=\\\"quizMultipleChoice.aChoiceText != ''\\\" type='radio' name='radiogroup' [ngStyle]=\\\"quizRadioStyleObject1\\\" value = 'A' [(ngModel)]=\\\"learnerResponse\\\">\\r\\n<input *ngIf=\\\"quizMultipleChoice.bChoiceText != ''\\\" type='radio' name='radiogroup' [ngStyle]=\\\"quizRadioStyleObject2\\\" value = 'B' [(ngModel)]=\\\"learnerResponse\\\">\\r\\n<input *ngIf=\\\"quizMultipleChoice.cChoiceText != ''\\\" type='radio' name='radiogroup' [ngStyle]=\\\"quizRadioStyleObject3\\\" value = 'C' [(ngModel)]=\\\"learnerResponse\\\">\\r\\n<input *ngIf=\\\"quizMultipleChoice.dChoiceText != ''\\\" type='radio' name='radiogroup' [ngStyle]=\\\"quizRadioStyleObject4\\\" value = 'D' [(ngModel)]=\\\"learnerResponse\\\">\\r\\n\\r\\n<div *ngIf=\\\"quizMultipleChoice.aChoiceText != ''\\\" [ngStyle]=\\\"quizAnswerStyleObject1\\\">\\r\\n    {{quizMultipleChoice.aChoiceText}}\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"quizMultipleChoice.bChoiceText != ''\\\" [ngStyle]=\\\"quizAnswerStyleObject2\\\">\\r\\n    {{quizMultipleChoice.bChoiceText}}\\r\\n</div>\\r\\n<div *ngIf=\\\"quizMultipleChoice.cChoiceText != ''\\\" [ngStyle]=\\\"quizAnswerStyleObject3\\\">\\r\\n    {{quizMultipleChoice.cChoiceText}}\\r\\n</div>\\r\\n<div *ngIf=\\\"quizMultipleChoice.dChoiceText != ''\\\" [ngStyle]=\\\"quizAnswerStyleObject4\\\">\\r\\n    {{quizMultipleChoice.dChoiceText}}\\r\\n</div>\\r\\n\\r\\n<button type='button' [ngStyle] =\\\"quizButtonStyleObject\\\" (click)=\\\"submitPressed()\\\" >Submit</button>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/quiz-multiple-choice.component.html\n// module id = ./src/app/player/view/quiz-multiple-choice.component.html\n// module chunks = main","/**\r\n * Created by vpozharov on 3/10/2017.\r\n */\r\nimport { Component, Input } from '@angular/core';\r\nimport { QuizMultipleChoiceDataObject } from '../../shared/system-shared/model/data-objects/components/quiz-multiple-choice.data-object';\r\nimport { QuizComponent } from './quiz.component';\r\nimport { LMSConstant } from '../../model/services/scorm/lms.constant';\r\n\r\n@Component({\r\n    selector: 'player-quiz-multiple-choice',\r\n    templateUrl: 'quiz-multiple-choice.component.html',\r\n})\r\n\r\n/**\r\n * Component for DIF quiz Multiple Choice\r\n */\r\nexport class QuizMultipleChoiceComponent extends QuizComponent {\r\n    // Question text box\r\n    private questionTop: number = 29;\r\n    // private questionBottom: number = 29;\r\n    private questionLeft: number = 27;\r\n    private questionRight: number = 26;\r\n    private questionHeight: number = 54;\r\n    private questionPaddingLeft: number = 5;\r\n    private questionPaddingRight: number = 5;\r\n    // Answers\r\n    private gapLeft: number = 13; // A gap between the radio button and answer text box\r\n    private answerPaddingLeft: number = 5;\r\n    private answerPaddingRight: number = 5;\r\n    private answerLeft: number = 35;\r\n    private answerRight: number = 35;\r\n    private answerInitTop: number = 117;\r\n    private answerHeight: number = 63;\r\n    private answerGap: number = 19; // gap between answers\r\n\r\n    /**\r\n     * The data object that contains the quizMultipleChoice configuration information\r\n     */\r\n    @Input()\r\n    quizMultipleChoice: QuizMultipleChoiceDataObject;\r\n\r\n    /**\r\n     * ngOnInit() call initQuizComponent to initialize QUIZ/SCORM by passing QuizMultipleChoiceDataObject\r\n     * \r\n     */\r\n    ngOnInit(): void {\r\n\r\n        this.initQuizComponent(this.quizMultipleChoice.quizName);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice frame\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizTagStyleObject(): any {\r\n        return super.getQuizOuterBoxStyle(this.quizMultipleChoice);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice question\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizQuestionStyleObject(): any {\r\n        const left: number = this.quizMultipleChoice.x + this.questionLeft;\r\n        const top: number = this.quizMultipleChoice.y + this.questionTop;\r\n        const width: number = this.quizMultipleChoice.width - this.questionLeft - this.questionRight\r\n            - this.questionPaddingLeft - this.questionPaddingRight;\r\n\r\n        return this.getQuizBoxStyle(this.quizMultipleChoice, left, top, width, this.questionHeight);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice radio button A (1)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizRadioStyleObject1(): any {\r\n        return this.calculateRadioStyle(1);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice radio button B (2)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizRadioStyleObject2(): any {\r\n        return this.calculateRadioStyle(2);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice radio button C (3)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizRadioStyleObject3(): any {\r\n        return this.calculateRadioStyle(3);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice radio button D (4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizRadioStyleObject4(): any {\r\n        return this.calculateRadioStyle(4);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice radio button\r\n     * @param - radio button bumber (1-4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    private calculateRadioStyle(answerNumber: number): any {\r\n        const answerTop: number = this.answerInitTop + (answerNumber - 1) * (this.answerHeight + this.answerGap);\r\n        const radioTop: number = this.quizMultipleChoice.y\r\n            + answerTop\r\n            + (this.answerHeight - this.radioSize) / 2\r\n            - (answerNumber - 1 ) * 2;\r\n        const left: number = this.answerLeft + this.quizMultipleChoice.x;\r\n\r\n        return this.getRadioButtonStyle(this.quizMultipleChoice, radioTop, left);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice answer A (1)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerStyleObject1(): any {\r\n        return this.calculateAnswerMetrix(1);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice answer B (2)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerStyleObject2(): any {\r\n        return this.calculateAnswerMetrix(2);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice answer C (3)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerStyleObject3(): any {\r\n        return this.calculateAnswerMetrix(3);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice answer D (4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizAnswerStyleObject4(): any {\r\n        return this.calculateAnswerMetrix(4);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice answer\r\n     * @param - ranswer bumber (1-4)\r\n     * @returns any (ngStyle object)\r\n     */\r\n    private calculateAnswerMetrix(answerNumber: number): any {\r\n        const top: number = this.quizMultipleChoice.y\r\n            + this.answerInitTop\r\n            + (answerNumber - 1) * (this.answerHeight + this.answerGap);\r\n        const left: number = this.answerLeft + this.quizMultipleChoice.x + this.radioSize + this.gapLeft;\r\n        const width: number = this.quizMultipleChoice.width\r\n            - this.answerLeft - this.answerPaddingRight\r\n            - this.answerPaddingLeft - this.answerPaddingRight\r\n            - this.radioSize - this.gapLeft - this.answerRight;\r\n\r\n        return this.getQuizBoxStyle(this.quizMultipleChoice, left, top, width,\r\n            this.answerHeight, this.backColor, this.fontSize,\r\n            'normal'); // we need to prevent wrapping and handling of rc/lf in this control\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quizMultipleChoice submit buttom\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizButtonStyleObject(): any {\r\n        const left: number = this.quizMultipleChoice.x + (this.quizMultipleChoice.width - this.submitButtonWidth) / 2;\r\n        const top: number = this.quizMultipleChoice.y + this.quizMultipleChoice.height + 17;\r\n\r\n        return this.getQuizButtonStyle(this.quizMultipleChoice, top, left);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * getQuizType\r\n     *\r\n     */\r\n    protected getQuizType(): string {\r\n\r\n        return LMSConstant.MULTIPLE_CHOICE;\r\n    }\r\n\r\n    /**\r\n     * getLearnerResponse function\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getLearnerResponse(): string {\r\n        return this.learnerResponse;\r\n    }\r\n\r\n    /**\r\n     * getLearnerResponseText function\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getLearnerResponseText(): string {\r\n        switch (this.learnerResponse) {\r\n            case 'A':\r\n                return this.quizMultipleChoice.aChoiceText;\r\n            case 'B':\r\n                return this.quizMultipleChoice.bChoiceText;\r\n            case 'C':\r\n                return this.quizMultipleChoice.cChoiceText;\r\n            case 'D':\r\n                return this.quizMultipleChoice.dChoiceText;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n\r\n    /** \r\n     * getCorrectResponses function get correction response in array\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getCorrectResponses(): string {\r\n\r\n        return this.quizMultipleChoice.correctChoice;\r\n    }\r\n\r\n\r\n    /**\r\n     * getCorrectResponsesText function\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getCorrectResponsesText(): string {\r\n\r\n        switch (this.quizMultipleChoice.correctChoice) {\r\n\r\n            case 'A':\r\n                return this.quizMultipleChoice.aChoiceText;\r\n            case 'B':\r\n                return this.quizMultipleChoice.bChoiceText;\r\n            case 'C':\r\n                return this.quizMultipleChoice.cChoiceText;\r\n            case 'D':\r\n                return this.quizMultipleChoice.dChoiceText;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * getDescription question/description\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getDescription(): string {\r\n        return this.quizMultipleChoice.question;\r\n    }\r\n\r\n\r\n    /** \r\n     * validateAnswer function validate learner's response\r\n     *\r\n     * @returns boolean true if\r\n     *          1) learner select correct option or\r\n     *          2) learner select incorrect option AND multipleAttemptFlag false \r\n     *          3) learner select incorrect option AND learnerAttempt is no less than allowedoption\r\n     *\r\n     */\r\n    protected validateAnswer(displayAlert: boolean = true): boolean {\r\n\r\n        let validate: boolean = true;\r\n\r\n        let feedbackMessage: string = '';\r\n\r\n        switch (this.getLearnerResponse()) {\r\n            case 'A':\r\n                feedbackMessage = this.quizMultipleChoice.feedbackAMessage;\r\n                break;\r\n            case 'B':\r\n                feedbackMessage = this.quizMultipleChoice.feedbackBMessage;\r\n                break;\r\n            case 'C':\r\n                feedbackMessage = this.quizMultipleChoice.feedbackCMessage;\r\n                break;\r\n            case 'D':\r\n                feedbackMessage = this.quizMultipleChoice.feedbackDMessage;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // console.log('---validateAnswer feedbackMessage=' + feedbackMessage);\r\n        if (this.learnerResponse === '') {\r\n\r\n            validate = false;\r\n            this.displayMessage('You must select an answer to continue.');\r\n        } else {\r\n\r\n                // Leaner response is correct\r\n            if (this.quizMultipleChoice.correctChoice === this.getLearnerResponse()) {\r\n\r\n                    // if feedbackFlag is true and feedbackMessage is not empty\r\n                    if (this.quizMultipleChoice.feedBackFlag && feedbackMessage !== '') {\r\n\r\n                        this.displayMessage(feedbackMessage);\r\n                    }\r\n                    this.gotoNextPage = true;\r\n\r\n                } else { // Leaner response is incorrect\r\n\r\n                    this.learnerAttempt = this.learnerAttempt + 1;\r\n\r\n                // if multipleAttemptFlag is true and learnerAttempt is less than allowed\r\n                    if (this.quizMultipleChoice.multipleAttemptFlag &&\r\n                        this.quizMultipleChoice.numberOfAttempts > this.learnerAttempt) {\r\n\r\n                        this.displayMessage(this.quizMultipleChoice.feedbackIncorrectAttempt);\r\n\r\n                    } else {\r\n\r\n                        // if feedbackFlag is true and feedbackMessage is not empty\r\n                        if (this.quizMultipleChoice.feedBackFlag && feedbackMessage !== '') {\r\n\r\n                            this.displayMessage(feedbackMessage);\r\n                        }\r\n                        this.gotoNextPage = true;\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n        console.log('---validateAnswer validate=' + validate);\r\n\r\n        return validate;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/quiz-multiple-choice.component.ts","module.exports = \"<div [ngStyle]='quizTagStyleObject'></div>\\r\\n<div [ngStyle]='quizHeaderStyleObject'></div>\\r\\n<div [ngStyle]='quizNameLabelStyleObject'>{{quizResult.resultsHeaderText}}</div>\\r\\n<div [ngStyle]='quizScoreLabelStyleObject'>{{quizResult.quizScore}}</div>\\r\\n<div [ngStyle]='quizFooterStyleObject' [innerHTML]='resultText'></div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/quiz-result.component.html\n// module id = ./src/app/player/view/quiz-result.component.html\n// module chunks = main","///<reference path=\"../../model/services/scorm/lms.constant.ts\"/>\r\n/**\r\n * Created by vpozharov on 3/29/2017.\r\n */\r\nimport { Component, Input } from '@angular/core';\r\nimport { QuizResultDataObject } from '../../shared/system-shared/model/data-objects/components/quiz-result.data-object';\r\nimport { QuizComponent } from './quiz.component';\r\nimport { LMSConstant } from '../../model/services/scorm/lms.constant';\r\nimport {Interaction} from '../../model/services/scorm/interaction';\r\nimport { Objective } from '../../model/services/scorm/objective';\r\n\r\n@Component({\r\n    selector:  'player-quiz-result',\r\n    templateUrl: 'quiz-result.component.html'\r\n})\r\n\r\n/**\r\n * Component for DIF quiz result\r\n */\r\nexport class QuizResultComponent extends QuizComponent {\r\n    // Main Margins:\r\n    private marginLeft: number = 16;\r\n    private marginRight: number = 16;\r\n    private marginTop: number = 16;\r\n    private marginBottom: number = 16;\r\n    // Header:\r\n    private headerHeight: number = 100;\r\n    private headerY: number = 30;\r\n    // Space between the top and bottom containers\r\n    private verticalSpace: number = 16;\r\n    // Quiz Name label\r\n    private quizNameTop: number = 6; // top 'margin' (relative position)\r\n    private quizNameMargin: number = 30; // left and right margins\r\n    private quizNameFontSize: number = 20;\r\n    // Quiz Result label\r\n    private quizResutTop: number = 37; // top 'margin' (relative position)\r\n    private quizResultMargin: number = 20; // left and right margins\r\n    private quizResultFontSize: number = 26;\r\n    private quizResultFontWeight: string = 'bold';\r\n    // Quiz result text\r\n    private quizResultTextFontSize: number = 16;\r\n\r\n    private finalScore: number = 0;\r\n    /**\r\n     * The data object that contains the quiz result configuration information\r\n     */\r\n    @Input()\r\n    quizResult: QuizResultDataObject;\r\n\r\n    /**\r\n     * This is constructor for QuizResultComponent.\r\n     *\r\n     */\r\n    constructor() {\r\n        super();\r\n        // this.createResultData();\r\n    }\r\n\r\n    /**\r\n     * ngOnInit() create objective dataobject and save to LMS if scormService is isInitialized\r\n     * \r\n     */\r\n    ngOnInit(): void {\r\n\r\n        this.caculateFinalScore();\r\n\r\n        if (this.scormService.isInitialized()) {\r\n\r\n            let objective: Objective = this.scormService.getObjective(this.quizResult.quizName);\r\n\r\n            // scoreRaw set _score_raw and _score_scaled\r\n            objective.scoreRaw = this.finalScore;\r\n\r\n            objective.completionStatus = LMSConstant.COMPLETED;\r\n            this.scormService.writeObjective(objective);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz result frame\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizTagStyleObject(): any {\r\n        this.createResultData();\r\n        return super.getQuizOuterBoxStyle(this.quizResult);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz result question\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizHeaderStyleObject(): any {\r\n        const left: number = this.quizResult.x + this.marginLeft;\r\n        const top: number = this.quizResult.y + this.marginTop;\r\n        const width: number = this.quizResult.width\r\n            - this.marginLeft - this.marginRight - this.paddingLeft - this.paddingRight;\r\n\r\n        return this.getQuizBoxStyle(this.quizResult, left, top, width, this.headerHeight);\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz name label\r\n     * @returns {any} - Quiz Name Label Style\r\n     */\r\n    public get quizNameLabelStyleObject(): any {\r\n        const left: number = this.quizResult.x + this.quizNameMargin;\r\n        const top: number = this.quizResult.y + this.headerY + this.quizNameTop;\r\n        const width: number = this.quizResult.width - this.quizNameMargin * 2;\r\n\r\n        return this.getQuizLabelStyle(this.quizResult, left, top, width, this.quizNameFontSize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz score label\r\n     * @returns {any} - Quiz Score Label Style\r\n     */\r\n    public get quizScoreLabelStyleObject(): any {\r\n        const left: number = this.quizResult.x + this.quizResultMargin;\r\n        const top: number = this.quizResult.y + this.headerY + this.quizResutTop;\r\n        const width: number = this.quizResult.width - this.quizResultMargin * 2;\r\n\r\n        return this.getQuizLabelStyle(this.quizResult, left, top, width,\r\n            this.quizResultFontSize, this.quizResultFontWeight);\r\n\r\n    }\r\n\r\n    /**\r\n     * Creates a ngStyle object for quiz bottom container\r\n     * @returns any (ngStyle object)\r\n     */\r\n    public get quizFooterStyleObject(): any {\r\n        const left: number = this.quizResult.x + this.marginLeft;\r\n        const top: number = this.quizResult.y + this.marginTop + this.headerHeight + this.verticalSpace;\r\n        const width: number = this.quizResult.width\r\n            - this.marginLeft - this.marginRight\r\n            - this.paddingLeft - this.paddingRight;\r\n        const height: number = this.quizResult.height - this.marginTop\r\n            - this.headerHeight - this.verticalSpace - this.marginBottom;\r\n\r\n        return this.getQuizBoxStyle(this.quizResult,\r\n                                    left, top, width, height,\r\n                                    this.backColor, this.quizResultTextFontSize);\r\n\r\n    }\r\n\r\n    /**\r\n     * Text in the bottom box of the quiz\r\n     * @returns {string} - html with details of quizes with the same name as this one\r\n     */\r\n    public get resultText(): string {\r\n        return this.quizResult.resultText; // for now\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Private functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Prepare test result data\r\n     * TODO:    We need to strip out the code to caculate the finalScore in a seperate function\r\n     *          since we need it for SCORM too\r\n     */\r\n    private createResultData(): string {\r\n        // This procedure will be called twice from the template\r\n        // Prevent re-calculating the data\r\n        if (this.quizResult.quizScore !== '') {\r\n            return;\r\n        }\r\n\r\n        let totalScore: number = 0;\r\n\r\n        let html: string = '';\r\n        const currentName: string = this.quizResult.quizName;\r\n        let name: string = '';\r\n\r\n        for (let i: number = 0; i < this.scormService.interactions.length; i++) {\r\n            // check whether quizzes belong to the same group\r\n            name = this.scormService.interactions[i].objectives[0];\r\n\r\n            if (name === currentName) {\r\n                totalScore += 1;\r\n                // Create a header of the quiz result\r\n                html += '<b>' + totalScore + '.&nbsp';\r\n\r\n                if (this.scormService.interactions[i].result === 'correct') {\r\n                    html += '<font color=\"#00ff00\">Correct';\r\n                }else {\r\n                    html += '<font color=\"#ff0000\">Incorrect';\r\n                }\r\n\r\n                html += '</b></font><br>';\r\n\r\n                switch (this.scormService.interactions[i].type) {\r\n                    case LMSConstant.FILL_IN:\r\n                        html += this.getQuizFillInResult(this.scormService.interactions[i]);\r\n                        break;\r\n                    case LMSConstant.MATCHING:\r\n                        html += this.getMatchResult(this.scormService.interactions[i]);\r\n                        break;\r\n                    case LMSConstant.MULTIPLE_CHOICE:\r\n                        html += this.getQuizMultipleChoiceResult(this.scormService.interactions[i]);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // set data\r\n        this.quizResult.quizScore = 'Total Score: ' + this.finalScore + '%';\r\n        this.quizResult.resultText = html;\r\n    }\r\n\r\n    /**\r\n     * Generate HTML for Fill quiz result\r\n     * @param interaction - data of the quiz\r\n     * @returns {string} -  html with quiz result description to be displayed in the bottom window\r\n     */\r\n    private getQuizFillInResult(interaction: Interaction): string {\r\n        let html: string = '';\r\n        // Question\r\n        html += this.getQuizQuestionHtml(interaction);\r\n        // Your answer\r\n        if (this.quizResult.selectedAnswerFlag) {\r\n            html += '<b>Your answer:&nbsp</b>' + interaction.learnerResponse + '<br>';\r\n        }\r\n        // Right answer\r\n        if (this.quizResult.correctAnswerFlag) {\r\n            html += '<b>Right answer:&nbsp</b>' + interaction.correctResponses + '<br>';\r\n        }\r\n\r\n        html += '<p>';\r\n        return html;\r\n    }\r\n\r\n    /**\r\n     * Generate HTML for FMultiple Choice quiz result\r\n     * @param interaction - data of the quiz\r\n     * @returns {string} -  html with quiz result description to be displayed in the bottom window\r\n     */\r\n    private getQuizMultipleChoiceResult(interaction: Interaction): string {\r\n        let html: string = '';\r\n        // Question\r\n        html += this.getQuizQuestionHtml(interaction);\r\n        // Your answer\r\n        if (this.quizResult.selectedAnswerFlag) {\r\n            if (interaction.learnerResponseText !== undefined) {\r\n\r\n                html += '<b>Your answer:&nbsp</b>' + interaction.learnerResponseText + '<br>';\r\n            } else {\r\n                html += '<b>Your answer:&nbsp</b>' + interaction.learnerResponse + '<br>';\r\n            }\r\n\r\n        }\r\n        // Right answer\r\n        if (this.quizResult.correctAnswerFlag) {\r\n            if (interaction.correctResponsesText !== undefined) {\r\n                html += '<b>Right answer:&nbsp</b>' + interaction.correctResponsesText + '<br>';\r\n            } else {\r\n                html += '<b>Right answer:&nbsp</b>' + interaction.correctResponses + '<br>';\r\n\r\n            }\r\n        }\r\n\r\n        html += '<p>';\r\n        return html;\r\n    }\r\n\r\n    /**\r\n     * Generate HTML for Match quiz result\r\n     * @param interaction - data of the quiz\r\n     * @returns {string} -  html with quiz result description to be displayed in the bottom window\r\n     */\r\n    private getMatchResult(interaction: Interaction): string {\r\n        let html: string = '';\r\n        // Question\r\n        html += this.getQuizQuestionHtml(interaction);\r\n        // Your answer\r\n        if (this.quizResult.selectedAnswerFlag) {\r\n            if (interaction.learnerResponseText !== undefined) {\r\n                html += '<b>Your answer:&nbsp</b>' + this.splitResponceText(interaction.learnerResponseText) + '<br>';\r\n            } else {\r\n                html += '<b>Your answer:&nbsp</b>' + this.splitResponceText(interaction.learnerResponse) + '<br>'\r\n            }\r\n        }\r\n        // Right answer\r\n        if (this.quizResult.correctAnswerFlag) {\r\n            if (interaction.correctResponsesText !== undefined) {\r\n                html += '<b>Right answer:&nbsp</b>' + this.splitResponceText(interaction.correctResponsesText) + '<br>';\r\n            } else {\r\n                html += '<b>Right answer:&nbsp</b>' + this.splitResponceText(interaction.correctResponses) + '<br>';\r\n            }\r\n        }\r\n\r\n        html += '<p>';\r\n        return html;\r\n    }\r\n\r\n    /**\r\n     * Generate html code for the quiz question\r\n     * @param interaction - data of the quiz\r\n     */\r\n    private getQuizQuestionHtml(interaction: Interaction): string {\r\n        let html: string = '';\r\n        // Question\r\n        if (this.quizResult.questionTextFlag) {\r\n            html += '<b>Question:&nbsp</b>' + interaction.description + '<br>';\r\n        }\r\n\r\n        return html;\r\n    }\r\n\r\n    /**\r\n     * Split answer text and return html\r\n     * @param text - data of the quiz answer\r\n     */\r\n    private splitResponceText(text: string): string {\r\n        // Answer B[.]Choice B[,]Answer C[.]Choice C[,]Answer D[.]Choice D[,]Answer A[.]Choice A\r\n        let html: string = '';\r\n        const array: string[] = text.split('[,]');\r\n\r\n        for (let i: number = 0; i < array.length; i++) {\r\n            const members: string[] = array[i].split('[.]');\r\n            html += '<br>' + members[0] + '<br>&emsp;&emsp;&emsp;matches<br>' + members[1] + '<br>';\r\n            html += '----------------';\r\n        }\r\n\r\n        return html;\r\n    }\r\n\r\n    /**\r\n     * caculateFinalScore\r\n     * \r\n     */\r\n    private caculateFinalScore(): void {\r\n\r\n        let score: number = 0;\r\n        let totalScore: number = 0;\r\n        const currentName: string = this.quizResult.quizName;\r\n        for (let i: number = 0; i < this.scormService.interactions.length; i++) {\r\n\r\n            if (this.quizResult.quizName === this.scormService.interactions[i].objectives[0]) {\r\n\r\n                totalScore += 1;\r\n                if (this.scormService.interactions[i].result === 'correct') {\r\n\r\n                    score += 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (totalScore > 0) {\r\n            this.finalScore = Math.round(100 * score / totalScore);\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/quiz-result.component.ts","import { InjectorService } from '../../shared/system-shared/model/services/injector.service';\r\nimport {PageService } from '../../shared/system-shared/model/services/page.service';\r\nimport { ScormService } from '../../model/services/scorm-service';\r\nimport { Interaction } from '../../model/services/scorm/interaction';\r\nimport { LMSConstant } from '../../model/services/scorm/lms.constant';\r\nimport {ComponentDataObject} from '../../shared/system-shared/model/data-objects/components/component.data-object';\r\nimport {PopUpService} from '../../model/services/pop-up.service';\r\n\r\n\r\n/**\r\n * Base component for all quiz components\r\n */\r\nexport class QuizComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    protected interaction: Interaction;\r\n\r\n    protected interactionID: string;\r\n\r\n    protected learnerResponse: string = '';\r\n    protected learnerAttempt: number = 0;\r\n    protected gotoNextPage: boolean = false;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Common protected constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    protected quizBorderStyle: string = 'solid 1px black';\r\n    protected borderRadius: number = 10;\r\n    protected borderWidth: number = 2;\r\n    protected borderColor: string = 'Black';\r\n    protected backColor: string = 'white';\r\n    protected fontName: string = 'Verdana'; // default font name\r\n    protected fontColor: string = 'Black'; // default font color\r\n    protected fontSize: number = 20;\r\n    protected paddingRight: number = 5;\r\n    protected paddingLeft: number = 5;\r\n    // protected paddingTop: number = 5;\r\n    // protected paddingBottom: number = 5;\r\n    protected submitButtonWidth: number = 172;\r\n    protected submitButtonHeoght: number = 35;\r\n    protected submitButtonFontSize: number = 18;\r\n    protected submitButtonFontBold: string = 'Bold';\r\n    protected submitButtonFontColor: string = 'Black';\r\n    protected radioSize: number = 25;\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // protected _quizNameElement: ElementDataObject;\r\n    // protected _questionElement: ElementDataObject;\r\n\r\n    /**\r\n     * A reference to the ScormService and PageService\r\n     */\r\n    protected scormService: ScormService = InjectorService.injector.get(ScormService);\r\n    private pageService: PageService = InjectorService.injector.get(PageService);\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * This is an empty constructor.\r\n     * \r\n     */\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * initQuizComponent\r\n     *\r\n     * @param  quizName\r\n     *\r\n     */\r\n    public initQuizComponent(quizName: string): void {\r\n\r\n        this.interaction = this.scormService.GetInteractionByID(this.pageService.page.pageID);\r\n\r\n        // if interaction is not available, create a new one\r\n        if (this.interaction === undefined) {\r\n\r\n            this.interaction = new Interaction(this.pageService.page.pageID, this.getQuizType(), [quizName]);\r\n        } else if (this.interaction.learnerResponse !== undefined) {\r\n\r\n            this.learnerResponse = this.interaction.learnerResponse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * submitPressed function validate the answer first then set and save the interaction\r\n     *\r\n     *\r\n     */\r\n    public submitPressed(): void {\r\n\r\n        // console.log('###QuizComponent.submitPressed this.getCorrectResponses()###' + this.getCorrectResponses());\r\n        if (this.validateAnswer()) {\r\n\r\n            this.interaction.addCorrectResponse(this.getCorrectResponses());\r\n\r\n            // Added to save the actual text and not just the choice for Matching\r\n            this.interaction.addCorrectResponseText(this.getCorrectResponsesText());\r\n\r\n            this.interaction.setLearnerResponse(this.getLearnerResponse());\r\n            this.interaction.setLearnerResponseText(this.getLearnerResponseText());\r\n            this.interaction.description = this.getDescription();\r\n\r\n            console.log('###QuizComponent.submitPressed() interaction = ' + this.interaction.serializeToString());\r\n\r\n            this.scormService.saveInteraction(this.interaction);\r\n\r\n            console.log('###QuizComponent.submitPressed loadNextPage###');\r\n            if (this.gotoNextPage) {\r\n\r\n                this.pageService.loadNextPage();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** \r\n     * getCorrectResponses function need to be overriden in its derived class\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getCorrectResponses(): string {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * getCorrectResponsesText function need to be overriden in its derived class\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getCorrectResponsesText(): string {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * getLearnerResponse function need to be overriden in its derived class\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getLearnerResponse(): string {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * getLearnerResponseText function need to be overriden in its derived class\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getLearnerResponseText(): string {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * getDescription function need to be overriden in its derived class\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getDescription(): string {\r\n        return '';\r\n    }\r\n\r\n    /** \r\n     * getQuizType function need to be overriden in its derived class\r\n     *\r\n     * @returns string\r\n     */\r\n    protected getQuizType(): string {\r\n        return LMSConstant.OTHER;\r\n    }\r\n\r\n    /** \r\n     * validateAnswer function need to be overriden in its derived class\r\n     *\r\n     * @returns boolean\r\n     */\r\n    protected validateAnswer(displayAlert: boolean = true): boolean {\r\n        return true;\r\n    }\r\n\r\n    /** \r\n     * displayMessage function, will be replaced by DIF displayMessage\r\n     *\r\n     */\r\n    protected displayMessage(message: string): void {\r\n        InjectorService.injector.get(PopUpService).openSystemMessage(message);\r\n    }\r\n\r\n    /**\r\n     * Create quiz outer box style\r\n     * @param component - child quiz component\r\n     * @returns any - (ngStyle object)\r\n     */\r\n    protected getQuizOuterBoxStyle(component: ComponentDataObject): any {\r\n        return {\r\n            'top.px': component.y,\r\n            'left.px': component.x,\r\n            'width.px': component.width,\r\n            'height.px': component.height,\r\n            'position': 'absolute',\r\n            'z-index': component.z,\r\n            'border': this.quizBorderStyle,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create a quiz rounded box style used for \"text boxes\" (question, answer, etc.)\r\n     * @param component - child quiz component\r\n     * @param left - absolute x position of the box\r\n     * @param top - absolute y position of the box\r\n     * @param width - width of the box\r\n     * @param height - height of the box\r\n     * @returns any - ng style object\r\n     */\r\n    protected getQuizBoxStyle(component: ComponentDataObject,\r\n                        left: number,\r\n                        top: number,\r\n                        width: number,\r\n                        height: number,\r\n                        background: string = this.backColor,\r\n                        fontSize: number = this.fontSize,\r\n                        whiteSpace: string = 'pre-wrap'): any {\r\n        return {\r\n            'left.px': left,\r\n            'top.px': top,\r\n            'width.px': width,\r\n            'height.px': height,\r\n            'z-index': component.z,\r\n            'position': 'absolute',\r\n            'border-radius': this.borderRadius + 'px',\r\n            'border-style': 'solid',\r\n            'border-width': this.borderWidth,\r\n            'border-color': this.borderColor,\r\n            'background-color': background,\r\n            'white-space': whiteSpace, // handle CR NL\r\n            'overflow-y': 'auto',\r\n            'font-family': this.fontName,\r\n            'vertical-align': 'top',\r\n            'font-size': fontSize + 'pt',\r\n            'display': 'inline-block',\r\n            'padding-left': this.paddingLeft + 'px',\r\n            'padding-right': this.paddingRight + 'px',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create a label style object\r\n     * @param component\r\n     * @param left\r\n     * @param top\r\n     * @param width\r\n     * @param fontSize\r\n     * @param fontWeight\r\n     * @returns any - ng style object\r\n     */\r\n    protected getQuizLabelStyle(component: ComponentDataObject,\r\n                                left: number,\r\n                                top: number,\r\n                                width: number,\r\n                                fontSize: number,\r\n                                fontWeight: string = 'normal',\r\n                                textAlign: string = 'center'): any {\r\n        return {\r\n            'left.px': left,\r\n            'top.px': top,\r\n            'width.px': width,\r\n            'z-index': component.z,\r\n            'position': 'absolute',\r\n            'font-family': this.fontName,\r\n            'font-size': fontSize + 'pt',\r\n            'font-weight': fontWeight,\r\n            'text-align': textAlign,\r\n            'display': 'inline-block',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create a quiz button style\r\n     * @param component\r\n     * @param top\r\n     * @param left\r\n     * @returns any - ng style object\r\n     */\r\n    protected getQuizButtonStyle(component: ComponentDataObject, top: number, left: number): any {\r\n        return {\r\n            'width.px': this.submitButtonWidth,\r\n            'left.px': left,\r\n            'top.px': top,\r\n            'height.px': this.submitButtonHeoght,\r\n            'position': 'absolute',\r\n            'font-size': this.submitButtonFontSize + 'pt',\r\n            'font-color': this.submitButtonFontColor,\r\n            'fontWeight': this.submitButtonFontBold,\r\n            'z-index': component.z,\r\n            'font-family': this.fontName,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create a quiz radio button style\r\n     * @param component\r\n     * @param top\r\n     * @param left\r\n     * @returns - ng style object\r\n     */\r\n    protected getRadioButtonStyle(component: ComponentDataObject, top: number, left: number): any {\r\n        return {\r\n            'width.px': this.radioSize,\r\n            'height.px': this.radioSize,\r\n            'left.px': left,\r\n            'top.px': top,\r\n            'position': 'absolute',\r\n            'enabled': 'true',\r\n            'z-index': component.z,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create a quiz answer tile style (letters A, B,...)\r\n     * @param component\r\n     * @param top\r\n     * @param left\r\n     * @param width\r\n     * @param height\r\n     * @returns - ng style object\r\n     */\r\n    protected getQuizAnswerTitleStyle(component: ComponentDataObject,\r\n                                      top: number,\r\n                                      left: number,\r\n                                      width: number,\r\n                                      height: number,\r\n                                      fontSize: number = this.fontSize): any {\r\n        return {\r\n            'width.px': width,\r\n            'z-index': component.z,\r\n            'position': 'absolute',\r\n            'left.px': left,\r\n            'top.px': top,\r\n            'height.px': height,\r\n            'font-size': this.fontSize + 'pt',\r\n            'font-color': this.fontColor,\r\n            'font-family': this.fontName,\r\n            'display': 'flex',\r\n            'align-items': 'center',\r\n            'justify-content': 'center',\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/quiz.component.ts","module.exports = \"<input #elementRef playerRadioButtonEventHandler [dataSource]=\\\"dataSource\\\" type='radio' [name]=\\\"radioButton.groupName\\\"\\r\\n[ngStyle]=\\\"inputTagStyle\\\" [checked]=\\\"radioButton.selected\\\" >\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/radio-button.component.html\n// module id = ./src/app/player/view/radio-button.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\nimport { AbstractComponent }\r\n    from './abstract.component';\r\nimport { RadioButtonDataObject }\r\n    from '../../shared/system-shared/model/data-objects/components/radio-button.data-object';\r\n\r\n\r\n@Component({\r\n    selector: 'player-radio-button',\r\n    templateUrl: 'radio-button.component.html',\r\n    styleUrls:  [ '../../app.component.css' ]\r\n})\r\n\r\n\r\n/**\r\n * The view model of the application's Angular radio button component.\r\n */\r\nexport class RadioButtonComponent extends AbstractComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * A convenience reference to the dataSource that provides the model data for this component cast as an actual\r\n     * RadioButtonDataObject.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private radioButton: RadioButtonDataObject;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the input tag used in\r\n     * this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's input tag.\r\n     */\r\n    public get inputTagStyle(): Object {\r\n\r\n        return this.commonStyleProperties;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Angular Lifecycle Hooks\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public ngOnInit(): void {\r\n\r\n        super.ngOnInit();\r\n\r\n        this.radioButton = this.dataSource as RadioButtonDataObject;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/radio-button.component.ts","module.exports = \"<div #elementRef playerTextEventHandler\\r\\n    [dataSource]=\\\"dataSource\\\"\\r\\n    [ngStyle]=\\\"divTagStyle\\\">\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/text-display.component.html\n// module id = ./src/app/player/view/text-display.component.html\n// module chunks = main","import { Component }    from '@angular/core';\r\n\r\nimport { TextComponent }    from './text.component';\r\n\r\n\r\n@Component({\r\n    selector: 'player-text-display',\r\n    templateUrl: 'text-display.component.html',\r\n    styleUrls:  [ '../../app.component.css' ]\r\n})\r\n\r\n\r\n/**\r\n * TODO:    Write description.\r\n */\r\nexport class TextDisplayComponent extends TextComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the div tag used in\r\n     * this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's div tag.\r\n     */\r\n    public get divTagStyle(): Object {\r\n\r\n        return this.textStyleProperties;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/text-display.component.ts","module.exports = \"<textarea #elementRef playerTextEventHandler\\r\\n          [dataSource]=\\\"dataSource\\\"\\r\\n          [(ngModel)]=\\\"textDataSource.text\\\"\\r\\n          [ngStyle]=\\\"textareaTagStyle\\\"\\r\\n          [readonly]=\\\"textDataSource.isReadOnly\\\">\\r\\n</textarea>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/text-input-area.component.html\n// module id = ./src/app/player/view/text-input-area.component.html\n// module chunks = main","import { Component }    from '@angular/core';\r\n\r\nimport { TextComponent }    from './text.component';\r\n\r\n\r\n@Component({\r\n    selector: 'player-text-input-area',\r\n    templateUrl: 'text-input-area.component.html',\r\n    styleUrls:  [ '../../app.component.css' ]\r\n})\r\n\r\n\r\n/**\r\n * TODO:    Write description.\r\n */\r\nexport class TextInputAreaComponent extends TextComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the textarea tag used\r\n     * in this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's textarea tag.\r\n     */\r\n    public get textareaTagStyle(): Object {\r\n\r\n        return this.textStyleProperties;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/text-input-area.component.ts","module.exports = \"<input type=\\\"text\\\"\\r\\n    #elementRef playerTextEventHandler\\r\\n    [dataSource]=\\\"dataSource\\\"\\r\\n    [(ngModel)]=\\\"textDataSource.text\\\"\\r\\n    [ngStyle]=\\\"inputTagStyle\\\"\\r\\n    [readonly]= \\\"textDataSource.isReadOnly\\\">\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/text-input.component.html\n// module id = ./src/app/player/view/text-input.component.html\n// module chunks = main","import { Component }    from '@angular/core';\r\n\r\nimport { TextComponent }    from './text.component';\r\n\r\n\r\n@Component({\r\n    selector: 'player-text-input',\r\n    templateUrl: 'text-input.component.html',\r\n    styleUrls:  [ '../../app.component.css' ]\r\n})\r\n\r\n\r\n/**\r\n * TODO:    Write description.\r\n */\r\nexport class TextInputComponent extends TextComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the input tag used in\r\n     * this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's input tag.\r\n     */\r\n    public get inputTagStyle(): Object {\r\n\r\n        return this.textStyleProperties;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/text-input.component.ts","import { OnDestroy }    from '@angular/core';\r\n\r\nimport { AbstractComponent }    from './abstract.component';\r\nimport { TextDataObject }       from '../../shared/system-shared/model/data-objects/components/text.data-object';\r\n\r\n\r\n/**\r\n * TODO:    Write description.\r\n */\r\nexport abstract class TextComponent extends AbstractComponent implements OnDestroy {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * A convenience reference to the dataSource that provides the model data for this component cast as an actual\r\n     * TextDataObject.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public textDataSource: TextDataObject;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An Object containing style properties common to all of the application's text-related Angular view components in\r\n     * addition to all the style properties common to all Angular view components.\r\n     *\r\n     * @default An Object containing all style properties common to both text-related, and general application view\r\n     *          components.\r\n     */\r\n    protected get textStyleProperties(): Object {\r\n\r\n        const tagStyle: Object = this.commonStyleProperties;\r\n\r\n        // These CSS properties have no data object source and are not user configurable.\r\n        tagStyle['overflow']            =   'auto';\r\n        tagStyle['padding-left']        =   '3px';\r\n        tagStyle['padding-right']       =   '3px';\r\n\r\n        tagStyle['text-align']          =   this.textDataSource.alignment;\r\n        tagStyle['background']          =   this.textDataSource.hasBackground ?\r\n                                            this.textDataSource.backgroundColor : 'transparent';\r\n        tagStyle['font-family']         =   this.textDataSource.font;\r\n        tagStyle['font-size.px']        =   this.textDataSource.fontSize;\r\n        tagStyle['color']               =   this.textDataSource.fontColor;\r\n        tagStyle['font-style']          =   this.textDataSource.isItalic ? 'italic' : 'normal';\r\n        tagStyle['text-decoration']     =   this.textDataSource.isUnderline ? 'underline' : 'none';\r\n        tagStyle['font-weight']         =   this.textDataSource.isBold ? 'bold' : 'normal';\r\n\r\n        if (this.textDataSource.hasBorder) {\r\n\r\n            tagStyle['border']      = '1px solid ' + this.textDataSource.borderColor;\r\n            tagStyle['width.px']    = this.dataSource.width - (3 * 2) - 2;\r\n            tagStyle['height.px']   = this.dataSource.height - 2;\r\n\r\n        } else {\r\n\r\n            tagStyle['border']      = 'none';\r\n            tagStyle['width.px']    = this.dataSource.width;\r\n            tagStyle['height.px']   = this.dataSource.height;\r\n        }\r\n\r\n        // if the user is allowed to select the text, enable all the various browser specific CSS properties, otherwise\r\n        // disable them.  (I know right?)\r\n        if (this.textDataSource.isSelectable) {\r\n\r\n            tagStyle['user-select']             = 'text'; /* Standard syntax, currently supported by Chrome and Opera */\r\n            tagStyle['-ms-user-select']         = 'text'; /* Internet Explorer 10+ / Edge */\r\n            tagStyle['-moz-user-select']        = 'text'; /* Firefox 2+ */\r\n            tagStyle['-khtml-user-select']      = 'text'; /* Konqueror HTML */\r\n            tagStyle['-webkit-user-select']     = 'text'; /* Chrome, Opera, Safari */\r\n            tagStyle['-webkit-touch-callout']   = 'text'; /* iOS Safari */\r\n\r\n        } else {\r\n\r\n            tagStyle['user-select']             = 'none'; /* Standard syntax, currently supported by Chrome and Opera */\r\n            tagStyle['-ms-user-select']         = 'none'; /* Internet Explorer 10+ / Edge */\r\n            tagStyle['-moz-user-select']        = 'none'; /* Firefox 2+ */\r\n            tagStyle['-khtml-user-select']      = 'none'; /* Konqueror HTML */\r\n            tagStyle['-webkit-user-select']     = 'none'; /* Chrome, Opera, Safari */\r\n            tagStyle['-webkit-touch-callout']   = 'none'; /* iOS Safari */\r\n        }\r\n\r\n        /*\r\n            TODO: Might need to handle these as well.  If so should probably go in the input versions.\r\n            ['_maxChars',           'maxChars',         'MaxChars',         'element'],\r\n            ['_maxValue',           'maxValue',         'MaxValue',         'element'],\r\n        */\r\n\r\n        return tagStyle;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Angular Lifecycle Hooks\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public ngOnInit(): void {\r\n\r\n        super.ngOnInit();\r\n\r\n        this.textDataSource = this.dataSource as TextDataObject;\r\n\r\n        if (this.textDataSource.isDisplayComponent) {\r\n\r\n            this.textDataSource.shouldSubscribeToVariableChanges = true;\r\n\r\n            this.textDataSource.subscribeToDisplayTextChanges((displayText: string) => {\r\n                this.elementRef.nativeElement.innerHTML = displayText;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public ngOnDestroy(): void {\r\n\r\n        if (this.textDataSource) {\r\n\r\n            this.textDataSource.onDestroy();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/text.component.ts","module.exports = \"<video #elementRef playerVideoEventHandler [dataSource]=\\\"dataSource\\\" [ngStyle]=\\\"videoTagStyle\\\"\\r\\n       [controls] = \\\"video.displayControls\\\" [autoplay] = \\\"video.playOnLoad\\\" (error) = \\\"errorHandle($event)\\\" title={{video.description}}>\\r\\n    <source *ngIf=\\\"defaultVideoType\\\" src={{video.URL}} type=\\\"{{defaultVideoType}}\\\">\\r\\n    <source *ngIf=\\\"video.URLmp4\\\" src={{video.URLmp4}} type=\\\"video/mp4\\\">\\r\\n    <source *ngIf=\\\"video.URLwebm\\\" src={{video.URLwebm}} type=\\\"video/webm\\\">\\r\\n    <source *ngIf=\\\"video.URLogv\\\" src={{video.URLogv}} type=\\\"video/ogg\\\">\\r\\n    <source *ngIf=\\\"video.URLflv\\\" src={{video.URLwebm}} type=\\\"video/x-flv\\\">\\r\\n    <source *ngIf=\\\"video.URLf4v\\\" src={{video.URLogv}} type=\\\"video/x-f4v\\\">\\r\\n\\r\\n    Your browser does not support the video.\\r\\n</video>\\r\\n\\r\\n<div *ngIf=\\\"videoErrorMessage\\\" [ngStyle]=\\\"errorMessageTagStyle\\\" >{{videoErrorMessage}}</div>\\r\\n\\r\\n<input *ngIf=\\\"createBlackBox\\\" type=\\\"text\\\" [ngStyle]=\\\"blackboxTagStyle\\\" (click)=\\\"hideBlackBox()\\\">\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/player/view/video.component.html\n// module id = ./src/app/player/view/video.component.html\n// module chunks = main","import { Component} from '@angular/core';\r\n\r\nimport { AbstractComponent }    from './abstract.component';\r\n\r\nimport { VideoDataObject }  from '../../shared/system-shared/model/data-objects/components/video.data-object';\r\n\r\n\r\n@Component({\r\n    selector: 'player-video',\r\n    templateUrl: 'video.component.html',\r\n    styleUrls:  [ '../../app.component.css' ]\r\n})\r\n\r\n\r\n/**\r\n * The view model of the application's Angular video component.\r\n */\r\nexport class VideoComponent extends AbstractComponent {\r\n\r\n    /**\r\n     * A convenience reference to the dataSource that provides the model data for this component cast as an actual\r\n     * VideoDataObject.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public video: VideoDataObject;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default false\r\n     */\r\n    private isVideoComplete: boolean = false;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected defaultVideoType: string;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected videoErrorMessage: string;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of the video tag used in\r\n     * this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for this component's video tag.\r\n     */\r\n    public get videoTagStyle(): any {\r\n        return this.commonStyleProperties;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of blackbox used in\r\n     * this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for blackbox.\r\n     */\r\n    public get blackboxTagStyle(): any {\r\n\r\n        return {\r\n            'top.px': +this.dataSource.y + 0,\r\n            'left.px': this.dataSource.x + 0,\r\n            'width.px': this.dataSource.width,\r\n            'height.px': this.dataSource.height,\r\n            'position': 'absolute',\r\n            'z-index': this.dataSource.z + 1,\r\n            'visibility': this.dataSource.visible ? 'visible' : 'hidden',\r\n            'opacity': 1,\r\n            'display': (this.isVideoComplete) ? 'block' : 'none',\r\n            'background-color': 'black'\r\n        };\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The style Object used by the ngStyle directive that updates the inline style attribute of errorMessage used in\r\n     * this component's template.\r\n     *\r\n     * @default A style Object containing the CSS properties for errorMessage.\r\n     */\r\n    public get errorMessageTagStyle(): any {\r\n\r\n        return {\r\n            'top.px': +this.dataSource.y,\r\n            'left.px': this.dataSource.x,\r\n            'width.px': this.dataSource.width,\r\n            'height.px': this.dataSource.height,\r\n            'position': 'absolute',\r\n            'z-index': this.dataSource.z + 2,\r\n            'font-family': 'Serif',\r\n            'font-size.px': 20,\r\n            'visibility': this.dataSource.visible ? 'visible' : 'hidden',\r\n            'display': 'block',\r\n            'background-color': 'black',\r\n            'color': 'white',\r\n            'text-align': 'center',\r\n            'vertical-align': 'middle'\r\n        };\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * createBlackBox indicator video is complete\r\n     * TODO: ummm...what?\r\n     */\r\n    public get createBlackBox(): boolean {\r\n\r\n        return this.video.goToBlack;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Angular Lifecycle Hooks\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Sets the default video type, hides the video container if there is no URL, and\r\n     * subscribes to the onComplete event.\r\n     *\r\n     * @inheritDoc\r\n     */\r\n    ngOnInit(): void {\r\n\r\n        super.ngOnInit();\r\n\r\n        this.video = (this.dataSource as VideoDataObject);\r\n\r\n        if (this.video.URL) {\r\n            if (this.checkFileExtension(this.video.URL, '.mp4')) {\r\n                this.defaultVideoType = 'video/mp4';\r\n            }else if (this.checkFileExtension(this.video.URL, '.webm')) {\r\n                this.defaultVideoType = 'video/webm';\r\n            } else if (this.checkFileExtension(this.video.URL, '.ogv')) {\r\n                this.defaultVideoType = 'video/ogg';\r\n            }else if (this.checkFileExtension(this.video.URL, '.flv')) {\r\n                this.defaultVideoType = 'video/x-flv';\r\n            }else if (this.checkFileExtension(this.video.URL, '.f4v')) {\r\n                this.defaultVideoType = 'video/x-f4v';\r\n            }\r\n        }\r\n\r\n        // if no video URL, hide the video container per DIF-10277\r\n        if (!this.video.URL) {\r\n            this.video.visible = false;\r\n        }\r\n\r\n        // onComplete event is available from ComponentDataObject.\r\n        // VideoEventHandlerDirective.processEvent emits it\r\n        this.video.onComplete.subscribe(() => {\r\n\r\n            this.isVideoComplete = true;\r\n        });\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods / Functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * hideBlackBox when\r\n     * TODO: ummm...what?\r\n     */\r\n    public hideBlackBox(): void {\r\n        this.isVideoComplete = false;\r\n    }\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @param {string} filename\r\n     * @param {string} fileExtension\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    public checkFileExtension(filename: string, fileExtension: string): boolean {\r\n\r\n        return (filename.lastIndexOf(fileExtension) === (filename.length - fileExtension.length));\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handling\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @param {Event} event\r\n     */\r\n    public errorHandle(event: Event): void {\r\n\r\n        this.videoErrorMessage = 'None of the provided video file(s) are supported by the browser!';\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/player/view/video.component.ts","import { LFService, LoggerFactoryOptions, LogGroupRule, LogLevel, Logger, LoggerFactory } from 'typescript-logging';\r\n\r\n/*\r\n * There are two ways of logging things.\r\n *\r\n * The normal way using:\r\n * trace, debug, info, warn, error, fatal, all of these methods\r\n * expect at least an error message, optionally an Error.\r\n *\r\n * Sample: logger.debug(\"Hello world\");\r\n *         logger.error(\"This is an error\", new Error(\"fail\"));\r\n *\r\n * Using closures:\r\n * tracec, debugc, infoc, warnc, errorc, fatalc(note the c for closure).\r\n * These methods expect a closure for the message, and optionally one for the Error.\r\n * The latter can be very useful if you have something expensive to log, and\r\n * only really want to log it when the logger framework * will * log it.In addition\r\n * you can use the closure one to do special things.\r\n *\r\n * Sample: logger.debugc(() => \"Hello world\");\r\n *         logger.errorc(() => \"Very expensive \" + obj.toDoThis(), () => new Error(\"Oops\"));\r\n *         logger.fatalc(() => {\r\n *           // Do something amazingly custom here\r\n *           return \"My Error Message\";\r\n *         });\r\n */\r\n\r\n/**\r\n * Singleton class to configure and provide support for typescript logging\r\n * Requires typescript-logging.\r\n * Installation: npm install --save typescript-logging (already included in package.json)\r\n */\r\nexport class Log {\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Reference to singleton instance\r\n     * @type {Log}\r\n     * @private\r\n     */\r\n    private static _instance: Log = new Log();\r\n\r\n    /**\r\n     * LoggerFactory\r\n     * NOTE: initialized without specific configuration options which will log at INFO level to the console for\r\n     *          scenarios where code is attempting to use the logger before specific configuration options (typically\r\n     *          specified in the external config.xml file) have been set via configureLoggerFactory.\r\n     *\r\n     * @type {LoggerFactory}\r\n     * @private\r\n     */\r\n    private _factory: LoggerFactory = LFService.createLoggerFactory();\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Static Functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Get instance of Log singleton\r\n     *\r\n     * @returns {Log}\r\n     */\r\n    public static getInstance(): Log {\r\n        return Log._instance;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    constructor() {\r\n        if (Log._instance) {\r\n            throw new Error('The Logger is a singleton class and cannot be created!');\r\n        }\r\n\r\n        Log._instance = this;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Configure LoggerFactory.\r\n     * NOTE: Currently only configures level, but can configure other settings like group rules in the future.\r\n     *\r\n     * @param level - level at which loggers generated from this factory should be configured to write at (will write\r\n     *                  at the level specified by this parameter or higher - defined by LogLevel enumeration e.g.\r\n     *                  LogLevel.Error)\r\n     */\r\n    public configureLoggerFactory(level: LogLevel): void {\r\n        // All loggers with the name like DIF.* will have the same logging level\r\n        this._factory.configure(new LoggerFactoryOptions()\r\n            .addLogGroupRule(new LogGroupRule(new RegExp('DIF\\\\..+'), level))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get logger object.\r\n     *\r\n     * @param name - logger name. The actual name will be DIF.name.\r\n     * @returns {Logger}\r\n     */\r\n    public getLogger(name: string): Logger {\r\n        return this._factory.getLogger('DIF.' + name);\r\n    }\r\n}\r\n\r\n\r\n// Re-export Logger as convenience so that classes using logging can import everything needed from this one file\r\nexport { Logger } from 'typescript-logging';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/log.ts","// import { Component }            from './component';\r\nimport { ComponentContainerDataObject }   from './data-objects/components/component-container.data-object';\r\nimport { ElementDataObject }    from './data-objects/element.data-object'\r\nimport { Log, Logger } from '../log';\r\n\r\n\r\n/*\r\n *\r\n * Data object for DIF content window component\r\n *\r\n * */\r\nexport class ContentWindow extends ComponentContainerDataObject {\r\n\r\n    /**\r\n     *\r\n     */\r\n    public type: string = 'ContentWindow';\r\n\r\n    public backgroundColor: string;\r\n\r\n    public borderColor: string;\r\n\r\n    public backgroundAlpa: string;\r\n\r\n    public borderAlpha: string;\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private contentWindowDataObjectLogger: Logger;\r\n\r\n\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n\r\n        // this.backgroundColor = jsonData.backgroundColor;\r\n\r\n        // this.parseElementChildren();\r\n        // console.log('ContentWindow:');\r\n        // console.log('x = ' + this.x + ' y = ' + this.y);\r\n        this.contentWindowDataObjectLogger.debug(this.serializeToString());\r\n    }\r\n\r\n    /**\r\n     * Parse all button specific properties\r\n     * Overrides parent method\r\n     *\r\n     * @param   child: ElementDataObject\r\n     */\r\n    protected parseElement(child: ElementDataObject): void {\r\n        // NOTE: We cannot call ComponentDataObject parseElement method from here directly (super.super)\r\n        //       Therefore, we created parseProperties method on ComponentDataObject to substitute its parseElement method\r\n        //       which has the same name in all component data objects\r\n        // TODO: If it can be done in a more elegant name - just do it!\r\n        this.contentWindowDataObjectLogger = Log.getInstance().getLogger('ContentWindow');\r\n        switch (child.name) {\r\n            case 'BackgroundColor':\r\n                this.backgroundColor = child.value.replace('0x', '#');\r\n                break;\r\n            case 'BorderColor':\r\n                this.borderColor = child.value.replace('0x', '#');\r\n                break;\r\n            case 'BackgroundAlpha':\r\n                // if (child.value === '1') {\r\n                //     this.backgroundVisible = true;\r\n                // }\r\n                this.backgroundAlpa = child.value;\r\n                break;\r\n            case 'BorderAlpha':\r\n                // if (child.value === '1') {\r\n                //     this.borderVisible = true;\r\n                // }\r\n                this.borderAlpha = child.value;\r\n                break;\r\n            // case 'Alpha':\r\n            //     this.alpha = child.value;\r\n            //     break;\r\n        }\r\n        super.parseProperties(child); // parse standard component properties\r\n        super.parseElement(child);  // parse components\r\n\r\n    }\r\n\r\n\r\n    public serializeToString(): string {\r\n        let outString: string = 'Content Window Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'backgroundColor = ' + this.backgroundColor + '\\n';\r\n        outString += 'borderColor = ' + this.borderColor + '\\n';\r\n        // outString += 'alpha = ' + this.alpha + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'backgroundAlpa = ' + this.backgroundAlpa + '\\n';\r\n        outString += 'borderAlpha = ' + this.borderAlpha + '\\n';\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/content-window.ts","import { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { Log, Logger } from '../../../log';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { FrameworkEventDataObject } from './framework-event.data-object';\r\nimport { ComponentDataObject } from '../components/component.data-object';\r\n\r\n\r\n/**\r\n * Old Action System Data Object for holding FrameworkAction related data\r\n */\r\nexport abstract class FrameworkActionDataObject extends ElementBasedDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify an Element associated with a FrameworkAction\r\n     * @type {string}\r\n     */\r\n    public static readonly FRAMEWORK_ACTION_ELEMENT_NAME: string = 'Actions';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Reference to child FrameworkEvent\r\n     * TODO: Can action have more than one event - does this need to be an array?\r\n     */\r\n    protected _frameworkEvent: FrameworkEventDataObject;\r\n\r\n    /**\r\n     * Reference to parent ComponentDataObject of this action\r\n     */\r\n    protected _parent: ComponentDataObject;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private frameworkActionLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.frameworkActionLogger = Log.getInstance().getLogger('FrameworkActionDataObject');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs FrameworkAction specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be parsed (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case FrameworkEventDataObject.FRAMEWORK_EVENT_ELEMENT_NAME:\r\n                this.frameworkActionLogger.debug('parseElement(): FrameworkEvent');\r\n                // Create FrameworkEvent\r\n                this._frameworkEvent = this.createFrameworkEvent(element);\r\n                this._frameworkEvent.parent = this;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public get frameworkEvent(): FrameworkEventDataObject {\r\n        return this._frameworkEvent;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    public get parent(): ComponentDataObject {\r\n        return this._parent;\r\n    }\r\n\r\n    public set parent(value: ComponentDataObject) {\r\n        this._parent = value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version of\r\n     * FrameworkEventDataObject\r\n     *\r\n     * @param element -> root level Element to construct FrameworkEvent from\r\n     * @returns {FrameworkEventDataObject}\r\n     */\r\n    protected createFrameworkEvent(element: ElementDataObject): FrameworkEventDataObject {\r\n        /*\r\n         TODO: Since this class is abstract, this version of createEvent should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/action-system/framework-action.data-object.ts","import { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { FrameworkActionDataObject } from './framework-action.data-object';\r\nimport { FrameworkFunctionDataObject } from './framework-function.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n\r\n/**\r\n * Old Action System data object for holding FrameworkEvent related data\r\n */\r\nexport abstract class FrameworkEventDataObject extends ElementBasedDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify Element associated with a FrameworkEvent\r\n     * @type {string}\r\n     */\r\n    public static readonly FRAMEWORK_EVENT_ELEMENT_NAME: string = 'FrameworkEvent';\r\n\r\n    /**\r\n     * String used to identify Element associated with value\r\n     * @type {string}\r\n     */\r\n    // protected static readonly VALUE_ELEMENT_NAME: string = 'Value';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Reference to child FrameworkEvent\r\n     * TODO: Can event have more than one function - does this need to be an array?\r\n     */\r\n    public frameworkFunction: FrameworkFunctionDataObject;\r\n\r\n    /**\r\n     * \"Name\" of event (i.e. functionButtonPressed)\r\n     *\r\n     * @internal: Not sure if this is actually used for anything.  Might be informational only.  Its value is stored in\r\n     *              the value property of the localRoot Element object for FrameworkEvent which in itself is kind of odd\r\n     *              (typically a property would be stored in its own separate child Element)\r\n     */\r\n    protected _eventName: string;\r\n\r\n    /**\r\n     * Reference to parent FrameworkAction\r\n     */\r\n    protected _parent: FrameworkActionDataObject;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private frameworkEventLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.frameworkEventLogger = Log.getInstance().getLogger('FrameworkEventDataObject');\r\n\r\n        super.constructorPreprocessing();\r\n        this._eventName = this._localRoot.value;\r\n        this.frameworkEventLogger.debug('constructorPreprocessing(): FrameworkEvent name = ' + this._eventName);\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs FrameworkEvent specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be parsed (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        this.frameworkEventLogger.debug('parseElement(): element.name = ' + element.name);\r\n        switch (element.name) {\r\n            case FrameworkFunctionDataObject.FRAMEWORK_FUNCTION_ELEMENT_NAME:\r\n                // Create FrameworkFunction\r\n                this.frameworkEventLogger.debug('parseElement(): FrameworkFunction');\r\n                this.frameworkFunction = this.createFrameworkFunction(element);\r\n                this.frameworkFunction.parent = this;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public get parent(): FrameworkActionDataObject {\r\n        return this._parent;\r\n    }\r\n\r\n    public set parent(value: FrameworkActionDataObject) {\r\n        this._parent = value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public get eventName(): string {\r\n        return this._eventName;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version of\r\n     * FrameworkFunctionDataObject\r\n     *\r\n     * @param element -> root level Element to construct FrameworkFunction from\r\n     * @returns {FrameworkFunctionDataObject}\r\n     */\r\n    protected createFrameworkFunction(element: ElementDataObject): FrameworkFunctionDataObject {\r\n        /*\r\n         TODO: Since this class is abstract, this version of createEvent should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/action-system/framework-event.data-object.ts","import { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { FrameworkEventDataObject } from './framework-event.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n\r\n/**\r\n * Old Action System Data Object for holding FrameworkFunction related data\r\n *\r\n * @internal: Slightly unusual ElementDataObject structure.  Root is an ElementDataObject, but it has no properties /\r\n *              child ElementDataObjects, so might not really need to inherit from ElementBasedDataObject, but will do\r\n *              anyway to get built in constructor processing.  The root ElementDataObject value itself tells us what\r\n *              function it's supposed to run, so it's the only data we need to extract.  No override of the parent's\r\n *              parseElement method is necessary.\r\n */\r\nexport abstract class FrameworkFunctionDataObject extends ElementBasedDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify an Element associated with a FrameworkFunction\r\n     * @type {string}\r\n     */\r\n    public static readonly FRAMEWORK_FUNCTION_ELEMENT_NAME: string = 'FrameworkFunction';\r\n\r\n    /**\r\n     * Strings used to identify Action System Functions\r\n     */\r\n    protected static readonly GOTO_PAGE_FUNCTION: string = 'GotoPage';\r\n    protected static readonly NEXT_PAGE_FUNCTION: string = 'NextPage';\r\n    protected static readonly PREV_PAGE_FUNCTION: string = 'PrevPage';\r\n    protected static readonly MESSAGE_FUNCTION: string = 'Message';\r\n    protected static readonly VALIDATE_FUNCTION: string = 'Validate';\r\n    // protected static readonly OPEN_COURSE_MAP_FUNCTION: string = 'OpenCourseMap'; // Is this even used?\r\n    // protected static readonly CLOSE_TRAINING_FUNCTION: string = 'CloseTraining'; // Is this used?\r\n    // protected static readonly PRINT_FUNCTION: string = 'Print'; // Is this used?\r\n    // protected static readonly READ_MEMORY: string = 'RecallMemory'; // Used?\r\n    // protected static readonly WRITE_MEMORY: string = 'SaveMemory'; // Used?\r\n    // protected static readonly GET_VALUE: string = 'GetValue'; // Used?\r\n    // protected static readonly SET_VALUE: string = 'SetValue'; // Used?\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * \"Name\" of FrameworkFunction (i.e. NextPage)\r\n     *\r\n     * @internal: Its value is stored in the value property of the localRoot Element object for FrameworkFunction which\r\n     *              in itself is kind of odd (typically a property would be stored in its own separate child Element).\r\n     */\r\n    protected functionName: string;\r\n\r\n    /**\r\n     * Reference to parent FrameworkEvent\r\n     */\r\n    protected _parent: FrameworkEventDataObject;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private frameworkFunctionLogger: Logger = Log.getInstance().getLogger('FrameworkFunctionDataObject');\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.frameworkFunctionLogger = Log.getInstance().getLogger('FrameworkFunctionDataObject');\r\n\r\n        super.constructorPreprocessing();\r\n        this.functionName = this._localRoot.value;\r\n        this.frameworkFunctionLogger.debug('constructorPreprocessing(): FrameworkFunction name = ' + this.functionName);\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: FrameworkEventDataObject) {\r\n        this._parent = value;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/action-system/framework-function.data-object.ts","import { ComponentDataObject } from './component.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n/*\r\n*\r\n* Data object for DIF audio component\r\n*\r\n* */\r\nexport class AudioDataObject extends ComponentDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // TODO: Implement other properties of audio if needed\r\n\r\n    /**\r\n     * The element that represents the _URL contained in the audio\r\n     */\r\n    private _url: ElementDataObject;\r\n\r\n    /**\r\n     * File extension for asset referenced in _url (primary url)\r\n     */\r\n    private urlFileExtension: string;\r\n\r\n    /**\r\n     * Element holding url for audio asset in ogg format\r\n     */\r\n    protected urlOggElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element holding url for audio asset in mp3 format\r\n     */\r\n    protected urlMp3Element: ElementDataObject;\r\n\r\n    /**\r\n     * Element holding url for audio asset in wav format\r\n     */\r\n    protected urlWavElement: ElementDataObject;\r\n\r\n    /**\r\n     * The property used to emit start/pause playing event when set to true/false\r\n     */\r\n    private _playing: boolean;\r\n\r\n    /**\r\n     * The property used to emit stop playing event when set to 0\r\n     */\r\n    private _playhead: number = -1;\r\n\r\n    /**\r\n     * The property used to decide auto playing when loaded\r\n     */\r\n    private _autoPlay: boolean;\r\n\r\n    /**\r\n     * Element holding boolean value indicating whether the audio component can be clicked to play.  Assume clicking\r\n     * was intended to toggle play state.\r\n     */\r\n    protected clickToPlayElement: ElementDataObject;\r\n\r\n    /**\r\n     * The property used to decide to show video controls when loaded\r\n     */\r\n    private _displayControls: boolean;\r\n\r\n    /**\r\n     * Element holding boolean value indicating whether the audio icon should be displayed or not\r\n     */\r\n    protected displayIconElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element holding transcript data\r\n     */\r\n    protected transcriptElement: ElementDataObject;\r\n\r\n    /**\r\n    * When property _playing set to true, emit this event\r\n    * so audio component subscribe to it can start to play\r\n    */\r\n    public onPlay: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n    * When property _playing set to false, emit this event\r\n    * so audio component subscribe to it can pause playing\r\n    */\r\n    public onPause: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n    * When property _playhead set to 0, emit this event\r\n    * so audio component subscribe to it can stop playing\r\n    */\r\n    public onStop: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private audioDataObjectLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Data object for DIF audio component - constructor\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n        this.audioDataObjectLogger.debug('AudioDataObject constructor');\r\n\r\n        // Properties should have been assigned at this point.  Extract file extension from primary url to help with\r\n        // processing later.\r\n        this.urlFileExtension = this.URL.substr(this.URL.lastIndexOf('.') + 1, this.URL.length).toLowerCase();\r\n    }\r\n\r\n    /**\r\n     * This method is called from the base constructor.\r\n     * It is used for initializations (logger only for now).\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.audioDataObjectLogger = Log.getInstance().getLogger('AudioDataObject');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * overrides base version to add specific properties\r\n     */\r\n    protected initializePropertyNames(): void {\r\n        super.initializePropertyNames();\r\n        this.initPropertyMapArray = this.initPropertyMapArray.concat([\r\n            ['_autoPlay', 'autoPlay', 'AutoPlay', 'boolean'],\r\n            ['clickToPlayElement', 'clickToPlay', 'ClickToPlay', 'element'],\r\n            ['_displayControls', 'displayControls', 'DisplayControls', 'boolean'],\r\n            ['displayIconElement', 'displayIcon', 'DisplayIcon', 'element'],\r\n            ['_playing', 'playing', 'Playing', 'boolean'],\r\n            ['_playhead', 'playhead', 'Playhead', 'number'],\r\n            ['transcriptElement', 'transcript', 'Transcript', 'element'],\r\n            ['_url', 'URL', '_URL', 'element'],\r\n            ['urlMp3Element', 'urlMp3', '_URLmp3', 'element'],\r\n            ['urlOggElement', 'urlOgg', '_URLogg', 'element'],\r\n            ['urlWavElement', 'urlWav', '_URLwav', 'element']\r\n        ]);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The URL for the audio file\r\n     */\r\n    public get URL(): string {\r\n        return this._url.value;\r\n    }\r\n\r\n    /**\r\n     * URL for the ogg formatted audio file.\r\n     * Supported by Chrome, Firefox, and Opera\r\n     * @returns {string}\r\n     */\r\n    public get urlOgg(): string {\r\n        // If the primary url is to an ogg file return that one, otherwise return the ogg url\r\n        if (this.urlFileExtension === 'ogg') {\r\n            return this.URL;\r\n        } else {\r\n            return this.urlOggElement.value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * URL for the mp3 formatted audio file\r\n     * Supported by IE, Chrome, Firefox, and Safari\r\n     * @returns {string}\r\n     */\r\n    public get urlMp3(): string {\r\n        // If the primary url is to an mp3 file return that one, otherwise return the mp3 url\r\n        if (this.urlFileExtension === 'mp3') {\r\n            return this.URL;\r\n        } else {\r\n            return this.urlMp3Element.value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * URL for the wav formatted audio file\r\n     * Supported by Chrome, Firefox, Safari, and Opera\r\n     * @returns {string}\r\n     */\r\n    public get urlWav(): string {\r\n        // If the primary wav is to an ogg file return that one, otherwise return the wav url\r\n        if (this.urlFileExtension === 'wav') {\r\n            return this.URL;\r\n        } else {\r\n            return this.urlWavElement.value;\r\n        }\r\n    }\r\n\r\n    public get playing(): boolean {\r\n        return this._playing;\r\n    }\r\n\r\n    public set playing(value: boolean) {\r\n        this._playing = value;\r\n        if (this._playing) {\r\n            this.onPlay.emit();\r\n        } else {\r\n            this.onPause.emit();\r\n        }\r\n    }\r\n\r\n    public get playhead(): number  {\r\n        return this._playhead;\r\n    }\r\n\r\n    public set playhead(value: number ) {\r\n        this._playhead = value;\r\n        if (this._playhead === 0) {\r\n            this.onStop.emit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The property used to decide auto playing when loaded\r\n     */\r\n    public get autoPlay(): boolean {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    public set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n    }\r\n\r\n    /**\r\n     * Indicates whether or not the play state of the Audio component can be toggled by clicking on it\r\n     * @returns {boolean}\r\n     */\r\n    public get clickToPlay(): boolean {\r\n        return (this.clickToPlayElement.value === 'true');\r\n    }\r\n\r\n    /**\r\n     * The property used to decide to show video controls when loaded\r\n     */\r\n    public get displayControls(): boolean {\r\n        return this._displayControls;\r\n    }\r\n\r\n    public set displayControls(value: boolean) {\r\n        this._displayControls = value;\r\n    }\r\n\r\n    /**\r\n     * Indicates whether or not the Audio component icon should be displayed\r\n     * @returns {boolean}\r\n     */\r\n    public get displayIcon(): boolean {\r\n        return (this.displayIconElement.value === 'true');\r\n    }\r\n\r\n    /**\r\n     * Contains transcript text\r\n     * @returns {string}\r\n     */\r\n    public get transcript(): string {\r\n        return this.transcriptElement.value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Audio Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'URL = ' + this.URL + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name;\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/audio.data-object.ts","import { ComponentDataObject }            from './component.data-object';\r\nimport { ComponentContainerDataObject }   from './component-container.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n\r\n/*\r\n*\r\n* Data object for DIF button component\r\n*\r\n* TODO: add the other properties for the button class... this class is incomplete!\r\n*\r\n* */\r\nexport class ButtonDataObject extends ComponentDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The Type of the component TODO: Do i want to use this?\r\n     */\r\n    public type: string = 'Button';\r\n\r\n    /**\r\n     * The element that represents the text contained in the button\r\n     */\r\n    private _text: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents the font contained in the button\r\n     */\r\n    private _font: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents the font color contained in the button\r\n     */\r\n    private _fontColor: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents the font size contained in the button\r\n     */\r\n    private _fontSize: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents the bold contained in the button\r\n     */\r\n    private _bold: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents the underline contained in the button\r\n     */\r\n    private _underline: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents the italic contained in the button\r\n     */\r\n    private _italic: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents a URL to a default image of the button (Up)\r\n     */\r\n    private _urlUpStateImage: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents a URL to a mouse over image of the button\r\n     */\r\n    private _urlOverStateImage: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents a URL to a mouse over image of the button\r\n     */\r\n    private _urlDownStateImage: ElementDataObject;\r\n\r\n\r\n    /**\r\n     * The element that represents a flag to use default images (bitton component)\r\n     * If false - use image component\r\n     */\r\n    private _useDefaultImages: ElementDataObject;\r\n\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private buttonDataObjectLogger: Logger;\r\n\r\n    /**\r\n     * The Element that contains the autoSize property of this component\r\n     *\r\n     */\r\n    private _autoSize: ElementDataObject;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new CheckboxDataObject instance.\r\n     *\r\n     * @param   rootElement ElementDataObject that contains he element data which is used to build\r\n     *                      this ButtonDataObject.\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n    }\r\n\r\n    /**\r\n     * This method is called from the base constructor.\r\n     * It is used for initializations (logger only for now).\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.buttonDataObjectLogger = Log.getInstance().getLogger('ButtonDataObject');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    /**\r\n     * Initialize properties by adding all common properties in component base class\r\n     * overridden and extended by derived class to add each specific properties\r\n     */\r\n    protected initializePropertyNames(): void {\r\n        super.initializePropertyNames();\r\n        this.initPropertyMapArray = this.initPropertyMapArray.concat([\r\n            ['_text', 'text', 'Text', 'element'],\r\n            ['_bold', 'bold', 'Bold', 'element'],\r\n            ['_italic', 'italic', 'Italic', 'element'],\r\n            ['_underline', 'underline', 'Underline', 'element'],\r\n            ['_font', 'font', 'Font', 'element'],\r\n            ['_fontColor', 'fontColor', 'FontColor', 'element'],\r\n            ['_fontSize', 'fontSize', 'FontSize', 'element'],\r\n            ['_autoSize', 'autoSize', 'AutoSize', 'element'],\r\n            ['_urlUpStateImage', 'urlUpStateImage', '_URLUpStateImage', 'element'],\r\n            ['_urlOverStateImage', 'urlOverStateImage', '_URLOverStateImage', 'element'],\r\n            ['_urlDownStateImage', 'urlDownStateImage', '_URLDownStateImage', 'element'],\r\n            ['_useDefaultImages', 'useDefaultImages', 'UseDefaultImages', 'element'],\r\n        ]);\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The text contained in the button\r\n     *\r\n     * @returns     string\r\n     */\r\n    public get text(): string{\r\n        return this._text.value;\r\n    }\r\n\r\n    public set text(value: string) {\r\n        this._text.value = value;\r\n    }\r\n\r\n    /**\r\n     * The Font family name of the font used by this component.\r\n     */\r\n    public get font(): string {\r\n        return this._font.value;\r\n    }\r\n\r\n    public set font(value: string) {\r\n        this._font.value = value;\r\n    }\r\n\r\n    /**\r\n     * The Color of the font used by this component.\r\n     */\r\n    public get fontColor(): string {\r\n        return this._fontColor.value;\r\n    }\r\n\r\n    public set fontColor(value: string) {\r\n        this._fontColor.value = value;\r\n    }\r\n\r\n    /**\r\n     * The Size of the font.\r\n     */\r\n    public get fontSize(): number {\r\n        return +this._fontSize.value;\r\n    }\r\n\r\n    public set fontSize(value: number) {\r\n        this._fontSize.value = value.toString();\r\n    }\r\n\r\n    /**\r\n     * Boolean value representing whether or not the text in this component is bold.\r\n     */\r\n    public get bold(): boolean {\r\n        return (this._bold.value === 'true');\r\n    }\r\n\r\n    public set bold(value: boolean) {\r\n        if (value) {\r\n            this._bold.value = 'true';\r\n        }else {\r\n            this._bold.value = 'false';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Boolean value representing whether or not the text in this component is italic.\r\n     */\r\n    public get italic(): boolean {\r\n        return (this._italic.value === 'true');\r\n    }\r\n\r\n    public set italic(value: boolean) {\r\n        if (value) {\r\n            this._italic.value = 'true';\r\n        }else {\r\n            this._italic.value = 'false';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Boolean value representing whether or not the text in this component is underline.\r\n     */\r\n    public get underline(): boolean {\r\n        return (this._underline.value === 'true');\r\n    }\r\n\r\n    public set underline(value: boolean) {\r\n        if (value) {\r\n            this._underline.value = 'true';\r\n        }else {\r\n            this._underline.value = 'false';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Boolean value representing whether or not the text in this component is autoSize.\r\n     */\r\n    public get autoSize(): boolean {\r\n        return (this._autoSize.value === 'true');\r\n    }\r\n\r\n    public set autoSize(value: boolean) {\r\n        if (value) {\r\n            this._autoSize.value = 'true';\r\n        }else {\r\n            this._autoSize.value = 'false';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * URL to a default image of the button (Up)\r\n     */\r\n    public get urlUpStateImage(): string {\r\n        return this._urlUpStateImage.value;\r\n    }\r\n\r\n    /**\r\n     * URL to a mouse over image of the button\r\n     */\r\n    public get urlOverStateImage(): string {\r\n        return this._urlOverStateImage.value;\r\n    }\r\n\r\n    /**\r\n     * URL to a mouse over image of the button\r\n     */\r\n    public get urlDownStateImage(): string {\r\n        return this._urlDownStateImage.value;\r\n    }\r\n\r\n    /**\r\n     * Display button control or image\r\n     * TODO: Should consider renaming this since standard button doesn't use images\r\n     * @returns {boolean}: true - use button; false - use image control\r\n     */\r\n    public get useDefaultImages(): boolean {\r\n        return (this._useDefaultImages.value === 'true');\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Button Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name + '\\n';\r\n        outString += 'Text = ' + this.text + '\\n';\r\n        outString += 'urlDownStateImage = ' + this.urlDownStateImage + '\\n';\r\n        outString += 'urlOverStateImage = ' + this.urlOverStateImage + '\\n';\r\n        outString += 'urlUpStateImage = ' + this.urlUpStateImage + '\\n';\r\n        outString += 'useDefaultImages = ' + this.useDefaultImages + '\\n';\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/button.data-object.ts","import { ComponentDataObject } from './component.data-object';\r\nimport { ComponentContainerDataObject }   from './component-container.data-object';\r\nimport { ElementDataObject }    from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\nimport { EventPlayableDataObjectCollection }\r\nfrom '../../../../../player/model/data-objects/event-system/event.playable.data-object.collection';\r\nimport { EventDataObject } from '../event-system/event.data-object';\r\n\r\n/*\r\n*\r\n* Data object for DIF checkbox component\r\n*\r\n* TODO: Comment this class and turn public properties into getters / setters\r\n*\r\n* */\r\nexport class CheckboxDataObject extends ComponentDataObject {\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Decide if we want to use Type\r\n     */\r\n    public type: string = 'Checkbox';\r\n\r\n    /**\r\n     * The Element that contains the selected property of this component\r\n     *\r\n     */\r\n    private _selected: ElementDataObject;\r\n\r\n    /**\r\n     *  The element that contains the original value of the check box. Determines weather or not its\r\n     *  checked from the start.\r\n     */\r\n    private _defaultValue: ElementDataObject;\r\n\r\n    /**\r\n     * Element containing data indicating the state for the checkbox associated with a \"correct\" value.  Used by the\r\n     * old Action System\r\n     */\r\n    private _correctValueElement: ElementDataObject;\r\n\r\n    /**\r\n     * // TODO: find out why Checkbox needs _groupName???\r\n     */\r\n    private _groupName: ElementDataObject;\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n    */\r\n    private checkboxDataObjectLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new CheckboxDataObject instance.\r\n     *\r\n     * @param   rootElement ElementDataObject that contains he element data\r\n     * which is used to build this CheckboxDataObject.\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n        this._selected = this._defaultValue;\r\n    }\r\n\r\n    /**\r\n     * Overrides base constructorPreprocessing method.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.checkboxDataObjectLogger = Log.getInstance().getLogger('CheckboxDataObject');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * overrides base version to add specific properties\r\n     */\r\n    protected initializePropertyNames(): void {\r\n        super.initializePropertyNames();\r\n        this.initPropertyMapArray = this.initPropertyMapArray.concat([\r\n            ['_correctValueElement', 'correctValue', 'CorrectValue', 'element'],\r\n            ['_defaultValue', 'defaultValue', 'DefaultValue', 'element'],\r\n            ['_groupName', 'groupName', 'GroupName', 'element'],\r\n            ['_selected', 'checked', 'Selected', 'element']\r\n        ]);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The original value of the check box. Determines weather or not its checked from the start.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    public get defaultValue(): boolean {\r\n        return (this._defaultValue.value === 'true');\r\n    }\r\n\r\n    /**\r\n     * TODO: Currently not being used do we need this?\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get groupName(): string {\r\n        return this._groupName.value;\r\n    }\r\n\r\n    /**\r\n     * String from correctValueElement indicating \"correct\" state\r\n     * @internal: valid values: selectedIsCorrect, unselectedIsCorrect, eitherIsCorrect\r\n     * @returns {string}\r\n     */\r\n    public get correctValue(): string {\r\n        return this._correctValueElement.value;\r\n    }\r\n\r\n    /**\r\n     * Boolean value representing whether or not this checkbox is checked.\r\n     */\r\n    public get checked(): boolean {\r\n        return (this._selected.value === 'true');\r\n    }\r\n\r\n    public set checked(value: boolean) {\r\n        if (value) {\r\n            this._selected.value = 'true';\r\n            (this.eventCollection as EventPlayableDataObjectCollection).processEvent(EventDataObject.ON_CHECKED);\r\n        } else {\r\n            this._selected.value = 'false';\r\n            (this.eventCollection as EventPlayableDataObjectCollection).processEvent(EventDataObject.ON_UNCHECKED);\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Override base.\r\n     * @internal: This is only really needed by the Player (should we have player versions of component data objects?)\r\n     * @returns {boolean}\r\n     */\r\n    public validate(): boolean {\r\n        // TODO: Valid values for correctValue should be put in constants or enum.  Will be needed in designers as well.\r\n        if (this.correctValue === 'selectedIsCorrect' && this.checked === true) {\r\n            return true;\r\n        } else if (this.correctValue === 'unselectedIsCorrect' && this.checked === false) {\r\n            return true;\r\n        } else if (this.correctValue === 'eitherIsCorrect') {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     * TODO: Should rename to toString\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Checkbox Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name + '\\n';\r\n        outString += 'defaultValue = ' + this.defaultValue + '\\n';\r\n        outString += 'correctValue = ' + this.correctValue + '\\n';\r\n        outString += 'groupName = ' + this.groupName + '\\n';\r\n        outString += 'selected = ' + this.checked + '\\n';\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/checkbox.data-object.ts","import { ElementDataObject }    from '../element.data-object';\r\n\r\nimport { AudioDataObject }              from './audio.data-object';\r\nimport { ButtonDataObject }             from './button.data-object';\r\nimport { CheckboxDataObject }           from './checkbox.data-object';\r\nimport { ComponentDataObject }          from './component.data-object';\r\nimport { DropdownListDataObject }       from './dropdown-list.data-object';\r\nimport { HtmlDataObject }               from './html.data-object';\r\nimport { ImageDataObject }              from './image.data-object';\r\nimport { VideoDataObject }              from './video.data-object';\r\nimport { QuizMultipleChoiceDataObject } from './quiz-multiple-choice.data-object';\r\nimport { QuizFillInBlankDataObject }    from './quiz-fill-in-blank.data-object';\r\nimport { QuizMatchDataObject }          from './quiz-match.data-object';\r\nimport { QuizResultDataObject }         from './quiz-result.data-object';\r\nimport { RadioButtonDataObject }        from './radio-button.data-object';\r\nimport { TextDisplayDataObject }        from './text-display.data-object';\r\nimport { TextInputDataObject }          from './text-input.data-object';\r\nimport { TextInputAreaDataObject }      from './text-input-area.data-object';\r\n\r\nimport { Log, Logger }  from '../../../log';\r\n\r\n\r\n/**\r\n * This is the base class for any data objects that drive view components which are designed to contain other view\r\n * components (e.g. ContentWindowComponent, PageComponent, etc.).\r\n */\r\nexport abstract class ComponentContainerDataObject extends ComponentDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Rename this.\r\n     */\r\n    private _components: Array<ComponentDataObject>;\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private componentContainerDataObjectLogger: Logger = Log.getInstance().getLogger('ComponentContainerDataObject');\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Abstract Constructor - provides implementation common to all component container data objects.\r\n     *\r\n     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be\r\n     *                          constructed from.\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * TODO: Comment me\r\n     *\r\n     * @param child\r\n     */\r\n    protected parseElement(child: ElementDataObject): void {\r\n\r\n        this.componentContainerDataObjectLogger = Log.getInstance().getLogger('ComponentContainerDataObject');\r\n\r\n        switch (child.name) {\r\n\r\n            case 'Audio':\r\n                const audio: AudioDataObject = new AudioDataObject(child);\r\n                this.components.push(audio);\r\n                this.componentContainerDataObjectLogger.debug(audio.serializeToString());\r\n                break;\r\n\r\n            case 'CheckBox':\r\n                const checkBox: CheckboxDataObject = new CheckboxDataObject(child);\r\n                this.components.push(checkBox);\r\n                this.componentContainerDataObjectLogger.debug(checkBox.serializeToString());\r\n                break;\r\n\r\n            case 'DropDown':\r\n                const dropDown: DropdownListDataObject = new DropdownListDataObject(child);\r\n                this.components.push(new DropdownListDataObject(child));\r\n                this.componentContainerDataObjectLogger.debug(dropDown.serializeToString());\r\n                break;\r\n\r\n            case 'FunctionButton':\r\n                const button: ButtonDataObject = new ButtonDataObject(child);\r\n                this.components.push(button);\r\n                this.componentContainerDataObjectLogger.debug(button.serializeToString());\r\n                break;\r\n\r\n            case 'Html':\r\n                const html: HtmlDataObject = new HtmlDataObject(child);\r\n                this.components.push(html);\r\n                this.componentContainerDataObjectLogger.debug(html.serializeToString());\r\n                break;\r\n\r\n            case 'Image':\r\n                const image: ImageDataObject = new ImageDataObject(child);\r\n                this.components.push(image);\r\n                this.componentContainerDataObjectLogger.debug(image.serializeToString());\r\n                break;\r\n\r\n            case 'Movie':\r\n                const video: VideoDataObject = new VideoDataObject(child);\r\n                this.components.push(video);\r\n                this.componentContainerDataObjectLogger.debug(video.serializeToString());\r\n                break;\r\n\r\n            case 'QuizWindowMC':\r\n                const quizMC: QuizMultipleChoiceDataObject = new QuizMultipleChoiceDataObject(child);\r\n                this.components.push(quizMC);\r\n                this.componentContainerDataObjectLogger.debug(quizMC.serializeToString());\r\n                break;\r\n\r\n            case 'QuizWindowBlank':\r\n                const quizBlank: QuizFillInBlankDataObject = new QuizFillInBlankDataObject(child);\r\n                this.components.push(quizBlank);\r\n                this.componentContainerDataObjectLogger.debug(quizBlank.serializeToString());\r\n                break;\r\n\r\n            case 'QuizWindowMatch':\r\n                const quizMatch: QuizMatchDataObject = new QuizMatchDataObject(child);\r\n                this.components.push(quizMatch);\r\n                this.componentContainerDataObjectLogger.debug(quizMatch.serializeToString());\r\n                break;\r\n\r\n            case 'RadioButton':\r\n                const radioButton: RadioButtonDataObject = new RadioButtonDataObject(child);\r\n                this.components.push(radioButton);\r\n                radioButton.parent = this;\r\n                this.componentContainerDataObjectLogger.debug(radioButton.serializeToString());\r\n                break;\r\n\r\n            case 'ResultsWindow':\r\n                const quizResult: QuizResultDataObject = new QuizResultDataObject(child);\r\n                this.components.push(quizResult);\r\n                this.componentContainerDataObjectLogger.debug(quizResult.serializeToString());\r\n                break;\r\n\r\n            case 'TextBox':\r\n                this.addNewTextDataObject(child);\r\n                break;\r\n\r\n            case 'TextWindow':\r\n                this.addNewTextDataObject(child);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Comment me\r\n     */\r\n    public get components(): Array<ComponentDataObject> {\r\n\r\n        if (!this._components) { this._components = []; }\r\n        return this._components;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Component Management\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @param   sourceElement  The root of the ElementDataObject hierarchy which contains the source data to parse.\r\n     */\r\n    protected addNewTextDataObject(sourceElement: ElementDataObject): void {\r\n\r\n        let isEditable: boolean = false;\r\n        let isMultiline: boolean = false;\r\n\r\n        for (const element of sourceElement.children) {\r\n\r\n            switch (element.name) {\r\n\r\n                case 'Editable':\r\n                    if (element.value.toLowerCase() === 'true') {\r\n                        isEditable = true;\r\n                    }\r\n                    break;\r\n\r\n                case 'Multiline':\r\n                    if (element.value.toLowerCase() === 'true') {\r\n                        isMultiline = true;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (isEditable) {\r\n            if ( isMultiline ) {\r\n                this.components.push(new TextInputAreaDataObject(sourceElement));\r\n            } else {\r\n                this.components.push(new TextInputDataObject(sourceElement));\r\n            }\r\n        } else {\r\n            this.components.push(new TextDisplayDataObject(sourceElement));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * TODO: Rename this to findDescendantComponent.\r\n     *\r\n     * Recursively search the descendants of this ComponentContainerDataObject to find the ComponentDataObject that has\r\n     * the given element ID.\r\n     *\r\n     * NOTE:\r\n     *          When we check a descendant that is also a ComponentContainerDataObject we must also check its\r\n     *          descendants and so on.\r\n     *\r\n     * @param   componentElementID  The elementID of the ComponentDataObject we are trying to find.\r\n     *\r\n     * @returns The ComponentDataObject with the given elementID, otherwise undefined.\r\n     */\r\n    public findChildComponent(componentElementID: number): ComponentDataObject {\r\n\r\n        let returnComponent: ComponentDataObject;\r\n\r\n        for (const component of this.components) {\r\n            if (component.id === componentElementID) {\r\n                return component;\r\n            } else if ( component instanceof ComponentContainerDataObject ) {\r\n                returnComponent = (component as ComponentContainerDataObject).findChildComponent(componentElementID);\r\n                if (returnComponent) {\r\n                    return returnComponent;\r\n                }\r\n            }\r\n        }\r\n        return returnComponent;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Component Container Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'localRoot = ' + this.localRoot.name;\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/component-container.data-object.ts","/* tslint:disable:max-line-length */\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nimport { ColorDataType }        from '../data-types/color.data-type';\r\nimport { MarkupTextDataType }   from '../data-types/markup-text.data-type';\r\n\r\nimport { ComponentContainerDataObject }         from './component-container.data-object';\r\nimport { ElementBasedDataObject }               from '../element-based.data-object';\r\nimport { ElementDataObject }                    from '../element.data-object';\r\nimport { EventDataObjectCollection }            from '../event-system/event.data-object.collection';\r\nimport { EventPlayableDataObjectCollection }    from '../../../../../player/model/data-objects/event-system/event.playable.data-object.collection';\r\nimport { FrameworkActionDataObject }            from '../action-system/framework-action.data-object';\r\nimport { FrameworkActionPlayableDataObject }    from '../../../../../player/model/data-objects/action-system/framework-action.playable.data-object';\r\n\r\nimport { EventContainerDataObjectInterface }    from '../event-system/event-container.data-object.interface';\r\n\r\nimport { AbstractComponent }    from '../../../../../player/view/abstract.component';\r\n\r\nimport { Log, Logger }  from '../../../log';\r\n/* tslint:enable:max-line-length */\r\n\r\n\r\n/*\r\n *\r\n *  Base class for all DIF components (Page, ContentWindow, Button, Image, etc)\r\n *\r\n * TODO: re-comment this class\r\n *\r\n * TODO: change the private instance properties to be ElementDataObjects\r\n */\r\nexport abstract class ComponentDataObject extends ElementBasedDataObject implements EventContainerDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    public id: number;\r\n\r\n    private _x: number;\r\n    private _y: number;\r\n    private _z: number;\r\n\r\n    private _width: number;\r\n    private _height: number;\r\n    private _name: string;\r\n    private _visible: boolean;\r\n\r\n    /**\r\n     * The Element that contains the alpha property of this component\r\n     */\r\n    private _alphaElement: ElementDataObject;\r\n\r\n    /**\r\n     * The focus property(state) of this component\r\n     */\r\n    private _focus: boolean = false;\r\n\r\n    /**\r\n     * The mouse over property(state) of this component\r\n     */\r\n    private _mouseOver: boolean = false;\r\n\r\n\r\n    /**\r\n     * See accessor\r\n     */\r\n    protected _eventCollection: EventDataObjectCollection;\r\n\r\n    /**\r\n     * See accessor\r\n     */\r\n    protected _frameworkAction: FrameworkActionDataObject;\r\n\r\n    /**\r\n     * See accessor\r\n     */\r\n    private _viewComponent: AbstractComponent;\r\n\r\n    protected initPropertyMapArray: Array<Object>;\r\n\r\n    protected propertyMaps: Array<PropertyMap>;\r\n\r\n    public parent: ComponentContainerDataObject;\r\n\r\n    /**\r\n     * When a component(like audio,video) completed playing, emit this onComplete event\r\n     */\r\n    public onComplete: EventEmitter<any> = new EventEmitter();        // TODO: might not want to init this here.\r\n\r\n    /**\r\n     * Reference to logger object for logging.\r\n     */\r\n    private componentDataObjectLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Abstract Constructor - provides implementation common to all component data objects.\r\n     *\r\n     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be\r\n     *                          constructed from.\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n\r\n        super(sourceElement);\r\n\r\n        this.id = this.localRoot.id;\r\n    }\r\n\r\n    /**\r\n     * This method is called from the base constructor.\r\n     * It is used for initializations (logger only for now).\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.componentDataObjectLogger = Log.getInstance().getLogger('ComponentDataObject');\r\n        super.constructorPreprocessing();\r\n\r\n        this.initializePropertyNames();\r\n        this.propertyMaps = [];\r\n        this.constructPropertyMaps();\r\n    }\r\n\r\n    /**\r\n     * Initialize properties by adding all common properties to initPropertyMapArray\r\n     * overridden and extended by derived class to add component's specific properties\r\n     */\r\n    protected initializePropertyNames(): void {\r\n        this.initPropertyMapArray = [\r\n            ['_x', 'x', 'X', 'number'],\r\n            ['_y', 'y', 'Y', 'number'],\r\n            ['_z', 'z', 'Z', 'number'],\r\n            ['_width', 'width', 'Width', 'number'],\r\n            ['_height', 'height', 'Height', 'number'],\r\n            ['_name', 'name', 'Name', 'string'],\r\n            ['_visible', 'visible', 'Visible', 'boolean'],\r\n            ['_focusElement', 'focus', 'Focus', 'element'],\r\n            ['_mouseOverElement', 'mouseOver', 'MouseOver', 'element'],\r\n            ['_alphaElement', 'alpha', 'Alpha', 'element'],\r\n            ['_alphaElement', 'alpha', 'alpha', 'element']  // added to address Designer setting \"alpha\" in event data\r\n        ];\r\n\r\n    }\r\n\r\n    /**\r\n     * Create and add new property map to propertyMaps from initPropertyMapArray.\r\n     */\r\n    protected constructPropertyMaps(): void {\r\n        for (const p of this.initPropertyMapArray) {\r\n            const map: PropertyMap = new PropertyMap();\r\n            map.privateName = p[0];\r\n            map.publicName = p[1];\r\n            map.dBName = p[2];\r\n            map.type = p[3];\r\n            this.propertyMaps.push(map);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set property initial value.\r\n     *\r\n     * @param child\r\n     */\r\n    protected setPropertyInitValue(child: ElementDataObject): void {\r\n        const propertyMap: PropertyMap = this.getPropertyMap(child.name);\r\n        if (!propertyMap) {\r\n            return;\r\n        }\r\n        const type: string = propertyMap.type;\r\n        const privateName: string = propertyMap.privateName;\r\n        switch (type) {\r\n            case 'element':\r\n                this[privateName] = child;\r\n                break;\r\n            case 'string':\r\n                this[privateName] = child.value;\r\n                break;\r\n            case 'number':\r\n                this[privateName] = +child.value;\r\n                break;\r\n            case 'boolean':\r\n                this[privateName] = (child.value === 'true');\r\n                break;\r\n            case 'color':\r\n                this[privateName] = new ColorDataType(child);\r\n                break;\r\n            case 'text':\r\n                this[privateName] = new MarkupTextDataType(child);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse base component properties.\r\n     * @param child\r\n     */\r\n    protected parseElement(child: ElementDataObject): void {\r\n        this.parseProperties(child);\r\n    }\r\n\r\n    /**\r\n     * Properties parser.\r\n     */\r\n    protected parseProperties(element: ElementDataObject): void {\r\n        if (element.name === EventDataObjectCollection.EVENT_COLLECTION_ELEMENT_NAME) {\r\n            this.eventCollection = this.createEventCollection(element);\r\n            this.eventCollection.parent = this;\r\n        } else if (element.name === FrameworkActionDataObject.FRAMEWORK_ACTION_ELEMENT_NAME) {\r\n            this.componentDataObjectLogger.debug('parseProperties(): FrameworkAction');\r\n            this._frameworkAction = this.createFrameworkAction(element);\r\n            // TODO: do we need to create a parent reference in FrameworkAction?\r\n        } else {\r\n            this.setPropertyInitValue(element);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    public set x(value: number) {\r\n        this._x = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    public get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    public set y(value: number) {\r\n        this._y = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    public get z(): number {\r\n        return this._z;\r\n    }\r\n\r\n    public set z(value: number) {\r\n        this._z = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    public get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    public set width(value: number) {\r\n        this._width = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    public get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    public set height(value: number) {\r\n        this._height = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    public set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    public get visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    public set visible(value: boolean) {\r\n        this._visible = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The alpha property of this component\r\n     */\r\n    public get alpha(): string {\r\n        return this._alphaElement.value;\r\n    }\r\n\r\n    public set alpha(value: string) {\r\n        this._alphaElement.value = value;\r\n    }\r\n\r\n    /**\r\n     * The focus property of this component\r\n     */\r\n    public get focus(): boolean {\r\n        return (this._focus);\r\n    }\r\n\r\n    public set focus(value: boolean) {\r\n        this._focus = value;\r\n    }\r\n\r\n    /**\r\n     * The mouse over property of this component\r\n     */\r\n    public get mouseOver(): boolean {\r\n        return (this._mouseOver);\r\n    }\r\n\r\n    public set mouseOver(value: boolean) {\r\n        this._mouseOver = value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Reference to component's display object\r\n     *\r\n     * @internal: Player view components at this point, may eventually need class factory to return version for\r\n     *              Designers\r\n     */\r\n    public get viewComponent(): AbstractComponent {\r\n        return this._viewComponent;\r\n    }\r\n\r\n    public set viewComponent(value: AbstractComponent) {\r\n        this._viewComponent = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Reference to EventDataObjectCollection that holds all Event System data for the component\r\n     */\r\n    public get eventCollection(): EventDataObjectCollection {\r\n        return this._eventCollection;\r\n    }\r\n\r\n    public set eventCollection(value: EventDataObjectCollection) {\r\n        this._eventCollection = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Reference to FrameworkActionDataObject that holds data structure for old Action system\r\n     */\r\n    public get frameworkAction(): FrameworkActionDataObject {\r\n        return this._frameworkAction;\r\n    }\r\n\r\n    /**\r\n     * Get correct value in checkbox/radio button/text box/dropdown and it will pass to Framework Action\r\n     * To be overridden by derived component\r\n     */\r\n    public get correctValue(): string {\r\n        return undefined;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Creates and returns an EventDataObjectCollection\r\n     * Should be overridden in editable versions of this class to return the editable version.\r\n     *\r\n     * @param element -> root level Element to construct EventDataObjectCollection from.\r\n     * @returns {EventDataObjectCollection}\r\n     */\r\n    protected createEventCollection(element: ElementDataObject): EventDataObjectCollection {\r\n        // TODO: Should return playable version once created - there will be no playable version ComponentDataObject\r\n        // TODO: Can't reference playable (Player class) from shared ... need to find approach to fix this\r\n        // return new EventDataObjectCollection(element);\r\n        return new EventPlayableDataObjectCollection(element);\r\n    }\r\n\r\n    /**\r\n     * Creates and returns FrameworkActionDataObject\r\n     *\r\n     * @param element -> root level Element to construct FrameworkAction from\r\n     * @returns {FrameworkActionDataObject}\r\n     */\r\n    protected createFrameworkAction(element: ElementDataObject): FrameworkActionPlayableDataObject {\r\n        // TODO: Should return playable version once created - which should be done via a class factory once implemented\r\n        const action: FrameworkActionPlayableDataObject = new FrameworkActionPlayableDataObject(element);\r\n        action.parent = this;\r\n        return action;\r\n    }\r\n\r\n    /**\r\n     * To be overridden in derived classes\r\n     */\r\n    public validate(): boolean {\r\n        return undefined;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Component Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'localRoot = ' + this.localRoot.name;\r\n\r\n        return outString;\r\n    }\r\n\r\n    /**\r\n     * Get PropertyMap of a component's property by DB name.\r\n     *\r\n     * @param   name    Property DB name.\r\n     *\r\n     * @returns If found, the property map with the given DB name, otherwise undefined.\r\n     */\r\n    public getPropertyMap(name: string): PropertyMap {\r\n        if (!this.propertyMaps) {\r\n            return undefined;\r\n        } else {\r\n            return this.propertyMaps.find(p => p.dBName === name);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * A helper Class to contain the mapping of component property's private name, public name(getter/setter) and DB name\r\n */\r\nclass PropertyMap {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * A private(internal) name of a component, for example, _x,_y,_z,_width,_fontColor\r\n     */\r\n    public privateName: string;\r\n\r\n    /**\r\n     * A public getter/setter name of a component property, for example, x,y,z,width,fontColor\r\n     */\r\n    public publicName: string;\r\n\r\n    /**\r\n     * A Database-defined name of a component property, for example, X,Y,Z,Width,FontColor\r\n     */\r\n    public dBName: string;\r\n\r\n    /**\r\n     * The type of the property, for example, string,number,boolean\r\n     */\r\n    public type: string;\r\n\r\n\r\n    /**\r\n     * A helper Class to contain the mapping of component property's private name,\r\n     * public name(getter/setter) and DB name\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts","import { ComponentDataObject } from './component.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n/*\r\n*\r\n* Data object for DIF Dropdown List component\r\n*\r\n* */\r\nexport class DropdownListDataObject extends ComponentDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The Type of the component TODO: Do i want to use this?\r\n     */\r\n    public type: string = 'DropdownList';\r\n\r\n    /**\r\n     * The Element that contains the font name used by this component\r\n     */\r\n    private _font: ElementDataObject;\r\n\r\n    /**\r\n     * The Element that contains the font color used by this component\r\n     */\r\n    private _fontColor: ElementDataObject;\r\n\r\n    /**\r\n     * The Element that contains the font size used by this component\r\n     */\r\n    private _fontSize: ElementDataObject;\r\n\r\n    /**\r\n     * The Element that contains the bold property of this component\r\n     */\r\n    private _bold: ElementDataObject;\r\n\r\n    /**\r\n     * The Element that contains the italic property of this component\r\n     */\r\n    private _italic: ElementDataObject;\r\n\r\n    /**\r\n     * The Element that contains the underline property of this component\r\n     */\r\n    private _underline: ElementDataObject;\r\n\r\n    /**\r\n     * The Element that contains the autoSize property of this component\r\n     *\r\n     * TODO: Find out what this is used for\r\n     */\r\n    private _autoSize: ElementDataObject;\r\n\r\n    /**\r\n     * The Element that contains the align property of this component\r\n     */\r\n    private _align: ElementDataObject;\r\n\r\n    /**\r\n     * // what type??? what is this for???\r\n     */\r\n    private _selection: ElementDataObject;\r\n\r\n    /**\r\n     * The default option of this component. This is the Dropdowns initial value.\r\n     * It will not show up as an option or be selectable in the component\r\n     */\r\n    public defaultOption: DropdownListOption;\r\n\r\n    /**\r\n     * A list of Options that show up in the dropdown list.\r\n     */\r\n    public optionList: Array<DropdownListOption>;\r\n    // NOTE: Do not instantiate list here, the constructor will be called after parseElement and list will be empty\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private dropdownListDataObjectLogger: Logger; // = Log.getInstance().getLogger('DropdownListDataObject');\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new DropdownListDataObject instance.\r\n     * @param   rootElement ElementDataObject that contains he element data\r\n     *                      which is used to build this DropdownListDataObject.\r\n     *\r\n     * @param   parentContainer     A reference to this Objects Parent ComponentDataObject. TODO: Not sure we need this?\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n\r\n        // this.parseElementChildren();\r\n        // this.dropdownListDataObjectLogger.debug(this.serializeToString());\r\n    }\r\n\r\n    /**\r\n     * Overrides base constructorPreprocessing method.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Instantiate logger and optionList here: the method will be called from the base constructor\r\n        this.dropdownListDataObjectLogger = Log.getInstance().getLogger('DropdownListDataObject');\r\n        this.optionList = new Array<DropdownListOption>();\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Initialize properties by adding all common properties in component base class\r\n     * overriden and extended by derived class to add each specific properties\r\n     */\r\n    protected initializePropertyNames(): void {\r\n        super.initializePropertyNames();\r\n        this.initPropertyMapArray = this.initPropertyMapArray.concat([\r\n            ['_text', 'text', 'Text', 'element'],\r\n            ['_bold', 'bold', 'Bold', 'element'],\r\n            ['_italic', 'italic', 'Italic', 'element'],\r\n            ['_underline', 'underline', 'Underline', 'element'],\r\n            ['_font', 'font', 'Font', 'element'],\r\n            ['_fontColor', 'fontColor', 'FontColor', 'element'],\r\n            ['_fontSize', 'fontSize', 'FontSize', 'element'],\r\n            ['_align', 'align', 'Align', 'element'],\r\n            ['_selection', 'selection', 'Selection', 'element'],\r\n            ['_autoSize', 'autoSize', 'AutoSize', 'element']\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Parse all dropdown specific properties\r\n     * Overrides parent method\r\n     *\r\n     * @param   child: ElementDataObject\r\n     */\r\n    protected parseElement(child: ElementDataObject): void {\r\n        switch ( child.name) {\r\n            case 'OptionList':\r\n                // this.dropdownListDataObjectLogger.debug('OptionList:');\r\n                // console.log(child);\r\n                this.parseOptionList(child);\r\n                this.dropdownListDataObjectLogger.debug('OptionList.length = ' + this.optionList.length);\r\n                break;\r\n        }\r\n\r\n        super.parseElement(child); // parse standard component properties\r\n    }\r\n\r\n    /**\r\n     * Loops through the children of the OptionList ElementDataObject and populates the defaultOption as well as the\r\n     * optionList by creating DropdownListOptions for each.\r\n     * The defaultOption is always the first ElementDataObject in the list of children.\r\n     * This method then sorts the new option list so that the Option are in the proper order.\r\n     *\r\n     * @param   optionListElement   The ElementDataObject that contains the Option Elements\r\n     */\r\n    protected parseOptionList(optionListElement: ElementDataObject): void {\r\n\r\n        // we need to special case the first option because it is the default not an actual option\r\n        this.defaultOption = new DropdownListOption(optionListElement.children[0]);\r\n\r\n        // this.dropdownListDataObjectLogger.debug('Option List Length = ' + optionListElement.children.length);\r\n\r\n        for (let i: number = 1; i < optionListElement.children.length; i++) {\r\n            // this.dropdownListDataObjectLogger.debug('i = ' + i);\r\n            // I want to create an option class\r\n            const newOption: DropdownListOption = new DropdownListOption( optionListElement.children[i] );\r\n            this.optionList.push(newOption);\r\n            // this.dropdownListDataObjectLogger.debug('optionList.length = ' + this.optionList.length);\r\n        }\r\n\r\n        this.optionList.sort( this.sortOptionList );\r\n    }\r\n\r\n    /**\r\n     * Sort function for sorting OptionList based off of option.order. We do this because the data might not give the\r\n     * options to us in order.\r\n     */\r\n    private sortOptionList(optionA: DropdownListOption, optionB: DropdownListOption): number {\r\n        return optionA.order - optionB.order;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The Font family name of the font used by this component.\r\n     */\r\n    public get font(): string {\r\n        return this._font.value;\r\n    }\r\n\r\n    public set font(value: string) {\r\n        this._font.value = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * The Color of the font used by this component.\r\n     */\r\n    public get fontColor(): string {\r\n        return this._fontColor.value;\r\n    }\r\n\r\n    public set fontColor(value: string) {\r\n        this._fontColor.value = value;\r\n    }\r\n\r\n    /**\r\n     * The Size of the font.\r\n     */\r\n    public get fontSize(): number {\r\n        return +this._fontSize.value;\r\n    }\r\n\r\n    public set fontSize(value: number) {\r\n        this._fontSize.value = value.toString();\r\n    }\r\n\r\n    /**\r\n     * Boolean value representing whether or not the text in this component is bold.\r\n     */\r\n    public get bold(): boolean {\r\n        return (this._bold.value === 'true');\r\n    }\r\n\r\n    public set bold(value: boolean) {\r\n        if (value) {\r\n            this._bold.value = 'true';\r\n        }else {\r\n            this._bold.value = 'false';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Boolean value representing whether or not the text in this component is italic.\r\n     */\r\n    public get italic(): boolean {\r\n        return (this._italic.value === 'true');\r\n    }\r\n\r\n    public set italic(value: boolean) {\r\n        if (value) {\r\n            this._italic.value = 'true';\r\n        }else {\r\n            this._italic.value = 'false';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Boolean value representing whether or not the text in this component is underline.\r\n     */\r\n    public get underline(): boolean {\r\n        return (this._underline.value === 'true');\r\n    }\r\n\r\n    public set underline(value: boolean) {\r\n        if (value) {\r\n            this._underline.value = 'true';\r\n        }else {\r\n            this._underline.value = 'false';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Boolean value representing whether or not the text in this component is autoSize.\r\n     */\r\n    public get autoSize(): boolean {\r\n        return (this._autoSize.value === 'true');\r\n    }\r\n\r\n    /**\r\n     * The align property of this component\r\n     */\r\n    public get align(): string {\r\n        return this._align.value;\r\n    }\r\n\r\n    /**\r\n     * The selection property of this component.  Holds the value of the selected option.\r\n     */\r\n    public get selection(): string {\r\n        // If selection has no value yet, set it to the default option\r\n        if (!this._selection.value) {\r\n            this._selection.value = this.defaultOption.text;\r\n        }\r\n        return this._selection.value;\r\n    }\r\n\r\n    public set selection(value: string) {\r\n        this._selection.value = value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Override base.\r\n     * @internal: Only really needed by Player.  May want to consider creating playable version for this class?\r\n     * @returns {boolean}\r\n     */\r\n    public validate(): boolean {\r\n        // Get correct option\r\n        const correctOption: DropdownListOption = this.optionList.find((option: DropdownListOption) => {\r\n           return option.isCorrect === true;\r\n        });\r\n\r\n        console.log('!!! dropdownList validate !!! selected = ' + this.selection + '  correct = ' + correctOption.text);\r\n\r\n        // Compare selected value with correct option and return result\r\n        if (this.selection === correctOption.text) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     * TODO: Should rename to toString\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Drop Down Data Object:\\n';\r\n\r\n        outString += 'align = ' + this.align + '\\n';\r\n        outString += 'autoSize = ' + this.autoSize + '\\n';\r\n        outString += 'bold = ' + this.bold + '\\n';\r\n        outString += 'defaultOptionText = ' + this.defaultOption.text + '\\n';\r\n        outString += 'font = ' + this.font + '\\n';\r\n        outString += 'fontColor = ' + this.fontColor + '\\n';\r\n        outString += 'fontSize = ' + this.fontSize + '\\n';\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'italic = ' + this.italic + '\\n';\r\n        outString += 'localRoot = ' + this.localRoot.name + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'selection = ' + this.selection + '\\n';\r\n        outString += 'type = ' + this.type + '\\n';\r\n        outString += 'underline = ' + this.underline + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'optionList.length = ' + this.optionList.length + '\\n';\r\n        for (let i: number = 0; i < this.optionList.length; i++) {\r\n            outString += 'z = ' + this.optionList[i].text + '\\n';\r\n        }\r\n\r\n        return outString;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * A helper Class to contain the Options for the DropdownList Class.\r\n */\r\nclass DropdownListOption {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * rootElement\r\n     */\r\n    private rootElement: ElementDataObject;\r\n\r\n    /**\r\n     * The Display text and Value of a dropdown list option\r\n     */\r\n    private _text: ElementDataObject;\r\n\r\n    /**\r\n     * The order the option should be place in the dropdown list\r\n     */\r\n    private _order: ElementDataObject;\r\n\r\n    /**\r\n     *  TODO: Find out what this does and comment me!!!\r\n     */\r\n    private _isCorrect: ElementDataObject;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * creates new DropdownListDataObject of of the Option root element.\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        this.rootElement = rootElement;\r\n\r\n        this.parseOptionProperties();\r\n    }\r\n\r\n    /**\r\n     * Populate the DropdownListDataObjects properties with values from the rootElement's children\r\n     */\r\n    private parseOptionProperties(): void {\r\n\r\n        this._text = this.rootElement;\r\n\r\n        for ( let i: number = 0; i < this.rootElement.children.length; i++) {\r\n            switch ( this.rootElement.children[i].name ) {\r\n                case 'OrderID':\r\n                    this._order = this.rootElement.children[i];\r\n                    break;\r\n                case 'IsCorrect':\r\n                    this._isCorrect = this.rootElement.children[i];\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The order property of an Option\r\n     */\r\n    public get order(): number {\r\n        return parseInt(this._order.value, 10);\r\n    }\r\n\r\n    /**\r\n     * the isCorrect property of an Option\r\n     *\r\n     * TODO: I don't know what this is used for? If not needed then remove me!\r\n     */\r\n    public get isCorrect(): boolean {\r\n        return (this._isCorrect.value === 'true');\r\n    }\r\n\r\n    public get text(): string {\r\n        return this._text.value;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/dropdown-list.data-object.ts","import { ComponentDataObject } from './component.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n/*\r\n*\r\n* Data object for DIF audio component\r\n*\r\n* */\r\nexport class HtmlDataObject extends ComponentDataObject {\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // TODO: Implement other properties of HTML if needed\r\n\r\n    /**\r\n     * The element that represents the _URL element\r\n     */\r\n    private _url: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents the Description element\r\n     */\r\n    private _description: ElementDataObject;\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private htmlDataObjectLogger: Logger;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Data object for DIF html component - constructor\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base constructorPreprocessing method.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n       this.htmlDataObjectLogger = Log.getInstance().getLogger('HtmlDataObject');\r\n       super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    /**\r\n     * overrides base version to add specific properties\r\n     */\r\n    protected initializePropertyNames(): void {\r\n        super.initializePropertyNames();\r\n        this.initPropertyMapArray = this.initPropertyMapArray.concat([\r\n            ['_url', 'URL', '_URL', 'element'],\r\n            ['_description', 'description' , 'Description', 'element']\r\n        ]);\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The _URL contained in the html\r\n     */\r\n    public get URL(): string {\r\n        return this._url.value;\r\n    }\r\n\r\n    /**\r\n     * The Description value. An Accessor for the Description element\r\n     */\r\n    public get description(): string {\r\n        return this._description.value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'HTML Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'URL = ' + this.URL + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name;\r\n\r\n        return outString;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/html.data-object.ts","import { ComponentDataObject }            from './component.data-object';\r\nimport { ComponentContainerDataObject }   from './component-container.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n/*\r\n*\r\n* Data object for DIF image component\r\n*\r\n* */\r\nexport class ImageDataObject extends ComponentDataObject {\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The Type of the component TODO: Do i want to use this?\r\n     */\r\n    public type: string = 'Image';\r\n\r\n    /**\r\n     * Element that contains the url property of this component\r\n     */\r\n    private _url: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents the Description element\r\n     */\r\n    private _description: ElementDataObject;\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private imageDataObjectLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates an instance of the ImageDataObject\r\n     *\r\n     * @param rootElement\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base constructorPreprocessing method.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n       this.imageDataObjectLogger = Log.getInstance().getLogger('ImageDataObject');\r\n       super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * overrides base version to add specific properties\r\n     */\r\n    protected initializePropertyNames(): void {\r\n        super.initializePropertyNames();\r\n        this.initPropertyMapArray = this.initPropertyMapArray.concat([\r\n            ['_url', 'URL', '_URL', 'element'],\r\n            ['_description', 'description' , 'Description', 'element']\r\n        ]);\r\n    }\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The source (url) for this image\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get url(): string {\r\n        return this._url.value;\r\n    }\r\n\r\n    /**\r\n     * The Description value. An Accessor for the Description element\r\n     */\r\n    public get description(): string {\r\n        return this._description.value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Image Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name + '\\n';\r\n        outString += 'url = ' + this.url + '\\n';\r\n        outString += 'type = ' + this.type;\r\n\r\n        return outString;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/image.data-object.ts","import { ComponentDataObject } from './component.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n/*\r\n *\r\n * Base data object for Quiz Multiple Choice component\r\n *\r\n * */\r\nexport class QuizFillInBlankDataObject extends ComponentDataObject {\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    protected _quizNameElement: ElementDataObject;\r\n    protected _questionElement: ElementDataObject;\r\n\r\n    // protected _choiceElement: ElementDataObject;\r\n    protected _correctAnswer: string;\r\n\r\n    protected _feedBackFlagElement: ElementDataObject;\r\n    protected _feedbackCorrectMessageElement: ElementDataObject;\r\n    protected _feedbackIncorrectMessageElement: ElementDataObject;\r\n\r\n    protected _multipleAttemptFlagElement: ElementDataObject;\r\n    protected _numberOfAttemptsElement: ElementDataObject;\r\n    protected _feedbackIncorrectAttemptElement: ElementDataObject;\r\n\r\n    protected _quizAnswerTitle: string = 'Fill in the Blank:';\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private quizFillInBlankDataObjectLogger: Logger;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Data object for DIF quizMultipleChoice component - constructor\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n        this.quizFillInBlankDataObjectLogger.debug('QuizFillInBlankDataObject constructor');\r\n        // this.parseElementChildren();\r\n        // this.quizMultipleChoiceDataObjectLogger.debug(this.serializeToString());\r\n    }\r\n\r\n    /**\r\n     * Overrides base constructorPreprocessing method.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.quizFillInBlankDataObjectLogger = Log.getInstance().getLogger('QuizMultipleChoiceDataObject');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Parse all quizMultipleChoice multiple choice specific properties\r\n     * Overrides parent method\r\n     *\r\n     * @param   child: ElementDataObject\r\n     */\r\n    protected parseElement(child: ElementDataObject): void {\r\n        switch (child.name) {\r\n            case 'QuizName':\r\n                this._quizNameElement = child;\r\n                break;\r\n            case 'Question':\r\n                this._questionElement = child;\r\n                break;\r\n            case 'Answers':\r\n                for (let i: number = 0; i < child.children.length; i++) {\r\n                    const element: ElementDataObject = child.children[i];\r\n                    switch (element.name) {\r\n                        case 'Choice':\r\n                            // this._choiceElement = element;\r\n                            this._correctAnswer = element.value; // the choice conteins a correct answer for the blank\r\n                            break;\r\n                        case 'FeedbackFlag':\r\n                            this._feedBackFlagElement = element;\r\n                            break;\r\n                        case 'FeedbackCorrectMessage':\r\n                            this._feedbackCorrectMessageElement = element;\r\n                            break;\r\n                        case 'FeedbackIncorrectMessage':\r\n                            this._feedbackIncorrectMessageElement = element;\r\n                            break;\r\n                        case 'MultipleAttemptFlag':\r\n                            this._multipleAttemptFlagElement = element;\r\n                            break;\r\n                        case 'NumberOfAttempts':\r\n                            this._numberOfAttemptsElement = element;\r\n                            break;\r\n                        case 'FeedbackIncorrectAttempt':\r\n                            this._feedbackIncorrectAttemptElement = element;\r\n                            break;\r\n                    }\r\n                }\r\n        }\r\n\r\n        super.parseElement(child); // parse standard component properties\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Quiz name\r\n     */\r\n    public get quizName(): string {\r\n        return this._quizNameElement.value;\r\n    }\r\n\r\n    /**\r\n     * Quiz question\r\n     */\r\n    public get question(): string {\r\n        return this._questionElement.value;\r\n    }\r\n\r\n    /**\r\n     * Correct answer for the blank\r\n     */\r\n    public get correctAnswer(): string {\r\n        return this._correctAnswer;\r\n    }\r\n\r\n    /**\r\n     * Feedback Flag value\r\n     */\r\n    public get feedBackFlag(): boolean {\r\n        let retValue: boolean = false;\r\n        if (this._feedBackFlagElement !== undefined &&\r\n            this._feedBackFlagElement.value.toLowerCase() === 'true') {\r\n            retValue = true;\r\n        }\r\n        return retValue;\r\n    }\r\n\r\n    /**\r\n     * Feedback Correct Message\r\n     */\r\n    public get feedbackCorrectMessage(): string {\r\n        return this._feedbackCorrectMessageElement.value;\r\n    }\r\n\r\n    /**\r\n     * Feedback Incorrect Message\r\n     */\r\n    public get feedbackIncorrectMessage(): string {\r\n        return this._feedbackIncorrectMessageElement.value;\r\n    }\r\n\r\n    /**\r\n     * Multiple Attempt Flag value\r\n     */\r\n    public get multipleAttemptFlag(): boolean {\r\n        let retValue: boolean = false;\r\n        if (this._multipleAttemptFlagElement !== undefined &&\r\n            this._multipleAttemptFlagElement.value.toLowerCase() === 'true') {\r\n            retValue = true;\r\n        }\r\n        return retValue;\r\n    }\r\n\r\n    /**\r\n     * Number Of Attempts value\r\n     */\r\n    public get numberOfAttempts(): number {\r\n        return parseInt(this._numberOfAttemptsElement.value, 10);\r\n    }\r\n\r\n    /**\r\n     * Feedback Incorrect Attempt\r\n     */\r\n    public get feedbackIncorrectAttempt(): string {\r\n        return this._feedbackIncorrectAttemptElement.value;\r\n    }\r\n\r\n    /**\r\n     * Quiz Answer Title\r\n     */\r\n    public get quizAnswerTitle(): string {\r\n        return this._quizAnswerTitle;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Private functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Quiz Fill In Blank Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name + '\\n';\r\n        outString += 'QuizName = ' + this.quizName + '\\n';\r\n        outString += 'Question = ' + this.question + '\\n';\r\n        outString += 'CorrectAnswer = ' + this.correctAnswer + '\\n';\r\n        outString += 'Feedback Flag = ' + this.feedBackFlag + '\\n';\r\n        outString += 'Feedback Correct Message = ' + this.feedbackCorrectMessage + '\\n';\r\n        outString += 'Feedback Incorrect Message = ' + this.feedbackIncorrectMessage + '\\n';\r\n        outString += 'Multiple Attempt Flag = ' + this.multipleAttemptFlag + '\\n';\r\n        outString += 'Number Of Attempts = ' + this.numberOfAttempts + '\\n';\r\n        outString += 'Feedback Incorrect Attempt = ' + this.feedbackIncorrectAttempt + '\\n';\r\n\r\n        return outString;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/quiz-fill-in-blank.data-object.ts","import { ComponentDataObject } from './component.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n/*\r\n *\r\n * Base data object for Quiz Match component\r\n *\r\n * */\r\nexport class QuizMatchDataObject extends ComponentDataObject {\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Quiz name\r\n    protected _quizNameElement: ElementDataObject;\r\n    // Question (a top part of the quiz interface)\r\n    protected _questionElement: ElementDataObject;\r\n    // Feedbacks:\r\n    protected _feedBackFlagElement: ElementDataObject;\r\n    protected _feedBackCorrectMessage: ElementDataObject;\r\n    protected _feedBackIncorrectMessage: ElementDataObject;\r\n    // Multiple attempts\r\n    protected _multipleAttemptFlagElement: ElementDataObject;\r\n    protected _numberOfAttemptsElement: ElementDataObject;\r\n    protected _feedBackIncorrectAttemptElement: ElementDataObject;\r\n    // Combo options to select a correct match\r\n    // (?,A,B,C,D if all 4 questions used)\r\n    protected _optionChoices: string[];\r\n    // This randomized array contains all available answers (left part of the quiz)\r\n    // for display as [0] -> A, etc.\r\n    // VIT: I called them 'answers' as in the XML\r\n    protected _availableAnswers: string[];\r\n    // This randomized array will hold all available choices (right part of the quiz)\r\n    // for display as [0] -> A; [1] -> B, etc.\r\n    // VIT: I called them 'choices' as in the XML\r\n    protected _availableChoices: string[];\r\n    // This array will hold correct answers (e.g. C,B,A,D if all 4 choices have been used)\r\n    protected _correctAnswers: string[];\r\n    // Map choices and answers\r\n    // This dictionary will be used later to find a correct answer for each choice\r\n    // key = choice text (right part of the quiz); value - correct answer text (left part of the quiz)\r\n    protected answerDictionary: Map<string, string>;\r\n    // Set letter array (A,B,C,D)\r\n    // This array is used for determine correct answer letter based on its position\r\n    // e.g. 0-A, 1-B, etc.\r\n    protected letters: string[];\r\n\r\n\r\n    // hold the available answers order\r\n    protected _availableAnswersOrder: any[] = [];\r\n\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private quizMatchDataObjectLogger: Logger;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Data object for DIF quiz match component - constructor\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Overrides base constructor Preprocessing method.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        super.constructorPreprocessing();\r\n        // set initial values of instance variables or instantiate them\r\n        this.quizMatchDataObjectLogger = Log.getInstance().getLogger('QuizMatchDataObjectLogger');\r\n        this._availableChoices = [];\r\n        this._optionChoices = ['?'];  // add ? into option list\r\n        this._correctAnswers = [];\r\n        this._availableAnswers = [];\r\n        this.answerDictionary = new Map<string, string>();\r\n        this.letters = ['A', 'B', 'C', 'D'];\r\n    }\r\n\r\n    /**\r\n     * Parse all quiz match specific properties\r\n     * Overrides parent method\r\n     *\r\n     * @param   child: ElementDataObject\r\n     */\r\n    protected parseElement(child: ElementDataObject): void {\r\n        switch (child.name) {\r\n            case 'QuizName':\r\n                this._quizNameElement = child;\r\n                break;\r\n            case 'Question':\r\n                this._questionElement = child;\r\n                break;\r\n            case 'Answers':\r\n                for (let i: number = 0; i < child.children.length; i++) {\r\n                    const element: ElementDataObject = child.children[i];\r\n                    switch (element.name) {\r\n                        case 'FeedbackFlag':\r\n                            this._feedBackFlagElement = element;\r\n                            break;\r\n                        case 'FeedbackCorrectMessage':\r\n                            this._feedBackCorrectMessage = element;\r\n                            break;\r\n                        case 'FeedbackIncorrectMessage':\r\n                            this._feedBackIncorrectMessage = element;\r\n                            break;\r\n                        case 'MultipleAttemptFlag':\r\n                            this._multipleAttemptFlagElement = element;\r\n                            break;\r\n                        case 'NumberOfAttempts':\r\n                            this._numberOfAttemptsElement = element;\r\n                            break;\r\n                        case 'FeedbackIncorrectAttempt':\r\n                            this._feedBackIncorrectAttemptElement = element;\r\n                            break;\r\n                        case 'Option':\r\n                            // Option has two child elements: Answer and Choice\r\n                            for (let j: number = 0; j < element.children.length; j++) {\r\n                                const el: ElementDataObject = element.children[j];\r\n                                switch (el.name) {\r\n                                    case 'Answer':\r\n                                        this.assignAnswer(element, el); // left part of the quiz interface\r\n                                        break;\r\n                                    case 'Choice':\r\n                                        this.assignChoice(element, el); // right part of the quiz interface\r\n                                        break;\r\n                                }\r\n                            }\r\n                    }\r\n                }\r\n        }\r\n\r\n        super.parseElement(child); // parse standard component properties\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Quiz name\r\n     */\r\n    public get quizName(): string {\r\n        return this._quizNameElement.value;\r\n    }\r\n\r\n    /**\r\n     * Quiz question (the top text box in the quiz interface\r\n     */\r\n    public get question(): string {\r\n        return this._questionElement.value;\r\n    }\r\n\r\n    /**\r\n     * Answer A text (left part of the quiz interface in the A position)\r\n    */\r\n    public get aAnswerText(): string {\r\n        if (this._availableAnswers[0]) {\r\n            return this._availableAnswers[0];\r\n        }else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Answer B text (left part of the quiz interface in the B position)\r\n     */\r\n    public get bAnswerText(): string {\r\n        if (this._availableAnswers[1]) {\r\n            return this._availableAnswers[1];\r\n        }else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Answer C text (left part of the quiz interface in the C position)\r\n     */\r\n    public get cAnswerText(): string {\r\n        if (this._availableAnswers[2]) {\r\n            return this._availableAnswers[2];\r\n        }else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Answer D text (left part of the quiz interface in the D position)\r\n     */\r\n    public get dAnswerText(): string {\r\n        if (this._availableAnswers[3]) {\r\n            return this._availableAnswers[3];\r\n        }else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Text that will be randomly displayed in the first choice text box\r\n     * (right part of the interface)\r\n     */\r\n    public get aDisplayText(): string {\r\n        // return this._aDisplayElement.value;\r\n        if (this._availableChoices[0]) {\r\n            return this._availableChoices[0];\r\n        }else {\r\n            return '';\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Text that will be randomly displayed in the second choice text box\r\n     * (right part of the interface)\r\n     */\r\n    public get bDisplayText(): string {\r\n        // return this._bDisplayElement.value;\r\n        if (this._availableChoices[1]) {\r\n            return this._availableChoices[1];\r\n        }else {\r\n            return '';\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Text that will be randomly displayed in the third choice text box\r\n     * (right part of the interface)\r\n     */\r\n    public get cDisplayText(): string {\r\n        // return this._cDisplayElement.value;\r\n        if (this._availableChoices[2]) {\r\n            return this._availableChoices[2];\r\n        }else {\r\n            return '';\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Text that will be randomly displayed in the fourth choice text box\r\n     * (right part of the interface)\r\n     */\r\n    public get dDisplayText(): string {\r\n        // return this._dDisplayElement.value;\r\n        if (this._availableChoices[3]) {\r\n            return this._availableChoices[3];\r\n        }else {\r\n            return '';\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Feedback Flag value\r\n     */\r\n    public get feedBackFlag(): boolean {\r\n        let retValue: boolean = false;\r\n        if (this._feedBackFlagElement !== undefined && this._feedBackFlagElement.value.toLowerCase() === 'true') {\r\n            retValue = true;\r\n        }\r\n        return retValue;\r\n    }\r\n\r\n    /**\r\n     * Feedback Correct Message value\r\n     */\r\n    public get feedbackCorrectMessage(): string {\r\n        return this._feedBackCorrectMessage.value;\r\n    }\r\n\r\n    /**\r\n     * Feedback incorrect Message value\r\n     */\r\n    public get feedbackIncorrectMessage(): string {\r\n        return this._feedBackIncorrectMessage.value;\r\n    }\r\n\r\n    /**\r\n     * Multiple Attempt Flag value\r\n     */\r\n    public get multipleAttemptFlag(): boolean {\r\n        let retValue: boolean = false;\r\n        if (this._multipleAttemptFlagElement !== undefined &&\r\n            this._multipleAttemptFlagElement.value.toLowerCase() === 'true') {\r\n            retValue = true;\r\n        }\r\n        return retValue;\r\n    }\r\n\r\n    /**\r\n     * Number Of Attempts value\r\n     */\r\n    public get numberOfAttempts(): number {\r\n        return parseInt(this._numberOfAttemptsElement.value, 10);\r\n    }\r\n\r\n    /**\r\n     * Feedback Incorrect Attempt\r\n     */\r\n    public get feedbackIncorrectAttempt(): string {\r\n        return this._feedBackIncorrectAttemptElement.value;\r\n    }\r\n\r\n    /**\r\n     * Title of the answer A\r\n     */\r\n    public get aTitle(): string {\r\n        return 'A:';\r\n    }\r\n\r\n    /**\r\n     * Title of the answer B\r\n     */\r\n    public get bTitle(): string {\r\n        return 'B:';\r\n    }\r\n\r\n    /**\r\n     * Title of the answer C\r\n     */\r\n    public get cTitle(): string {\r\n        return 'C:';\r\n    }\r\n\r\n    /**\r\n     * Title of the answer D\r\n     */\r\n    public get dTitle(): string {\r\n        return 'D:';\r\n    }\r\n\r\n    /**\r\n     * Available options for comboboxes\r\n     * @returns {string[]}\r\n     */\r\n    public get optionChoices(): string[] {\r\n        return this._optionChoices;\r\n    }\r\n\r\n    /**\r\n     * Correct choices array (correct combo select)\r\n     * @returns {string[]}\r\n     */\r\n    public get correctAnswers(): string[] {\r\n        return this._correctAnswers;\r\n    }\r\n\r\n    /**\r\n     * Available choices array (right side) - randomized\r\n     * @returns {string[]}\r\n     */\r\n    public get availableChoices(): string[] {\r\n        return this._availableChoices;\r\n    }\r\n\r\n    /**\r\n     * Available answers array (left side) - randomized\r\n     * @returns {string[]}\r\n     */\r\n    public get availableAnswers(): string[] {\r\n        return this._availableAnswers;\r\n    }\r\n\r\n    /**\r\n     * get available answers order array (left side) after shuffled\r\n\r\n     *\r\n     * @returns \r\n     */\r\n    public get availableAnswersOrder(): string[] {\r\n        return this._availableAnswersOrder;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Private functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Assign A-D answer elements based on the element value\r\n     * @param element - Option element\r\n     * @param child - Answer element\r\n     */\r\n    private assignAnswer(element: ElementDataObject, child: ElementDataObject): void {\r\n        if (child.value !== '') {\r\n            this._availableAnswers.push(child.value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Assign A-D choice elements based on the element value\r\n     * @param element - Option element\r\n     * @param child - Choice element\r\n     */\r\n    private assignChoice(element: ElementDataObject, child: ElementDataObject): void {\r\n        if (child.value !== '') {\r\n            this._availableChoices.push(child.value);\r\n            this._optionChoices.push(element.value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Populate the map of correct answer texts (value) for each possible choice text (key)\r\n     * this map 9dictionary) will be used to find correct answers\r\n     * after randomization\r\n     */\r\n    private populateAnswerDictionary(): void {\r\n        // Populate the dictionary with choice (key) and answer (value)\r\n        // This dictionary will be used later to find a correct answer for each choice\r\n        // If there are duplicates in choices, then the first match will be displayed\r\n        // multiple times - no correct answer ever possible\r\n        // NOTE: There is no check in design time and the same text can be\r\n        // put in several answers/choices\r\n        for (let i: number = 0; i < this._availableAnswers.length; i++) {\r\n            this.answerDictionary.set(this._availableChoices[i], this._availableAnswers[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Randomise the array of available choices for display\r\n     */\r\n    private randomizeChoices(): void {\r\n        let j: number;\r\n        let choice: string;\r\n        // let correct: string;\r\n        // let answer: string;\r\n\r\n        // console.log('Correct answers count in randomizeChoices = ' + this._correctAnswers.length);\r\n\r\n        for (let i: number = this._availableChoices.length; i; i--) {\r\n            j = Math.floor(Math.random() * i);\r\n            choice = this._availableChoices[i - 1];\r\n            this._availableChoices[i - 1] = this._availableChoices[j];\r\n            this._availableChoices[j] = choice;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Randomise the array of available answers for display\r\n     * Initialize and randomise answers order and convert to alphabetical order\r\n     */\r\n    private randomizeAnswers(): void {\r\n        let j: number;\r\n        let str: string;\r\n        // let correct: string;\r\n        let strOrderj: string;\r\n\r\n        // Initialize _availableAnswersOrder\r\n        for (let k: number = 0; k < this._availableAnswers.length; k++) {\r\n            this._availableAnswersOrder.push(k);\r\n        }\r\n\r\n        for (let i: number = this._availableAnswers.length; i; i--) {\r\n            j = Math.floor(Math.random() * i);\r\n            str = this._availableAnswers[i - 1];\r\n            this._availableAnswers[i - 1] = this._availableAnswers[j];\r\n            this._availableAnswers[j] = str;\r\n\r\n            // set available answers order\r\n            strOrderj = this._availableAnswersOrder[i - 1];\r\n            this._availableAnswersOrder[i - 1] = this._availableAnswersOrder[j];\r\n            this._availableAnswersOrder[j] = strOrderj;\r\n        }\r\n\r\n        // convert _availableAnswersOrder array from 0,1,2,3 to A,B,C,D\r\n\r\n        for (let i: number = 0; i < this._availableAnswersOrder.length; i++) {\r\n            this._availableAnswersOrder[i] = (this._availableAnswersOrder[i] === 0) ? 'A' :\r\n                (this._availableAnswersOrder[i] === 1) ? 'B' :\r\n                    (this._availableAnswersOrder[i] === 2) ? 'C' :\r\n                        (this._availableAnswersOrder[i] === 3) ? 'D' : this._availableAnswersOrder[i];\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Sort combo option array\r\n     */\r\n    private sortOptionCoices(): void {\r\n        this._optionChoices.sort();\r\n    }\r\n\r\n    /**\r\n     * Array of correct answers (e.g. C,B,A ...)\r\n     */\r\n    private setCorrectAnswers(): void {\r\n        // Based on the map of correct choice/answer pair (always ABCD)\r\n        // Search _availableAnswers for a correct answer\r\n        // based on the each choice text (key in the dictionary)\r\n        for (let i: number = 0; i < this._availableChoices.length; i++) {\r\n            const answer: string = this.answerDictionary.get(this._availableChoices[i]);\r\n            // find is not supported by IE, so loop and stop when found\r\n            for (let j: number = 0; j < this._availableAnswers.length; j++) {\r\n                if (this._availableAnswers[j] === answer) {\r\n                    this._correctAnswers.push(this.letters[j]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Quiz Match Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name + '\\n';\r\n        outString += 'QuizName = ' + this.quizName + '\\n';\r\n        outString += 'Question = ' + this.question + '\\n';\r\n        outString += 'A Title = ' + this.aTitle + '\\n';\r\n        outString += 'B Title = ' + this.bTitle + '\\n';\r\n        outString += 'C Title = ' + this.cTitle + '\\n';\r\n        outString += 'D Title = ' + this.dTitle + '\\n';\r\n        outString += 'A Answer = ' + this.aAnswerText + '\\n';\r\n        outString += 'B Answer = ' + this.bAnswerText + '\\n';\r\n        outString += 'C Answer = ' + this.cAnswerText + '\\n';\r\n        outString += 'D Answer = ' + this.dAnswerText + '\\n';\r\n        outString += 'A Display Choice = ' + this.aDisplayText + '\\n';\r\n        outString += 'B Display Choice = ' + this.bDisplayText + '\\n';\r\n        outString += 'C Display Choice = ' + this.cDisplayText + '\\n';\r\n        outString += 'D Display Choice = ' + this.dDisplayText + '\\n';\r\n        outString += 'Feedback Correct Message = ' + this.feedbackCorrectMessage + '\\n';\r\n        outString += 'Feedback Incorrect Message = ' + this.feedbackIncorrectMessage + '\\n';\r\n        outString += 'Feedback Flag = ' + this.feedBackFlag + '\\n';\r\n        outString += 'Multiple Attempt Flag = ' + this.multipleAttemptFlag + '\\n';\r\n        outString += 'Number Of Attempts = ' + this.numberOfAttempts + '\\n';\r\n        outString += 'Feedback Incorrect Attempt = ' + this.feedbackIncorrectAttempt + '\\n';\r\n\r\n        outString += 'Combo choices property array:' + '\\n';\r\n        for (let i: number = 0; i < this.optionChoices.length; i ++) {\r\n            outString += this.optionChoices[i] + '\\n';\r\n        }\r\n\r\n        outString += 'Correct answers property array:' + '\\n';\r\n        for (let i: number = 0; i < this.correctAnswers.length; i ++) {\r\n            outString += this.correctAnswers[i] + '\\n';\r\n        }\r\n\r\n        outString += 'Available choices property array:' + '\\n';\r\n        for (let i: number = 0; i < this.availableChoices.length; i ++) {\r\n            outString += this.availableChoices[i] + '\\n';\r\n        }\r\n\r\n        outString += 'Available answers property array:' + '\\n';\r\n        for (let i: number = 0; i < this.availableAnswers.length; i ++) {\r\n            outString += this.availableAnswers[i] + '\\n';\r\n        }\r\n\r\n        return outString;\r\n    }\r\n\r\n    /**\r\n     * Shuffle choice column and answers column; set correct answer array\r\n     */\r\n    public shuffle(): void {\r\n\r\n        this.populateAnswerDictionary(); // key = choice text (right part); value - correct answer text\r\n        this.randomizeChoices();\r\n        this.randomizeAnswers();\r\n        this.sortOptionCoices(); // normally they already will be sorted, just in case\r\n        this.setCorrectAnswers();\r\n    }\r\n\r\n\r\n    /**\r\n     * Set choice column and answer column; set _availableAnswersOrder correct answer\r\n     */\r\n    public setQuizColumn(correctResponse: string): void {\r\n\r\n        const cResponse: string[] = correctResponse.split('[,]');\r\n        // console.log('###QuizMatchDataObject.setQuizColumn correctResponse=' + correctResponse);\r\n        // set available answer\r\n        const tempAnswer: string[] = [];\r\n        for (let i: number = 0; i < cResponse.length; i++) {\r\n\r\n            // Set _availableAnswersOrder and correct answer\r\n            this._correctAnswers[i] = cResponse[i].charAt(4);\r\n            this._availableAnswersOrder[i] = cResponse[i].charAt(0);\r\n\r\n            tempAnswer[i] = this._availableAnswers[this.convertABCDto0123(cResponse[i].charAt(0))];\r\n        }\r\n\r\n        for (let i: number = 0; i < cResponse.length; i++) {\r\n            this._availableAnswers[i] = tempAnswer[i];\r\n        }\r\n        // console.log('###QuizMatchDataObject.setQuizColumn _correctAnswers=' + this._correctAnswers.join('||'));\r\n        // console.log('###QuizMatchDataObject.setQuizColumn _availableAnswersOrder=' + this._availableAnswersOrder.join('||'));\r\n        // console.log('###QuizMatchDataObject.setQuizColumn _availableAnswers=' + this._availableAnswers.join('||'));\r\n\r\n\r\n        // set available choice\r\n        for (let i: number = 0; i < this._correctAnswers.length; i++) {\r\n            tempAnswer[i] = this._availableChoices[this.convertABCDto0123(cResponse[this.convertABCDto0123(this._correctAnswers[i])].charAt(0))];\r\n        }\r\n\r\n        for (let i: number = 0; i < cResponse.length; i++) {\r\n            this._availableChoices[i] = tempAnswer[i];\r\n        }\r\n        // console.log('###QuizMatchDataObject.setQuizColumn _availableChoices=' + this._availableChoices.join(';;'));\r\n\r\n    }\r\n\r\n    private convertABCDto0123(inputChar: string): number {\r\n        switch (inputChar) {\r\n            case 'A':\r\n                return 0;\r\n            case 'B':\r\n                return 1;\r\n            case 'C':\r\n                return 2;\r\n            case 'D':\r\n                return 3;\r\n            default:\r\n                return 0;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/quiz-match.data-object.ts","import { ComponentDataObject } from './component.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n/*\r\n*\r\n* Base data object for Quiz Multiple Choice component\r\n*\r\n* */\r\nexport class QuizMultipleChoiceDataObject extends ComponentDataObject {\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    protected _quizNameElement: ElementDataObject;\r\n    protected _questionElement: ElementDataObject;\r\n\r\n    protected _aChoiceElement: ElementDataObject;\r\n    protected _bchoiceElement: ElementDataObject;\r\n    protected _cChoiceElement: ElementDataObject;\r\n    protected _dChoiceElement: ElementDataObject;\r\n\r\n    protected _correctChoiceElement: ElementDataObject;\r\n\r\n    protected _feedBackFlagElement: ElementDataObject;\r\n    protected _feedBackAMessageElement: ElementDataObject;\r\n    protected _feedBackBMessageElement: ElementDataObject;\r\n    protected _feedBackCMessageElement: ElementDataObject;\r\n    protected _feedBackDMessageElement: ElementDataObject;\r\n\r\n    protected _multipleAttemptFlagElement: ElementDataObject;\r\n    protected _numberOfAttemptsElement: ElementDataObject;\r\n    protected _feedbackIncorrectAttemptElement: ElementDataObject;\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private quizMultipleChoiceDataObjectLogger: Logger;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Data object for DIF quizMultipleChoice component - constructor\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n        this.quizMultipleChoiceDataObjectLogger.debug('QuizMcDataObject constructor');\r\n        // this.parseElementChildren();\r\n        // this.quizMultipleChoiceDataObjectLogger.debug(this.serializeToString());\r\n    }\r\n\r\n    /**\r\n     * Overrides base constructorPreprocessing method.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n       this.quizMultipleChoiceDataObjectLogger = Log.getInstance().getLogger('QuizMultipleChoiceDataObject');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n      * Parse all quizMultipleChoice multiple choice specific properties\r\n      * Overrides parent method\r\n      *\r\n      * @param   child: ElementDataObject\r\n      */\r\n    protected parseElement(child: ElementDataObject): void {\r\n        switch (child.name) {\r\n            case 'QuizName':\r\n                this._quizNameElement = child;\r\n                break;\r\n            case 'Question':\r\n                this._questionElement = child;\r\n                break;\r\n            case 'Answers':\r\n                for (let i: number = 0; i < child.children.length; i++) {\r\n                    const element: ElementDataObject = child.children[i];\r\n                    switch (element.name) {\r\n                        case 'Choice':\r\n                            this.assignChoice(element);\r\n                            break;\r\n                        case 'CorrectChoice':\r\n                            this._correctChoiceElement = element;\r\n                            break;\r\n                        case 'FeedbackFlag':\r\n                            this._feedBackFlagElement = element;\r\n                            break;\r\n                        case 'FeedbackAMessage':\r\n                            this._feedBackAMessageElement = element;\r\n                            break;\r\n                        case 'FeedbackBMessage':\r\n                            this._feedBackBMessageElement = element;\r\n                            break;\r\n                        case 'FeedbackCMessage':\r\n                            this._feedBackCMessageElement = element;\r\n                            break;\r\n                        case 'FeedbackDMessage':\r\n                            this._feedBackDMessageElement = element;\r\n                            break;\r\n                        case 'MultipleAttemptFlag':\r\n                            this._multipleAttemptFlagElement = element;\r\n                            break;\r\n                        case 'NumberOfAttempts':\r\n                            this._numberOfAttemptsElement = element;\r\n                            break;\r\n                        case 'FeedbackIncorrectAttempt':\r\n                            this._feedbackIncorrectAttemptElement = element;\r\n                            break;\r\n                    }\r\n                }\r\n        }\r\n\r\n        super.parseElement(child); // parse standard component properties\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Quiz name\r\n     */\r\n    public get quizName(): string {\r\n        return this._quizNameElement.value;\r\n    }\r\n\r\n    /**\r\n     * Quiz question\r\n     */\r\n    public get question(): string {\r\n        return this._questionElement.value;\r\n    }\r\n\r\n    /**\r\n     * Choice A text\r\n     */\r\n    public get aChoiceText(): string {\r\n        return this._aChoiceElement.children[0].value;\r\n    }\r\n\r\n    /**\r\n     * Choice B text\r\n     */\r\n    public get bChoiceText(): string {\r\n        return this._bchoiceElement.children[0].value;\r\n    }\r\n\r\n    /**\r\n     * Choice C text\r\n     */\r\n    public get cChoiceText(): string {\r\n        return this._cChoiceElement.children[0].value;\r\n    }\r\n\r\n    /**\r\n     * Choice D text\r\n     */\r\n    public get dChoiceText(): string {\r\n        return this._dChoiceElement.children[0].value;\r\n    }\r\n\r\n    /**\r\n     * Correct Choice value\r\n     */\r\n    public get correctChoice(): string {\r\n        return this._correctChoiceElement.value;\r\n    }\r\n\r\n    /**\r\n     * Feedback Flag value\r\n     */\r\n    public get feedBackFlag(): boolean {\r\n        let retValue: boolean = false;\r\n        if (this._feedBackFlagElement !== undefined &&\r\n            this._feedBackFlagElement.value.toLowerCase() === 'true') {\r\n            retValue = true;\r\n        }\r\n        return retValue;\r\n    }\r\n\r\n    /**\r\n     * Feedback A Message\r\n     */\r\n    public get feedbackAMessage(): string {\r\n        return this._feedBackAMessageElement.value;\r\n    }\r\n\r\n    /**\r\n     * Feedback B Message\r\n     */\r\n    public get feedbackBMessage(): string {\r\n        return this._feedBackBMessageElement.value;\r\n    }\r\n\r\n    /**\r\n     * Feedback C Message\r\n     */\r\n    public get feedbackCMessage(): string {\r\n        return this._feedBackCMessageElement.value;\r\n    }\r\n\r\n    /**\r\n     * Feedback C Message\r\n     */\r\n    public get feedbackDMessage(): string {\r\n        return this._feedBackDMessageElement.value;\r\n    }\r\n\r\n    /**\r\n     * Multiple Attempt Flag value\r\n     */\r\n    public get multipleAttemptFlag(): boolean {\r\n        let retValue: boolean = false;\r\n        if (this._multipleAttemptFlagElement !== undefined &&\r\n            this._multipleAttemptFlagElement.value.toLowerCase() === 'true') {\r\n            retValue = true;\r\n        }\r\n        return retValue;\r\n    }\r\n\r\n    /**\r\n     * Number Of Attempts value\r\n     */\r\n    public get numberOfAttempts(): number {\r\n        return parseInt(this._numberOfAttemptsElement.value, 10);\r\n    }\r\n\r\n    /**\r\n     * Feedback Incorrect Attempt\r\n     */\r\n    public get feedbackIncorrectAttempt(): string {\r\n        return this._feedbackIncorrectAttemptElement.value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Private functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Assign A-D choise elements based on the element value\r\n     * @param element\r\n     */\r\n    private assignChoice(element: ElementDataObject): void {\r\n        if (element.value === 'A') {\r\n            this._aChoiceElement = element;\r\n        } else if (element.value === 'B') {\r\n            this._bchoiceElement = element;\r\n        } else if (element.value === 'C') {\r\n            this._cChoiceElement = element;\r\n        } else if (element.value === 'D') {\r\n            this._dChoiceElement = element;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Quiz MC Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name + '\\n';\r\n        outString += 'QuizName = ' + this.quizName + '\\n';\r\n        outString += 'Question = ' + this.question + '\\n';\r\n        outString += 'A Choice = ' + this.aChoiceText + '\\n';\r\n        outString += 'B Choice = ' + this.bChoiceText + '\\n';\r\n        outString += 'C Choice = ' + this.cChoiceText + '\\n';\r\n        outString += 'D Choice = ' + this.dChoiceText + '\\n';\r\n        outString += 'Correct Choice = ' + this.correctChoice + '\\n';\r\n        outString += 'Feedback Flag = ' + this.feedBackFlag + '\\n';\r\n        outString += 'Feedback A Message = ' + this.feedbackAMessage + '\\n';\r\n        outString += 'Feedback B Message = ' + this.feedbackBMessage + '\\n';\r\n        outString += 'Feedback C Message = ' + this.feedbackCMessage + '\\n';\r\n        outString += 'Feedback D Message = ' + this.feedbackDMessage + '\\n';\r\n        outString += 'Multiple Attempt Flag = ' + this.multipleAttemptFlag + '\\n';\r\n        outString += 'Number Of Attempts = ' + this.numberOfAttempts + '\\n';\r\n        outString += 'Feedback Incorrect Attempt = ' + this.feedbackIncorrectAttempt + '\\n';\r\n\r\n        return outString;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/quiz-multiple-choice.data-object.ts","import {ComponentDataObject} from \"./component.data-object\";\r\nimport {ElementDataObject} from \"../element.data-object\";\r\nimport {Log, Logger} from \"../../../log\";\r\n\r\n/*\r\n *\r\n * Base data object for Quiz Multiple Choice component\r\n *\r\n * */\r\nexport class QuizResultDataObject extends ComponentDataObject {\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    protected _quizNameElement: ElementDataObject;\r\n    protected _resultsHeaderTextElement: ElementDataObject;\r\n    protected _correctAnswerFlagElement: ElementDataObject;\r\n    protected _selectedAnswerFlagElement: ElementDataObject;\r\n    protected _questionTextFlagElement: ElementDataObject;\r\n    // Properties that are not included into the XML\r\n    // protected _correctAnswerText: string = '';\r\n    // protected _selectedAnswerText: string = '';\r\n    // protected _questionText: string = '';\r\n    protected _quizScore: string = '';\r\n    // Result Text\r\n    protected _resultText: string;\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private quizQuizResultDataObjectLogger: Logger;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Data object for DIF quizMultipleChoice component - constructor\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n        // this.quizQuizResultDataObjectLogger.debug('QuizResultDataObject constructor');\r\n        // this.parseElementChildren();\r\n        // this.quizMultipleChoiceDataObjectLogger.debug(this.serializeToString());\r\n    }\r\n\r\n    /**\r\n     * Overrides base constructorPreprocessing method.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.quizQuizResultDataObjectLogger = Log.getInstance().getLogger('QuizResultDataObject');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Parse all quizMultipleChoice multiple choice specific properties\r\n     * Overrides parent method\r\n     *\r\n     * @param   child: ElementDataObject\r\n     */\r\n    protected parseElement(child: ElementDataObject): void {\r\n        switch (child.name) {\r\n            case 'QuizName':\r\n                this._quizNameElement = child;\r\n                break;\r\n            case 'ResultsHeaderText':\r\n                this._resultsHeaderTextElement = child;\r\n                break;\r\n            case 'CorrectAnswerFlag':\r\n                this._correctAnswerFlagElement = child;\r\n                break;\r\n            case 'SelectedAnswerFlag':\r\n                this._selectedAnswerFlagElement = child;\r\n                break;\r\n            case 'QuestionTextFlag':\r\n                this._questionTextFlagElement = child;\r\n                break;\r\n        }\r\n        super.parseElement(child); // parse standard component properties\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Quiz name\r\n     */\r\n    public get quizName(): string {\r\n        return this._quizNameElement.value;\r\n    }\r\n\r\n    /**\r\n     * ResultsHeaderText\r\n     */\r\n    public get resultsHeaderText(): string {\r\n        return this._resultsHeaderTextElement.value;\r\n    }\r\n\r\n    /**\r\n     * CorrectAnswerFlag\r\n     */\r\n    public get correctAnswerFlag(): boolean {\r\n        let retValue: boolean = false;\r\n        if (this._correctAnswerFlagElement !== undefined &&\r\n            this._correctAnswerFlagElement.value.toLowerCase() === 'true') {\r\n            retValue = true;\r\n        }\r\n        return retValue;\r\n    }\r\n\r\n    /**\r\n     * SelectedAnswerFlag\r\n     */\r\n    public get selectedAnswerFlag(): boolean {\r\n        let retValue: boolean = false;\r\n        if (this._selectedAnswerFlagElement !== undefined &&\r\n            this._selectedAnswerFlagElement.value.toLowerCase() === 'true') {\r\n            retValue = true;\r\n        }\r\n        return retValue;\r\n    }\r\n\r\n    /**\r\n     * QuestionTextFlag\r\n     */\r\n    public get questionTextFlag(): boolean {\r\n        let retValue: boolean = false;\r\n        if (this._questionTextFlagElement !== undefined &&\r\n            this._questionTextFlagElement.value.toLowerCase() === 'true') {\r\n            retValue = true;\r\n        }\r\n        return retValue;\r\n    }\r\n\r\n    /**\r\n     * Get correct answer\r\n     * @returns {string}\r\n     */\r\n    // public get correctAnswerText(): string {\r\n    //     return this._correctAnswerText;\r\n    // }\r\n\r\n    /**\r\n     * Set correct answer\r\n     * @param value\r\n     */\r\n    // public set correctAnswerText(value: string) {\r\n    //     this._correctAnswerText = value;\r\n    // }\r\n\r\n    /**\r\n     * Get selected answer\r\n     * @returns {string}\r\n     */\r\n    // public get selectedAnswerText(): string {\r\n    //     return this._selectedAnswerText;\r\n    // }\r\n\r\n    /**\r\n     * Set selected answer\r\n     * @param value\r\n     */\r\n    // public set selectedAnswerText(value: string) {\r\n    //     this._selectedAnswerText = value;\r\n    // }\r\n\r\n    /**\r\n     * Get question text\r\n     * @returns {string}\r\n     */\r\n    // public get questionText(): string {\r\n    //     return this._questionText;\r\n    // }\r\n\r\n    /**\r\n     * Set question text\r\n     * @param value\r\n     */\r\n    // public set questionText(value: string) {\r\n    //     this._questionText = value;\r\n    // }\r\n\r\n    /**\r\n     * Get quiz score\r\n     * @returns {string}\r\n     */\r\n    public get quizScore(): string {\r\n        return this._quizScore;\r\n    }\r\n\r\n    /**\r\n     * Set quiz score\r\n     * @returns {string}\r\n     */\r\n    public set quizScore(value: string) {\r\n        this._quizScore = value;\r\n    }\r\n\r\n    /**\r\n     * Get html string to be displayed at the bottom window of teh component\r\n     * @returns {string}\r\n     */\r\n    public get resultText(): string {\r\n        return this._resultText;\r\n    }\r\n\r\n\r\n    /**\r\n     * Set html string to be displayed at the bottom window of teh component\r\n     * @param value\r\n     */\r\n    public set resultText(value: string) {\r\n        this._resultText = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Private functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Quiz MC Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name + '\\n';\r\n        outString += 'QuizName = ' + this.quizName + '\\n';\r\n        outString += 'Correct Answer Flag = ' + this.correctAnswerFlag + '\\n';\r\n        outString += 'Question Text Flag = ' + this.questionTextFlag + '\\n';\r\n        outString += 'Selected Answer Flag = ' + this.selectedAnswerFlag + '\\n';\r\n        outString += 'Results Header Text = ' + this.resultsHeaderText + '\\n';\r\n\r\n        // set test data\r\n        // this.correctAnswerText = 'This is a correct answer text';\r\n        // this.selectedAnswerText = 'This is a selected answer text';\r\n        // this.questionText = 'This is a question text';\r\n        // TODO: Probably we do not need those properties\r\n        // outString += 'Correct Answer Text = ' + this.correctAnswerText + '\\n';\r\n        // outString += 'Selected Answer Text = ' + this.selectedAnswerText + '\\n';\r\n        // outString += 'Question Answer Text = ' + this.questionText + '\\n';\r\n\r\n        // set result html\r\n        // this.resultText = '<b>Quiz Result text</b><p>Test</p>'\r\n        // for (let i: number = 1; i < 20; i++) {\r\n        //     this.resultText += '<p>' + i + '. result: #####################################################################################################</p>';\r\n        // }\r\n        outString += 'Result Text = ' + this.resultText + '\\n';\r\n\r\n        return outString;\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/quiz-result.data-object.ts","import { ComponentDataObject } from './component.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\nimport { EventDataObject } from '../event-system/event.data-object';\r\nimport { EventPlayableDataObjectCollection }\r\n    from '../../../../../player/model/data-objects/event-system/event.playable.data-object.collection';\r\nimport { FrameworkActionPlayableDataObject }\r\n    from '../../../../../player/model/data-objects/action-system/framework-action.playable.data-object';\r\n\r\n/*\r\n*\r\n* Data object for DIF RadioButton component\r\n*\r\n*/\r\nexport class RadioButtonDataObject extends ComponentDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The Type of the component TODO: Do i want to use this?\r\n     */\r\n    public type: string = 'RadioButton';\r\n\r\n    /**\r\n     * The Element that contains the correctValue property of this component\r\n     *\r\n     * TODO: what is this used for?\r\n     */\r\n    private _correctValueElement: ElementDataObject;\r\n\r\n    /**\r\n     * The Element that contains the defaultValue property of this component\r\n     */\r\n    private _defaultValue: ElementDataObject;\r\n\r\n    /**\r\n     * Element that contains the name of the group this component is associated with.\r\n     * Radio buttons with the same groupName will work together selecting and deselecting as a group.\r\n     */\r\n    private _groupName: ElementDataObject;\r\n\r\n    /**\r\n     * The Element that contains the selected property of this component\r\n     *\r\n     */\r\n    public _selected: ElementDataObject;\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     */\r\n    private radioButtonDataObjectLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new ElementDataObject instance.\r\n     *\r\n     * @param rootElement ElementDataObject that contains he element data\r\n     * which is used to build this RadioButtonDataObject.\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n        super(rootElement);\r\n        this._selected = this._defaultValue;\r\n    }\r\n\r\n    /**\r\n     * Overrides base constructorPreprocessing method.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.radioButtonDataObjectLogger = Log.getInstance().getLogger('RadioButtonDataObject');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    /**\r\n     * overrides base version to add specific properties\r\n     */\r\n    protected initializePropertyNames(): void {\r\n        super.initializePropertyNames();\r\n        this.initPropertyMapArray = this.initPropertyMapArray.concat([\r\n            ['_correctValueElement', 'correctValue', 'CorrectValue', 'element'],\r\n            ['_defaultValue', 'defaultValue', 'DefaultValue', 'element'],\r\n            ['_groupName', 'groupName', 'GroupName', 'element'],\r\n            ['_selected', 'selected', 'Selected', 'element']\r\n        ]);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  The original value of the check box. Determines weather or not its checked from the start.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    public get defaultValue(): boolean {\r\n        return (this._defaultValue.value === 'true');\r\n    }\r\n\r\n    /**\r\n     * The name of the group this component is associated with.\r\n     * Radio buttons with the same groupName will work together selecting and deselecting as a group.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get groupName(): string {\r\n        return this._groupName.value;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get correctValue(): string {\r\n        // return this._correctValueElement.value === 'selectedIsCorrect' ? 'true' : 'false';\r\n        return this._correctValueElement.value;\r\n    }\r\n\r\n    /**\r\n     * Boolean value representing whether or not this radio button is selected.\r\n     */\r\n    public get selected(): boolean {\r\n        return (this._selected.value === 'true');\r\n    }\r\n\r\n    public set selected(value: boolean) {\r\n        // console.log(this.name);\r\n        if (this._selected.value === (value ? 'true' : 'false') ) {\r\n            return; // value not changed\r\n        }\r\n        if (value) {\r\n            this.radioButtonDataObjectLogger.debug('setter SELECTED...');\r\n            this._selected.value = 'true';\r\n            (this.eventCollection as EventPlayableDataObjectCollection).processEvent(EventDataObject.ON_SELECTED);\r\n            // Unselect all other radio buttons within the same group\r\n            for (const radioButton of this.findGroupRadioButtons() ) {\r\n                if (radioButton !== this && radioButton.selected) {\r\n                    radioButton.selected = false;\r\n                }\r\n            }\r\n        }else {\r\n            this.radioButtonDataObjectLogger.debug('setter UNSELECTED...');\r\n            this._selected.value = 'false';\r\n            // Process Event system event\r\n            (this.eventCollection as EventPlayableDataObjectCollection).processEvent(EventDataObject.ON_UNSELECTED);\r\n\r\n            // Process Action system action\r\n            if (this.frameworkAction.frameworkEvent) {\r\n                (this.frameworkAction as FrameworkActionPlayableDataObject).processFrameworkAction();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Find all radio buttons within the same group name from parent container\r\n     */\r\n    private findGroupRadioButtons(): Array<RadioButtonDataObject> {\r\n        const radioButtons: Array<RadioButtonDataObject> = this.parent.components.filter\r\n        (component => component instanceof RadioButtonDataObject) as Array<RadioButtonDataObject>;\r\n        return radioButtons.filter(r => r.groupName === this.groupName);\r\n    }\r\n\r\n\r\n    /**\r\n     * Override base.\r\n     * @internal: Only used by Player.  Should consider creating playable version of this class?\r\n     * @returns {boolean}\r\n     */\r\n    public validate(): boolean {\r\n        if (this.correctValue === 'selectedIsCorrect' && this.selected === true) {\r\n            return true;\r\n        } else if (this.correctValue === 'unselectedIsCorrect' && this.selected === false) {\r\n            return true;\r\n        } else if (this.correctValue === 'eitherIsCorrect') {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties into a string\r\n     * TODO: Should rename to toString\r\n     */\r\n    public serializeToString(): string {\r\n        let outString: string = 'Radio Button Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name + '\\n';\r\n        outString += 'correctValue = ' + this.correctValue + '\\n';\r\n        outString += 'defaultValue = ' + this.defaultValue + '\\n';\r\n        outString += 'groupName = ' + this.groupName + '\\n';\r\n        outString += 'selected = ' + this.selected + '\\n';\r\n        outString += 'type = ' + this.type;\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/radio-button.data-object.ts","import { ElementDataObject }    from '../element.data-object';\r\nimport { TextDataObject }       from './text.data-object';\r\n\r\nimport { Log, Logger }  from '../../../log';\r\n\r\n\r\n/**\r\n * TODO:    Write description.\r\n * TODO:    Remove unused headers.\r\n */\r\nexport class TextDisplayDataObject extends TextDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private textDisplayDataObjectLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new TextDisplayDataObject instance.\r\n     *\r\n     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be\r\n     *                          constructed from.\r\n     */\r\n    public constructor(sourceElement: ElementDataObject) {\r\n\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n\r\n        this.textDisplayDataObjectLogger = Log.getInstance().getLogger('TextDisplayDataObject');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/text-display.data-object.ts","import { ElementDataObject }    from '../element.data-object';\r\nimport { TextDataObject }       from './text.data-object';\r\n\r\nimport { Log, Logger }  from '../../../log';\r\n\r\n\r\n/**\r\n * TODO:    Write description.\r\n * TODO:    Remove unused headers.\r\n */\r\nexport class TextInputAreaDataObject extends TextDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private textInputAreaDataObjectLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new TextInputAreaDataObject instance.\r\n     *\r\n     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be\r\n     *                          constructed from.\r\n     */\r\n    public constructor(sourceElement: ElementDataObject) {\r\n\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n\r\n        this.textInputAreaDataObjectLogger = Log.getInstance().getLogger('TextInputAreaDataObject');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/text-input-area.data-object.ts","import { ElementDataObject }    from '../element.data-object';\r\nimport { TextDataObject }       from './text.data-object';\r\n\r\nimport { Log, Logger }  from '../../../log';\r\n\r\n\r\n/**\r\n * TODO:    Write description.\r\n * TODO:    Remove unused headers.\r\n */\r\nexport class TextInputDataObject extends TextDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private textInputDataObjectLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new TextInputDataObject instance.\r\n     *\r\n     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be\r\n     *                          constructed from.\r\n     */\r\n    public constructor(sourceElement: ElementDataObject) {\r\n\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n\r\n        this.textInputDataObjectLogger = Log.getInstance().getLogger('TextInputDataObject');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/text-input.data-object.ts","import { ColorDataType }        from '../data-types/color.data-type';\r\nimport { MarkupTextDataType }   from '../data-types/markup-text.data-type';\r\n\r\nimport { ComponentDataObject }  from './component.data-object';\r\nimport { ElementDataObject }    from '../element.data-object';\r\n\r\nimport { Log, Logger }  from '../../../log';\r\n\r\n\r\n/**\r\n * TODO:    Write description.\r\n *\r\n * NOTE:\r\n *\r\n *          The following properties are parsed and used in AssetBase\r\n *\r\n *              AssetID\r\n *              AssetRevisionID\r\n *\r\n *          The following properties are parsed and used in AssetEdit\r\n *\r\n *              Actions\r\n *              _URL\r\n *              _URLThumbnail\r\n *\r\n *          The following properties are parsed and used in AssetDisplay\r\n *\r\n *              Actions\r\n *              _URL\r\n *\r\n *\r\n *          The following is a list of properties that are found in the XML data, but don't seem to be parsed in the\r\n *          ActionScript code:\r\n *\r\n *              Size\r\n *              Color\r\n *              Justify\r\n *              Margin\r\n *              Focus\r\n *              MouseOver\r\n *\r\n *          TODO: Figure out what to do with these properties.\r\n */\r\nexport abstract class TextDataObject extends ComponentDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected textDataObjectLogger: Logger;\r\n\r\n    // parsed in ActionScript\r\n\r\n    /**\r\n     * The ElementDataObject that contains the alignment property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _alignment: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the background property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _background: ElementDataObject;\r\n\r\n    /**\r\n     * The ColorDataType that provides conversion functionality for the ElementDataObject that contains the\r\n     * backgroundColor property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _backgroundColor: ColorDataType;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the bold property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _bold: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the border property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _border: ElementDataObject;\r\n\r\n    /**\r\n     * The ColorDataType that provides conversion functionality for the ElementDataObject that contains the borderColor\r\n     * property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _borderColor: ColorDataType;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the bullet property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _bullet: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the checkCase property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _checkCase: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the correctText property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _correctText: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the editable property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _editable: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the font property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _font: ElementDataObject;\r\n\r\n    /**\r\n     * The ColorDataType that provides conversion functionality for the ElementDataObject that contains the fontColor\r\n     * property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _fontColor: ColorDataType;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the fontSize property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _fontSize: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the italic property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _italic: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the maxChars property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _maxChars: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the maxValue property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _maxValue: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the multiline property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _multiline: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the restrict property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _restrict: ElementDataObject;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the selectable property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _selectable: ElementDataObject;\r\n\r\n    /**\r\n     * The MarkupTextDataType that provides conversion and variable reference handling functionality for the\r\n     * ElementDataObject that contains the text property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public _text: MarkupTextDataType;\r\n\r\n    /**\r\n     * The ElementDataObject that contains the underline property used by the view component(s) driven by our data.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _underline: ElementDataObject;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default false\r\n     */\r\n    protected _isDisplayComponent: boolean;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new TextDataObject instance.\r\n     *\r\n     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be\r\n     *                          constructed from.\r\n     */\r\n    public constructor(sourceElement: ElementDataObject) {\r\n\r\n        super(sourceElement);\r\n\r\n        this._isDisplayComponent = !this.isEditable;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n\r\n        this.textDataObjectLogger = Log.getInstance().getLogger('TextDataObject');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Initialize properties by adding all common properties in component base class\r\n     * overridden and extended by derived class to add each specific properties\r\n     */\r\n    protected initializePropertyNames(): void {\r\n\r\n        super.initializePropertyNames();\r\n\r\n        this.initPropertyMapArray = this.initPropertyMapArray.concat([\r\n            ['_alignment',          'alignment',                    'Alignment',        'element'],\r\n            ['_background',         'hasBackground',                'Background',       'element'],\r\n            ['_backgroundColor',    'backgroundColor',              'BackgroundColor',    'color'],\r\n            ['_bold',               'isBold',                       'Bold',             'element'],\r\n            ['_border',             'hasBorder',                    'Border',           'element'],\r\n            ['_borderColor',        'borderColor',                  'BorderColor',        'color'],\r\n            ['_bullet',             'bullet',                       'Bullet',           'element'],\r\n            ['_checkCase',          'isValidationCaseSensitive',    'CheckCase',        'element'],\r\n            ['_correctText',        'validationText',               'CorrectText',      'element'],\r\n            ['_editable',           'isEditable',                   'Editable',         'element'],\r\n            ['_font',               'font',                         'Font',             'element'],\r\n            ['_fontColor',          'fontColor',                    'FontColor',          'color'],\r\n            ['_fontSize',           'fontSize',                     'FontSize',         'element'],\r\n            ['_italic',             'isItalic',                     'Italic',           'element'],\r\n            ['_maxChars',           'maximumAllowableCharacters',   'MaxChars',         'element'],\r\n            ['_maxValue',           'maximumValue',                 'MaxValue',         'element'],\r\n            ['_multiline',          'isMultiline',                  'Multiline',        'element'],\r\n            ['_restrict',           'restrict',                     'Restrict',         'element'],\r\n            ['_selectable',         'isSelectable',                 'Selectable',       'element'],\r\n            ['_text',               'text',                         'Text',                'text'],\r\n            ['_underline',          'isUnderline',                  'Underline',        'element'],\r\n        ]);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get alignment(): string {\r\n\r\n        // TODO: Is this logic needed?  Also can any of these actually be undefined by not being in the data at all?\r\n        /*\r\n             var returnVar:String = TextAlign.LEFT;\r\n             if (alignmentElement != null){\r\n             returnVar = String(alignmentElement.Value).toLowerCase();\r\n             }\r\n             return returnVar;\r\n         */\r\n        return this._alignment.value;\r\n    }\r\n\r\n    public set alignment(value: string) {\r\n\r\n        this._alignment.value = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get hasBackground(): boolean {\r\n\r\n        return (this._background.value.toLowerCase() === 'true');\r\n    }\r\n\r\n    public set hasBackground(value: boolean) {\r\n\r\n        this._background.value = value.toString();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get backgroundColor(): string {\r\n\r\n        return this._backgroundColor.webColor;\r\n    }\r\n\r\n    public set backgroundColor(value: string) {\r\n\r\n        this._backgroundColor.setColorFromString(value);\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get isBold(): boolean {\r\n\r\n        return (this._bold.value.toLowerCase() === 'true');\r\n    }\r\n\r\n    public set isBold(value: boolean) {\r\n\r\n        this._bold.value = value.toString();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get hasBorder(): boolean {\r\n\r\n        return (this._border.value.toLowerCase() === 'true');\r\n    }\r\n\r\n    public set hasBorder(value: boolean) {\r\n\r\n        this._border.value = value.toString();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get borderColor(): string {\r\n\r\n        return this._borderColor.webColor;\r\n    }\r\n\r\n    public set borderColor(value: string) {\r\n\r\n        this._borderColor.setColorFromString(value);\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get bullet(): string {\r\n\r\n        // TODO: Is this a string?  I don't even see this property being used in ActionScript.\r\n        return this._bullet.value;\r\n    }\r\n\r\n    public set bullet(value: string) {\r\n\r\n        this._bullet.value = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get validationText(): string {\r\n\r\n        return this._correctText.value;\r\n    }\r\n\r\n    public set validationText(value: string) {\r\n\r\n        this._correctText.value = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get isValidationCaseSensitive(): boolean {\r\n\r\n        return (this._checkCase.value.toLowerCase() === 'true');\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     *\r\n     * @default false\r\n     */\r\n    public get isEditable(): boolean {\r\n\r\n        return (this._editable.value.toLowerCase() === 'true');\r\n    }\r\n\r\n    public set isEditable(value: boolean) {\r\n\r\n        if (value) {\r\n            this._editable.value = 'true';\r\n        }else {\r\n            this._editable.value = 'false';\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get font(): string {\r\n\r\n        return this._font.value;\r\n    }\r\n\r\n    public set font(value: string) {\r\n\r\n        this._font.value = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get fontColor(): string {\r\n\r\n        return this._fontColor.webColor;\r\n    }\r\n\r\n    public set fontColor(value: string) {\r\n\r\n        this._fontColor.setColorFromString(value);\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get fontSize(): number {\r\n\r\n        return +this._fontSize.value;\r\n    }\r\n\r\n    public set fontSize(value: number) {\r\n\r\n        this._fontSize.value = value.toString();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get isItalic(): boolean {\r\n\r\n        return (this._italic.value.toLowerCase() === 'true');\r\n    }\r\n\r\n    public set isItalic(value: boolean) {\r\n\r\n        this._italic.value = value.toString();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get maximumAllowableCharacters(): number {\r\n\r\n        // TODO: Is this logic needed?  Also can any of these actually be undefined by not being in the data at all?\r\n        /*\r\n             var returnVar:int = Math.round(0x7FFFFFFF); // maximum value allowed for string length ...\r\n             if (maxCharsElement != null){\r\n             returnVar = int(maxCharsElement.Value);\r\n             }\r\n             return returnVar;\r\n         */\r\n        return +this._maxChars.value;\r\n    }\r\n\r\n    public set maximumAllowableCharacters(value: number) {\r\n\r\n        this._maxChars.value = value.toString();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get maximumValue(): number {\r\n\r\n        // TODO: Is this a number?  I don't even see this property being used in ActionScript.\r\n        return +this._maxValue.value;\r\n    }\r\n\r\n    public set maximumValue(value: number) {\r\n\r\n        this._maxValue.value = value.toString();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get isMultiline(): boolean {\r\n\r\n        return (this._multiline.value.toLowerCase() === 'true');\r\n    }\r\n\r\n    public set isMultiline(value: boolean) {\r\n\r\n        this._multiline.value = value.toString();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get restrict(): string {\r\n\r\n        return this._restrict.value;\r\n    }\r\n\r\n    public set restrict(value: string) {\r\n\r\n        this._restrict.value = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get isSelectable(): boolean {\r\n\r\n        return (this._selectable.value.toLowerCase() === 'true');\r\n    }\r\n\r\n    public set isSelectable(value: boolean) {\r\n\r\n        this._selectable.value = value.toString();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get text(): string {\r\n\r\n        // TODO: Document repercussions of not being able to get the MarkupTextDataType.xmlText property here.\r\n        return this._text.editableText;\r\n    }\r\n\r\n    public set text(value: string) {\r\n\r\n        this._text.xmlText = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get isUnderline(): boolean {\r\n\r\n        return (this._underline.value.toLowerCase() === 'true');\r\n    }\r\n\r\n    public set isUnderline(value: boolean) {\r\n\r\n        this._underline.value = value.toString();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     *\r\n     * @default true\r\n     */\r\n    public get isDisplayComponent(): boolean {\r\n\r\n        return this._isDisplayComponent;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * @default\r\n     */\r\n    public get isReadOnly(): boolean {\r\n\r\n        // NOTE!!! Currently the event system can only modify our \"editable\" property, but to control the \"read only\"\r\n        // attribute of the element in our template we need to bind it to a property that actually means read only.\r\n        return !this.isEditable;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default\r\n     */\r\n    public set shouldSubscribeToVariableChanges(value: boolean) {\r\n\r\n        this._text.shouldSubscribeToVariableChanges = value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handling\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Callback for handling cleanup when this object needs to be disposed of.\r\n     */\r\n    public onDestroy(): void {\r\n\r\n        this._text.onDestroy();\r\n    }\r\n\r\n    public subscribeToDisplayTextChanges(next?: (value: string) => void,\r\n                                         error?: (error: any) => void,\r\n                                         complete?: () => void): void {\r\n\r\n        this._text.subscribeToDisplayTextChanges(next, error, complete);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Validation\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     *\r\n     * TODO: Only really needed by Player.  May want to consider creating playable version for this class?\r\n     */\r\n    public validate(): boolean {\r\n\r\n        let userText: string = this.text;\r\n        let correctText: string = this.validationText;\r\n\r\n        if (!this.isValidationCaseSensitive) {\r\n\r\n            userText = userText.toLowerCase();\r\n            correctText = correctText.toLowerCase();\r\n        }\r\n\r\n        return (userText === correctText);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/text.data-object.ts","import { EventEmitter } from '@angular/core';\r\n\r\nimport { ComponentDataObject }  from './component.data-object';\r\nimport { ElementDataObject }    from '../element.data-object';\r\n\r\nimport { Log, Logger }  from '../../../log';\r\n\r\n\r\n/**\r\n * Data object for DIF video component.\r\n */\r\nexport class VideoDataObject extends ComponentDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    // TODO: Implement other properties of video if needed\r\n    // private var imageLoader:VideoCapture;\r\n    // public var URLFlvElement:Element;\r\n    // public var URLF4vElement:Element;\r\n    // public var URLMp4Element:Element;\r\n    // public var URLWebmElement:Element;\r\n    // public var URLOgvElement:Element;\r\n    // public var URLAacElement:Element;\r\n    // public var goToBlackElement:Element;\r\n    // public var playOnLoadElement:Element;\r\n    // public var durationElement:Element\r\n    // public var displayControlsElement:Element;\r\n\r\n    /**\r\n     * The element that represents the Description element\r\n     */\r\n    private _description: ElementDataObject;\r\n\r\n    /**\r\n     * The element that represents the _URL contained in the button.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private _url: ElementDataObject;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private _urlmp4: ElementDataObject;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private _urlwebm: ElementDataObject;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private _urlogv: ElementDataObject;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private _urlflv: ElementDataObject;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private _urlf4v: ElementDataObject;\r\n\r\n    /**\r\n     * The property used to emit start/pause playing event when set to true/false.\r\n     */\r\n    private _playing: boolean;\r\n\r\n    /**\r\n     * The property used to emit stop playing event when set to 0.\r\n     */\r\n    private _playhead: number = -1;\r\n\r\n    /**\r\n     * The property used to decide auto playing when loaded.\r\n     */\r\n    private _playOnLoad: boolean;\r\n\r\n    /**\r\n     * The property used to decide to show video controls when loaded.\r\n     */\r\n    private _displayControls: boolean;\r\n\r\n    /**\r\n     * The property used to decide to go to black when completed.\r\n     */\r\n    private _goToBlack: boolean;\r\n\r\n    /**\r\n     * When property _playing set to true, emit this event so video component subscribe to it can start to play.\r\n     *\r\n     * TODO: Change this to use Subject.\r\n     *\r\n     * @default An EventEmitter instance.\r\n     */\r\n    public onPlay: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * When property _playing set to false, emit this event so video component subscribe to it can pause playing.\r\n     *\r\n     * TODO: Change this to use Subject.\r\n     *\r\n     * @default An EventEmitter instance.\r\n     */\r\n    public onPause: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * When property _playhead set to 0, emit this event so video component subscribe to it can stop playing.\r\n     *\r\n     * TODO: Change this to use Subject.\r\n     *\r\n     * @default An EventEmitter instance.\r\n     */\r\n    public onStop: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private movieDataObjectLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new VideoDataObject instance.\r\n     */\r\n    constructor(rootElement: ElementDataObject) {\r\n\r\n        super(rootElement);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n\r\n        this.movieDataObjectLogger = Log.getInstance().getLogger('VideoDataObject');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected initializePropertyNames(): void {\r\n\r\n        super.initializePropertyNames();\r\n\r\n        this.initPropertyMapArray = this.initPropertyMapArray.concat([\r\n            ['_playOnLoad',         'playOnLoad',       'PlayOnLoad',       'boolean'],\r\n            ['_displayControls',    'displayControls',  'DisplayControls',  'boolean'],\r\n            ['_playing',            'playing',          'Playing',          'boolean'],\r\n            ['_playhead',           'playhead',         'Playhead',          'number'],\r\n            ['_url',                'URL',              '_URL',             'element'],\r\n            ['_urlmp4',             'URLmp4',           '_URLmp4',          'element'],\r\n            ['_urlwebm',            'URLwebm',          '_URLwebm',         'element'],\r\n            ['_urlogv',             'URLogv',           '_URLogv',          'element'],\r\n            ['_urlflv',             'URLflv',           '_URLflv',          'element'],\r\n            ['_urlf4v',             'URLf4v',           '_URLf4v',          'element'],\r\n            ['_goToBlack',          'goToBlack',        'GoToBlack',        'boolean'],\r\n            ['_description',        'description' ,     'Description',      'element']\r\n        ]);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The Description value. An Accessor for the Description element\r\n     */\r\n    public get description(): string {\r\n        return this._description.value;\r\n    }\r\n\r\n    /**\r\n     * The _URL contained in the video\r\n     *\r\n     * TODO: Add better description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get URL(): string {\r\n        return this._url.value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get URLmp4(): string {\r\n        return this._urlmp4.value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get URLwebm(): string {\r\n        return this._urlwebm.value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get URLogv(): string {\r\n        return this._urlogv.value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get URLflv(): string {\r\n        return this._urlflv.value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get URLf4v(): string {\r\n        return this._urlf4v.value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get playing(): boolean {\r\n        return this._playing;\r\n    }\r\n\r\n    public set playing(value: boolean) {\r\n        this._playing = value;\r\n        if (this._playing) {\r\n            this.onPlay.emit();\r\n        } else {\r\n            this.onPause.emit();\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get playhead(): number  {\r\n        return this._playhead;\r\n    }\r\n\r\n    public set playhead(value: number ) {\r\n        this._playhead = value;\r\n        if (this._playhead === 0) {\r\n            this.onStop.emit();\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The property used to decide auto playing when loaded\r\n     *\r\n     * TODO: Add better description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get playOnLoad(): boolean {\r\n        return this._playOnLoad;\r\n    }\r\n\r\n    public set playOnLoad(value: boolean) {\r\n        this._playOnLoad = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The property used to decide to show video controls when loaded\r\n     *\r\n     * TODO: Add better description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get displayControls(): boolean {\r\n        return this._displayControls;\r\n    }\r\n\r\n    public set displayControls(value: boolean) {\r\n        this._displayControls = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     * TODO: Add default value.\r\n     *\r\n     * @default\r\n     */\r\n    public get goToBlack(): boolean {\r\n        return this._goToBlack;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Concatenate class properties in a string.\r\n     */\r\n    public serializeToString(): string {\r\n\r\n        let outString: string = 'Video Data Object:\\n';\r\n\r\n        outString += 'height = ' + this.height + '\\n';\r\n        outString += 'id = ' + this.id + '\\n';\r\n        outString += 'name = ' + this.name + '\\n';\r\n        outString += 'URL = ' + this.URL + '\\n';\r\n        outString += 'visible = ' + this.visible + '\\n';\r\n        outString += 'width = ' + this.width + '\\n';\r\n        outString += 'x = ' + this.x + '\\n';\r\n        outString += 'y = ' + this.y + '\\n';\r\n        outString += 'z = ' + this.z + '\\n';\r\n        outString += 'rootElement = ' + this.localRoot.name;\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/components/video.data-object.ts","import { LogLevel } from 'typescript-logging';\r\nimport { Log, Logger } from '../../log';\r\nimport { XmlParser } from '../transactions/xml-parser';\r\n\r\n/**\r\n * data object represents data from online/offline assets/config.xml file\r\n *\r\n */\r\nexport class ConfigDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    public enableBreadcrumb: boolean;\r\n    public lockProgress: boolean;\r\n    public filter: string; // Not implemented yet\r\n    public logLevel: LogLevel;\r\n    public maxCourseMapLevel: string;\r\n    public pageNumberLevel: string;\r\n    public playerWidth: number;\r\n    public playerHeight: number;\r\n    public playerCode: string;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new ConfigDataObject instance.\r\n     *\r\n     * @param   sourceXml\r\n     */\r\n    public constructor(sourceXml?: Element) {\r\n        if (sourceXml) {\r\n            this.constructFromXml(sourceXml);\r\n        };\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * constructFromXML method is used to populate the ConfigDataObject with source XML element\r\n     *\r\n     * @param   sourceXML               the source XML of config file.\r\n     */\r\n    private constructFromXml(sourceXml: Element): void {\r\n\r\n        const children: Array<Element> = XmlParser.getChildElements(sourceXml);\r\n\r\n        for (const child of children ) {\r\n            switch (child.tagName) {\r\n            case 'EnableBreadcrumb':\r\n                this.enableBreadcrumb = (XmlParser.getTextContent(child) === 'true');\r\n                break;\r\n            case 'LockProgress':\r\n                this.lockProgress = (XmlParser.getTextContent(child) === 'true');\r\n                break;\r\n            case 'filter':\r\n                this.filter = XmlParser.getTextContent(child);\r\n                break;\r\n            case 'LogLevel':\r\n                this.logLevel = <LogLevel>LogLevel[XmlParser.getTextContent(child)];\r\n                break;\r\n            case 'MaxCourseMapLevel':\r\n                this.maxCourseMapLevel = XmlParser.getTextContent(child);\r\n                break;\r\n            case 'PageNumberLevel':\r\n                this.pageNumberLevel = XmlParser.getTextContent(child);\r\n                break;\r\n            case 'PlayerWidth':\r\n                this.playerWidth = +XmlParser.getTextContent(child);\r\n                break;\r\n            case 'PlayerHeight':\r\n                this.playerHeight = +XmlParser.getTextContent(child);\r\n                break;\r\n            case 'PlayerCode':\r\n                this.playerCode = XmlParser.getTextContent(child);\r\n                break;\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/config.data-object.ts","import {ElementBasedDataObject} from '../element-based.data-object';\r\nimport {ElementDataObject} from '../element.data-object';\r\n/**\r\n * A data type to contain color information. This class handles the convertion of the different color formats.\r\n *\r\n *  TODO: Add more ways to construct this.\r\n */\r\nexport class ColorDataType extends ElementBasedDataObject{\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The red value of this color. Range from 0 - 255\r\n     * @type {number}\r\n     * @private\r\n     * @default 0\r\n     */\r\n    private _red: number;\r\n\r\n    /**\r\n     * The green value of this color. Range from 0 - 255\r\n     * @type {number}\r\n     * @private\r\n     * @default 0\r\n     */\r\n    private _green: number;\r\n\r\n    /**\r\n     * The green value of this color. Range from 0 - 255\r\n     * @type {number}\r\n     * @private\r\n     * @default 0\r\n     */\r\n    private _blue: number;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The Constructor for the ColorDataType. Pass in a color string formatted with # or 0x to initialize the color.\r\n     * @param color\r\n     */\r\n    constructor(source: ElementDataObject | string) {\r\n        super( (typeof source === 'string') ? undefined : source );\r\n\r\n        //eww comment me!\r\n        if (typeof source === 'string') {\r\n            this.setColorFromString(source as string);\r\n            this.localRoot.value = this.hexColor;\r\n        }\r\n    }\r\n\r\n    protected constructFromElement(): void {\r\n        this.setColorFromString(this._localRoot.value);\r\n    }\r\n\r\n    protected constructNew(): void {\r\n        this._localRoot = new ElementDataObject();\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Gets color in the web color format. #000000\r\n     * @returns {string}\r\n     */\r\n    public get webColor(): string {\r\n        return '#' + this.rawColor;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get hexColor(): string {\r\n        return '0x' + this.rawColor;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    private get rawColor(): string {\r\n        let rawColor: string = '';\r\n        rawColor += this.convertRgbValueToTwoDigitHex(this._red);\r\n        rawColor += this.convertRgbValueToTwoDigitHex(this._green);\r\n        rawColor += this.convertRgbValueToTwoDigitHex(this._blue);\r\n        return rawColor;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Sets the red value. Range 0- 255\r\n     * @param value\r\n     */\r\n    public set red( value: number) {\r\n        if (this.isValidRGBValue(value)) {\r\n            this._red = value;\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Sets the green value. Range 0- 255\r\n     * @param value\r\n     */\r\n    public set green( value: number) {\r\n        if (this.isValidRGBValue(value)) {\r\n            this._green = value;\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Sets the blue value. Range 0- 255\r\n     * @param value\r\n     */\r\n    public set blue( value: number) {\r\n        if (this.isValidRGBValue(value)) {\r\n            this._blue = value;\r\n        }\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Sets the color to a color string formatted with # or 0x to initialize the color.\r\n     * @param color\r\n     */\r\n    public setColorFromString(color: string): void {\r\n        this.setRGBFromColorString(color);\r\n    }\r\n\r\n    /**\r\n     * Tests number to see if it in valid range of an RGB value.\r\n     * @param value\r\n     * @returns {boolean}\r\n     */\r\n    private isValidRGBValue( value: number): boolean {\r\n        if (!isNaN(value) && value < 256 && value > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Sets color from string to this classes red green blue properties.\r\n     * @param color\r\n     */\r\n    private setRGBFromColorString(color: string): void {\r\n        if ( color !== '') {\r\n            let rawHex: string;\r\n\r\n            if ( color.substr(0, 2) === '0x' && color.length === 8) {\r\n                rawHex = color.substr(2, 6);\r\n            } else if ( color.substr(0, 1) === '#' ) {\r\n                if (color.length === 7) {\r\n                    rawHex = color.substr(1, 6);\r\n                } else if (color.length === 4) {\r\n                    // double up the character to handle short hand because #f60 is #ff6600\r\n                    rawHex = color.charAt(1) + color.charAt(1);\r\n                    rawHex += color.charAt(2) + color.charAt(2);\r\n                    rawHex += color.charAt(3) + color.charAt(3);\r\n                }\r\n            } else if ( color.length === 6 ) {\r\n                rawHex = color;\r\n            }else {\r\n                // This should throw an error! but just so i doesn't break lets default this to black!\r\n                rawHex = '#000000';\r\n            }\r\n\r\n            this.red = parseInt( rawHex.substr(0, 2), 16);\r\n            this.green = parseInt( rawHex.substr(2, 2), 16);\r\n            this.blue = parseInt( rawHex.substr(4, 2), 16);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Converts a 0 - 255 number to a 2 digit hex string.\r\n     * Example 1: 255 = ff\r\n     * Example 2: 10 = 0a\r\n     * @param rgbValue number 0 - 255\r\n     * @returns {string}\r\n     */\r\n    private convertRgbValueToTwoDigitHex(rgbValue: number): string{\r\n        let hex: string = rgbValue.toString(16);\r\n        if (hex.length === 1) {\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/data-types/color.data-type.ts","import { Subscription }     from 'rxjs/Subscription';\r\nimport { BehaviorSubject }  from 'rxjs/BehaviorSubject';\r\n\r\nimport { isNullOrUndefined }  from 'util';\r\n\r\nimport { InjectorService }    from '../../services/injector.service';\r\nimport { VariableService }    from '../../services/variable.service';\r\n\r\nimport { ElementDataObject }      from '../element.data-object';\r\nimport { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { VariableDataObject }     from '../variable.data-object';\r\n\r\nimport { XmlParser }  from '../../transactions/xml-parser';\r\n\r\nimport { Log, Logger }    from '../../../log';\r\n\r\n\r\n/**\r\n * TODO:    Write description.\r\n */\r\nexport class MarkupTextDataType extends ElementBasedDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private markupTextDataTypeLogger: Logger;\r\n\r\n    /**\r\n     * A string that contains our text property after any variable references it may have contained have been replaced\r\n     * with the actual value of those variables.\r\n     *\r\n     * When received from the server, the text property may contain references to application variables designated by\r\n     * special start and end characters.  Before displaying the text to the user these references must be replaced with\r\n     * the actual variable values which are retrieved from the variable service.  When we do this we also subscribe to\r\n     * the variable's onValueChanged event so we can receive changes as they happen.  Each time the text property\r\n     * changes we check the string again for variable references and replace/subscribe as necessary.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private _displayText: string;\r\n\r\n    /**\r\n     * See accessor method(s) for definition.\r\n     */\r\n    private _shouldSubscribeToVariableChanges: boolean;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private variableChangeSubscriptionMap: Object;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private onDisplayTextChanged: BehaviorSubject<string>;\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private displayTextSubscription: Subscription;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new MarkupTextDataType instance.\r\n     *\r\n     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be\r\n     *                          constructed from.\r\n     */\r\n    public constructor(sourceElement: ElementDataObject) {\r\n\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n\r\n        super.constructorPreprocessing();\r\n\r\n        this.markupTextDataTypeLogger = Log.getInstance().getLogger('MarkupTextDataType');\r\n        // This needs to be defined first! shouldSubscribeToVariableChanges uses it.\r\n        this.variableChangeSubscriptionMap = {};\r\n        this.shouldSubscribeToVariableChanges = false;\r\n\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructFromElement(): void {\r\n\r\n        this.xmlText = this.tlfTextToXmlText(this._localRoot.value);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructNew(): void {\r\n\r\n        this._localRoot = new ElementDataObject();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default\r\n     */\r\n    public set xmlText(value: string) {\r\n\r\n        this._localRoot.value = value;\r\n\r\n        // Stop listening to the current set of variable changes when the entire text is replaced.\r\n        this.unsubscribeFromAllVariableChanges();\r\n        this.updateDisplayText();\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default\r\n     */\r\n    public get displayText(): string {\r\n\r\n        return this._displayText;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Figure out what this is for and describe it.\r\n     * TODO: Find out what the default value is in the interface if there is one.\r\n     *\r\n     * A string that contains our text property converted to plain text.\r\n     *\r\n     * When received from the server, the text property contains text marked up by Flash's TextFlow.  That markup gets\r\n     * replaced with actual XML markup.  This property is for times when we don't want any markup at all, just regular\r\n     * plain text.\r\n     *\r\n     * @default\r\n     */\r\n    public get editableText(): string {\r\n\r\n        return this.markupTextToPlainText(this._displayText);\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default\r\n     */\r\n    public get shouldSubscribeToVariableChanges(): boolean {\r\n\r\n        return this._shouldSubscribeToVariableChanges;\r\n    }\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @default\r\n     */\r\n    public set shouldSubscribeToVariableChanges(value: boolean) {\r\n\r\n        this._shouldSubscribeToVariableChanges = value;\r\n\r\n        this.unsubscribeFromAllVariableChanges();\r\n        if (this._shouldSubscribeToVariableChanges) {\r\n            this.updateDisplayText();\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handling\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Callback for handling cleanup when this object needs to be disposed of.\r\n     */\r\n    public onDestroy(): void {\r\n\r\n        this.unsubscribeFromAllVariableChanges();\r\n        this.unsubscribeFromDisplayTextChanges();\r\n    }\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @param next\r\n     * @param error\r\n     * @param complete\r\n     */\r\n    public subscribeToDisplayTextChanges(next?: (value: string) => void,\r\n                                         error?: (error: any) => void,\r\n                                         complete?: () => void): void {\r\n\r\n        this.unsubscribeFromDisplayTextChanges();\r\n\r\n        this.onDisplayTextChanged = new BehaviorSubject(this._displayText);\r\n        this.displayTextSubscription = this.onDisplayTextChanged.subscribe(next, error, complete);\r\n    }\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     */\r\n    public unsubscribeFromDisplayTextChanges(): void {\r\n\r\n        if (this.displayTextSubscription && !this.displayTextSubscription.closed ) {\r\n            this.displayTextSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Variable Reference Handling\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     */\r\n    private updateDisplayText(): void {\r\n\r\n        this._displayText = this.xmlTextToDisplayText(this._localRoot.value);\r\n\r\n        if (this.onDisplayTextChanged) {\r\n            this.onDisplayTextChanged.next(this._displayText);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * TODO: Expand description.\r\n     *\r\n     * Replaces variable references with their current values and subscribes to any future changes if our\r\n     * subscribeToVariableChanges property is true.\r\n     *\r\n     * @param xmlText\r\n     * @returns {string}\r\n     */\r\n    private xmlTextToDisplayText(xmlText: string): string {\r\n\r\n        return String(xmlText).replace(/{{([\\s\\S]*?)}}/gm, (match: string, substring1: string): string => {\r\n\r\n            const variable: VariableDataObject = InjectorService.injector.get(VariableService).findVariable(substring1);\r\n\r\n            if (variable && !isNullOrUndefined(variable.value)) {\r\n\r\n                this.subscribeToVariableChanges(variable);\r\n                return variable.value;\r\n            }\r\n\r\n            return 'variable unavailable';\r\n        });\r\n    }\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @param variableID\r\n     * @returns {any}\r\n     */\r\n    private isSubscribedToVariableChanges(variableID: string): boolean {\r\n\r\n        return this.variableChangeSubscriptionMap[variableID];\r\n    }\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @param variable\r\n     */\r\n    private subscribeToVariableChanges(variable: VariableDataObject): void {\r\n\r\n        if (this.shouldSubscribeToVariableChanges && !this.isSubscribedToVariableChanges(variable.variableID)) {\r\n\r\n            this.variableChangeSubscriptionMap[variable.variableID] = variable.onValueChanged.subscribe(\r\n                () => { this.updateDisplayText(); } );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     */\r\n    private unsubscribeFromAllVariableChanges(): void {\r\n\r\n        for (const subscription of Object.keys(this.variableChangeSubscriptionMap)) {\r\n\r\n            this.variableChangeSubscriptionMap[subscription].unsubscribe();\r\n        }\r\n\r\n        this.variableChangeSubscriptionMap = {};\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Conversion\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * NOTE: This is not the most robust way to do this; it will fail in certain cases.  However the TLF data coming\r\n     * from Flash has already converted \"<\", and \">\" to their respective HTML codes which takes care of the main failure\r\n     * point.\r\n     *\r\n     * @param markupString\r\n     *\r\n     * @returns {string}\r\n     */\r\n    private markupTextToPlainText(markupString: string): string {\r\n\r\n        return markupString ? String(markupString).replace(/<[^>]+>/gm, '') : '';\r\n    }\r\n\r\n    /**\r\n     * Converts a string containing Flash Text Layout Framework markup into a string containing HTML 5 compliant, XML\r\n     * markup.\r\n     *\r\n     * @param   tlfText  The string containing the TLF markup to convert.\r\n     */\r\n    private tlfTextToXmlText(tlfText: string): string {\r\n\r\n        if (!tlfText) {\r\n\r\n            return '';\r\n        }\r\n\r\n        // The root element of the TLF hierarchy.\r\n        const tlfRoot: Element = XmlParser.xmlStringToElement(tlfText);\r\n\r\n        // Convert the TLF markup to proper XML.\r\n        this.tlfNodesToXmlNodes(tlfRoot);\r\n\r\n        // Skip past the <HTML> Element that is the root of the input so it does't cause problems when we insert the\r\n        // final markup into the component.\r\n        // NOTE: I tried converting the <HTML> Element in the converter as well but it caused problems.\r\n        const xmlRoot: Element = XmlParser.findFirstDescendantByName(tlfRoot, 'div');\r\n\r\n        // Convert the sanitized markup back into a string and return it for use by the component.\r\n        return XmlParser.xmlToString(xmlRoot);\r\n    }\r\n\r\n    /**\r\n     * Recursively traverses all Flash TLF nodes converting as necessary those that are elements (and/or their\r\n     * attributes) to HTML 5 compliant XML.\r\n     *\r\n     * @param   tlfNode  The Node in the TLF hierarchy currently being sanitized.\r\n     */\r\n    private tlfNodesToXmlNodes(tlfNode: Node): void {\r\n\r\n        let currentNode: Node = tlfNode;\r\n\r\n        if (tlfNode.nodeType === 1) {\r\n\r\n            let currentElement: Element = tlfNode as Element;\r\n\r\n            switch (currentElement.tagName) {\r\n\r\n                case 'P':\r\n                    if (currentElement.hasAttribute('ALIGN')) {\r\n                        const alignValue: string = currentElement.getAttribute('ALIGN');\r\n                        currentElement.removeAttribute('ALIGN');\r\n                        switch (alignValue) {\r\n                            case 'left':\r\n                                currentElement.setAttribute('style', 'text-align:left; margin: 0px');\r\n                                break;\r\n                            case 'right':\r\n                                currentElement.setAttribute('style', 'text-align:right; margin: 0px');\r\n                                break;\r\n                            case 'center':\r\n                                currentElement.setAttribute('style', 'text-align:center; margin: 0px');\r\n                                break;\r\n                            case 'justify':\r\n                                currentElement.setAttribute('style', 'text-align:justify; margin: 0px');\r\n                                break;\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                // TODO: make sure we don't need letterspacing or kerning\r\n                case 'FONT':\r\n                    let fontFamily: string = '';\r\n                    let fontSize: string = '';\r\n                    let fontColor: string = '';\r\n                    if (currentElement.hasAttribute('FACE')) {\r\n                        fontFamily = 'font-family: ' + currentElement.getAttribute('FACE') + '; ';\r\n                    }\r\n                    if (currentElement.hasAttribute('SIZE')) {\r\n                        fontSize = 'font-size: ' + currentElement.getAttribute('SIZE') + 'px; ';\r\n                    }\r\n                    if (currentElement.hasAttribute('COLOR')) {\r\n                        fontColor = 'color: ' + currentElement.getAttribute('COLOR') + ';';\r\n                    }\r\n                    currentElement = this.replaceElement(currentElement, 'span');\r\n                    this.addLineBreak(currentElement);\r\n                    currentElement.setAttribute('style', fontFamily + fontSize + fontColor);\r\n                    currentNode = currentElement;\r\n                    break;\r\n\r\n                case 'B':\r\n                    currentElement = this.replaceElement(currentElement, 'span');\r\n                    currentElement.setAttribute('style', 'font-weight: bold;');\r\n                    this.addLineBreak(currentElement);\r\n                    currentNode = currentElement;\r\n                    break;\r\n\r\n                case 'U':\r\n                    currentElement = this.replaceElement(currentElement, 'span');\r\n                    currentElement.setAttribute('style', 'text-decoration: underline;');\r\n                    this.addLineBreak(currentElement);\r\n                    currentNode = currentElement;\r\n                    break;\r\n\r\n                case 'I':\r\n                    currentElement = this.replaceElement(currentElement, 'span');\r\n                    currentElement.setAttribute('style', 'font-style: italic;');\r\n                    this.addLineBreak(currentElement);\r\n                    currentNode = currentElement;\r\n                    break;\r\n\r\n                case 'UL':\r\n                    currentElement.setAttribute('style', 'margin: 0px');\r\n                    break;\r\n\r\n                case 'TEXTFORMAT':\r\n                    let leftMargin: string = '';\r\n                    if (currentElement.hasAttribute('LEFTMARGIN')) {\r\n                        leftMargin = currentElement.getAttribute('LEFTMARGIN');\r\n                    }\r\n                    currentElement = this.replaceElement(currentElement, 'div');\r\n                    if (leftMargin) {\r\n                        currentElement.setAttribute('style',\r\n                            'padding-left: ' + leftMargin + 'px;');\r\n                    }\r\n                    currentNode = currentElement;\r\n                    break;\r\n\r\n                case 'BODY':\r\n                    currentNode = this.replaceElement(currentElement, 'div');\r\n                    break;\r\n            }\r\n        }\r\n\r\n        for (let i: number = 0; i < currentNode.childNodes.length; i++) {\r\n\r\n            this.tlfNodesToXmlNodes(currentNode.childNodes[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @param oldElement\r\n     * @param newTagName\r\n     *\r\n     * @returns\r\n     */\r\n    private replaceElement(oldElement: Element, newTagName: string ): Element {\r\n\r\n        const newElement: Element = document.createElement(newTagName);\r\n\r\n        while (oldElement.firstChild) {\r\n\r\n            newElement.appendChild(oldElement.firstChild);\r\n        }\r\n\r\n        oldElement.parentNode.replaceChild(newElement, oldElement);\r\n\r\n        return newElement;\r\n    }\r\n\r\n    /**\r\n     * TODO: Add description.\r\n     *\r\n     * @param parent\r\n     */\r\n    private addLineBreak(parent: Element): void {\r\n\r\n        if (parent.innerHTML.replace(/\\s/g, '').length === 0) {\r\n            parent.appendChild(document.createElement('br'));\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/data-types/markup-text.data-type.ts","import { ElementDataObject } from './element.data-object';\r\nimport { Log, Logger } from '../../log';\r\n\r\n/**\r\n * This is the root class for all data objects that are built on top of our element data objects.\r\n *\r\n * Element data objects are the client-side's representation of data from the server-side database.  Thus, the data\r\n * objects deriving from this class and constructed using that element data are understood to be element-based.  The\r\n * client-side uses these data structures, along with various view components, to provide a user interface for the\r\n * manipulation of the application model.\r\n */\r\nexport abstract class ElementBasedDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * This is the element data object (from within the model's primary data hierarchy) that contains the element data\r\n     * which is used to build this element-based data object.\r\n     *\r\n     * It is designated the local root since it is the root element from the perspective of this data object.  The\r\n     * actual root of the element hierarchy may be (and likely is) much further up the hierarchy.\r\n     *\r\n     * @default null\r\n     */\r\n    protected _localRoot: ElementDataObject = undefined;\r\n\r\n    /**\r\n     * Reference to logger object for logging\r\n     * TODO: Since we decided to go with private logger instances for each class - should remove this once derived\r\n     *          classes refactored\r\n     */\r\n    protected elementBasedDataObjectLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Abstract Constructor - provides implementation common to all element based data objects.\r\n     *\r\n     * Element based data objects can be constructed in one of two ways:\r\n     *\r\n     *  1.  A brand new data object is needed and is created without any source element using defaults appropriate to\r\n     *      the data object's functionality.\r\n     *\r\n     *  2.  A new instance of the data object based on existing element objects is needed and is built using the\r\n     *      supplied source element.\r\n     *\r\n     * This constructor determines which method to use by checking whether or not a source element was supplied.\r\n     *\r\n     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be\r\n     *                          constructed from.\r\n     */\r\n    public constructor(sourceElement: ElementDataObject) {\r\n        this._localRoot = sourceElement;\r\n\r\n        // Run preprocessing (primarily to apply logic for derived classes prior to the rest of the constructor)\r\n        this.constructorPreprocessing();\r\n\r\n        if (sourceElement) {\r\n\r\n            this.constructFromElement(sourceElement);\r\n\r\n        } else {\r\n\r\n            this.constructNew();\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Runs any common processing needed prior to the constructFromElement or constructNew methods.  It can contain\r\n     * logic that is permitted to be overridden in derived classes which would use this method to apply logic specific\r\n     * to the derived class.  Any preprocessing pertaining to this base class that should not be overridden by derived\r\n     * classes should be put directly in the constructor.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.elementBasedDataObjectLogger = Log.getInstance().getLogger('ElementBasedDataObject');\r\n    }\r\n\r\n    /**\r\n     * Constructs this data object from an existing ElementDataObject hierarchy by parsing the supplied source element.\r\n     *\r\n     * This method needs to be overridden in derived classes that require this functionality, but the override should\r\n     * always call up to this method to ensure that the local root is set.\r\n     *\r\n     * @param   sourceElement  The root of the ElementDataObject hierarchy which contains the source data to parse.\r\n     */\r\n    protected constructFromElement(sourceElement: ElementDataObject): void {\r\n        for (const element of sourceElement.children) {\r\n            this.parseElement(element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper method to constructFromElement.\r\n     *\r\n     * Intended to perform class specific condition testing on the child Element structure being looped through in\r\n     * constructFromElement.  This was separated from constructFromElement to facilitate easy extending. To add\r\n     * handling for specific Elements to this parser in derived classes, override this function and create your own\r\n     * switch calling super for its Element processing if applicable.\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {}\r\n\r\n    /**\r\n     * Constructs a brand new data object using defaults appropriate to the data object's functionality.\r\n     *\r\n     * This method needs to be overridden in derived classes that require this functionality.\r\n     */\r\n    protected constructNew(): void {\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * This is the element data object (from within the model's primary data hierarchy) that contains the element data\r\n     * which is used to build this element-based data object.\r\n     *\r\n     * It is designated the local root since it is the root element from the perspective of this data object.  The\r\n     * actual root of the element hierarchy may be (and likely is) much further up the hierarchy.\r\n     *\r\n     * @default null\r\n     */\r\n    public get localRoot(): ElementDataObject\r\n    {\r\n        return this._localRoot;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts","import { Log, Logger } from '../../log';\r\nimport { XmlParser } from '../transactions/xml-parser';\r\n\r\n\r\n/**\r\n * ElementDataObject is the backbone of all of the application's data. It acts as an object equivalent to a single Node\r\n * or Element found in the various XML structures the application uses. This class is used to deliver data to\r\n * DataObjects that give the data context.\r\n */\r\nexport class ElementDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default A logger object named after the containing class.\r\n     */\r\n    private logger: Logger = Log.getInstance().getLogger('ElementDataObject');\r\n\r\n    /**\r\n     * See accessor method(s).\r\n     */\r\n    protected _id: number;\r\n\r\n    /**\r\n     * See accessor method(s).\r\n     */\r\n    protected _name: string;\r\n\r\n    /**\r\n     * See accessor method(s).\r\n     */\r\n    protected _value: string;\r\n\r\n    /**\r\n     * See accessor method(s).\r\n     */\r\n    protected _parent: ElementDataObject;\r\n\r\n    /**\r\n     * See accessor method(s).\r\n     */\r\n    protected _children: Array<ElementDataObject> = [];\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new ElementDataObject instance.\r\n     *\r\n     * To construct an empty ElementDataObject, simply don't pass in a source XML Element.\r\n     *\r\n     * @param   sourceXml   The root Element of the XML that contains the data to build this ElementDataObject from.\r\n     */\r\n     public constructor(sourceXml: Element = undefined) {\r\n\r\n         if (sourceXml) { this.constructFromXml(sourceXml); }\r\n     }\r\n\r\n     /**\r\n      * This method populates the ElementDataObject with data retrieved from XML.  It then calls the parseElement helper\r\n      * method on each of its children.  Together these methods recursively create and populate this data object and all\r\n      * of its descendants, building an entire hierarchy of ElementDataObjects.\r\n      *\r\n      * @param   sourceXml   The root Element of the XML that contains the data to build this ElementDataObject from.\r\n      */\r\n     private constructFromXml(sourceXml: Element): void {\r\n\r\n        this._id = parseInt(XmlParser.getAttribute(sourceXml, 'ElementID'), 10);\r\n        if (isNaN(this._id)) {\r\n\r\n            this._id = undefined;\r\n        }\r\n\r\n        this._name = sourceXml.tagName;\r\n\r\n        let sourceElements: Array<Element> = XmlParser.getChildElements(sourceXml);\r\n        for (let i: number = 0; i < sourceElements.length; i++) {\r\n\r\n            this.parseElement(sourceElements[i]);\r\n        }\r\n     }\r\n\r\n     /**\r\n      * This method is a helper of constructFromXml.  It determines if the given XML Element contains a property of this\r\n      * ElementDataObject or one of its children.  Together these methods recursively create and populate this data\r\n      * object and all of its descendants, building an entire hierarchy of ElementDataObjects.\r\n      *\r\n      * NOTES:\r\n      *         Unfortunately, with our current data structure SOME of our properties are SOMETIMES mixed in with our\r\n      *         child elements.  Other times, in a half-measure attempt to change this paradigm, our properties are\r\n      *         actually attributes.  “Half measures will avail you nothing.” -every 12-step program ever.\r\n      *\r\n      *         This method was separated from constructFromXml to facilitate easy extension. To add properties to this\r\n      *         parser:\r\n      *             1.  In derived classes, override this method and create a switch statement to handle custom\r\n      *                 properties.\r\n      *             2.  Fallback to calling the super version (this method) if none of the custom properties are found.\r\n      *\r\n      * @param  sourceElement   The XML Element we are determining to be either a property of this ElementDataObject, or\r\n      *                         an actual child.\r\n      */\r\n     protected parseElement(sourceElement: Element): void {\r\n\r\n        switch (sourceElement.tagName) {\r\n\r\n            case 'Value':\r\n                this._value = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n\r\n            case 'ElementID':\r\n                this._id = +XmlParser.getTextContent(sourceElement);\r\n                break;\r\n\r\n            case 'IsTemplate':\r\n            case 'IsProperty':\r\n                // This fallthrough is needed so we can ignore Elements that contain properties we don't need.\r\n                break;\r\n\r\n            default:\r\n                // This Element actually contains a child ElementDataObject... I'm a real boy!\r\n                let newChild: ElementDataObject = new ElementDataObject();\r\n                newChild.constructFromXml(sourceElement);\r\n                newChild.parent = this;\r\n                this._children.push(newChild);\r\n                break;\r\n        }\r\n     }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The unique ID number of this ElementDataObject.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get id(): number {\r\n\r\n        return this._id;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The name of this ElementDataObject.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get name(): string {\r\n\r\n        return this._name;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The value of this ElementDataObject.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get value(): string {\r\n\r\n        return this._value;\r\n    }\r\n\r\n    public set value(value: string) {\r\n\r\n        this._value = value;\r\n    }\r\n\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * A reference to this ElementDataObject's parent ElementDataObject.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get parent(): ElementDataObject {\r\n\r\n        return this._parent;\r\n    }\r\n\r\n    public set parent(element: ElementDataObject) {\r\n\r\n        this._parent = element;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The ID of this ElementDataObject's parent.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get parentId(): number {\r\n\r\n        return (this._parent ? this._parent.id : undefined);\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An array that contains this ElementDataObject's children ElementDataObjects.\r\n     *\r\n     * @default An empty array of ElementDataObject.\r\n     */\r\n    public get children(): Array<ElementDataObject> {\r\n\r\n        return this._children;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Utility method to find first child Element of this Element based on its name property\r\n     * @param name\r\n     * @returns ElementDataObject\r\n     */\r\n    public getFirstChildElementByName(name: string): ElementDataObject {\r\n        return this.children.find((element) => {\r\n            return element.name === name;\r\n        });\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Debugging\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Builds a string representation of this ElementDataObject.\r\n     *\r\n     * @returns  A string representation of this ElementDataObject.\r\n     */\r\n    public toString(): string {\r\n\r\n        let output: string;\r\n\r\n        output = 'ID = ' + this._id;\r\n        output += '   name = ' + this._name;\r\n        output += '   value = ' + this._value;\r\n        output += '   parent ID = ' + this.parentId;\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * Uses toString to recursively log a text representation of this ElementDataObject and all its descendants.\r\n     */\r\n    public logHierarchy(): void {\r\n\r\n        this.logHierarchyLevels();\r\n    }\r\n\r\n    /**\r\n     * Uses toString to recursively log a text representation of the entire ElementDataObject hierarchy level by level\r\n     * starting at this ElementDataObject.  Each object's string is indented by a number of tabs equal to the depth of\r\n     * its level in the hierarchy.\r\n     *\r\n     * NOTE:\r\n     *          This method exists because we don't want to expose the currentLevel property to the outside, but we\r\n     *          need it in order to keep track of our current depth in the hierarchy.\r\n     *\r\n     * @param   currentLevel   How far down the hierarchy the level we are currently logging is.\r\n     */\r\n    protected logHierarchyLevels(currentLevel: number = 0): void {\r\n\r\n        let output: string = '';\r\n\r\n        // Add the proper amount of indenting for the depth of the level we are currently on.\r\n        for (let i: number = 0; i < currentLevel; i++) {\r\n\r\n            output = output + '\\t';\r\n        }\r\n\r\n        output = output + this.toString();\r\n\r\n        this.logger.debug(output);\r\n\r\n        for ( let i: number = 0; i < this._children.length; i++) {\r\n\r\n            this._children[i].logHierarchyLevels(currentLevel + 1);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/element.data-object.ts","import { CaseDataObject } from './case.data-object';\r\nimport { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { EventHandlerDataObject } from './event-handler.data-object';\r\nimport { Log, Logger } from '../../../log';\r\nimport { EventSystemDataObjectInterface } from './event-system.data-object.interface';\r\n\r\n\r\n/**\r\n * Event System data object class that defines a Case Collection (a set of Case objects that store data that define\r\n * functionality for condition testing).  If the Event System is supposed to run a set of functions unconditionally,\r\n * those functions will still be defined within a case collection containing one case with no conditions defined.\r\n */\r\nexport abstract class CaseDataObjectCollection extends ElementBasedDataObject\r\n    implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify an Element associated with a Case Collection (via name)\r\n     * @type {string}\r\n     */\r\n    public static readonly CASE_COLLECTION_ELEMENT_NAME: string = 'Cases';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent Event Handler\r\n     */\r\n    protected _parent: EventHandlerDataObject;\r\n\r\n    /**\r\n     * Collection of Cases that define conditions to be tested and functions to be run when an Event is triggered\r\n     */\r\n    protected caseCollection: Array<CaseDataObject>;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private caseCollectionLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Case Collection and the Case objects it manages.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.caseCollectionLogger = Log.getInstance().getLogger('CaseDataObjectCollection');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n        this.caseCollection = [];\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Case collection specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case CaseDataObject.CASE_ELEMENT_NAME:\r\n                this.addCase(this.createCase(element));\r\n        }\r\n\r\n        // Case data as provided by server and subsequently added into caseCollection might not be in order - sort it\r\n        this.sortCaseCollection();\r\n\r\n        // Temporary - just for testing\r\n        // TODO: Might want to turn this into toString utility method for debugging\r\n        this.caseCollectionLogger.debug('constructFromElement(): Sorted case array:');\r\n        for (let caseObject of this.caseCollection) {\r\n            this.caseCollectionLogger.debug(\r\n                'constructFromElement(): case name = ' + caseObject.name + '  order = ' + caseObject.order\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: EventHandlerDataObject) {\r\n        this._parent = value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version of\r\n     * CaseDataObject\r\n     *\r\n     * @param sourceElement -> root level Element to construct an CaseDataObject from.\r\n     */\r\n    protected createCase(sourceElement: ElementDataObject): CaseDataObject {\r\n        /*\r\n         Since this class is abstract, this version of createCase should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Add CaseDataObject to caseCollection array\r\n     * @param caseDataObject - the Case to add to the collection\r\n     */\r\n    protected addCase(caseDataObject: CaseDataObject): void {\r\n        // Add to array\r\n        this.caseCollection.push(caseDataObject);\r\n\r\n        // Set parent\r\n        caseDataObject.parent = this;\r\n    }\r\n\r\n    /**\r\n     * Sorts the Case objects stored in caseCollection based on their order property\r\n     */\r\n    private sortCaseCollection(): void {\r\n        this.caseCollection.sort((caseA: CaseDataObject, caseB: CaseDataObject) => {\r\n            return caseA.order - caseB.order;\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/case.data-object.collection.ts","import { CaseDataObjectCollection } from './case.data-object.collection';\r\nimport { ConditionBranchDataObject } from './condition-branch.data-object';\r\nimport { ConditionLeafDataObject } from './condition-leaf.data-object';\r\nimport { ConditionNodeDataObject } from './condition-node.data-object';\r\nimport { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { EventSystemDataObjectInterface } from './event-system.data-object.interface';\r\nimport { FunctionGroupDataObjectCollection } from './function-group.data-object.collection';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n\r\n/**\r\n * Event System data object class that defines a Case, which optionally specifies what conditions should be tested and\r\n * what set of functionality should be performed if the conditions are met.  If no conditions are specified, the\r\n * functions will run unconditionally.\r\n */\r\nexport abstract class CaseDataObject extends ElementBasedDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify an Element associated with a Case (via ElementDataObject.name)\r\n     */\r\n    public static readonly CASE_ELEMENT_NAME: string = 'Case';\r\n\r\n    /**\r\n     * String used to identify an Element associated with the IsDefaultCase flag\r\n     */\r\n    protected static readonly IS_DEFAULT_CASE_ELEMENT_NAME: string = 'IsDefaultCase';\r\n\r\n    /**\r\n     * String used to identify an Element associated with the name property\r\n     */\r\n    protected static readonly NAME_ELEMENT_NAME: string = 'Name';\r\n\r\n    /**\r\n     * String used to identify an Element associated with the order property\r\n     */\r\n    protected static readonly ORDER_ELEMENT_NAME: string = 'Order';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent Case Collection\r\n     */\r\n    protected _parent: CaseDataObjectCollection;\r\n\r\n    /**\r\n     * Element object containing boolean value indicating whether or not this is the default case\r\n     */\r\n    protected isDefaultCaseElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element for storing name of Case (probably only really used by designer)\r\n     */\r\n    protected nameElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element for storing order of Case within Case Collection\r\n     */\r\n    protected orderElement: ElementDataObject;\r\n\r\n    /**\r\n     * Object to hold condition related objects and associated data (if A = B then run func C)\r\n     */\r\n    protected conditionNode: ConditionNodeDataObject;\r\n\r\n    /**\r\n     * Collection of Function Groups to be run if conditions met or undefined\r\n     */\r\n    protected functionGroupCollection: FunctionGroupDataObjectCollection;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private caseLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Case and the Condition and Function Group objects it manages.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.caseLogger = Log.getInstance().getLogger('CaseDataObject');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Case specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case CaseDataObject.IS_DEFAULT_CASE_ELEMENT_NAME:\r\n                this.isDefaultCaseElement = element;\r\n                break;\r\n            case CaseDataObject.NAME_ELEMENT_NAME:\r\n                this.nameElement = element;\r\n                this.caseLogger.debug('constructFromElement(): name = ' + this.name);\r\n                break;\r\n            case CaseDataObject.ORDER_ELEMENT_NAME:\r\n                this.orderElement = element;\r\n                this.caseLogger.debug('constructFromElement(): order = ' + this.order);\r\n                break;\r\n            case ConditionLeafDataObject.CONDITION_LEAF_ELEMENT_NAME:\r\n                this.conditionNode = this.createConditionLeaf(element);\r\n                this.conditionNode.parent = this;\r\n                break;\r\n            case ConditionBranchDataObject.CONDITION_BRANCH_ELEMENT_NAME:\r\n                this.conditionNode = this.createConditionBranch(element);\r\n                this.conditionNode.parent = this;\r\n                break;\r\n            case FunctionGroupDataObjectCollection.FUNCTION_GROUP_COLLECTION_ELEMENT_NAME:\r\n                this.functionGroupCollection = this.createFunctionGroupCollection(element);\r\n                this.functionGroupCollection.parent = this;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: CaseDataObjectCollection) {\r\n        this._parent = value;\r\n    }\r\n\r\n    /**\r\n     * Accessor for value of nameElement (Case name)\r\n     * @returns {string}\r\n     */\r\n    public get name(): string {\r\n        return this.nameElement.value;\r\n    }\r\n\r\n    /**\r\n     * Accessor for value of orderElement(Case order)\r\n     * @returns {number}\r\n     */\r\n    public get order(): number {\r\n        return +this.orderElement.value;\r\n    }\r\n\r\n    /**\r\n     * Accessor for value of isDefaultCaseElement (DefaultCase indicator)\r\n     * @returns {boolean}\r\n     */\r\n    public get isDefaultCase(): boolean {\r\n        if (this.isDefaultCaseElement) {\r\n            return this.isDefaultCaseElement.value === 'true';\r\n        } else {\r\n            // If case has no default indicator, treat it as non-default\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     * @param sourceElement -> root level Element to construct Condition Leaf from.\r\n     * @returns {ConditionLeafDataObject}\r\n     */\r\n    protected createConditionLeaf(sourceElement: ElementDataObject): ConditionLeafDataObject {\r\n        /*\r\n         Since this class is abstract, this version of createEventHandler should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     * @param sourceElement -> root level Element to construct Condition Branch from.\r\n     * @returns {ConditionBranchDataObject}\r\n     */\r\n    protected createConditionBranch(sourceElement: ElementDataObject): ConditionBranchDataObject {\r\n        /*\r\n         Since this class is abstract, this version of createEventHandler should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     * @param sourceElement -> root level Element to construct Function Group Collection from.\r\n     * @returns {FunctionGroupDataObjectCollection}\r\n     */\r\n    protected createFunctionGroupCollection(sourceElement: ElementDataObject): FunctionGroupDataObjectCollection {\r\n        /*\r\n         Since this class is abstract, this version of createCase should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/case.data-object.ts","import { ConditionLeafDataObject } from './condition-leaf.data-object';\r\nimport { ConditionNodeDataObject } from './condition-node.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\nimport { EventSystemDataObjectInterface } from './event-system.data-object.interface';\r\n\r\n\r\n/**\r\n * An Event System Condition Node based object class that represents a branch node in an Event System Condition tree\r\n * structure.  As a branch node, it contains the data that define the other condition nodes that it connects and the\r\n * the logical operator that is applied to them when an Event is triggered (i.e. if A and B, A or B).  As a nested\r\n * structure, it can be used to handle nested condition logic as well (i.e. if (A and B) or C, if (A or B) and C).\r\n */\r\nexport abstract class ConditionBranchDataObject extends ConditionNodeDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify the root level Element associated with the Condition Leaf (via ElementDataObject.name)\r\n     */\r\n    public static readonly CONDITION_BRANCH_ELEMENT_NAME: string = 'ConditionBranch';\r\n\r\n    /**\r\n     * String used to identify the Element associated with the Comparison Operator\r\n     */\r\n    protected static readonly LOGICAL_OPERATOR_ELEMENT_NAME: string = 'LogicalOperator';\r\n\r\n    /**\r\n     * String used to identify the AND operator\r\n     */\r\n    protected static readonly AND_OPERATOR: string = 'AND';\r\n\r\n    /**\r\n     * String used to identify the OR operator\r\n     */\r\n    protected static readonly OR_OPERATOR: string = 'OR';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Element for storing logical operator (AND or OR) to be applied to child condition nodes\r\n     */\r\n    protected logicalOperatorElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element for storing collection of Condition Nodes that this Branch manages\r\n     * TODO: In AS sort method is only used by designer ... see if it should be sorted by player too\r\n     *          order might not be significant to player (at execution time)?\r\n     */\r\n    protected conditionNodeCollection: Array<ConditionNodeDataObject>;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private conditionBranchLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Condition Branch that include the logic operator and the other condition objects that it\r\n     * should be applied to.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.conditionBranchLogger = Log.getInstance().getLogger('ConditionBranchDataObject');\r\n        this.conditionBranchLogger.debug('constructorPreprocessing(): Condition Branch');\r\n\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n        this.conditionNodeCollection = [];\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Condition Leaf specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * NOTE:\r\n     *   In AS version of this class, this additional check was added in the element for loop:\r\n     *\r\n     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)\r\n     *\r\n     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check\r\n     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player\r\n     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to\r\n     *   address this for the PageDesigner though, we still may need to implements something additional for it.\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        // Call super version to apply generic Condition Node parsing\r\n        super.parseElement(element);\r\n\r\n        // Apply specific Condition Branch parsing\r\n        switch (element.name) {\r\n            case ConditionBranchDataObject.LOGICAL_OPERATOR_ELEMENT_NAME:\r\n                // NOTE: In AS code test for this element did not use the DatabaseElement or isActive check mentioned\r\n                // above.  Not sure if that is significant or not (keep an eye on it).\r\n                this.logicalOperatorElement = element;\r\n                this.conditionBranchLogger.debug('parseElement(): operator = ' + this.logicalOperatorElement.value);\r\n                break;\r\n            case ConditionLeafDataObject.CONDITION_LEAF_ELEMENT_NAME:\r\n                this.addCondition(this.createConditionLeaf(element));\r\n                break;\r\n            case ConditionBranchDataObject.CONDITION_BRANCH_ELEMENT_NAME:\r\n                this.addCondition(this.createConditionBranch(element));\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Accessor for value of logicalOperatorElement\r\n     * @returns {string}\r\n     */\r\n    protected get logicalOperator(): string {\r\n        return this.logicalOperatorElement.value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     * @param sourceElement -> root level Element to construct Condition Leaf from.\r\n     * @returns {ConditionLeafDataObject}\r\n     */\r\n    protected createConditionLeaf(sourceElement: ElementDataObject): ConditionLeafDataObject {\r\n        /*\r\n         Since this class is abstract, this version of createEventHandler should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     * @param sourceElement -> root level Element to construct Condition Branch from.\r\n     * @returns {ConditionBranchDataObject}\r\n     */\r\n    protected createConditionBranch(sourceElement: ElementDataObject): ConditionBranchDataObject {\r\n        /*\r\n         Since this class is abstract, this version of createEventHandler should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Add Condition Node (can be either a Branch or Leaf) to conditionNodeCollection\r\n     * @param condition -> ConditionNodeDataObject to add\r\n     */\r\n    protected addCondition(conditionNode: ConditionNodeDataObject): void {\r\n        this.conditionNodeCollection.push(conditionNode);\r\n\r\n        // Set parent to this\r\n        conditionNode.parent = this as ConditionNodeDataObject;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/condition-branch.data-object.ts","import { ConditionNodeDataObject } from './condition-node.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\nimport { ValueDataObject } from './value.data-object';\r\n\r\n\r\n/**\r\n * An Event System Condition Node based object class that represents a leaf node in an Event System Condition tree\r\n * structure.  As a leaf node, it contains the data that defines the values to be compared and the comparison operation\r\n * to be performed when an Event is triggered (i.e. if A == B, A > B, etc).\r\n */\r\nexport abstract class ConditionLeafDataObject extends ConditionNodeDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify the root level Element associated with the Condition Leaf (via ElementDataObject.name)\r\n     */\r\n    public static readonly CONDITION_LEAF_ELEMENT_NAME: string = 'ConditionLeaf';\r\n\r\n    /**\r\n     * String used to identify the Element associated with the Comparison Operator\r\n     */\r\n    protected static readonly COMPARISON_OPERATOR_ELEMENT_NAME: string = 'ComparisonOperator';\r\n\r\n    /**\r\n     * String used to identify Elements that define the Value Objects that need to be compared\r\n     */\r\n    protected static readonly VALUE_OBJECT_ELEMENT_NAME: string = 'ValueObject';\r\n\r\n    /**\r\n     * String constants representing all supported comparison operations\r\n     * @type {string}\r\n     */\r\n    protected readonly EQUAL_TO: string = '=';\r\n    protected readonly EQUAL_TO_CASE_SENSITIVE: string = '==';\r\n    protected readonly NOT_EQUAL_TO: string = '!=';\r\n    protected readonly GREATER_THAN: string = '>';\r\n    protected readonly GREATER_THAN_OR_EQUAL_TO: string = '>=';\r\n    protected readonly LESS_THAN: string = '<';\r\n    protected readonly LESS_THAN_OR_EQUAL_TO: string = '<=';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Element for storing comparison operator\r\n     */\r\n    protected comparisonOperatorElement: ElementDataObject;\r\n\r\n    /**\r\n     * Collection of Value objects that should be compared when this Leaf is evaluated.\r\n     */\r\n    protected comparisonValueCollection: Array<ValueDataObject>;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private conditionLeafLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Condition Leaf that include the objects it must compare and the comparison operator it should\r\n     * employ.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.conditionLeafLogger = Log.getInstance().getLogger('ConditionLeafDataObject');\r\n        this.conditionLeafLogger.debug('constructorPreprocessing(): Condition Leaf');\r\n\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n        this.comparisonValueCollection = [];\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Condition Leaf specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * NOTE:\r\n     *   In AS version of this class, this additional check was added in the element for loop:\r\n     *\r\n     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)\r\n     *\r\n     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check\r\n     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player\r\n     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to\r\n     *   address this for the PageDesigner though, we still may need to implements something additional for it.\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        // Call super version to apply generic Condition Node parsing\r\n        super.parseElement(element);\r\n\r\n        // Apply specific Condition Leaf parsing\r\n        switch (element.name) {\r\n            case ConditionLeafDataObject.COMPARISON_OPERATOR_ELEMENT_NAME:\r\n                this.comparisonOperatorElement = element;\r\n                this.conditionLeafLogger.debug('parseElement(): comparison operator = ' + this.comparisonOperator);\r\n                break;\r\n            case ConditionLeafDataObject.VALUE_OBJECT_ELEMENT_NAME:\r\n                this.addValueDataObject(this.createValueDataObject(element));\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public get comparisonOperator(): string {\r\n        return this.comparisonOperatorElement.value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should override in playable and editable versions of this class to return the appropriate version.\r\n     * @param sourceElement\r\n     * @returns {ValueDataObject}\r\n     */\r\n    protected createValueDataObject(sourceElement: ElementDataObject): ValueDataObject {\r\n         return undefined;\r\n    }\r\n\r\n    /**\r\n     * Add ValueDataObject to comparisonValueCollection array\r\n     * @param valueDataObject - the Value object to add to the collection\r\n     */\r\n    protected addValueDataObject(valueDataObject: ValueDataObject): void {\r\n        // Add to array\r\n        this.comparisonValueCollection.push(valueDataObject);\r\n\r\n        // Set parent\r\n        valueDataObject.parent = this;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/condition-leaf.data-object.ts","import { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { EventSystemDataObjectInterface } from './event-system.data-object.interface';\r\nimport { Log } from '../../../log';\r\n\r\n\r\n\r\n/**\r\n * Hierarchical Event System data object class that as a tree structure, collectively resides under a Case.\r\n * The data stored in the hierarchical structure of Condition Nodes (via the derived ConditionBranchDataObject and\r\n * ConditionLeafDataObject) collectively define an Event Condition which must be tested and passed prior to running\r\n * the Functions defined in the Case. (i.e. if [condition] do [something])\r\n */\r\nexport abstract class ConditionNodeDataObject extends ElementBasedDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify an Element associated with the order property (via ElementDataObject.name)\r\n     */\r\n    protected static readonly ORDER_ELEMENT_NAME: string = 'Order';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * See Accessor\r\n     */\r\n    protected _parent: EventSystemDataObjectInterface;\r\n\r\n    /**\r\n     * Element for storing order of Condition Node relative to its siblings\r\n     */\r\n    protected orderElement: ElementDataObject;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Condition Node and the Condition Nodes under it.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Condition Node specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * NOTE:\r\n     *   In AS version of this class, this additional check was added in the element for loop:\r\n     *\r\n     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)\r\n     *\r\n     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check\r\n     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player\r\n     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to\r\n     *   address this for the PageDesigner though, we still may need to implements something additional for it.\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case ConditionNodeDataObject.ORDER_ELEMENT_NAME:\r\n                this.orderElement = element;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent Object.  Generally either a Case or a Condition Branch.  At this point, just here for consistency with\r\n     * other Event System data objects.  Not currently reaching into parent object to process anything.\r\n     */\r\n    public set parent(value: EventSystemDataObjectInterface) {\r\n        this._parent = value;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/condition-node.data-object.ts","import { CaseDataObjectCollection } from './case.data-object.collection';\r\nimport { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { EventContainerDataObjectInterface } from './event-container.data-object.interface';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { EventDataObject } from './event.data-object';\r\nimport { EventDataObjectCollection } from './event.data-object.collection';\r\nimport { Log, Logger} from '../../../log';\r\n\r\n\r\n/**\r\n * Event System data object class that defines a Handler (a set of things that need to be done) when its parent Event is\r\n * triggered.  (i.e. performing a series of checks, running a set of functions)\r\n *\r\n * TODO: AS version implements ITreeNodeData interface - may need that eventually\r\n */\r\nexport abstract class EventHandlerDataObject extends ElementBasedDataObject\r\n    implements EventContainerDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify Element associated with a Handler (via EventElementDataObject.name)\r\n     * @type {string}\r\n     */\r\n    public static readonly EVENT_HANDLER_ELEMENT_NAME: string = 'EventHandler';\r\n\r\n    /**\r\n     * String used to identify Element associated with Handler name\r\n     * @type {string}\r\n     */\r\n    protected static readonly NAME_ELEMENT_NAME: string = 'Name';\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent Event\r\n     */\r\n    protected _parent: EventDataObject;\r\n\r\n    /**\r\n     * Element for storing name of Handler\r\n     * NOTE: This might only be needed by designers, but probably doesn't hurt to have it in the base class\r\n     */\r\n    protected nameElement: ElementDataObject;\r\n\r\n    /**\r\n     * For storing collection of Cases (providing Event System with condition checking)\r\n     */\r\n    protected _caseCollection: CaseDataObjectCollection;\r\n\r\n    /**\r\n     * For storing Events on an Event System Event (currently only OnComplete event)\r\n     */\r\n    protected _eventCollection: EventDataObjectCollection;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private eventHandlerLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Handler and its Case and Event Collections.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.eventHandlerLogger = Log.getInstance().getLogger('EventHandlerDataObject');\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Event Handler specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case EventHandlerDataObject.NAME_ELEMENT_NAME:\r\n                this.nameElement = element;\r\n                this.eventHandlerLogger.debug('constructFromElement(): name = ' + this.nameElement.value);\r\n                break;\r\n            case CaseDataObjectCollection.CASE_COLLECTION_ELEMENT_NAME:\r\n                this.caseCollection = this.createCaseCollection(element);\r\n                break;\r\n            case EventDataObjectCollection.EVENT_COLLECTION_ELEMENT_NAME:\r\n                this.eventCollection = this.createEventCollection(element);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: EventDataObject) {\r\n        this._parent = value;\r\n    }\r\n\r\n    protected set caseCollection(value: CaseDataObjectCollection) {\r\n        this._caseCollection = value;\r\n        this._caseCollection.parent = this;\r\n    }\r\n\r\n    protected set eventCollection(value: EventDataObjectCollection) {\r\n        this._eventCollection = value;\r\n        this._eventCollection.parent = this;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version of\r\n     * CaseDataObjectCollection\r\n     *\r\n     * @param sourceElement -> root level Element to construct an CaseDataObjectCollection from.\r\n     */\r\n    protected createCaseCollection(sourceElement: ElementDataObject): CaseDataObjectCollection {\r\n        /*\r\n         Since this class is abstract, this version of createCaseCollection should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version of\r\n     * EventDataObjectCollection\r\n     *\r\n     * @param sourceElement -> root level Element to construct an EventDataObjectCollection from.\r\n     */\r\n    protected createEventCollection(sourceElement: ElementDataObject): EventDataObjectCollection {\r\n        /*\r\n            Since this class is abstract, this version of createEventCollection should never actually be called so will\r\n            return undefined so that base classes can remain abstract\r\n        */\r\n        return undefined;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/event-handler.data-object.ts","import { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { EventContainerDataObjectInterface } from './event-container.data-object.interface';\r\nimport { EventDataObject } from './event.data-object';\r\nimport { EventSystemDataObjectInterface } from './event-system.data-object.interface';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n\r\n/**\r\n * Event System data object class that manages its collection Events.  It is the root data object for the Event System\r\n *\r\n * TODO: This implements ITreeNodeData in Flash code - may need to add it at some point.\r\n */\r\nexport abstract class EventDataObjectCollection extends ElementBasedDataObject\r\n    implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify an Element associated with an Event Collection (via name)\r\n     * @type {string}\r\n     */\r\n    public static readonly EVENT_COLLECTION_ELEMENT_NAME: string = 'Events';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent Event Container object (typically a component, variable, or another event which should implement the\r\n     * EventContainerDataObjectInterface)\r\n     *\r\n     * NOTE: Typescript has the ability to specify type like this (may want to try it instead of empty interface):\r\n     *          protected _parent: ComponentDataObject | VariableDataObject | EventHandlerDataObject\r\n     *\r\n     * NOTE: Just about every Event System related object has a parent property which ties the object to its parent data\r\n     *          object.  Many objects need this in order to pass execution control back up to its parent object.  Some\r\n     *          don't really need it (parent usually holds reference to child data objects as well), but has generally\r\n     *          been included for consistency.  There had been some thought to move this property to a base class like\r\n     *          ElementBasedDataObject or a base class at the level of the EventSystemDataObjectInterface.  It was\r\n     *          determined that many ElementBasedDataObjects (like all of the DIF components) don't need the ability for\r\n     *          the child data object to access its parent, so it was decided not to add this property to it\r\n     *          (particularly since the reference is generally redundant anyway and needs to be kept in sync).  Adding\r\n     *          the property to a base class at the level of EventSystemDataObjectInterface would require generic\r\n     *          typing of the property (since every Event System data object typically has different parent objects),\r\n     *          which would then have to be cast in the derived class to strongly type it.  This isn't terrible if it\r\n     *          allows consolidation of code, but in the case of the Event System data objects, currently there aren't\r\n     *          any real shared processes that get applied to all parent objects regardless of their actual type.  So\r\n     *          for now, each Event System data object is allowed to define and type its own parent property.  Can\r\n     *          change this in the future if the situation changes.\r\n     */\r\n    protected _parent: EventContainerDataObjectInterface;\r\n\r\n    /**\r\n     * Event Collection\r\n     */\r\n    public eventCollection: Array<EventDataObject>;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private eventCollectionLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement defines the\r\n     * collection of Events that this class manages.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.eventCollectionLogger = Log.getInstance().getLogger('EventDataObjectCollection');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n        this.eventCollection = [];\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Event Collection specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case EventDataObject.EVENT_ELEMENT_NAME:\r\n                // Create and add Event to collection\r\n                this.addEvent(this.createEvent(element));\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: EventContainerDataObjectInterface) {\r\n        this._parent = value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version of\r\n     * EventDataObject\r\n     *\r\n     * @param sourceElement -> root level Element to construct an EventDataObject from.\r\n     */\r\n    protected createEvent(sourceElement: ElementDataObject): EventDataObject {\r\n        /*\r\n         Since this class is abstract, this version of createEvent should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Adds Event to Event Collection and sets this as the Event's parent\r\n     *\r\n     * @param event\r\n     */\r\n    protected addEvent(event: EventDataObject): void {\r\n        // Add to Event Collection\r\n        this.eventCollection.push(event);\r\n\r\n        // Set this as the parent of the Event added\r\n        event.parent = this;\r\n    }\r\n\r\n    /**\r\n     * Returns Event in eventCollection based on its trigger property\r\n     *\r\n     * @param trigger - the value that we want to match the trigger property with\r\n     * @returns {undefined|EventDataObject}\r\n     */\r\n    public getEventByTrigger(trigger: string): EventDataObject {\r\n        return this.eventCollection.find((event: EventDataObject) => {\r\n            return event.trigger === trigger;\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.collection.ts","import { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { EventDataObjectCollection } from './event.data-object.collection';\r\nimport { EventHandlerDataObject } from './event-handler.data-object';\r\nimport { EventSystemDataObjectInterface } from './event-system.data-object.interface';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n\r\n/**\r\n * Event System data object class that defines an Event, including what triggers it and what it should do when it gets\r\n * triggered.  (i.e. what should happen when a button is clicked, a variable changes, an event completes, etc.)\r\n *\r\n * TODO: AS version implements ITreeNodeData interface - may need that eventually\r\n */\r\nexport abstract class EventDataObject extends ElementBasedDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify Element associated with an Event (via ElementDataObject.name)\r\n     * @type {string}\r\n     */\r\n    public static readonly EVENT_ELEMENT_NAME: string = 'Event';\r\n\r\n    /**\r\n     * String used to identify Element identifying this Event's Trigger\r\n     * @type {string}\r\n     */\r\n    protected static readonly TRIGGER_ELEMENT_NAME: string = 'Trigger';\r\n\r\n    /**\r\n     * Constants for all possible values of trigger property\r\n     * @type {string}\r\n     */\r\n    public static readonly ON_CHANGE: string = 'OnChange';\r\n    public static readonly ON_CHECKED: string = 'OnChecked';\r\n    public static readonly ON_CLICK: string = 'OnClick';\r\n    public static readonly ON_COMPLETE: string = 'OnComplete';\r\n    public static readonly ON_DOUBLE_CLICK: string = 'OnDoubleClick';\r\n    public static readonly ON_EXIT: string = 'OnExit';\r\n    public static readonly ON_FOCUS: string = 'OnFocus';\r\n    public static readonly ON_FOCUS_LOST: string = 'OnFocusLost';\r\n    public static readonly ON_LOAD: string = 'OnLoad';\r\n    public static readonly ON_MOUSE_OUT: string = 'OnMouseOut';\r\n    public static readonly ON_MOUSE_OVER: string = 'OnMouseOver';\r\n    public static readonly ON_PAUSE: string = 'OnPause';\r\n    public static readonly ON_PLAY: string = 'OnPlay';\r\n    public static readonly ON_SELECTED: string = 'OnSelected';\r\n    public static readonly ON_SELECTION_CHANGE: string = 'OnSelectionChange';\r\n    public static readonly ON_UNSELECTED: string = 'OnUnselected';\r\n    public static readonly ON_UNCHECKED: string = 'OnUnchecked';\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent Event Collection\r\n     */\r\n    protected _parent: EventDataObjectCollection;\r\n\r\n    /**\r\n     * Collection of EventHandlerDataObject which define the things that need to happen when the event is triggered\r\n     */\r\n    public eventHandlerCollection: Array<EventHandlerDataObject>;\r\n\r\n    /**\r\n     * ElementDataObject which contains data specifying the action that triggers this event (i.e. onMouseClick,\r\n     * onVariableChange, etc.).  Used to determine type of listener / event handler to add to the EventContainer\r\n     * (i.e. components, variables, other events).  The value of the Element object (but not the object itself) is used\r\n     * outside of this class and accessed through an accessor method.\r\n     */\r\n    protected triggerElement: ElementDataObject;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private eventLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Event and its collection of Handlers.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        this.eventLogger = Log.getInstance().getLogger('EventDataObject');\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n        this.eventHandlerCollection = [];\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Event object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties including the Event Handlers associated with it.\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case EventDataObject.TRIGGER_ELEMENT_NAME:\r\n                this.triggerElement = element;\r\n                this.eventLogger.debug('constructFromElement(): Trigger = ' + this.trigger);\r\n                break;\r\n            case EventHandlerDataObject.EVENT_HANDLER_ELEMENT_NAME:\r\n                // Create Event Handler and add to eventHandlerCollection\r\n                this.addEventHandler(this.createEventHandler(element));\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: EventDataObjectCollection) {\r\n        this._parent = value;\r\n    }\r\n\r\n    /**\r\n     * Accessor for value of triggerElement\r\n     * @returns {string}\r\n     */\r\n    public get trigger(): string {\r\n        return this.triggerElement.value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version of\r\n     * EventHandlerDataObject\r\n     *\r\n     * @param sourceElement -> root level Element to construct an Event Handler from.\r\n     */\r\n    protected createEventHandler(sourceElement: ElementDataObject): EventHandlerDataObject {\r\n        /*\r\n         Since this class is abstract, this version of createEventHandler should never actually be called so will\r\n         return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Add EventHandlerDataObject to eventHandlerCollection array\r\n     * @param eventHandler\r\n     */\r\n    protected addEventHandler(eventHandler: EventHandlerDataObject): void {\r\n        // Add to array\r\n        this.eventHandlerCollection.push(eventHandler);\r\n\r\n        // Set parent\r\n        eventHandler.parent = this;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts","import { CaseDataObject } from './case.data-object';\r\nimport { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { EventSystemDataObjectInterface } from './event-system.data-object.interface';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { FunctionGroupDataObject } from './function-groups/function-group.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n\r\n/**\r\n * Event System data object class that manages its collection of FunctionGroupDataObjects.\r\n *\r\n * TODO: This implements IFunctionGroupContainerVO in Flash code - may need to add it at some point - not sure if it's\r\n *          needed.  Seems like only FunctionGroupDataObjectCollection related classes implement it - maybe not needed\r\n */\r\nexport abstract class FunctionGroupDataObjectCollection extends ElementBasedDataObject\r\n    implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify an Element associated with a collection of Event Function Group objects (via name)\r\n     * @type {string}\r\n     */\r\n    public static readonly FUNCTION_GROUP_COLLECTION_ELEMENT_NAME: string = 'FunctionGroups';\r\n\r\n    /**\r\n     * String used to identify an Element associated with the Function Group Collection's name\r\n     * @type {string}\r\n     */\r\n    protected static readonly NAME_ELEMENT_NAME: string = 'Name';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent CaseDataObject\r\n     */\r\n    protected _parent: CaseDataObject;\r\n\r\n    /**\r\n     * Element for storing name of this collection of Function Groups (probably only used by designer)\r\n     */\r\n    protected nameElement: ElementDataObject;\r\n\r\n    /**\r\n     * Array of Function Group objects that this collection class manages\r\n     */\r\n    protected functionGroupCollection: Array<FunctionGroupDataObject>;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private functionGroupLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Function Group Collection object that include the individual Function Group objects it is\r\n     * composed of\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.functionGroupLogger = Log.getInstance().getLogger('FunctionGroupDataObjectCollection');\r\n        this.functionGroupLogger.debug('constructorPreprocessing(): Function Group Collection');\r\n        // this.localRoot.logHierarchy();\r\n\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n        this.functionGroupCollection = [];\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs FunctionGroupDataObjectCollection specific condition testing on the children of _localRoot to identify\r\n     * and setup class specific properties\r\n     *\r\n     * NOTE:\r\n     *   In AS version of this class, this additional check was added in the element for loop:\r\n     *\r\n     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)\r\n     *\r\n     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check\r\n     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player\r\n     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to\r\n     *   address this for the PageDesigner though, we still may need to implements something additional for it.\r\n     *   Apparently this was needed to address cloning which creates these elements that then need to be filtered out.\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking its name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case FunctionGroupDataObjectCollection.NAME_ELEMENT_NAME:\r\n                this.nameElement = element;\r\n                this.functionGroupLogger.debug('parseElement(): name = ' + this.name);\r\n                break;\r\n            case FunctionGroupDataObject.FUNCTION_GROUP_ELEMENT_NAME:\r\n                this.addFunctionGroup(this.createFunctionGroup(element));\r\n                break;\r\n        }\r\n\r\n        // Function Group data might not have been in order - sort it so that it can be displayed and processed in order\r\n        this.sortFunctionGroupCollection();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: CaseDataObject) {\r\n        this._parent = value;\r\n    }\r\n\r\n    /**\r\n     * Accessor for value of nameElement (Function Group Collection name)\r\n     * @returns {string}\r\n     */\r\n    public get name(): string {\r\n        return this.nameElement.value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param sourceElement -> root level Element to construct Function Group from.\r\n     * @returns {FunctionGroupDataObject}\r\n     */\r\n    protected createFunctionGroup(sourceElement: ElementDataObject): FunctionGroupDataObject {\r\n        /*\r\n         Since this class is abstract, this version of createFunctionGroup should never actually be called so\r\n         will return undefined so that base classes can remain abstract\r\n         */\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Add Function Group to functionGroupCollection array\r\n     * @param functionGroup\r\n     */\r\n    protected addFunctionGroup(functionGroup: FunctionGroupDataObject): void {\r\n        this.functionGroupCollection.push(functionGroup);\r\n        functionGroup.parent = this;\r\n    }\r\n\r\n    /**\r\n     * Sorts the Function Group objects stored in functionGroupCollection based on their order property\r\n     */\r\n    private sortFunctionGroupCollection(): void {\r\n        this.functionGroupCollection.sort(\r\n            (functionGroupA: FunctionGroupDataObject, functionGroupB: FunctionGroupDataObject) => {\r\n                return functionGroupA.order - functionGroupB.order;\r\n            }\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/function-group.data-object.collection.ts","import { ElementBasedDataObject } from '../../element-based.data-object';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { FunctionDataObjectCollection } from '../function.data-object.collection';\r\nimport { FunctionGroupDataObjectCollection } from '../function-group.data-object.collection';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * Base class for all Event System data objects that define an Event System Function Group which specifies the actual\r\n * Event System Functions that it is comprised of\r\n */\r\nexport abstract class FunctionGroupDataObject extends ElementBasedDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify Element associated with a Function Group data object (via ElementDataObject.name)\r\n     * @type {string}\r\n     */\r\n    public static readonly FUNCTION_GROUP_ELEMENT_NAME: string = 'FunctionGroup';\r\n\r\n    /**\r\n     * String used to identify Element associated with the Function Group's name\r\n     * @type {string}\r\n     */\r\n    protected static readonly NAME_ELEMENT_NAME: string = 'Name';\r\n\r\n    /**\r\n     * String used to identify the top level Element that contains the parameters for the Function Group\r\n     * @type {string}\r\n     */\r\n    protected static readonly PARAMETERS_ELEMENT_NAME: string = 'Parameters';\r\n\r\n    /**\r\n     * String used to identify the Element associated with the order in which the Function Group should be run relative\r\n     * to its siblings\r\n     * @type {string}\r\n     */\r\n    protected static readonly ORDER_ELEMENT_NAME: string = 'Order';\r\n\r\n    /**\r\n     * String used to identify Element that indicates when Function Group should be executed (either With Previous or\r\n     * After Previous)\r\n     * @type {string}\r\n     */\r\n    protected static readonly EXECUTE_ELEMENT_NAME: string = 'Execute';\r\n\r\n    /**\r\n     * String constant values used for the execute property (via executeElement)\r\n     * @type {string}\r\n     */\r\n    public static readonly EXECUTE_WITH_VALUE: string = 'With Previous';\r\n    public static readonly EXECUTE_AFTER_VALUE: string = 'After Previous';\r\n    public static readonly EXECUTE_DEFAULT_VALUE: string = FunctionGroupDataObject.EXECUTE_AFTER_VALUE;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent FunctionGroupContainerInterface\r\n     */\r\n    protected _parent: FunctionGroupDataObjectCollection;\r\n\r\n    /**\r\n     * Element that contains the name of the Function Group\r\n     */\r\n    protected nameElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element that contains the parameters for the Function Group\r\n     */\r\n    protected parametersElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element that contains the Function Group's order\r\n     */\r\n    protected orderElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element that contains the execution priority of the Function Group relative to its sibling (either With Previous\r\n     * or After Previous)\r\n     */\r\n    protected executeElement: ElementDataObject;\r\n\r\n    /**\r\n     * Root Element ultimately defining functionCollection\r\n     */\r\n    protected functionCollectionElement: ElementDataObject;\r\n\r\n    /**\r\n     * FunctionDataObjectCollection that stores and manages the Event System Functions that make up the Function Group\r\n     */\r\n    protected functionCollection: FunctionDataObjectCollection;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private functionGroupLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Function Group object that include the parameters that it takes in and its translation to\r\n     * actual Event System Functions.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.functionGroupLogger = Log.getInstance().getLogger('FunctionGroupDataObject');\r\n        this.functionGroupLogger.debug('constructorPreprocessing(): Function Group');\r\n        // this.localRoot.logHierarchy();\r\n\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Function Group object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking its name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case FunctionGroupDataObject.NAME_ELEMENT_NAME:\r\n                this.nameElement = element;\r\n                this.functionGroupLogger.debug('parseElement(): name = ' + this.name);\r\n                break;\r\n            case FunctionGroupDataObject.ORDER_ELEMENT_NAME:\r\n                this.orderElement = element;\r\n                this.functionGroupLogger.debug('parseElement(): order = ' + this.order);\r\n                break;\r\n            case FunctionGroupDataObject.PARAMETERS_ELEMENT_NAME:\r\n                this.parametersElement = element;\r\n                this.parseParameters(element);\r\n                break;\r\n            case FunctionGroupDataObject.EXECUTE_ELEMENT_NAME:\r\n                this.executeElement = element;\r\n                break;\r\n            case FunctionDataObjectCollection.FUNCTION_COLLECTION_ELEMENT_NAME:\r\n                this.functionCollectionElement = element;\r\n                this.functionCollection = this.createFunctionCollection(element);\r\n                this.functionCollection.parent = this;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: FunctionGroupDataObjectCollection) {\r\n        this._parent = value;\r\n    }\r\n\r\n    /**\r\n     * Accessor for value of nameElement (Function Group name)\r\n     * @returns {string}\r\n     */\r\n    public get name(): string {\r\n        return this.nameElement.value;\r\n    }\r\n\r\n    /**\r\n     * Accessor for value of orderElement(Function Group order)\r\n     * @returns {number}\r\n     */\r\n    public get order(): number {\r\n        return +this.orderElement.value;\r\n    }\r\n\r\n    /**\r\n     * Accessor for value of executeElement (execution modifier ... either with or after previous)\r\n     * NOTE: the \"with or after previous\" concept is garbage, but that's how the interface works so for now ...\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get execute(): string {\r\n        if (!this.executeElement) {\r\n            return FunctionGroupDataObject.EXECUTE_DEFAULT_VALUE;\r\n        } else {\r\n            return this.executeElement.value;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct Function Collection from.\r\n     * @returns {FunctionDataObjectCollection}\r\n     */\r\n    protected createFunctionCollection(element: ElementDataObject): FunctionDataObjectCollection {\r\n        /*\r\n         Since this class is abstract, this version of createFunctionCollection should never actually be called so\r\n         will return undefined so that base classes can remain abstract\r\n        */\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Method to parse Function Group specific parameters.  Should be implemented in derived classes.\r\n     * @param element\r\n     */\r\n    protected parseParameters(element: ElementDataObject): void {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/function-groups/function-group.data-object.ts","import { AnimateDataObject } from './functions/animate.data-object';\r\nimport { ChangePageDataObject } from './functions/change-page.data-object';\r\nimport { DelayDataObject } from './functions/delay.data-object';\r\nimport { DisplayMessageDataObject } from './functions/display-message.data-object';\r\nimport { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { EventSystemDataObjectInterface } from './event-system.data-object.interface';\r\nimport { FunctionDataObject } from './functions/function.data-object';\r\nimport { FunctionGroupDataObject } from './function-groups/function-group.data-object';\r\nimport { Log, Logger } from '../../../log';\r\nimport { SetPropertyDataObject } from './functions/set-property.data-object';\r\nimport { SetScormDataObject } from './functions/set-scorm.data-object';\r\nimport { SetVariableDataObject } from './functions/set-variable.data-object';\r\nimport { WaitDataObject } from './functions/wait.data-object';\r\n\r\n\r\n/**\r\n * Event System data object class that manages its collection of FunctionDataObjects.  Typically contains the set of\r\n * Event System Functions that make up a Function Group\r\n */\r\nexport abstract class FunctionDataObjectCollection extends ElementBasedDataObject\r\n    implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify an Element associated with a collection of Function objects (via name)\r\n     * @type {string}\r\n     */\r\n    public static readonly FUNCTION_COLLECTION_ELEMENT_NAME: string = 'Functions';\r\n\r\n    /**\r\n     * String used to identify the element associated with the name of the Function\r\n     * @type {string}\r\n     */\r\n    protected static readonly NAME_ELEMENT_NAME: string = 'Name';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent FunctionGroupDataObject\r\n     */\r\n    protected _parent: FunctionGroupDataObject;\r\n\r\n    /**\r\n     * Element used to store name of Function Collection (not sure if this is used)\r\n     */\r\n    protected nameElement: ElementDataObject;\r\n\r\n    /**\r\n     * Array containing FunctionDataObjects managed by this collection class\r\n     */\r\n    protected functionCollection: Array<FunctionDataObject>;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private functionCollectionLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Function Collection object that include the individual Function objects it manages\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.functionCollectionLogger = Log.getInstance().getLogger('FunctionDataObjectCollection');\r\n        this.functionCollectionLogger.debug('constructorPreprocessing(): Function Collection');\r\n        // this.localRoot.logHierarchy();\r\n\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n        this.functionCollection = [];\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs FunctionDataObjectCollection specific condition testing on the children of _localRoot to identify\r\n     * and setup class specific properties\r\n     *\r\n     * NOTE:\r\n     *   In AS version of this class, this additional check was added in the element for loop:\r\n     *\r\n     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)\r\n     *\r\n     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check\r\n     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player\r\n     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to\r\n     *   address this for the PageDesigner though, we still may need to implements something additional for it.\r\n     *   Apparently this was needed to address cloning which creates these elements that then need to be filtered out.\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking its name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case FunctionDataObjectCollection.NAME_ELEMENT_NAME:\r\n                this.nameElement = element;\r\n                this.functionCollectionLogger.debug('parseElement(): name = ' + this.nameElement.value);\r\n                break;\r\n            case FunctionDataObject.FUNCTION_ELEMENT_NAME:\r\n                this.addFunction(this.createFunction(element));\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: FunctionGroupDataObject) {\r\n        this._parent = value;\r\n    }\r\n\r\n    public get parent(): FunctionGroupDataObject {\r\n        return this._parent;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Utility method to create appropriate Function objects based on input Element structure.\r\n     *\r\n     * @param element\r\n     * @returns {FunctionDataObject}\r\n     */\r\n    protected createFunction(element: ElementDataObject): FunctionDataObject {\r\n        // Get Function Name\r\n        const functionName: string = element.getFirstChildElementByName(FunctionDataObject.NAME_ELEMENT_NAME).value;\r\n        console.log('FunctionDataObject.createFunction(): create functionName = ' + functionName);\r\n\r\n        switch (functionName) {\r\n            case AnimateDataObject.NAME_ELEMENT_NAME:\r\n                return this.createAnimate(element);\r\n            case ChangePageDataObject.NAME_ELEMENT_NAME:\r\n                return this.createChangePage(element);\r\n            case DelayDataObject.NAME_ELEMENT_NAME:\r\n                return this.createDelay(element);\r\n            case DisplayMessageDataObject.NAME_ELEMENT_NAME:\r\n                return this.createDisplayMessage(element);\r\n            case SetPropertyDataObject.NAME_ELEMENT_NAME:\r\n                return this.createSetProperty(element);\r\n            case SetScormDataObject.NAME_ELEMENT_NAME:\r\n                return this.createSetScorm(element);\r\n            case SetVariableDataObject.NAME_ELEMENT_NAME:\r\n                return this.createSetVariable(element);\r\n            case WaitDataObject.NAME_ELEMENT_NAME:\r\n                return this.createWait(element);\r\n            default:\r\n                this.functionCollectionLogger.debug('createFunction(): function ' + functionName + ' does not exist');\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {AnimateDataObject}\r\n     */\r\n    protected createAnimate(element: ElementDataObject): AnimateDataObject {\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {ChangePageDataObject}\r\n     */\r\n    protected createChangePage(element: ElementDataObject): ChangePageDataObject {\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {DelayDataObject}\r\n     */\r\n    protected createDelay(element: ElementDataObject): DelayDataObject {\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {DisplayMessageDataObject}\r\n     */\r\n    protected createDisplayMessage(element: ElementDataObject): DisplayMessageDataObject {\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {SetPropertyDataObject}\r\n     */\r\n    protected createSetProperty(element: ElementDataObject): SetPropertyDataObject {\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {SetScormDataObject}\r\n     */\r\n    protected createSetScorm(element: ElementDataObject): SetScormDataObject {\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {SetVariableDataObject}\r\n     */\r\n    protected createSetVariable(element: ElementDataObject): SetVariableDataObject {\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct Function from.\r\n     * @returns {WaitDataObject}\r\n     */\r\n    protected createWait(element: ElementDataObject): WaitDataObject {\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Add Function to functionCollection array\r\n     * @param functionDataObject -> FunctionDataObject to add to array\r\n     */\r\n    protected addFunction(functionDataObject: FunctionDataObject): void {\r\n        this.functionCollection.push(functionDataObject);\r\n        functionDataObject.parent = this;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/function.data-object.collection.ts","import { ElementDataObject } from '../../element.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { FunctionDataObject } from './function.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\nimport { MotionPathDataObject } from './motion-path.data-object';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the Animate function.</p>\r\n */\r\nexport abstract class AnimateDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * The element name of the root element that is used to build this DataObject\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'Animate';\r\n\r\n    /**\r\n     * <p>Element Tag Name For the ComponentID Animation Function Property</p>\r\n     */\r\n    private static readonly COMPONENT_ID_ELEMENT_NAME: string = 'ComponentElementID';\r\n\r\n    /**\r\n     * <p>Element Tag Name For the Duration Animation Function Property</p>\r\n     */\r\n    private static readonly DURATION_ELEMENT_NAME: string = 'Duration';\r\n\r\n    /**\r\n     * <p>Element Tag Name For the MotionPaths Animation Function Property</p>\r\n     */\r\n    private static readonly MOTION_PATHS_ELEMENT_NAME: string = 'MotionPaths';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private animationLogger: Logger;\r\n\r\n    /**\r\n     * Element object containing componentID\r\n     */\r\n    private _componentIdElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element object containing duration\r\n     */\r\n    private _durationElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element object containing collection of Motion Path objects\r\n     */\r\n    private _motionPathCollectionElement: ElementDataObject;\r\n\r\n    /**\r\n     * <p>Private List of MotionPathVOs used for referencing and editing\r\n     * the MotionPath Elements contained in the MotionPaths Element</p>\r\n     */\r\n    protected _motionPathDataObjectCollection: Array<MotionPathDataObject>;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Animation object that include the parameters that it takes in and ultimately define what the\r\n     * Animation will do.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.animationLogger = Log.getInstance().getLogger('AnimateDataObject');\r\n\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n        this._motionPathDataObjectCollection = [];\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Animation object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking its name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        this.animationLogger.debug('parseElement(): name = ' + element.name);\r\n\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case AnimateDataObject.COMPONENT_ID_ELEMENT_NAME:\r\n                this._componentIdElement = element;\r\n                break;\r\n            case AnimateDataObject.DURATION_ELEMENT_NAME:\r\n                this._durationElement = element;\r\n                break;\r\n            case AnimateDataObject.MOTION_PATHS_ELEMENT_NAME:\r\n                this._motionPathCollectionElement = element;\r\n                this.parseMotionPathDataObjects();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parses Motion Path data from _motionPathCollectionElement, creates MotionPathDataObjects, and adds them to\r\n     * _motionPathDataObjectCollection\r\n     */\r\n    private parseMotionPathDataObjects(): void {\r\n        this._motionPathCollectionElement.children.forEach((element: ElementDataObject) => {\r\n            this._motionPathDataObjectCollection.push(this.createMotionPath(element));\r\n        });\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * <p>The value of the ComponentID property of an AnimateDataObject Function Element</p>\r\n     */\r\n    public get componentElementID(): string {\r\n        return this._componentIdElement.value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * <p>The value of the Duration property of an AnimateDataObject.</p>\r\n     */\r\n    public get duration(): number {\r\n        return +this._durationElement.value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     * @param element -> root level Element to construct Motion Path from.\r\n     * @returns {MotionPathDataObject}\r\n     */\r\n    protected createMotionPath(element: ElementDataObject): MotionPathDataObject {\r\n        return undefined;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/animate.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the ChangePage function.</p>\r\n *\r\n */\r\n\r\nexport abstract class ChangePageDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n\r\n    /**\r\n     * The element name of the root element that is used to build this DataObject\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'ChangePage';\r\n\r\n    /**\r\n     * <p>Value of ElementDataObject for Type element.</p>\r\n     */\r\n    private static readonly TYPE_ELEMENT_NAME: string = 'Type';\r\n\r\n    /**\r\n     * <p>Value of ElementDataObject for PageID element.</p>\r\n     */\r\n    private static readonly PAGE_ID_ELEMENT_NAME: string = 'PageID';\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private changePageLogger: Logger;\r\n\r\n    /**\r\n     * <p>The type of change page navigation being run.</p>\r\n     *\r\n     */\r\n    private _typeElement: ElementDataObject;\r\n\r\n    /**\r\n     * <p>ID of the target page for this navigation. Only needed for goto(select) type.</p>\r\n     *\r\n     */\r\n    private _pageIDElement: ElementDataObject;\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this ChangePage object that include the parameters that it takes in and ultimately define what the\r\n     * ChangePage will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.changePageLogger = Log.getInstance().getLogger('ChangePageDataObject');\r\n        this.changePageLogger.debug('constructorPreprocessing(): ChangePage');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs ChangePage object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case ChangePageDataObject.PAGE_ID_ELEMENT_NAME:\r\n                this._pageIDElement = element;\r\n                this.changePageLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n            case ChangePageDataObject.TYPE_ELEMENT_NAME:\r\n                this._typeElement = element;\r\n                this.changePageLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * <p>The type of change page navigation being run.</p>\r\n     *\r\n     *\r\n     */\r\n    public get type(): string\r\n    {\r\n        return this._typeElement.value;\r\n    }\r\n\r\n    // /**\r\n    //  * Editable version?\r\n    //  */\r\n    // public set type(value: string)\r\n    // {\r\n    //     this._typeElement.value = value;\r\n    // }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * <p>ID of the target page for this navigation. Only needed for goto(select) type.</p>\r\n     *\r\n     *\r\n     */\r\n    public get pageID(): string\r\n    {\r\n        return this._pageIDElement.value;\r\n    }\r\n\r\n    /**\r\n     * Editable version?\r\n     */\r\n    // public set pageID(value:string)\r\n    // {\r\n    //     this._pageIDElement.value = value;\r\n    // }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/change-page.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the Delay function.</p>\r\n *\r\n */\r\n\r\nexport abstract class DelayDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n\r\n    /**\r\n     * The element name of the root element that is used to build this DataObject\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'Delay';\r\n\r\n    /**\r\n     * The element name of the delay duration element that is used to build this DataObject\r\n     */\r\n    private static readonly DELAY_DURATION_ELEMENT_NAME: String = 'DelayDuration';\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private delayLogger: Logger;\r\n\r\n    /**\r\n     * <p>The element that holds duration data.</p>\r\n     */\r\n    private  _durationElement: ElementDataObject;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Delay object that include the parameters that it takes in and ultimately define what the\r\n     * Delay will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.delayLogger = Log.getInstance().getLogger('DelayDataObject');\r\n        this.delayLogger.debug('constructorPreprocessing(): Delay');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Delay object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case DelayDataObject.DELAY_DURATION_ELEMENT_NAME:\r\n                this._durationElement = element;\r\n                this.delayLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * <p>Length of time that the delay takes in seconds.</p>\r\n     */\r\n    public get duration(): number\r\n    {\r\n        return +this._durationElement.value;\r\n    }\r\n\r\n    // /**\r\n    //  * @private\r\n    //  */\r\n    // public set duration(value: number)\r\n    // {\r\n    //     this._durationElement.value = String(value);\r\n    // }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/delay.data-object.ts","import {FunctionDataObject} from './function.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\nimport {ColorDataType} from '../../data-types/color.data-type';\r\n\r\n\r\n/**\r\n * <p>Base/Editable DataObject class for the DisplayMessage </p>\r\n *\r\n */\r\n\r\nexport abstract class DisplayMessageDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// readonlyants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * string used to identify Element associated with a DisplayMessage data object (via ElementDataObject.name)\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'DisplayMessage';\r\n\r\n    /**\r\n     * <p>Name of ElementDataObject for Message element.</p>\r\n     */\r\n    private static readonly MESSAGE_ELEMENT_NAME: string = 'Message';\r\n\r\n    /**\r\n     * Name of ElementDataObject for Title Element\r\n     */\r\n    private static readonly TITLE_ELEMENT_NAME: string = 'Title';\r\n\r\n    /**\r\n     * Name of ElementDataObject for message title bar color element\r\n     */\r\n    private static readonly TITLE_BAR_COLOR_ELEMENT_NAME: string = 'TitleBarColor';\r\n\r\n    /**\r\n     * Name of ElementDataObject for the message title bar text color element\r\n     */\r\n    private static readonly TITLE_BAR_TEXT_COLOR_ELEMENT_NAME: string = 'TitleBarTextColor';\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance ables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private displayMessageLogger: Logger;\r\n\r\n    /**\r\n     * <p>The element referencing the value of the message to be displayed in the popup window.</p>\r\n     *\r\n     */\r\n    private _messageElement: ElementDataObject;\r\n\r\n    /**\r\n     * Reference to the elementDataObject that contains the message window title\r\n     */\r\n    private _messageTitleElement: ElementDataObject;\r\n\r\n    /**\r\n     * Reference to the elementDataObject that contains the message window title bar color\r\n     */\r\n    private _messageTitleBarColor: ColorDataType;\r\n\r\n    /**\r\n     * Reference to the elementDataObject that contains the message window title bar text color\r\n     */\r\n    private _messageTitleBarTextColor: ColorDataType;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// readonlyructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete readonlyruction of this object.  The data in sourceElement define the\r\n     * properties of this DisplayMessage object that include the parameters that it takes in and ultimately define\r\n     * what the DisplayMessage will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during readonlyruction\r\n        this.displayMessageLogger = Log.getInstance().getLogger('DisplayMessageDataObject');\r\n        this.displayMessageLogger.debug('constructorPreprocessing(): DisplayMessage');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs DisplayMessage object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case DisplayMessageDataObject.MESSAGE_ELEMENT_NAME:\r\n                this._messageElement = element;\r\n                  break;\r\n            case DisplayMessageDataObject.TITLE_BAR_COLOR_ELEMENT_NAME:\r\n                this._messageTitleBarColor = new ColorDataType(element);\r\n                  break;\r\n            case DisplayMessageDataObject.TITLE_BAR_TEXT_COLOR_ELEMENT_NAME:\r\n                this._messageTitleBarTextColor = new ColorDataType(element);\r\n                  break;\r\n            case DisplayMessageDataObject.TITLE_ELEMENT_NAME:\r\n                this._messageTitleElement = element;\r\n                  break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * <p>The message to be displayed in the popup window.</p>\r\n     *\r\n     * @default null\r\n     */\r\n    public get message(): string {\r\n        return this._messageElement.value;\r\n    }\r\n\r\n    // /**\r\n    //  * Editable version?\r\n    //  */\r\n    // public set message(value:string):void\r\n    // {\r\n    //     this._messageElement.value = value;\r\n    // }\r\n\r\n    /**\r\n     * The title to be displayed on the message\r\n     * @default null\r\n     */\r\n    public get messageTitle(): string\r\n    {\r\n        if (!this._messageTitleElement) {\r\n            return 'System Message';\r\n        } else {\r\n            return this._messageTitleElement.value;\r\n        }\r\n    }\r\n\r\n    // /**\r\n    //  * Editable version?\r\n    //  * Used to set the window title on the display message window\r\n    //  */\r\n    // public set messageTitle(value:string):void\r\n    // {\r\n    //     if(this._messageTitleElement)\r\n    //     {\r\n    //         this._messageTitleElement.value = value;\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * used to get the window title bar color for the display message window\r\n     */\r\n    public get messageTitleBarColor(): string\r\n    {\r\n        if (this._messageTitleBarColor) {\r\n            return this._messageTitleBarColor.webColor;\r\n        }\r\n        return '#FF6600';\r\n    }\r\n\r\n    // /**\r\n    //  * Used to set the display message window title bar color\r\n    //  */\r\n    // public set messageTitleBarColor(value:string):void\r\n    // {\r\n    //     if(this._messageTitleBarColorElement)\r\n    //     {\r\n    //         this._messageTitleBarColorElement.value = value;\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * Used to get the window title bar text color for the display message window\r\n     */\r\n    public get messageTitleBarTextColor(): string\r\n    {\r\n        if (this._messageTitleBarTextColor) {\r\n            return this._messageTitleBarTextColor.webColor;\r\n        }\r\n        return '#000000';\r\n    }\r\n\r\n    /**\r\n     * Editable version?\r\n     * Used to set the window title bar text color for the display message window\r\n     */\r\n    // public set messageTitleBarTextColor(value:string):void\r\n    // {\r\n    //     if(this._messageTitleBarTextColorElement)\r\n    //     {\r\n    //         this._messageTitleBarTextColorElement.value = value;\r\n    //     }\r\n    // }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/display-message.data-object.ts","import { ElementBasedDataObject } from '../../element-based.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * Base class for all Event System data objects that define Event System Functions.\r\n */\r\nexport abstract class FunctionDataObject extends ElementBasedDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify Element associated with a Function data object (via ElementDataObject.name)\r\n     * @type {string}\r\n     */\r\n    public static readonly FUNCTION_ELEMENT_NAME: string = 'Function';\r\n\r\n    /**\r\n     * String used to identify Element associated with name of the Function\r\n     * @type {string}\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'Name';\r\n\r\n    /**\r\n     * String used to identify Element associated with the order of this Function\r\n     * TODO: Didn't see sorting functions in AS class - check to see if used\r\n     * @type {string}\r\n     */\r\n    protected static readonly ORDER_ELEMENT_NAME: string = 'Order';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent Event object (generally a ValueDataObject or FunctionDataObjectCollection)\r\n     * TODO: usage off the top of my head, should update if used elsewhere\r\n     */\r\n    protected _parent: EventSystemDataObjectInterface;\r\n\r\n    /**\r\n     * Element containing the Function name (identifies the function and ultimately used to instantiate the\r\n     * appropriate derived instance of the base FunctionDataObject class)\r\n     */\r\n    protected nameElement: ElementDataObject;\r\n\r\n    /**\r\n     * Element containing the order of the Function relative to potential siblings.  Used to determine the order in\r\n     * which the Function should be shown or run in scenarios where it has siblings.\r\n     */\r\n    protected orderElement: ElementDataObject;\r\n\r\n    // TODO: AS version has returnValue as a property, but seems like something that would be used by a playable version\r\n    //          In AS the generic Function object doesn't have a playable version though ... just playable versions of\r\n    //          the individual functions themselves.\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private functionLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Function object that include the parameters that it takes in and ultimately define what the\r\n     * function will do.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.functionLogger = Log.getInstance().getLogger('FunctionDataObject');\r\n        this.functionLogger.debug('constructorPreprocessing(): Function');\r\n        // this.localRoot.logHierarchy();\r\n\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Function object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case FunctionDataObject.NAME_ELEMENT_NAME:\r\n                this.nameElement = element;\r\n                this.functionLogger.debug('parseElement(): name = ' + this.name);\r\n                break;\r\n            case FunctionDataObject.ORDER_ELEMENT_NAME:\r\n                this.orderElement = element;\r\n                this.functionLogger.debug('parseElement(): order = ' + this.order);\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: EventSystemDataObjectInterface) {\r\n        this._parent = value;\r\n    }\r\n\r\n    /**\r\n     * Accessor for value of nameElement (Function name)\r\n     * @returns {string}\r\n     */\r\n    public get name(): string {\r\n        return this.nameElement.value;\r\n    }\r\n\r\n    /**\r\n     * Accessor for value of orderElement(Function order)\r\n     * @returns {number}\r\n     */\r\n    public get order(): number {\r\n        return +this.orderElement.value;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { ValueDataObject } from '../value.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the GetMath function.</p>\r\n *\r\n */\r\n\r\nexport abstract class GetMathDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n\r\n    /**\r\n     * The element name of the root element that is used to build this DataObject\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'GetMath';\r\n\r\n\t/**\r\n\t * Name of the element that contains the values used by this function\r\n\t */\r\n    protected static readonly VALUE_OBJECT_ELEMENT_NAME: string = 'ValueObject';\r\n\r\n\t/**\r\n\t * Name of the element that cantains the Mathmatical Operator (add, subtract, multiply, divide) for this function.\r\n\t */\r\n    private static readonly OPERATOR_ELEMENT_NAME: string = 'Operator';\r\n\r\n\t/**\r\n\t * String representing the addition operator\r\n\t */\r\n    public static readonly ADD: string = 'add';\r\n\r\n\t/**\r\n\t * String representing the subtraction operator\r\n\t */\r\n    public static readonly SUBTRACT: string = 'subtract';\r\n\r\n\t/**\r\n\t * String representing the multiplication operator\r\n\t */\r\n    public static readonly MULTIPLY: string = 'multiply';\r\n\r\n\t/**\r\n\t * String representing the division operator\r\n\t */\r\n    public static readonly DIVIDE: string = 'divide';\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private getMathLogger: Logger;\r\n\r\n    /**\r\n     * Vector of ValueDataObjects to be used in the evaluation of this function.\r\n     */\r\n    protected _valueList: Array<ValueDataObject>;\r\n\r\n    /**\r\n     * Element that contains the + - * / opperator that will be used in this function\r\n     */\r\n    protected _operator: ElementDataObject;\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this GetMath object that include the parameters that it takes in and ultimately define what the\r\n     * GetMath will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.getMathLogger = Log.getInstance().getLogger('GetMathDataObject');\r\n        this.getMathLogger.debug('constructorPreprocessing(): GetMath');\r\n        // Initialize value object array here, not in the declaration\r\n        this._valueList = [];\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs GetMath object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case GetMathDataObject.OPERATOR_ELEMENT_NAME:\r\n                this ._operator = element;\r\n                this.getMathLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * Contains the + - * / opperator that will be used in this function\r\n\t */\r\n\t// public set operator(value:string) {\r\n\t// \tthis._operator.value = value;\r\n\t// }\r\n\r\n    public get operator(): string {\r\n        return this._operator.value;\r\n    }\r\n\r\n    public get valueList(): ValueDataObject[] {\r\n        return this._valueList;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\t//////////////////////////////////////////////////////////\r\n\t////////// Value Object List Maitenence Functions\r\n\t//////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * This function will sort the ValueDataObjects based upon their order\r\n\t *\r\n\t */\r\n    public sortOrder(): void {\r\n        this._valueList.sort((a: ValueDataObject, b: ValueDataObject) => {\r\n            return a.order - b.order;\r\n        });\r\n    }\r\n\r\n\t/**\r\n\t * Add a ValueDataObject to this getfunction. If order is specified\r\n     * then use it otherwise just add it the the back of the list.\r\n\t *\r\n\t * @param   valueObject the ValueDataObject being added.\r\n\t * @param   order   [optional] order witch this valueDataObject will be set to. (possibly not needed)\r\n\t */\r\n\r\n    public addValueObject(valueObject: ValueDataObject, order: number): void {\r\n        this._valueList.push(valueObject);\r\n        // TODO:Open setter? Editable version?\r\n\t\t// valueObject.order = order;\r\n\t\t// this.localRoot.children.push(valueObject.localRoot);\r\n    }\r\n\r\n\t/**\r\n\t * Replace value At a certain order. To be used when a valueDataObject already exists.\r\n     * This function doesn't actully replace the valueDataObject it replaces\r\n     * the get function contained in an existing ValueDataObject\r\n\t *\r\n\t * @param order: Number position at witch to replace the valueDataObject\r\n\t * @param valueObject : ValueDataObject whoes function is relpacing the existing one\r\n\t */\r\n    public replaceValueObjectAt(order: number, valueObject: ValueDataObject): void {\r\n        const value: ValueDataObject = this._valueList.find(item => item.order === order);\r\n        if (value) {\r\n            // TODO: Create Function Object in ValueDataOBject? Editable version?\r\n            // value.createFunctionFromDataObject(valueObject.myFunction);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/get-math.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the GetProperty function.</p>\r\n *\r\n */\r\n\r\nexport abstract class GetPropertyDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n\r\n    /**\r\n     * The element name of the root element that is used to build this DataObject\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'GetProperty';\r\n\r\n\t/**\r\n\t * <p>Name on the Element Tag that contains the Element ID\r\n     * of the Component that has the property we are retrivings.</p>\r\n\t */\r\n    private static readonly COMPONENT_ELEMENT_ID_ELEMENT_NAME: string = 'ComponentElementID';\r\n\r\n\t/**\r\n\t * <p>Name on the Element Tag that contains the property's name</p>\r\n\t */\r\n    private static readonly PROPERTY_NAME_ELEMENT_NAME: string = 'PropertyName';\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private getPropertyLogger: Logger;\r\n\r\n    /**\r\n     * <p>ID of the component containing the property\r\n     * who's value will be retrieved by this function.</p>\r\n     *\r\n     */\r\n    private _componentElementID: ElementDataObject;\r\n\r\n    /**\r\n     * <p>The name of the property\r\n     * who's value is being retrieved by this function.</p>\r\n     *\r\n     */\r\n    private _propertyName: ElementDataObject;\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this GetProperty object that include the parameters that it takes in and ultimately define what the\r\n     * GetProperty will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.getPropertyLogger = Log.getInstance().getLogger('GetPropertyDataObject');\r\n        this.getPropertyLogger.debug('constructorPreprocessing(): GetProperty');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs GetProperty object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case GetPropertyDataObject.COMPONENT_ELEMENT_ID_ELEMENT_NAME :\r\n                this._componentElementID = element;\r\n                this.getPropertyLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n            case GetPropertyDataObject.PROPERTY_NAME_ELEMENT_NAME:\r\n                this._propertyName = element;\r\n                this.getPropertyLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * <p>Value of the ComponentElementID Element.\r\n     * The ID of the component that contantains the desired property.</p>\r\n\t *\r\n\t */\r\n    public get componentElementID(): string\r\n    {\r\n        return this._componentElementID.value;\r\n    }\r\n\r\n\t/**\r\n\t * editable version\r\n\t */\r\n\t// public set componentElementID(value:string)\r\n\t// {\r\n\t// \tthis._componentElementID.value = value;\r\n\t// }\r\n\r\n\r\n\t/**\r\n\t * <p>Value of the PropertyName Element. The name of the property to be returned.</p>\r\n\t *\r\n\t */\r\n    public get propertyName(): string\r\n    {\r\n        return this._propertyName.value;\r\n    }\r\n\r\n\t/**\r\n\t * editable version\r\n\t */\r\n\t// public set propertyName(value:string)\r\n\t// {\r\n\t// \tthis._propertyName.value = value;\r\n\t// }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/get-property.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the GetRandomNumber function.</p>\r\n *\r\n */\r\n\r\nexport abstract class GetRandomNumberDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * The element name of the root element that is used to build this DataObject\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'GetRandomNumber';\r\n\r\n\t/**\r\n\t * The Element Name for the From element\r\n\t */\r\n    private static readonly FROM_ELEMENT_NAME: string = 'From';\r\n\r\n    /**\r\n     * The Element Name for the To element\r\n     */\r\n    private static readonly TO_ELEMENT_NAME: string = 'To';\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private getRandomNumberLogger: Logger;\r\n\r\n\t/**\r\n\t * Element representing one of the two extreames in the given range that will be used to generate the random number.\r\n\t * This number does not have to be the smaller number.\r\n\t *\r\n\t */\r\n    protected _fromElement: ElementDataObject;\r\n\r\n\t/**\r\n\t * Element representing one of the two extreames in the given range that will be used to generate the random number.\\\r\n\t * This number does not have to be the larger number.\r\n\t *\r\n\t */\r\n    protected _toElement: ElementDataObject;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this GetRandomNumber object that include the parameters that it takes in and ultimately\r\n     * define what the GetRandomNumber will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.getRandomNumberLogger = Log.getInstance().getLogger('GetRandomNumberDataObject');\r\n        this.getRandomNumberLogger.debug('constructorPreprocessing(): GetRandomNumber');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs GetRandomNumber object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case GetRandomNumberDataObject.FROM_ELEMENT_NAME:\r\n                this._fromElement = element;\r\n                this.getRandomNumberLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n            case GetRandomNumberDataObject.TO_ELEMENT_NAME:\r\n                this._toElement = element;\r\n                this.getRandomNumberLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * return one of the two extreames in the given range that will be used to generate the random number.\r\n\t * This number does not have to be the smaller number.\r\n\t *\r\n\t */\r\n    public get from(): number\r\n    {\r\n        if (this._fromElement.value === '') {\r\n            return undefined;\r\n        }\r\n        return +this._fromElement.value;\r\n    }\r\n\r\n\t/**\r\n\t * editable version?\r\n\t */\r\n\t// public set from(value:number)\r\n\t// {\r\n\t// \tthis._fromElement.value = value.toString();\r\n\t// }\r\n\r\n\t/**\r\n\t * return one of the two extreames in the given range that will be used to generate the random number.\r\n\t * This number does not have to be the bigger number.\r\n\t *\r\n\t */\r\n    public get to(): number\r\n    {\r\n        if (this._toElement.value === '') {\r\n            return undefined;\r\n        }\r\n        return +this._toElement.value;\r\n    }\r\n\r\n\t/**\r\n\t * editable version?\r\n\t */\r\n\t// public set to(value:number)\r\n\t// {\r\n\t// \tthis._toElement.value = ''+value;\r\n\t// }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/get-random-number.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the GetTypedConstant function.</p>\r\n *\r\n */\r\n\r\nexport abstract class GetTypedConstantDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n\r\n    /**\r\n     * The element name of the root element that is used to build this DataObject\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'Constant';\r\n\r\n\t// /**\r\n\t//  * <p>The value of the name element thats used to identify this FunctionDataObject</p>\r\n\t//  */\r\n\t// private static NAME_ELEMENT_VALUE:string = 'Constant';\r\n\r\n\t/**\r\n\t * <p>Name on the Element Tag that contains the untyped constant value.</p>\r\n\t */\r\n    private static CONSTANT_VALUE_ELEMENT_NAME: string = 'ConstantValue';\r\n\r\n\t/**\r\n\t * <p>Name on the Element Tag that contains the untyped type.</p>\r\n\t */\r\n    private static TYPE_ELEMENT_NAME: string = 'Type';\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private getTypedConstantLogger: Logger;\r\n\r\n\t/**\r\n\t * <p>Element that contains the untyped constant value.</p>\r\n\t *\r\n\t */\r\n    protected _constantValue: ElementDataObject;\r\n\r\n\t/**\r\n\t * <p>Element that contains the data type of this Value Object.</p>\r\n\t *\r\n\t */\r\n    protected _type: ElementDataObject;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this GetTypedConstant object that include the parameters that it takes in and ultimately\r\n     * define what the GetTypedConstant will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.getTypedConstantLogger = Log.getInstance().getLogger('GetTypedConstantDataObject');\r\n        this.getTypedConstantLogger.debug('constructorPreprocessing(): GetTypedConstant');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs GetTypedConstant object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case GetTypedConstantDataObject.CONSTANT_VALUE_ELEMENT_NAME:\r\n                this._constantValue = element;\r\n                this.getTypedConstantLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n            case GetTypedConstantDataObject.TYPE_ELEMENT_NAME:\r\n                this._type = element;\r\n                this.getTypedConstantLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * <p>Value of the ConstantValue Element. A String reprsentation of the Value of this constant.</p>\r\n\t *\r\n\t */\r\n    public get constantValue(): string\r\n    {\r\n        return this._constantValue.value;\r\n    }\r\n\r\n\t/**\r\n\t * editable version?\r\n\t */\r\n\t// public set constantValue(value: string)\r\n\t// {\r\n\t// \tthis._constantValue.value = value;\r\n\t// }\r\n\r\n\t/**\r\n\t * <p>Value of the Type Element. The true data of this constant.</p>\r\n\t *\r\n\t */\r\n    public get type(): string\r\n    {\r\n        return this._type.value;\r\n    }\r\n\r\n\t/**\r\n\t * editable version\r\n\t */\r\n\t// public set type(value:string)\r\n\t// {\r\n\t// \tthis._type.value = value;\r\n\t// }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/get-typed-constant.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the GetVariable function.</p>\r\n *\r\n */\r\nexport abstract class GetVariableDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * String used to identify Element associated with a GetVariable data object (via ElementDataObject.name)\r\n     * @type {string}\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'GetVariable';\r\n\r\n    /**\r\n     * <p>Name on the Element Tag that contains the name of the variable this function is retreiving.</p>\r\n     */\r\n    private static readonly VARIBLE_ID_ELEMENT_NAME: string = 'VariableID';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private getVariableLogger: Logger;\r\n\r\n    /**\r\n     * <p>ID of the variable whose value we will get.</p>\r\n     */\r\n    protected _variableIDElement: ElementDataObject;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this GetVariable object that include the parameters that it takes in and ultimately define what the\r\n     * GetVariable will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.getVariableLogger = Log.getInstance().getLogger('GetVariableDataObject');\r\n        this.getVariableLogger.debug('constructorPreprocessing(): GetVariable');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs GetVariable object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case GetVariableDataObject.VARIBLE_ID_ELEMENT_NAME:\r\n                this._variableIDElement = element;\r\n                this.getVariableLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *\r\n     */\r\n    public get variableID(): string {\r\n        return this._variableIDElement.value;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/get-variable.data-object.ts","import { ElementBasedDataObject } from '../../element-based.data-object';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { Log, Logger } from '../../../../log';\r\nimport { ValueDataObject } from '../value.data-object';\r\n\r\n\r\n/**\r\n * <p>Helper class for Animate.  Holds information on the object property to be animated (tweened), and details on how\r\n * the object's property is to be changed by the tween.  Stores, parses, and provides access to data provided in source\r\n * ElementDataObjects.</p>\r\n */\r\nexport abstract class MotionPathDataObject extends ElementBasedDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * <p>Tag name of root element for MotionPath</p>\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'MotionPath';\r\n\r\n    /**\r\n     * <p>Tag name for element indicating object property that MotionPath specifies changes for</p>\r\n     */\r\n    protected static readonly PROPERTY_ELEMENT_NAME: string = 'Property';\r\n\r\n    /**\r\n     * <p>Element tag name for the valueFrom MotionPath property</p>\r\n     */\r\n    protected static readonly VALUE_FROM_ELEMENT_NAME: string = 'ValueFrom';\r\n\r\n    /**\r\n     * <p>Element tag name for the valueTo MotionPath Property</p>\r\n     */\r\n    protected static readonly VALUE_TO_ELEMENT_NAME: string = 'ValueTo';\r\n\r\n    /**\r\n     * <p>Element Tag name for the valueBy MotionPath property</p>\r\n     */\r\n    protected static readonly VALUE_BY_ELEMENT_NAME: string = 'ValueBy';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private motionPathLogger: Logger;\r\n\r\n    /**\r\n     * <p>Element that indicates the object property that MotionPath specifies changes for.</p>\r\n     */\r\n    protected _propertyElement: ElementDataObject;\r\n\r\n    /**\r\n     * <p>Private Element that represents the value of the valueFrom property of a motionPath.</p>\r\n     */\r\n    protected _valueFromElement: ElementDataObject;\r\n\r\n    /**\r\n     * Reference to the ValueDataObject for the _valueFromElement property\r\n     */\r\n    protected _valueFromValueDataObject: ValueDataObject;\r\n\r\n    /**\r\n     * <p>Private Element that represents the value of the valueTo property of a motionPath.</p>\r\n     */\r\n    protected _valueToElement: ElementDataObject;\r\n\r\n    /**\r\n     * Reference to the ValueDataObject for the _valueToElement property\r\n     */\r\n    protected _valueToValueDataObject: ValueDataObject;\r\n\r\n    /**\r\n     * <p>Private Element that represents the value of the valueBy property of a motionPath.</p>\r\n     */\r\n    protected _valueByElement: ElementDataObject;\r\n\r\n    /**\r\n     * Reference to the ValueDataObject for the _valueByElement property\r\n     */\r\n    protected _valueByValueDataObject: ValueDataObject;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this MotionPath object that include the parameters that it takes in and ultimately define what the\r\n     * MotionPath will do.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be undefined / undefined)\r\n     */\r\n    constructor(sourceElement:  ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing():  void {\r\n        // Setup logger here so that it's available during construction\r\n        this.motionPathLogger = Log.getInstance().getLogger('MotionPathDataObject');\r\n        this.motionPathLogger.debug('constructorPreprocessing(): MotionPath');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs MotionPath object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking its name property)\r\n     */\r\n    protected parseElement(element:  ElementDataObject): void {\r\n        this.motionPathLogger.debug('parseElement():  name = ' + element.name);\r\n\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case MotionPathDataObject.PROPERTY_ELEMENT_NAME:\r\n                this._propertyElement = element;\r\n                break;\r\n            case MotionPathDataObject.VALUE_FROM_ELEMENT_NAME:\r\n                this._valueFromElement = element;\r\n                // From AS code: check length presumably b/c valueFromElement may exist without anything in it?\r\n                if (this._valueFromElement.children.length) {\r\n                    this._valueFromValueDataObject = this.createValue(this._valueFromElement.children[0]);\r\n                }\r\n                break;\r\n            case MotionPathDataObject.VALUE_TO_ELEMENT_NAME:\r\n                this._valueToElement = element;\r\n                if (this._valueToElement.children.length) {\r\n                    this._valueToValueDataObject = this.createValue(this._valueToElement.children[0]);\r\n                }\r\n                break;\r\n            case MotionPathDataObject.VALUE_BY_ELEMENT_NAME:\r\n                this._valueByElement = element;\r\n                if (this._valueByElement.children.length) {\r\n                    this._valueByValueDataObject = this.createValue(this._valueByElement.children[0]);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * <p>The value of the property property of a motionPath.</p>\r\n     */\r\n    public get property(): string\r\n    {\r\n        return this._propertyElement.value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Should be overridden in playable and editable versions of this class to return the appropriate version.\r\n     *\r\n     * @param element -> root level Element to construct ValueDataObject from.\r\n     * @returns {ValueDataObject}\r\n     */\r\n    protected createValue(element: ElementDataObject): ValueDataObject {\r\n        return undefined;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/motion-path.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { ValueDataObject } from '../value.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the SetProperty function.</p>\r\n *\r\n */\r\nexport abstract class SetPropertyDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n\r\n    /**\r\n     * The element name of the root element that is used to build this DataObject\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'SetValue';\r\n\r\n    /**\r\n\t * <p>Name on the Element Tag that contains the Element ID of the Component that has the property we are setting.</p>\r\n\t */\r\n    private static readonly COMPONENT_ELEMENT_ID_ELEMENT_NAME: string = 'ComponentElementID';\r\n\r\n\t/**\r\n\t * <p>Name on the Element Tag that contains the property's name</p>\r\n\t */\r\n    private static readonly PROPERTY_ELEMENT_NAME: string = 'Property';\r\n\r\n  \t/**\r\n\t * Name of the element that contains the values used by this function\r\n\t */\r\n    protected static readonly VALUE_OBJECT_ELEMENT_NAME: string = 'ValueObject';\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private setPropertyLogger: Logger;\r\n\r\n\t/**\r\n\t * <p>The Element that contains the data for componentElementID</p>\r\n\t *\r\n\t */\r\n    private _componentElementIDElement: ElementDataObject;\r\n\r\n\t/**\r\n\t * <p>The Element that contains the data for propertyName</p>\r\n\t *\r\n\t */\r\n    private _propertyNameElement: ElementDataObject;\r\n\r\n\t/**\r\n\t * <p>The Element that contains the data for propertyValue</p>\r\n\t *\r\n\t */\r\n    protected _value: ValueDataObject;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this SetProperty object that include the parameters that it takes in and ultimately define what the\r\n     * SetProperty will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.setPropertyLogger = Log.getInstance().getLogger('SetPropertyDataObject');\r\n        this.setPropertyLogger.debug('constructorPreprocessing(): SetProperty');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs SetProperty object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case SetPropertyDataObject.COMPONENT_ELEMENT_ID_ELEMENT_NAME:\r\n                this._componentElementIDElement = element;\r\n                this.setPropertyLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n            case SetPropertyDataObject.PROPERTY_ELEMENT_NAME:\r\n                this._propertyNameElement = element;\r\n                this.setPropertyLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n            case SetPropertyDataObject.VALUE_OBJECT_ELEMENT_NAME:\r\n                this.createValueDataObject(element);\r\n                this.setPropertyLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * <p>Value of componentElementID parameter passed to function.\r\n\t * ElementID of component to change property value of.</p>\r\n\t *\r\n\t */\r\n    public get componentElementID(): string\r\n    {\r\n        return this._componentElementIDElement.value;\r\n    }\r\n\r\n\t// /**\r\n\t//  * editable version?\r\n\t//  */\r\n\t// public set componentElementID(value:string)\r\n\t// {\r\n\t// \tthis._componentElementIDElement.value = value;\r\n\t// }\r\n\r\n\t////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * <p>Value of propertyName parameter passed to function.\r\n\t * Name of component property to change.</p>\r\n\t *\r\n\t */\r\n    public get propertyName(): string\r\n    {\r\n        return this._propertyNameElement.value;\r\n    }\r\n\r\n\t/**\r\n\t * editable version?\r\n\t */\r\n\t// public set propertyName(value:string)\r\n\t// {\r\n\t// \tthis._propertyNameElement.value = value;\r\n\t// }\r\n\r\n\t////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * <p>A refrence to the ValueDataObject contained in the funtion</p>\r\n\t *\r\n\t */\r\n    public get valueObject(): ValueDataObject\r\n    {\r\n        return this._value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Creates and returns a Value object based on Element passed in\r\n     * overridden on playable and editable versions of this class to return the appropriate version.\r\n     * @param sourceElement\r\n     */\r\n    protected createValueDataObject(sourceElement: ElementDataObject): void {\r\n        return undefined;\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/set-property.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { ValueDataObject } from '../value.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the SetScorm function.</p>\r\n *\r\n */\r\n\r\nexport abstract class SetScormDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n\r\n\r\n\t/**\r\n\t * The element name of the root element that is used to build this DataObject\r\n\t */\r\n    public static NAME_ELEMENT_NAME: string = 'SetSCORM';\r\n\r\n\t/**\r\n\t * Element Tag Name For the SCORMDataObject Property\r\n\t */\r\n    private static SCORM_DATA_OBJECT_ELEMENT_NAME: string = 'SCORMDataObject';\r\n\r\n\t/**\r\n\t * Element Tag Name For the ValueObject Animation Function Property\r\n\t */\r\n    protected static VALUE_OBJECT_ELEMENT_NAME: string = 'ValueObject';\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private setScormLogger: Logger;\r\n\r\n\t/**\r\n\t * Element that contains a String of the SCORM Data Object that will be set\r\n\t */\r\n    private _ScormDataObject: ElementDataObject;\r\n\r\n\t/**\r\n\t * <p>Instence of the ValueDataObject used by this function.</p>\r\n\t *\r\n\t */\r\n    protected _value: ValueDataObject;\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this SetScorm object that include the parameters that it takes in and ultimately define what the\r\n     * SetScorm will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.setScormLogger = Log.getInstance().getLogger('SetScormDataObject');\r\n        this.setScormLogger.debug('constructorPreprocessing(): SetScorm');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs SetScorm object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case SetScormDataObject.SCORM_DATA_OBJECT_ELEMENT_NAME:\r\n                this._ScormDataObject = element;\r\n                this.setScormLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n            case SetScormDataObject.VALUE_OBJECT_ELEMENT_NAME:\r\n                this.createValueDataObject(element);\r\n                this.setScormLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * SCORMDataObject that will be set\r\n\t *\r\n\t */\r\n    public get ScormDataObject(): string\r\n    {\r\n        return this._ScormDataObject.value;\r\n    }\r\n\r\n\t/**\r\n\t */\r\n\t// public set SCORMDataObject(value:string)\r\n\t// {\r\n\t// \tthis._SCORMDataObject.value = value;\r\n\t// }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Creates and returns a Value object based on Element passed in\r\n     * overridden on playable and editable versions of this class to return the appropriate version.\r\n     * @param sourceElement\r\n     */\r\n    protected createValueDataObject(sourceElement: ElementDataObject): void {\r\n        return undefined;\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/set-scorm.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { ValueDataObject } from '../value.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the SetVariable function.</p>\r\n *\r\n */\r\nexport abstract class SetVariableDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify Element associated with a SetVariable data object (via ElementDataObject.name)\r\n     * @type {string}\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'SetVariable';\r\n\r\n    /**\r\n     * <p>Name on the Element Tag that contains the name of the variable this function is setting.</p>\r\n     */\r\n    private static readonly VARIABLE_ID_ELEMENT_NAME: string = 'VariableID';\r\n\r\n    /**\r\n     * <p>Element Tag Name For the ValueObject Animation Function Property</p>\r\n     */\r\n    protected static VALUE_OBJECT_ELEMENT_NAME: string = 'ValueObject';\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private setVariableLogger: Logger;\r\n\r\n    /**\r\n     * <p>ID of the variable whose value we will set.</p>\r\n     */\r\n    protected _variableIDElement: ElementDataObject;\r\n\r\n    /**\r\n     * <p>Instance of the ValueDataObject used by this function.</p>\r\n     *\r\n     */\r\n    protected _value: ValueDataObject;\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this SetVariable object that include the parameters that it takes in and ultimately define what the\r\n     * SetVariable will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.setVariableLogger = Log.getInstance().getLogger('SetVariableDataObject');\r\n        this.setVariableLogger.debug('constructorPreprocessing(): SetVariable');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs SetVariable object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case SetVariableDataObject.VARIABLE_ID_ELEMENT_NAME:\r\n                this._variableIDElement = element;\r\n                this.setVariableLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n            case SetVariableDataObject.VALUE_OBJECT_ELEMENT_NAME:\r\n                this.createValueDataObject(element);\r\n                this.setVariableLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *\r\n     */\r\n    public get variableID(): string {\r\n        return this._variableIDElement.value;\r\n    }\r\n\r\n   /**\r\n     * <p>A reference to the ValueDataObject contained in the function.</p>\r\n     *\r\n     */\r\n    public get valueObject(): ValueDataObject\r\n    {\r\n        return this._value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Creates and returns a Value object based on Element passed in\r\n     * overridden on playable and editable versions of this class to return the appropriate version.\r\n     * @param sourceElement\r\n     */\r\n    protected createValueDataObject(sourceElement: ElementDataObject): void {\r\n        return undefined;\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/set-variable.data-object.ts","import { FunctionDataObject } from './function.data-object';\r\nimport { EventSystemDataObjectInterface } from '../event-system.data-object.interface';\r\nimport { ElementDataObject } from '../../element.data-object';\r\nimport { Log, Logger } from '../../../../log';\r\n\r\n\r\n/**\r\n * <p>Base/Editable Function DataObject class for the Wait function.</p>\r\n *\r\n */\r\nexport abstract class WaitDataObject extends FunctionDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n\r\n    /**\r\n     * The element name of the root element that is used to build this DataObject\r\n     */\r\n    public static readonly NAME_ELEMENT_NAME: string = 'Wait';\r\n\r\n\t/**\r\n\t * <p>Name property of the ElementDataObject for componentElementID element.</p>\r\n\t */\r\n    private static COMPONENTELEMENTID_ELEMENT_NAME: string = 'ComponentElementID';\r\n\r\n\t/**\r\n\t * <p>Name property of the ElementDataObject for Message element.</p>\r\n\t */\r\n    private static EVENTSTRING_ELEMENT_NAME: string = 'EventString';\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private waitLogger: Logger;\r\n\r\n\t/**\r\n\t * <p>The Element that contains the data for componentElementID</p>\r\n\t *\r\n\t */\r\n    private _componentElementIDElement: ElementDataObject;\r\n\r\n\t/**\r\n\t * <p>The Element that contains the string data for event string being listened to by this function</p>\r\n\t *\r\n\t */\r\n    private _eventStringElement: ElementDataObject;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Wait object that include the parameters that it takes in and ultimately define what the\r\n     * Wait will do.\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.waitLogger = Log.getInstance().getLogger('WaitDataObject');\r\n        this.waitLogger.debug('constructorPreprocessing(): Wait');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Wait object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        super.parseElement(element);\r\n        switch (element.name) {\r\n            case WaitDataObject.COMPONENTELEMENTID_ELEMENT_NAME:\r\n                this._componentElementIDElement = element;\r\n                this.waitLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n            case WaitDataObject.EVENTSTRING_ELEMENT_NAME:\r\n                this._eventStringElement = element;\r\n                this.waitLogger.debug('parseElement(): name = ' + element.name);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t * <p>Value of componentElementID parameter passed to function.\r\n\t * ElementID of component to change property value of.</p>\r\n\t *\r\n\t */\r\n    public get componentElementID(): string\r\n    {\r\n        return this._componentElementIDElement.value;\r\n    }\r\n\r\n\t// /**\r\n\t//  * editable version\r\n\t//  */\r\n\t// public set componentElementID(value:string)\r\n\t// {\r\n\t// \tthis._componentElementIDElement.value = value;\r\n\t// }\r\n\r\n\t/**\r\n\t * <p>Value of eventString parameter passed to function.\r\n\t * Event on the component this function will listen for.</p>\r\n\t *\r\n\t */\r\n    public get eventString(): string\r\n    {\r\n        return this._eventStringElement.value;\r\n    }\r\n\r\n\t// /**\r\n\t//  * editable verion\r\n\t//  */\r\n\t// public set eventString(value:string)\r\n\t// {\r\n\t// \tthis._eventStringElement.value = value;\r\n\t// }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/functions/wait.data-object.ts","import { ElementBasedDataObject } from '../element-based.data-object';\r\nimport { EventSystemDataObjectInterface } from './event-system.data-object.interface';\r\nimport { ElementDataObject } from '../element.data-object';\r\nimport { Log, Logger } from '../../../log';\r\n\r\n\r\n/**\r\n * Event System data object class that defines a Value, specifically what the value is or where it should come from.\r\n * Used in ConditionLeafDataObject and FunctionDataObject classes when values need to be defined or retrieved from other\r\n * parts of the system.\r\n */\r\nexport abstract class ValueDataObject extends ElementBasedDataObject implements EventSystemDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * String used to identify Element associated with a Value object (via ElementDataObject.name)\r\n     * @type {string}\r\n     */\r\n    public static readonly VALUE_ELEMENT_NAME: string = 'ValueObject';\r\n\r\n    /**\r\n     * String used to identify Element associated with the order of the Value relative to potential siblings\r\n     * @type {string}\r\n     */\r\n    protected static readonly ORDER_ELEMENT_NAME: string = 'Order';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Parent Event object (generally a ConditionLeafDataObject or a FunctionDataObject)\r\n     */\r\n    protected _parent: EventSystemDataObjectInterface;\r\n\r\n    /**\r\n     * Element containing the order for the Value object.  In scenarios where the object is being compared with other\r\n     * Value objects (i.e. ConditionLeafDataObject), it determines the order in which the items will be applied to the\r\n     * comparison operation.\r\n     */\r\n    protected orderElement: ElementDataObject;\r\n\r\n    /**\r\n     * Logger instance for logging\r\n     */\r\n    private valueLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the\r\n     * constructFromElement method to complete construction of this object.  The data in sourceElement define the\r\n     * properties of this Value object that includes either its value or information on where / how to get its value.\r\n     *\r\n     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with\r\n     *          most of the rest of the system without adding special processing, and should generally not be done.\r\n     *          Designers that need to create new versions of this object should use a derived, designer specific,\r\n     *          editable version of this class that provides the additional functionality of setting up a new empty\r\n     *          object by overriding the base constructNew method.\r\n     *\r\n     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though\r\n     *                          it won't break, should not be null / undefined)\r\n     */\r\n    constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.  Applies class specific preprocessing.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n        // Setup logger here so that it's available during construction\r\n        this.valueLogger = Log.getInstance().getLogger('ValueDataObject');\r\n        this.valueLogger.debug('constructorPreprocessing(): Value Object');\r\n\r\n        super.constructorPreprocessing();\r\n\r\n        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't\r\n        //          initialized in time for when these methods are called via the constructor of the super class.\r\n    }\r\n\r\n    /**\r\n     * Overrides base version.\r\n     * Performs Value object specific condition testing on the children of _localRoot to identify and setup\r\n     * class specific properties\r\n     *\r\n     * NOTE:\r\n     *   In AS version of this class, this additional check was added in the element for loop:\r\n     *\r\n     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)\r\n     *\r\n     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check\r\n     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player\r\n     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to\r\n     *   address this for the PageDesigner though, we still may need to implements something additional for it.\r\n     *\r\n     * @param  element -> Element to be tested (typically by checking it's name property)\r\n     */\r\n    protected parseElement(element: ElementDataObject): void {\r\n        switch (element.name) {\r\n            case ValueDataObject.ORDER_ELEMENT_NAME:\r\n                // NOTE: In AS code test for this element did not use the DatabaseElement or isActive check mentioned\r\n                // above.  Not sure if that is significant or not (keep an eye on it).\r\n                this.orderElement = element;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public set parent(value: EventSystemDataObjectInterface) {\r\n        this._parent = value;\r\n    }\r\n\r\n    /**\r\n\t * <p>Order for the ComparisonItem.  Used to determine the order in which the items will be used in the comparison operation.</p>\r\n\t *\r\n\t * @default null\r\n\t */\r\n\tpublic get order(): number\r\n\t{\r\n\t\tif (this.orderElement) {\r\n            return +this.orderElement.value;\r\n        } else {\r\n            return undefined;\r\n        }\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * editable version?\r\n\t * \r\n\t */\r\n\t// public set order(value: number)\r\n\t// {\r\n\t// \tthis.orderElement.value = value;\r\n\t// }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/event-system/value.data-object.ts","import { ElementDataObject } from './element.data-object';\r\nimport { ElementBasedDataObject } from './element-based.data-object';\r\nimport { EventContainerDataObjectInterface } from './event-system/event-container.data-object.interface';\r\nimport { EventContainerPlayableDataObjectInterface }\r\n    from '../../../../player/model/data-objects/event-system/event-container.playable.data-object.inerface';\r\nimport { EventDataObjectCollection } from './event-system/event.data-object.collection';\r\nimport { EventPlayableDataObjectCollection }\r\n    from '../../../../player/model/data-objects/event-system/event.playable.data-object.collection';\r\nimport { InjectorService } from '../services/injector.service';\r\nimport { VariableService } from '../services/variable.service';\r\nimport { EventPlayableDataObject } from '../../../../player/model/data-objects/event-system/event.playable.data-object';\r\nimport { FunctionDataObjectCollection } from './event-system/function.data-object.collection';\r\nimport { EventDataObject } from './event-system/event.data-object';\r\nimport { PageService } from '../services/page.service';\r\nimport { ComponentDataObject } from './components/component.data-object';\r\n\r\n\r\n/**\r\n * DataObject associated with the PageAttributes \"component\"\r\n *\r\n * TODO: Will need to create playable version of this class to properly implement the interface (can't have playable\r\n *          stuff in system-shared Data Object class\r\n */\r\nexport class PagePropertiesDataObject  extends ComponentDataObject\r\n    implements EventContainerPlayableDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  Element that determines if the forward button in the user interface is Visible for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _forwardVisibleElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the forward button in the user interface is Enabled for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _forwardEnableElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the back button in the user interface is Visible for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _backVisibleElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the back button in the user interface is Enabled for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _backEnableElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the page counter in the user interface is Visible for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _pageCounterVisibleElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the page counter in the user interface is Enabled for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _pageCounterEnableElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the audio control in the user interface is Visible for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _audioControlVisibleElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the audio control in the user interface is Enabled for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _audioControlEnableElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the rewind / reload button in the user interface is Visible for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _rewindVisibleElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the rewind / reload button in the user interface is Enabled for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _rewindEnableElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the play / pause button in the user interface is Visible for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _playPauseVisibleElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the play / pause button in the user interface is Enabled for this page\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _playPauseEnableElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the play / pause button in the user interface is Visible for this page\r\n     *  Note: We don't have a print button\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _printVisibleElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element that determines if the print button in the user interface is Enabled for this page\r\n     *  Note: We don't have a print button\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _printEnableElement: ElementDataObject;\r\n\r\n    /**\r\n     *  Element for the PromptText\r\n     *\r\n     *  @default undefined\r\n     */\r\n    private _promptTextElement: ElementDataObject;\r\n\r\n    /**\r\n     * Root level element for data structure containing page level Event data for Variables\r\n     */\r\n    protected _variableEventCollectionElement: ElementDataObject;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *\r\n     * @param sourceElement\r\n     */\r\n    public constructor(sourceElement: ElementDataObject) {\r\n        super(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * overrides base version to add specific properties\r\n     */\r\n    protected initializePropertyNames(): void {\r\n        super.initializePropertyNames();\r\n        this.initPropertyMapArray = this.initPropertyMapArray.concat([\r\n            ['_forwardVisibleElement', 'isNextButtonVisible', 'ForwardVisible', 'element'],\r\n            ['_forwardEnableElement', 'isNextButtonEnabled', 'ForwardEnable', 'element'],\r\n            ['_backVisibleElement', 'isPreviousButtonVisible', 'BackVisible', 'element'],\r\n            ['_backEnableElement', 'isPreviousButtonEnabled', 'BackEnable', 'element'],\r\n            ['_pageCounterVisibleElement', 'isPageNumberVisible', 'PageCounterVisible', 'element'],\r\n            ['_pageCounterEnableElement', 'isPageNumberEnabled', 'PageCounterEnable', 'element'],\r\n            ['_audioControlVisibleElement', 'isAudioControlVisible', 'AudioControlVisible', 'element'],\r\n            ['_audioControlEnableElement', 'isAudioControlEnable', 'AudioControlEnable', 'element'],\r\n            ['_rewindVisibleElement', 'isReloadVisible', 'RewindVisible', 'element'],\r\n            ['_rewindEnableElement', 'isReloadEnabled', 'RewindEnable', 'element'],\r\n            ['_playPauseVisibleElement', 'isPlayPauseVisible', 'PlayPauseVisible', 'element'],\r\n            ['_playPauseEnableElement', 'isPlayPauseEnable', 'PlayPauseEnable', 'element'],\r\n            ['_printVisibleElement', 'isPrintVisible', 'PrintVisible', 'element'],\r\n            ['_printEnableElement', 'isPrintEnabled', 'PrintEnable', 'element'],\r\n            ['_promptTextElement', 'promptText', 'PromptText', 'element']\r\n        ]);\r\n    }\r\n\r\n\r\n    /**\r\n     * Parse all page specific properties\r\n     * Overrides parent method\r\n     *\r\n     * @param   child: ElementDataObject\r\n     */\r\n    protected parseElement(child: ElementDataObject): void {\r\n        super.parseElement(child);\r\n        switch (child.name) {\r\n            case 'Variables':\r\n                this._variableEventCollectionElement = child;\r\n                // Pass data to Variable Service to create Event objects and tie to Variable Data Objects\r\n                InjectorService.injector.get(VariableService).\r\n                    mapEventsToVariables(this._variableEventCollectionElement);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Next button is Visible\r\n     *\r\n     * @returns {boolean} true if the Next button is shown for this page.\r\n     */\r\n    public get isNextButtonVisible(): boolean {\r\n        return ( this._forwardVisibleElement.value === 'true' );\r\n    }\r\n    public set isNextButtonVisible(value: boolean) {\r\n        if (value) {\r\n            this._forwardVisibleElement.value = 'true';\r\n        }else {\r\n            this._forwardVisibleElement.value = 'false';\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Next button is Enabled\r\n     *\r\n     * @returns {boolean} true if the next button is enabled for this page.\r\n     */\r\n    public get isNextButtonEnabled(): boolean {\r\n        return ( this._forwardEnableElement.value === 'true');\r\n    }\r\n    public set isNextButtonEnabled(value: boolean) {\r\n        if (value) {\r\n            this._forwardEnableElement.value = 'true';\r\n        }else {\r\n            this._forwardEnableElement.value = 'false';\r\n        }\r\n    }\r\n\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Previous button is Visible\r\n     *\r\n     * @returns {boolean} true if the Previous button is shown for this page.\r\n     */\r\n    public get isPreviousButtonVisible(): boolean {\r\n        return ( this._backVisibleElement.value === 'true' );\r\n    }\r\n    public set isPreviousButtonVisible(value: boolean) {\r\n        if (value) {\r\n            this._backVisibleElement.value = 'true';\r\n        }else {\r\n            this._backVisibleElement.value = 'false';\r\n        }\r\n    }\r\n\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Previous button is Enabled\r\n     *\r\n     * @returns {boolean} true if the Previous button is enabled for this page.\r\n     */\r\n    public get isPreviousButtonEnabled(): boolean {\r\n        return ( this._backEnableElement.value === 'true' );\r\n    }\r\n    public set isPreviousButtonEnabled(value: boolean) {\r\n        if (value) {\r\n            this._backEnableElement.value = 'true';\r\n        }else {\r\n            this._backEnableElement.value = 'false';\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Page Number is Visible\r\n     * NOTE: If page number is ether Disabled or invisible it will do the same thing.\r\n     *\r\n     * @returns {boolean} true if the Page Number is shown for this page.\r\n     */\r\n    public get isPageNumberVisible(): boolean {\r\n        return (this._pageCounterVisibleElement.value === 'true');\r\n    }\r\n    public set isPageNumberVisible(value: boolean) {\r\n        if (value) {\r\n            this._pageCounterVisibleElement.value = 'true';\r\n        }else {\r\n            this._pageCounterVisibleElement.value = 'false';\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Page Number is Visible. No This not a typo.\r\n     * NOTE: If page number is ether Disabled or invisible it will do the same thing.\r\n     *\r\n     * @returns {boolean} true if the Page Number is shown for this page.\r\n     */\r\n    public get isPageNumberEnabled(): boolean {\r\n        return (this._pageCounterEnableElement.value === 'true');\r\n    }\r\n    public set isPageNumberEnabled(value: boolean) {\r\n        if (value) {\r\n            this._pageCounterEnableElement.value = 'true';\r\n        }else {\r\n            this._pageCounterEnableElement.value = 'false';\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Volume Control is Visible.\r\n     *\r\n     * @returns {boolean} true if the Volume Control is shown for this page.\r\n     */\r\n    get isVolumeControlVisible(): boolean {\r\n        return (this._audioControlVisibleElement.value === 'true');\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Volume Control is Enabled.\r\n     *\r\n     * @returns {boolean} true if the Volume Control is enabled for this page.\r\n     */\r\n    get isVolumeControlEnabled(): boolean {\r\n        return (this._audioControlEnableElement.value === 'true');\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Page Reload Button is Visible.\r\n     *\r\n     * @returns {boolean} true if the Page Reload Button is shown for this page.\r\n     */\r\n    get isReloadVisible(): boolean {\r\n        return (this._rewindVisibleElement.value === 'true');\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Page Reload Button is Enabled.\r\n     *\r\n     * @returns {boolean} true if the Page Reload Button is enabled for this page.\r\n     */\r\n    get isReloadEnabled(): boolean {\r\n        return (this._rewindEnableElement.value === 'true');\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Play / Pause Button is Visible.\r\n     *\r\n     * @returns {boolean} true if the Play / Pause Button is shown for this page.\r\n     */\r\n    get isPlayPauseVisible(): boolean {\r\n        return (this._playPauseVisibleElement.value === 'true');\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Play / Pause Button is Enabled.\r\n     *\r\n     * @returns {boolean} true if the Play / Pause Button is enabled for this page.\r\n     */\r\n    get isPlayPauseEnabled(): boolean {\r\n        return (this._playPauseEnableElement.value === 'true');\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Print Button is visible Control is Visible.\r\n     *\r\n     * @returns {boolean} true if the Print Button is shown for this page.\r\n     */\r\n    public get isPrintVisible(): boolean {\r\n        return (this._printVisibleElement.value === 'true');\r\n    }\r\n    public set isPrintVisible(value: boolean) {\r\n        if (value) {\r\n            this._printVisibleElement.value = 'true';\r\n        }else {\r\n            this._printVisibleElement.value = 'false';\r\n        }\r\n    }\r\n\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Determines weather or not the Print Button is visible Control is Enabled.\r\n     *\r\n     * @returns {boolean} true if the Print Button is enabled for this page.\r\n     */\r\n    public get isPrintEnabled(): boolean {\r\n        return (this._printEnableElement.value === 'true');\r\n    }\r\n    public set isPrintEnabled(value: boolean) {\r\n        if (value) {\r\n            this._printEnableElement.value = 'true';\r\n        }else {\r\n            this._printEnableElement.value = 'false';\r\n        }\r\n    }\r\n\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The prompt text for this page.\r\n     * Note: Our current design Does not support / show Prompt Text\r\n     *\r\n     * @returns {string}\r\n     */\r\n    get promptText(): String {\r\n        return this._promptTextElement.value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Creates and returns an EventDataObjectCollection\r\n     * Should be overridden in editable versions of this class to return the editable version.\r\n     *\r\n     * TODO: Should probably implement class factory to deal with this\r\n     *\r\n     * @param element -> root level Element to construct EventDataObjectCollection from.\r\n     * @returns {EventDataObjectCollection}\r\n     */\r\n    protected createEventCollection(element: ElementDataObject): EventDataObjectCollection {\r\n        console.log(element);\r\n        // TODO: Should return playable version once created - there will be no playable version ComponentDataObject\r\n        // TODO: Can't reference playable (Player class) from shared ... need to find approach to fix this\r\n        // return new EventDataObjectCollection(element);\r\n        return new EventPlayableDataObjectCollection(element);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Implement EventContainerPlayableDataObjectInterface\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    public childEventComplete(event: EventPlayableDataObject): void {\r\n        // If the Event is onExit, call PageService method to indicate onExit processing complete\r\n        console.log('PagePropertiesDataObject.childEventComplete(): ' + event.trigger);\r\n        if (event.trigger === EventDataObject.ON_EXIT) {\r\n            InjectorService.injector.get(PageService).onExitEventComplete();\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/page-properties.data-object.ts","import { ElementDataObject } \t\t\tfrom './element.data-object';\r\nimport { ComponentDataObject } \t\t\tfrom './components/component.data-object';\r\nimport { ComponentContainerDataObject }\tfrom './components/component-container.data-object';\r\nimport { ContentWindow }\t\t\t\tfrom '../content-window';\r\nimport { PagePropertiesDataObject }\t\t\t\tfrom './page-properties.data-object';\r\n\r\n/**\r\n * Desc: Class to hold Page object\r\n *\r\n * TODO: Fix this comment!!!\r\n *\r\n * TODO: Consider abstracting the page Data Retrieval one more level this class represents the page data as well as the\r\n * content (template Holder) it is currently both created from XML and Element Based. This is not clear!\r\n */\r\nexport class PageDataObject extends ComponentContainerDataObject{\r\n\r\n\t/**\r\n     *\r\n     */\r\n    public type: string = 'Page';\r\n\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tprivate _pageXML: Element;\r\n\r\n\t/**\r\n\t *\t//I don't think i use this anymore\r\n\t */\r\n\tprivate _pageData: ElementDataObject;\r\n\r\n    /**\r\n     * ??? not sure what this is for So lets just store it\r\n     */\r\n    private _contentWindow: ContentWindow;\r\n\r\n    /**\r\n     * PageID of this page object\r\n     */\r\n    private _pageID: string ;\r\n\r\n    /**\r\n     * PageName of this page object\r\n     */\r\n    private _pageName: string ;\r\n\r\n    /**\r\n     * Page Description of this page object\r\n     */\r\n    private _pageDesc: string ;\r\n\r\n\r\n\t/**\r\n\t * is a content window treated different then components?\r\n\t */\r\n\t//protected _components: Array<ComponentDataObject> = new Array<ComponentDataObject>();\r\n\r\n\r\n\r\n    /**\r\n     * probably just gonna be passed on so maybe i don't need to parse this here\r\n     */\r\n    private _children: Array<ElementDataObject>;\r\n\r\n\t/**\r\n\t * A refrence to the Page Properties data Object witch contains the Information held in the PageAttributes Tag.\r\n\t */\r\n\tpublic pageProperties: PagePropertiesDataObject;\r\n\r\n\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t////////// Constructor / Initialization\r\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param sourceElement - ElementDataObject containing content (from Element table - Component/Template/Page)\r\n     * @param pageXML - Page metadata (from Page table)\r\n     */\r\n    constructor(sourceElement: ElementDataObject, pageXML: Element ) {\r\n\t\tsuper(sourceElement);\r\n\r\n\t\t// this.parseElementChildren();\r\n\r\n\t\tthis.parsePageAttributesFromPageTag(pageXML);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    public get pageXML(): Element {\r\n\t\treturn this._pageXML;\r\n\t}\r\n\r\n\tpublic set pageXML(value: Element) {\r\n\t\tthis._pageXML = value;\r\n\t}\r\n\r\n    public get pageID(): string  {\r\n\t\treturn this._pageID;\r\n\t}\r\n\r\n\tpublic set pageID(value: string ) {\r\n\t\tthis._pageID = value;\r\n\t}\r\n\r\n\tpublic get pageName(): string  {\r\n\t\treturn this._pageName;\r\n\t}\r\n\r\n\tpublic set pageName(value: string ) {\r\n\t\tthis._pageName = value;\r\n\t}\r\n\r\n\tpublic get pageDesc(): string  {\r\n\t\treturn this._pageDesc;\r\n\t}\r\n\r\n\tpublic set pageDesc(value: string ) {\r\n\t\tthis._pageDesc = value;\r\n\t}\r\n\r\n\t//////////////////////////////////////////////////////////\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pageData(): ElementDataObject {\r\n\t\treturn this._pageData;\r\n\t}\r\n\r\n\tpublic set pageData(newPageData: ElementDataObject) {\r\n\t\tthis._pageData = newPageData;\r\n\t}\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Parsing methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Parse all page specific properties\r\n     * Overrides parent method\r\n     *\r\n     * @param   child: ElementDataObject\r\n     */\r\n    protected parseElement(child: ElementDataObject): void {\r\n        // if the child is not Name, Visible, or PageAttributes then lets handle this as something page specific\r\n        switch (child.name) {\r\n            case 'PageAttributes':\r\n                this.pageProperties = new PagePropertiesDataObject( child );\r\n                this.components.push(this.pageProperties);\r\n                break;\r\n            case 'ContentWindow':\r\n                // TODO:Do we need to special case this like this? I saving it as a component here anyway?\r\n                this._contentWindow = new ContentWindow(child);\r\n                this.components.push(this._contentWindow);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // NOTE: We cannot call ComponentDataObject parseElement method from here directly (super.super)\r\n        //       Therefore, we created parseProperties method on ComponentDataObject to substitute its parseElement method\r\n        //       which has the same name in all component data objects\r\n        // TODO: If it can be done in a more elegant name - just do it!\r\n        this.parseProperties(child);\r\n        super.parseElement(child); // parse components\r\n    }\r\n\r\n\t/**\r\n\t * Pulls out the attributes from the Page tag that define necessary properties of this page object.\r\n\t *\r\n\t * @param pageXML\tThe Page Tag from the Page data XML\r\n\t */\r\n\tprivate parsePageAttributesFromPageTag(pageXML: Element ): void {\r\n\t\tthis.pageXML = pageXML;\r\n\t\tthis.pageID = pageXML.getAttribute('PageID');\r\n\t\tthis.pageName = pageXML.getAttribute('PageName');\r\n\t\tthis.pageDesc = pageXML.getAttribute('PageDesc');\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/page.data-object.ts","import { Log, Logger } from '../../log';\r\n\r\n/**\r\n * data object represents online/offline querystring parameters\r\n *\r\n */\r\nexport class QueryStringDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    public unitId: string;\r\n    public caller: string;\r\n    public previewerWidth: number;\r\n    public previewerHeight: number;\r\n    public playerCode: string;\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new QueryStringDataObject instance.\r\n     *\r\n     * @param   sourceXml\r\n     */\r\n     public constructor() {\r\n     }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/query-string.data-object.ts","import { XmlParser } from '../transactions/xml-parser';\r\n\r\n/**\r\n * The purpose of this class is to hold data used to describe a reference file.\r\n */\r\nexport class ReferenceDataObject {\r\n\r\n    ///////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables\r\n    ///////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Instance of the logger - if needed\r\n     */\r\n    // private logger: Logger = Log.getInstance().getLogger('Reference Data Object');\r\n\r\n    /**\r\n     * This is a unique identifier for the reference.\r\n     */\r\n    private _referenceID: string;\r\n\r\n    /**\r\n     * This is the name of the reference as it's displayed in the interface.\r\n     */\r\n    private _referenceName: string;\r\n\r\n    /**\r\n     * This is the actual name of the reference file as opposed to referenceName which is the name displayed.\r\n     */\r\n    private _originalFileName: string;\r\n\r\n    /**\r\n     * This is the URL used to resolve the location of the \"original file\". This will be the same as\r\n     * the referenceURL unless processing was done to make these different. For instance, if the user uploads\r\n     * a file that will be converted on the backend. This would be the link to that original files where as\r\n     * referenceURL would be the file that we display.\r\n     */\r\n    private _originalFileURL: string;\r\n\r\n    /**\r\n     * This is used to distinguish the type of reference file that this reference represents.\r\n     * i.e. File, URL, Glossary, AudioScript\r\n     */\r\n    private _referenceType: string;\r\n\r\n    /**\r\n     * This is the URL to the reference file that will be used for display\r\n     */\r\n    private _referenceURL: string;\r\n\r\n    /**\r\n     * This contains the binary data for the reference. It will only have data\r\n     * when the user is attempting to add a reference.\r\n     * Reserved for the future use\r\n     */\r\n    private _binaryData: any[]; // ByteArray;\r\n\r\n    /**\r\n     * This holds the UnitID of the reference\r\n     */\r\n    private _unitID: string;\r\n\r\n    //////////////////////////////////////////////////////////////////\r\n    ////////// Constructor\r\n    //////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor for ReferenceDataObject class.\r\n     */\r\n    constructor () {\r\n    //\r\n    }\r\n\r\n\r\n    //////////////////////////////////////////////////////////////////\r\n    ////////// Getters / Setters\r\n    //////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * This is the URL used to resolve the location of the \"original file\". This will be the same as\r\n     * the referenceURL unless processing was done to make these different. For instance, if the user uploads\r\n     * a file that will be converted on the backend. This would be the link to that original files where as\r\n     * referenceURL would be the file that we display.\r\n     */\r\n    public get originalFileURL(): string {\r\n        return this._originalFileURL;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    public set originalFileURL(value: string) {\r\n        this._originalFileURL = value;\r\n    }\r\n\r\n    /**\r\n     * This holds the UnitID of the reference\r\n     */\r\n    public get unitID(): string {\r\n        return this._unitID;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    public set unitID(value: string) {\r\n        this._unitID = value;\r\n    }\r\n\r\n    /**\r\n     * This contains the binary data for the reference.\r\n     * It will only have data when the user is attempting to add a reference.\r\n     */\r\n    public get binaryData(): any[] {\r\n        return this._binaryData;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    public set binaryData(value: any[]) {\r\n        this._binaryData = value;\r\n    }\r\n\r\n    /**\r\n     * This is the URL to the reference file that will be used for display\r\n     */\r\n    public get referenceURL(): string {\r\n        return this._referenceURL;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    public set referenceURL(value: string) {\r\n        this._referenceURL = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * This is used to distinguish the type of reference file that this reference represents.\r\n     * i.e. File, URL, Glossary, AudioScript\r\n     */\r\n    public get referenceType(): string {\r\n        return this._referenceType;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    public set referenceType(value: string) {\r\n        this._referenceType = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * This is the actual name of the reference file as opposed to referenceName which is the name displayed.\r\n     */\r\n    public get originalFileName(): string {\r\n        return this._originalFileName;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    public set originalFileName(value: string) {\r\n        this._originalFileName = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * This is the name of the reference as it's displayed in the interface.\r\n     */\r\n    public get referenceName(): string {\r\n        return this._referenceName;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    public set referenceName(value: string) {\r\n        this._referenceName = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * This is a unique identifier for the reference.\r\n     */\r\n    public get referenceID(): string {\r\n        return this._referenceID;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    public set referenceID(value: string) {\r\n        this._referenceID = value;\r\n    }\r\n\r\n\r\n    /////////////////////////////////////////////////////////////\r\n    ////////// XML Handling\r\n    /////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * This function converts the reference data that is needed for server requests into XML (Element)\r\n     *\r\n     * @return\tElement\t\tan XML representation of the reference needed data to make a server request\r\n     */\r\n    public get referenceXML(): Element {\r\n        // this creates a node called <Reference>\r\n        const outReferenceXML: Element = XmlParser.xmlStringToElement('<Reference></Reference>');\r\n\r\n        // only add an Reference ID node if there is an ID. When making a request to add a\r\n        // reference the reference has no ID, to delete one, we need an ID\r\n        if (this.referenceID) {\r\n            outReferenceXML.appendChild(\r\n                XmlParser.xmlStringToElement('<RefID>{this.referenceID}</RefID>')\r\n            );\r\n\r\n            outReferenceXML.appendChild(\r\n                XmlParser.xmlStringToElement('<ReferenceName>{this.referenceName}</ReferenceName>')\r\n            );\r\n\r\n            outReferenceXML.appendChild(\r\n                XmlParser.xmlStringToElement('<OriginalFileName>{this.originalFileName}</OriginalFileName>')\r\n            );\r\n\r\n            outReferenceXML.appendChild(\r\n                XmlParser.xmlStringToElement('<ReferenceType>{this.referenceType}</ReferenceType>')\r\n            );\r\n\r\n            if (this.referenceURL) {\r\n                outReferenceXML.appendChild(\r\n                    XmlParser.xmlStringToElement('<RefURL>{this.referenceURL}</RefURL>')\r\n                );\r\n            }\r\n\r\n            outReferenceXML.appendChild(\r\n                XmlParser.xmlStringToElement('<UnitID>{ this.unitID } < /UnitID>')\r\n            );\r\n\r\n            return outReferenceXML;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function initializes the data of a variable that is created in the reponse of a server transaction\r\n     */\r\n    public initializeDataFromServer(referenceXML: Element): void {\r\n        this.referenceID = XmlParser.findDescendantTextContentByName(referenceXML, 'RefID');\r\n        this.referenceName = XmlParser.findDescendantTextContentByName(referenceXML, 'ReferenceName');\r\n        this.originalFileName = XmlParser.findDescendantTextContentByName(referenceXML, 'OriginalFileName');\r\n        this.originalFileURL = XmlParser.findDescendantTextContentByName(referenceXML, 'OriginalFileURL');\r\n        this.referenceType = XmlParser.findDescendantTextContentByName(referenceXML, 'ReferenceType');\r\n        this.referenceURL = XmlParser.findDescendantTextContentByName(referenceXML, 'RefURL');\r\n    }\r\n\r\n    ///////////////////////////////////////////////////\r\n    ////////// Helper functions\r\n    ///////////////////////////////////////////////////\r\n\r\n    /**\r\n     * This function converts Reference Data Object to string for logging\r\n     *\r\n     * @param tab - \"tab\" size to indent the output string if needed\r\n     * @default = '' (no indent)\r\n     */\r\n    public toString(tab: string = ''): string {\r\n        let outString: string = '';\r\n\r\n        outString += tab + 'referenceID = ' + this._referenceID + '\\n';\r\n        outString += tab + 'referenceName = ' + this._referenceName + '\\n';\r\n        outString += tab + 'referenceType = ' + this._referenceType + '\\n';\r\n        outString += tab + 'referenceType = ' + this._referenceType + '\\n';\r\n        outString += tab + 'referenceURL = ' + this._referenceURL + '\\n';\r\n        outString += tab + 'originalFileName = ' + this._originalFileName + '\\n';\r\n        outString += tab + 'originalFileURL = ' + this._originalFileURL + '\\n';\r\n        outString += tab + 'unitID = ' + this._unitID + '\\n';\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/reference.data-object.ts","import { XmlParser } from '../transactions/xml-parser';\r\n\r\n////////////////////////////////////////////////////////////////\r\n///\r\n///\t\tUnitType\r\n///\r\n///     container class for unit type data\r\n///\r\n////////////////////////////////////////////////////////////////\r\n\r\nexport class UnitTypeDataObject {\r\n\r\n    //////////////////// Private Variables ////////////////////\r\n\r\n    private _unitTypeID: number = 0;\r\n    private _unitTypeName: string = '';\r\n    private _unitTypeDesc: string = '';\r\n    private _unitLevel: number = 0;\r\n\r\n\r\n    constructor() {\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////\r\n    ////////// Getters / Setters\r\n    ///////////////////////////////////////////////////////////\r\n\r\n    public get unitTypeDesc(): string {\r\n        return this._unitTypeDesc;\r\n    }\r\n\r\n    public set unitTypeDesc(value: string) {\r\n        this._unitTypeDesc = value;\r\n    }\r\n\r\n    ///\r\n\r\n    public get unitTypeID(): number {\r\n        return this._unitTypeID;\r\n    }\r\n\r\n    public set unitTypeID(value: number) {\r\n        this._unitTypeID = value;\r\n    }\r\n\r\n    ///\r\n\r\n    public get unitLevel(): number {\r\n        return this._unitLevel;\r\n    }\r\n\r\n    public set unitLevel(value: number) {\r\n        this._unitLevel = value;\r\n    }\r\n\r\n    ///\r\n\r\n    public get unitTypeName(): string {\r\n        return this._unitTypeName;\r\n    }\r\n\r\n    public set unitTypeName(value: string) {\r\n        this._unitTypeName = value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////\r\n    ////////// XML Handling\r\n    ////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n    * This function initializes the data of a unit type that is created in the reponse of a server transaction\r\n    */\r\n    public initializeDataFromServer(unitTypeXML: Element): void {\r\n        this.unitLevel = +XmlParser.getAttribute(unitTypeXML, 'UnitLevel');\r\n        this.unitTypeDesc = XmlParser.getAttribute(unitTypeXML, 'UnitTypeDesc');\r\n        this.unitTypeID = +XmlParser.getAttribute(unitTypeXML, 'UnitTypeID');\r\n        this.unitTypeName = XmlParser.getAttribute(unitTypeXML, 'UnitTypeName');\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////\r\n    ////////// Debug Functions\r\n    ////////////////////////////////////////////////////////////\r\n\r\n    public toString(): string {\r\n        let outString: string;\r\n        outString = 'UnitTypeID = ' + this._unitTypeID + ';';\r\n        outString += ' UnitLevel = ' + this._unitLevel + ';';\r\n        outString += ' UnitTypeName = ' + this._unitTypeName + ';';\r\n        outString += ' UnitTypeDesc = ' + this._unitTypeDesc;\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/unit-type.data-object.ts","import { XmlParser } from '../transactions/xml-parser';\r\nimport { Log, Logger } from '../../log';\r\n\r\n/**\r\n * Desc: Class to hold Unit data and list of children objects\r\n */\r\nexport class UnitDataObject {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    public static readonly IMI_LEVEL: number = 1;\r\n    public static readonly MODULE_LEVEL: number = 2;\r\n    public static readonly TLO_LEVEL: number = 3;\r\n    public static readonly ELO_LEVEL: number = 4;\r\n    public static readonly PAGE_LEVEL: number = 5;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Properties / Instance Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    private _children: Array<UnitDataObject> = [];\r\n    private _parent: UnitDataObject;\r\n    private _createdBy: string;\r\n    private _createdDt: string;\r\n    private _hierarchyID: string;\r\n    private _hierarchyIDIsTemp: string;\r\n    private _modifiedBy: string;\r\n    private _modifiedDt: string;\r\n    private _pageID: string;\r\n    private _parentHierarchyID: string;\r\n    private _parentHierarchyIDIsTemp: string;\r\n    private _sortOrder: number;\r\n    private _thumbnailURL: string;\r\n    private _unitDesc: string;\r\n    private _unitID: string;\r\n    private _unitIDIsTemp: string;\r\n    private _unitLevel: string;\r\n    private _unitName: string;\r\n    private _unitStatusID: string;\r\n    private _unitType: string;\t\t\t// UnitTypeName\r\n    private _unitTypeID: string;\r\n    private _hasComments: boolean;\r\n\r\n    private logger: Logger = Log.getInstance().getLogger('UnitDataObject');\r\n\r\n    /**\r\n     * An array to hold hierarchical(ancestor) units (include self) from top to bottom\r\n     * for this unit, for example : array[0] = course unit, array[1] = module unit, ..array[5] = page unit\r\n     * The index of this array is used to determined the hierarchy level\r\n     * Note: this array will not be populated in constructing time because parenting is only set after constructing\r\n     */\r\n    public unitHierarchyArray: Array<UnitDataObject> = [];\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Constructor - creates a new UnitDataObject instance.\r\n     * If sourceXml is supplied, it will recursively build the whole unit tree structure objects\r\n     *\r\n     * @param   sourceXml   The root Element of the XML that contains the data to build this UnitDataObject from.\r\n     */\r\n    public constructor(sourceXml?: Element) {\r\n        if (sourceXml) {\r\n            this.constructFromXml(sourceXml);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method populates the UnitataObject with data retrieved from XML.  It then calls the parseElement helper\r\n     * method on each of its children.  Together these methods recursively create and populate this data object and all\r\n     * of its descendants, building an entire hierarchy of UnitataObjects.\r\n     *\r\n     * @param   sourceXml   The root Element of the XML that contains the data to build this UnitataObject from.\r\n     */\r\n    private constructFromXml(sourceXml: Element): void {\r\n        this.unitType = XmlParser.getAttribute(sourceXml, 'UnitType');\r\n        this.hierarchyID = XmlParser.getAttribute(sourceXml, 'HierarchyID');\r\n        this.parentHierarchyID = XmlParser.getAttribute(sourceXml, 'ParentHierarchyID');\r\n        this.unitLevel = XmlParser.getAttribute(sourceXml, 'UnitLevel');\r\n\r\n        const sourceElements: Array<Element> = XmlParser.getChildElements(sourceXml);\r\n        for ( const element of sourceElements) {\r\n            this.parseElement(element);\r\n        }\r\n        if ( this.children.length > 0 ) {\r\n            this.sortMyChildren();\r\n        }\r\n    }\r\n\r\n     /**\r\n      * This method is a helper of constructFromXml.  It determines if the given XML Element contains a property of this\r\n      * UnitataObject or one of its children.  Together these methods recursively create and populate this data\r\n      * object and all of its descendants, building an entire hierarchy of UnitataObjects.\r\n      *\r\n      *\r\n      * @param  sourceElement   The XML Element we are determining to be either a property of this UnitataObject, or\r\n      *                         an actual child.\r\n      */\r\n     protected parseElement(sourceElement: Element): void {\r\n        switch (sourceElement.tagName) {\r\n            case 'UnitLevel':\r\n                this.unitLevel = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'UnitType':\r\n                this.unitType = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'UnitName':\r\n                this.unitName = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'UnitID':\r\n                this.unitID = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'UnitDesc':\r\n                this.unitDesc = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'SortOrder':\r\n                this.sortOrder = + XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'PageID':\r\n                this.pageID = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'ThumbnailURL':\r\n                this.thumbnailURL = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'CreatedBy':\r\n                this.createdBy = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'CreatedDT':\r\n                this.createdDt = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'ModifiedBy':\r\n                this.modifiedBy = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'ModifiedDT':\r\n                this.modifiedDt = XmlParser.getTextContent(sourceElement);\r\n                break;\r\n            case 'CommentExisted':\r\n                this.hasComments = (XmlParser.getTextContent(sourceElement).toLowerCase() === 'true');\r\n                break;\r\n            case 'Unit':\r\n                // This Element actually contains a real child Unit DataObject\r\n                this.createNewUnit(sourceElement);\r\n                break;\r\n        }\r\n     }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    public get parent(): UnitDataObject {\r\n        return this._parent;\r\n    }\r\n\r\n    public set parent(value: UnitDataObject) {\r\n        this._parent = value;\r\n    }\r\n\r\n\r\n    public get children(): Array<UnitDataObject> {\r\n        return this._children;\r\n    }\r\n\r\n    public get createdBy(): string {\r\n        return this._createdBy;\r\n    }\r\n\r\n    public set createdBy(value: string) {\r\n        this._createdBy = value;\r\n    }\r\n\r\n    public get createdDt(): string {\r\n        return this._createdDt;\r\n    }\r\n\r\n    public set createdDt(value: string) {\r\n        this._createdDt = value;\r\n    }\r\n\r\n    public get hierarchyID(): string {\r\n        return this._hierarchyID;\r\n    }\r\n\r\n    public set hierarchyID(value: string) {\r\n        this._hierarchyID = value;\r\n    }\r\n\r\n    public get hierarchyIDIsTemp(): string {\r\n        return this._hierarchyIDIsTemp;\r\n    }\r\n\r\n    public set hierarchyIDIsTemp(value: string) {\r\n        this._hierarchyIDIsTemp = value;\r\n    }\r\n\r\n    public get modifiedBy(): string {\r\n        return this._modifiedBy;\r\n    }\r\n\r\n    public set modifiedBy(value: string) {\r\n        this._modifiedBy = value;\r\n    }\r\n\r\n    public get modifiedDt(): string {\r\n        return this._modifiedDt;\r\n    }\r\n\r\n    public set modifiedDt(value: string) {\r\n        this._modifiedDt = value;\r\n    }\r\n\r\n    public get pageID(): string {\r\n        return this._pageID;\r\n    }\r\n\r\n    public set pageID(value: string) {\r\n        this._pageID = value;\r\n    }\r\n\r\n    public get parentHierarchyID(): string {\r\n        return this._parentHierarchyID;\r\n    }\r\n\r\n    public set parentHierarchyID(value: string) {\r\n        this._parentHierarchyID = value;\r\n    }\r\n\r\n    public get parentHierarchyIDIsTemp(): string {\r\n        return this._parentHierarchyIDIsTemp;\r\n    }\r\n\r\n    public set parentHierarchyIDIsTemp(value: string) {\r\n        this._parentHierarchyIDIsTemp = value;\r\n    }\r\n\r\n    public get sortOrder(): number {\r\n        return this._sortOrder;\r\n    }\r\n\r\n    public set sortOrder(value: number) {\r\n        this._sortOrder = value;\r\n    }\r\n\r\n    public get thumbnailURL(): string {\r\n        return this._thumbnailURL;\r\n    }\r\n\r\n    public set thumbnailURL(value: string) {\r\n        this. _thumbnailURL = value;\r\n    }\r\n\r\n    public get unitDesc(): string {\r\n        return this._unitDesc;\r\n    }\r\n\r\n    public set unitDesc(value: string) {\r\n        this._unitDesc = value;\r\n    }\r\n\r\n    public get unitID(): string {\r\n        return this._unitID;\r\n    }\r\n\r\n    public set unitID(value: string) {\r\n        this._unitID = value;\r\n    }\r\n\r\n    public get unitIDIsTemp(): string {\r\n        return this._unitIDIsTemp;\r\n    }\r\n\r\n    public set unitIDIsTemp(value: string) {\r\n        this._unitIDIsTemp = value;\r\n    }\r\n\r\n    public get unitLevel(): string {\r\n        return this._unitLevel;\r\n    }\r\n\r\n    public set unitLevel(value: string) {\r\n        this._unitLevel = value;\r\n    }\r\n\r\n    public get unitName(): string {\r\n        return this._unitName;\r\n    }\r\n\r\n    public set unitName(value: string) {\r\n        this._unitName = value;\r\n    }\r\n\r\n    public get unitStatusID(): string {\r\n        return this._unitStatusID;\r\n    }\r\n\r\n    public set unitStatusID(value: string) {\r\n        this._unitStatusID = value;\r\n    }\r\n\r\n    public get unitType(): string {\r\n        return this._unitType;\r\n    }\r\n\r\n    public set unitType(value: string) {\r\n        this._unitType = value;\r\n    }\r\n\r\n    public get unitTypeID(): string {\r\n        return this._unitTypeID;\r\n    }\r\n\r\n    public set unitTypeID(value: string) {\r\n        this._unitTypeID = value;\r\n    }\r\n\r\n    public get hasComments(): boolean {\r\n        return this._hasComments;\r\n    }\r\n\r\n    public set hasComments(value: boolean) {\r\n        this._hasComments = value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n    * create new unit data object and tie parent-child together\r\n    *\r\n    */\r\n    public createNewUnit(sourceElement: Element): void {\r\n        const newChild: UnitDataObject = new UnitDataObject();\r\n        this._children.push(newChild);\r\n        newChild.parent = this;\r\n        newChild.constructFromXml(sourceElement);\r\n    }\r\n\r\n\r\n    /**\r\n     * 1. Recursively loop children units to populate supplied unit array\r\n     * 2. Build unitHierarchy for each unit\r\n     */\r\n    public buildUnitArray(unitArray: Array<UnitDataObject>): void {\r\n        this.buildHierarchy();\r\n        for (const childUnit of this.children ) {\r\n            unitArray.push(childUnit);\r\n            childUnit.buildUnitArray(unitArray);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add all hierarchical(ancestor) units (includes self) to the unitHierarchy Array\r\n     *\r\n     */\r\n    private buildHierarchy (): void {\r\n        if (this.parent) {\r\n            this.unitHierarchyArray.push(...this.parent.unitHierarchyArray);\r\n\r\n            // Add empty unit level ancestors, for example, if a page is directly under a course,\r\n            // we need to add Module, TLO, ELO placeholders between Course and Page\r\n            for (let i: number = this.unitHierarchyArray.length; i < +this.unitLevel - 1; i++) {\r\n                this.unitHierarchyArray.push(undefined);\r\n            }\r\n        }\r\n        // Add self to array too\r\n        this.unitHierarchyArray.push(this);\r\n    }\r\n\r\n\r\n    /**\r\n    * Sort children based on their sortOrder property\r\n    *\r\n    */\r\n    public sortMyChildren(): void {\r\n        this._children.sort( (unit1, unit2 ) => {\r\n            return unit1.sortOrder - unit2.sortOrder;\r\n        });\r\n    }\r\n\r\n    public toString(tab: string = ''): string {\r\n        let outString: string = '';\r\n\r\n        outString += tab + 'unitName = ' + this._unitName + '\\n';\r\n        outString += tab + 'children.length = ' + this._children.length + '\\n';\r\n        outString += tab + 'createdBy = ' + this._createdBy + '\\n';\r\n        outString += tab + 'createdDt = ' + this._createdDt + '\\n';\r\n        outString += tab + 'hierarchyID = ' + this._hierarchyID + '\\n';\r\n        outString += tab + 'hierarchyIDIsTemp = ' + this._hierarchyIDIsTemp + '\\n';\r\n        outString += tab + 'modifiedBy = ' + this._modifiedBy + '\\n';\r\n        outString += tab + 'modifiedDt = ' + this._modifiedDt + '\\n';\r\n        outString += tab + 'pageID = ' + this._pageID + '\\n';\r\n        outString += tab + 'parentHierarchyID = ' + this._parentHierarchyID + '\\n';\r\n        outString += tab + 'parentHierarchyIDIsTemp = ' + this._parentHierarchyIDIsTemp + '\\n';\r\n        outString += tab + 'sortOrder = ' + this._sortOrder + '\\n';\r\n        outString += tab + 'thumbnailURL = ' + this._thumbnailURL + '\\n';\r\n        outString += tab + 'unitDesc = ' + this._unitDesc + '\\n';\r\n        outString += tab + 'unitID = ' + this._unitID + '\\n';\r\n        outString += tab + 'unitIDIsTemp = ' + this._unitIDIsTemp + '\\n';\r\n        outString += tab + 'unitLevel = ' + this._unitLevel + '\\n';\r\n        outString += tab + 'unitStatusID = ' + this._unitStatusID + '\\n';\r\n        outString += tab + 'unitType = ' + this._unitType + '\\n';\r\n        outString += tab + 'unitTypeID = ' + this._unitTypeID + '\\n';\r\n        outString += tab + 'hasComments = ' + this._hasComments + '\\n';\r\n\r\n        return outString;\r\n    }\r\n\r\n    /**\r\n     * Recursively log debug unit tree starting with supplied three level\r\n     *\r\n     * @param level\r\n     */\r\n    public traceMe(level: number = 0): void {\r\n        let tab: string = '';\r\n        for (let i: number = 0; i < level; i++) {\r\n            tab = tab + '\\t';\r\n        }\r\n\r\n        this.logger.debug('\\n' + this.toString(tab));\r\n\r\n        for (let j: number = 0; j < this.children.length; j++) {\r\n            this.children[j].traceMe(level + 1);\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/unit.data-object.ts","import { Subject }  from 'rxjs/Subject';\r\n\r\nimport { EventContainerDataObjectInterface }    from './event-system/event-container.data-object.interface';\r\nimport { EventDataObjectCollection }            from './event-system/event.data-object.collection';\r\n\r\nimport { XmlParser }    from '../transactions/xml-parser';\r\n\r\n\r\n/**\r\n * This class holds each variable object. This is the base class for playable and editable variable classes.\r\n * This is used in Event System, Variable Management interface, and merge variable.\r\n * It contains only getters (playable class has only one setter for value).\r\n */\r\nexport abstract class VariableDataObject implements EventContainerDataObjectInterface {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Static Variables\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * String used to identify Element containing Variable ID\r\n     * @type {string}\r\n     */\r\n    public static readonly VARIABLE_ID_ELEMENT_NAME: string = 'ID';\r\n\r\n    /**\r\n     * <p>TypeName Value for a Number</p>\r\n     */\r\n    public static VARIABLE_TYPE_NUMBER: string = 'Number';\r\n\r\n    /**\r\n     * <p>TypeName Value for a String</p>\r\n     */\r\n    public static VARIABLE_TYPE_STRING: string = 'Text';\r\n\r\n    /**\r\n     * <p>TypeName Value for a Boolean</p>\r\n     */\r\n    public static VARIABLE_TYPE_BOOLEAN: string = 'Boolean';\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An RxJS Subject that lets subscribers know the value property of this VariableDataObject has changed.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public onValueChanged: Subject<any>;\r\n\r\n    /**\r\n     * unique variable id. Any correspondence between server is done through this.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _variableID: string = undefined;\r\n\r\n    /**\r\n     * the variable name entered by user and editable. This name should be unique in a highest level unit.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _name: string = undefined;\r\n\r\n    /**\r\n     * the variable description entered by user.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _description: string = undefined;\r\n\r\n    /**\r\n     * Variable type ID.\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _typeID: string = undefined;\r\n\r\n    /**\r\n     * The name of the dataType that is represented by this variable\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _dataTypeName: string = undefined;\r\n\r\n    /**\r\n     * Variable value (initially populated with default value from DB)\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _value: string;\r\n\r\n    /**\r\n     * Pages in which this variable is being used.\r\n     *\r\n     * @internal: Should probably only be in editable version of this class\r\n     *\r\n     * @default undefined\r\n     */\r\n    protected _usedOnPages: Array<string> = undefined;\r\n\r\n    /**\r\n     * Reference to Event data associated with Variables (onChange event)\r\n     */\r\n    protected _eventCollection: EventDataObjectCollection;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new VariableDataObject instance.\r\n     */\r\n    constructor() { }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * unique variable id. Any correspondence between server is done through this.\r\n     */\r\n    public get variableID(): string {\r\n        return this._variableID;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * the variable name entered by user and editable. This name should be unique in a highest level unit.\r\n     */\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * the variable description entered by user.\r\n     */\r\n    public get description(): string {\r\n        return this._description;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * the variable value (initially populated with default value from DB)\r\n     */\r\n\r\n    public get value(): string {\r\n        return this._value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Pages in which this variable is being used.\r\n     */\r\n    public get usedOnPages(): Array<string> {\r\n        return this._usedOnPages;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Variable type ID.\r\n     */\r\n    public get typeID(): string {\r\n        return this._typeID;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * the variable type name  derived from _typeID\r\n     */\r\n    public get dataTypeName(): string {\r\n        return this._dataTypeName;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    public get eventCollection(): EventDataObjectCollection {\r\n        return this._eventCollection;\r\n    }\r\n\r\n    public set eventCollection(value: EventDataObjectCollection) {\r\n        this._eventCollection = value;\r\n        // Check in case value is null (clearing out event collection)\r\n        if (this._eventCollection) {\r\n            this._eventCollection.parent = this;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// XML Handling\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * this function converts the variable data that is needed for server requests into XML\r\n     *\r\n     * @internal: Should only be needed by editable version of class - may want to remove\r\n     *\r\n     * @returns An XML representation of the variables needed data to make a server request\r\n     */\r\n    /*\r\n    public get variableXML(): Element {\r\n\r\n        // this creates a node called <Variable>\r\n        let _variableXML: Element = XmlParser.xmlStringToElement('<Variable></Variable>');\r\n\r\n        // Only add an ID node if there is an ID. When making a request to add a variable the variable has no ID, but to\r\n        // delete one, we need an ID.\r\n        if (this.variableID) {\r\n            _variableXML.appendChild(XmlParser.xmlStringToElement('<ID>{ variableID } </ID>'));\r\n        }\r\n\r\n        _variableXML.appendChild(XmlParser.xmlStringToElement('<Name>{ name } </Name>'));\r\n        _variableXML.appendChild(XmlParser.xmlStringToElement('<Description>{ description } </Description>'));\r\n        _variableXML.appendChild(XmlParser.xmlStringToElement('<TypeID>{ typeID } </TypeID>'));\r\n        _variableXML.appendChild(XmlParser.xmlStringToElement('<DefaultValue>{ value } </DefaultValue>'));\r\n\r\n        return _variableXML;\r\n    }\r\n    */\r\n\r\n    /**\r\n     * this function initializes the data of a variable that is created in the response of a server transaction\r\n     */\r\n    public initializeDataFromServer(sourceXml: Element): void {\r\n\r\n        // Parse out all of this variable's properties.\r\n        const propertyElements: Array<Element> = XmlParser.getChildElements(sourceXml);\r\n        for (let i: number = 0; i < propertyElements.length; i++) {\r\n\r\n            const propertyElement: Element = propertyElements[i];\r\n\r\n            switch (propertyElement.tagName) {\r\n\r\n                case VariableDataObject.VARIABLE_ID_ELEMENT_NAME:\r\n                    this._variableID = XmlParser.getTextContent(propertyElement);\r\n                    break;\r\n\r\n                case 'Name':\r\n                    this._name = XmlParser.getTextContent(propertyElement);\r\n                    break;\r\n\r\n                case 'Description':\r\n                    this._description = XmlParser.getTextContent(propertyElement);\r\n                    break;\r\n\r\n                case 'DefaultValue':\r\n                    this._value = XmlParser.getTextContent(propertyElement);\r\n                    break;\r\n\r\n                case 'TypeID':\r\n                    this._typeID = XmlParser.getTextContent(propertyElement);\r\n                    break;\r\n\r\n                case 'TypeName':\r\n                    this._dataTypeName = XmlParser.getTextContent(propertyElement);\r\n                    break;\r\n\r\n                case 'UsedOnPages':\r\n                    // pull out each page name from the XML, that a variable is used on\r\n                    this._usedOnPages = [];\r\n                    const usedOnPagesChildren: Array<Element> = XmlParser.getChildElements(propertyElement);\r\n                    for (let j: number = 0; j < usedOnPagesChildren.length; j++) {\r\n\r\n                        if (usedOnPagesChildren[j].tagName === 'Page') {\r\n\r\n                            const pageName: string = XmlParser.getTextContent(usedOnPagesChildren[j]);\r\n                            this._usedOnPages.push(pageName);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Debugging\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    public toString(tab: string = ''): string {\r\n\r\n        let outString: string = '';\r\n\r\n        outString += tab + 'variableID = ' + this._variableID + '\\n';\r\n        outString += tab + 'name = ' + this._name + '\\n';\r\n        outString += tab + 'description = ' + this._description + '\\n';\r\n        outString += tab + 'value = ' + this._value + '\\n';\r\n        outString += tab + 'typeID = ' + this._typeID + '\\n';\r\n        outString += tab + 'dataTypeName = ' + this._dataTypeName + '\\n';\r\n        outString += tab + 'usedOnPages:\\n ';\r\n\r\n        for (let i: number = 0; i < this._usedOnPages.length; i++) {\r\n            outString += tab + '  page = ' + this._usedOnPages[i] + '\\n';\r\n        }\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/data-objects/variable.data-object.ts","import { Injectable, Injector } \tfrom '@angular/core';\r\n\r\n/*\r\n* \tThis service is to be injected in root component to get a generic injector\r\n*   which will be used in any non-angular class to get an injectable service instance\r\n*   for example, InjectorService.injector.get(Http)\r\n**/\r\n@Injectable()\r\nexport class InjectorService {\r\n\r\n    public static injector: Injector;\r\n\r\n    constructor(private injector: Injector) {\r\n        InjectorService.injector = injector;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/services/injector.service.ts","/// <reference path=\"../../../../model/services/pop-up.service.ts\" />\r\n/// <reference path=\"../../../../model/services/pop-up.service.ts\" />\r\nimport { Injectable }                   from '@angular/core';\r\nimport { Observable }                   from 'rxjs/Observable';\r\n\r\nimport { InjectorService }              from './injector.service';\r\nimport { ScormService }                 from '../../../../model/services/scorm-service';\r\nimport { StartupConfigurationService }  from '../../../../model/services/startup-configuration-service';\r\nimport { UnitService }                  from './unit.service';\r\n\r\nimport { ComponentDataObject }          from '../data-objects/components/component.data-object';\r\nimport { EventDataObject }              from '../data-objects/event-system/event.data-object';\r\nimport { EventPlayableDataObject }\r\n    from '../../../../player/model/data-objects/event-system/event.playable.data-object';\r\nimport { EventPlayableDataObjectCollection }\r\n    from '../../../../player/model/data-objects/event-system/event.playable.data-object.collection';\r\nimport { LoadPageTransaction }          from '../transactions/load-page.transaction';\r\nimport { PageDataObject }               from '../data-objects/page.data-object';\r\nimport { UnitDataObject }               from '../data-objects/unit.data-object';\r\nimport { PopUpService }                 from '../../../../model/services/pop-up.service';\r\n\r\n\r\n/*\r\n *  Service class for handling page related services like get launch page, next page, previous page.\r\n */\r\n@Injectable()\r\nexport class PageService {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Reference to StartupConfigurationService - to access startup information\r\n     * TODO: Will someone who understands what this is doing please comment this!!!\r\n     */\r\n    private startupConfiguration: StartupConfigurationService =\r\n        InjectorService.injector.get(StartupConfigurationService);\r\n\r\n    /**\r\n     * A reference to the UnitService\r\n     */\r\n    private unitService: UnitService = InjectorService.injector.get(UnitService);\r\n\r\n    /**\r\n     * Reference to ScormService\r\n     * TODO: Since this service is in system-shared, there probably shouldn't be a reference to SCORM stuff here\r\n     *\r\n     * @type {ScormService}\r\n     */\r\n    private scormService: ScormService = InjectorService.injector.get(ScormService);\r\n\r\n    /**\r\n     * Page data object holding the current loaded page.\r\n     * When a new page is loaded the pageTaskHandler updates this reference directly.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public page: PageDataObject;\r\n\r\n    /**\r\n     * Temporary variable to hold pageID to load between call to load page and onExit function callback\r\n     */\r\n    private tempLoadPageID: string;\r\n\r\n    private pageLoading: boolean = false;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    public get isPageLoaded (): boolean {\r\n        return !this.pageLoading;\r\n    }\r\n\r\n    public set isPageLoaded (value: boolean) {\r\n        if (value === true) {\r\n            (this.page.pageProperties.eventCollection as EventPlayableDataObjectCollection).processEvent(EventDataObject.ON_LOAD);\r\n        }\r\n        this.pageLoading = !value;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Observable Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /*\r\n    * Load page data and build page data object\r\n    *\r\n    * @param    pageID  The page ID of the page to be loaded\r\n    **/\r\n    private getPage(pageID: string): Observable<any> {\r\n        const loadPageTransaction: LoadPageTransaction = new LoadPageTransaction(pageID);\r\n        return loadPageTransaction.startTransaction().\r\n        map( () => {\r\n            // this.pageUpdated.emit(this.page);\r\n\r\n            // set highestPageProgress and save to LMS if scormService is Initialized\r\n            this.unitService.setHighestPageProgress(this.unitService.getPageNumberFromPageID(pageID), true);\r\n\r\n            // if it is last page, execute Course Completetion\r\n            if (this.unitService.isLastPageUnit()) {\r\n                this.scormService.executeCourseCompletetion();\r\n            }\r\n\r\n            return this.page;\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * Get launch page data. The launch Page is the Page the the Player is being opened to.\r\n     * In scenarios like these, the launch page is not necessarily the first page:\r\n     *      - Player launched as a Previewer from the Designer interfaces\r\n     *      - Player launched from an LMS resuming a previously suspended course\r\n     *\r\n     * @returns {Observable<any>} | undefined (if no page to launch page to load)\r\n     */\r\n    public getLaunchPage(): Observable<any> | undefined {\r\n        let pageID: string;\r\n        this.pageLoading = true;\r\n\r\n        // Based on caller, determine starting pageID (the page the Player is supposed to load on launch)\r\n        switch (this.startupConfiguration.caller) {\r\n            case 'Player':  // If launched standalone\r\n                // If launched from an LMS try to use cmi.location to derive pageID\r\n                if (this.scormService.isInitialized()) {\r\n                    // Get cmi.location from LMS\r\n                    const lmsLocation: number = this.unitService.getLocationFromLMS();\r\n                    if (lmsLocation !== 0) {\r\n                        // If LMS returns non zero cmi.location, use it to set highest page progress\r\n                        // Do we need to set highest page progress in any other scenario?\r\n                        this.unitService.setHighestPageProgress(lmsLocation, false);\r\n                        // Also use it to derive pageID\r\n                        pageID = this.unitService.getPageIDFromPageNumber(lmsLocation);\r\n                    }\r\n                }\r\n                // If pageID not set yet (either b/c not launched from LMS or cmi.location = 0)\r\n                if (!pageID) {\r\n                    // Set pageID to first page in course\r\n                    pageID = this.unitService.getFirstPageInUnit().pageID;\r\n                }\r\n                break;\r\n\r\n            case 'Page':  // If launched from Page Designer\r\n                // Get pageID from StartupConfiguration data\r\n                // NOTE: unitID passed in from page designer is actually a pageID\r\n                pageID = this.startupConfiguration.unitId;\r\n                break;\r\n\r\n            case 'Template':  // If launched from Template Designer\r\n                // PageID doesn't apply for Template Designer - Template element data provided as page content\r\n                break;\r\n\r\n            default:  // Otherwise if launched from Admin or Course Designer?\r\n                // Use unitID from StartupConfiguration to get Unit data object\r\n                const unit: UnitDataObject = this.unitService.getUnitByUnitID(this.startupConfiguration.unitId);\r\n\r\n                // Get first page data object in Unit\r\n                const pageUnitDataObject: UnitDataObject = this.unitService.getFirstPageInUnit(unit);\r\n\r\n                // Check if page data object found (if not course has no page and there is no page to load)\r\n                if (pageUnitDataObject) {\r\n                    // If page data object found (test in case course has no page) get pageID from it\r\n                    pageID = this.unitService.getFirstPageInUnit(unit).pageID;\r\n                }\r\n                break;\r\n        }\r\n\r\n        // Continue process as long as either a pageID has been identified, or the Player was launched from the Template\r\n        // Designer (in which case having no pageID is normal and template data will be loaded from memory)\r\n        if (pageID || this.startupConfiguration.caller === 'Template') {\r\n            return this.getPage(pageID); // NOTE: this return is not used in app-component.ts\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Functions / Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Load the Page of the given ID.\r\n     *\r\n     * @param   pageID    the ID of the page to be loaded.\r\n     */\r\n    public loadPage(pageID: string): void {\r\n        this.pageLoading = true;\r\n        this.tempLoadPageID = pageID;\r\n        let onExitEvent: EventPlayableDataObject;\r\n\r\n        // If there is a page loaded and it has page properties, call the page's onExit Event\r\n        if (this.page && this.page.pageProperties) {\r\n            onExitEvent = (this.page.pageProperties.eventCollection as EventPlayableDataObjectCollection).\r\n                processEvent(EventDataObject.ON_EXIT);\r\n        }\r\n\r\n        // If there's no page loaded or the page has no onExit event, call onExitEventComplete to continue process of\r\n        // loading another page\r\n        if (!onExitEvent) {\r\n            this.onExitEventComplete();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback like function for completion of Page onExit Event to trigger loading of next page\r\n     * @param pageID\r\n     */\r\n    public onExitEventComplete(): void {\r\n        // Subscribe to observable to start transaction for loading page data\r\n        this.getPage(this.tempLoadPageID).subscribe(\r\n            () => { },\r\n            (error) => {  this.handleObservableError(error); },\r\n            () => {  }\r\n        );\r\n\r\n        this.tempLoadPageID = '';\r\n    }\r\n\r\n    /*\r\n     * Find the Next Page and Load it.\r\n     *\r\n     **/\r\n    public loadNextPage(): void {\r\n        const nextPageID: string = this.unitService.getNextPageUnit().pageID;\r\n        this.loadPage(nextPageID);\r\n    }\r\n\r\n    /*\r\n    * Find the Previous Page and Load it.\r\n    *\r\n    **/\r\n    public loadPreviousPage(): void {\r\n        const previousPageID: string = this.unitService.getPreviousPageUnit().pageID;\r\n        this.loadPage(previousPageID);\r\n    }\r\n\r\n    private handleObservableError(error: any): Observable<any> {\r\n        // console.error('An http error occurred', error);\r\n        InjectorService.injector.get(PopUpService).openSystemMessage(error.message);\r\n        return Observable.throw(error.message || error);\r\n    }\r\n\r\n    /**\r\n    * Recursively search PageDataObject to find the component object by element ID\r\n    *\r\n    * @param    componentElementID\r\n    * @returns  {<ComponentDataObject>}\r\n    */\r\n    public getComponent(componentElementID: number): ComponentDataObject {\r\n        return this.page.findChildComponent(componentElementID);\r\n    }\r\n\r\n    /**\r\n     *  Sometimes page.pageName is not populated properly. This occurs when the page name is not in the page data\r\n     *  coming from the designers. This data is always available in the unit data. We could always just get it from\r\n     *  there but I don't like the idea of getting the pageName from the unit service. :( So I'm only doing it when I\r\n     *  have too.\r\n     *\r\n     *  @returns {<string>} The Name of the page that is currently loaded.\r\n     *  @TODO: fix the page in the page designer preview DATA!\r\n     */\r\n    public get pageName(): string {\r\n        if (this.page && this.page.pageName) {\r\n            // If the page object exists with a properly populated pageName (see method comments above) return the name\r\n            return this.page.pageName;\r\n        } else if (this.unitService.getCurrentPageUnit()) {\r\n            // Otherwise try to get the name via the course structure\r\n            return this.unitService.getCurrentPageUnit().unitName;\r\n        } else {\r\n            // Otherwise there is no name to retrieve (as when previewing from Template Designer or course with no page)\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/services/page.service.ts","import { ReferenceDataObject } from '../data-objects/reference.data-object';\r\n\r\nexport class ReferenceService {\r\n\r\n    /**\r\n     * Public collection of course references\r\n     */\r\n    public references: Array<ReferenceDataObject>;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public serializeClass(): string {\r\n        let outString: string = 'References:\\n';\r\n        for (let i: number = 0; i < this.references.length; i++) {\r\n            outString += 'Ref #' + (i + 1).toString() + ':\\n';\r\n            outString += this.references[i].toString();\r\n        }\r\n\r\n        return outString;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/services/reference.service.ts","import { UnitTypeDataObject } from '../data-objects/unit-type.data-object';\r\n\r\nexport class UnitTypeService {\r\n\r\n    /**\r\n     * Array of unit type data objects\r\n     */\r\n    public unitTypes: Array<UnitTypeDataObject>;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Return a string representation of available unit types\r\n     */\r\n    public serializeClass(): string {\r\n        let outString: string = 'Unit types:\\n';\r\n\r\n        for (let i: number = 0; i < this.unitTypes.length; i++) {\r\n            outString += this.unitTypes[i].toString() + '\\n';\r\n        }\r\n\r\n        return outString;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/services/unit-type.service.ts","import { UnitDataObject } from '../data-objects/unit.data-object';\r\nimport { PageService } from './page.service';\r\nimport { InjectorService } from './injector.service';\r\nimport { ScormService } from '../../../../model/services/scorm-service';\r\nimport { StartupConfigurationService } from '../../../../model/services/startup-configuration-service';\r\n\r\n/*\r\n *  Service class for handling unit tree structure related services like course tree navigatioin functions.\r\n */\r\nexport class UnitService {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constants\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    //// Injected service ////\r\n    private scormService: ScormService = InjectorService.injector.get(ScormService);\r\n    private pageService: PageService;\r\n    private configService: StartupConfigurationService = InjectorService.injector.get(StartupConfigurationService);\r\n\r\n    // private logger: Logger = Log.getInstance().getLogger('UnitService');\r\n\r\n    private pageType: string = 'Page';\r\n\r\n    /**\r\n     * Root unit for loaded course tree structure\r\n     */\r\n    private _unit: UnitDataObject;\r\n\r\n    /**\r\n     * Highest Progress Page in natural number\r\n     */\r\n    private highestPageProgress: number = 0;\r\n\r\n    /**\r\n     * Hold only page-type units (in course tree structure order)\r\n     *\r\n     */\r\n    private pageUnitArray: Array<UnitDataObject> = [];\r\n\r\n    /**\r\n     * Hold all type units (in course tree structure order)\r\n     *\r\n     */\r\n    public UnitArray: Array<UnitDataObject> = [];\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new UnitService instance.\r\n     *\r\n     */\r\n    public constructor() {\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    public get unit(): UnitDataObject {\r\n        return this._unit;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    public setRootUnit(inputXML: Element): void {\r\n        // Create the root unit from the inputXml.\r\n        const rootUnit: UnitDataObject = new UnitDataObject(inputXML);\r\n\r\n        // Build pageUnitArray and populate unit hierarchy info for each unit\r\n        this.UnitArray = [];\r\n        rootUnit.buildUnitArray(this.UnitArray);\r\n        this.pageUnitArray = this.UnitArray.filter(unit => +unit.unitLevel === UnitDataObject.PAGE_LEVEL);\r\n\r\n        // Store the root unit of course hierarchy in the UnitService.\r\n        this._unit = rootUnit;\r\n\r\n        // Get PageService from injector\r\n        this.pageService = InjectorService.injector.get(PageService);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Get a unit by its unitID\r\n     *\r\n     */\r\n    public getUnitByUnitID(unitID: string): UnitDataObject {\r\n        return this.UnitArray.find(u => u.unitID === unitID);\r\n    }\r\n\r\n\r\n    /**\r\n     * Get current page unit based on current PageService's Page object\r\n     *\r\n     */\r\n    public getCurrentPageUnit(): UnitDataObject {\r\n        return this.pageUnitArray.find(u => u.pageID === this.pageService.page.pageID);\r\n    }\r\n\r\n    /**\r\n     * Get current page unit based on current PageService's Page object\r\n     *\r\n     */\r\n    public getCurrentPageUnitIndex(): number {\r\n        return this.pageUnitArray.findIndex(u => u.pageID === this.pageService.page.pageID);\r\n    }\r\n\r\n    /**\r\n     * Check if current page unit is the last one in the page array\r\n     */\r\n    public isLastPageUnit(): boolean {\r\n        return this.pageUnitArray.length === (this.getCurrentPageUnitIndex() + 1);\r\n    }\r\n\r\n    /**\r\n     * Check if current page unit is the first one in the page array\r\n     */\r\n    public isFirstPageUnit(): boolean {\r\n        return 0 === this.getCurrentPageUnitIndex();\r\n    }\r\n\r\n\r\n    /**\r\n     * Get next page unit based on getCurrentPageUnit(), return undefined if already last page\r\n     */\r\n    public getNextPageUnit(): UnitDataObject {\r\n        if (this.isLastPageUnit()) {\r\n            return undefined;\r\n        } else {\r\n            let index: number = this.getCurrentPageUnitIndex();\r\n            return this.pageUnitArray[++index];\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Get previous page unit based on getCurrentPageUnit(), return undefined if already frist page\r\n     *\r\n     */\r\n    public getPreviousPageUnit(): UnitDataObject {\r\n        if (this.isFirstPageUnit()) {\r\n            return undefined;\r\n        } else {\r\n            let index: number = this.getCurrentPageUnitIndex();\r\n            return this.pageUnitArray[--index];\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * get location from LMS (highest page progessed so far)\r\n     * scormService.getLocation() will return an empty string ('') if nothing is stored or 1,2,3... if it was saved\r\n     *\r\n     * TODO: may need to conbine with the completion_status 'incomplete'\r\n     * TODO: This is in system-shared, so would theoretically be used by Designers as well, so shouldn't reference SCORM\r\n     *          Probably need to move this elsewhere or extend this service to create a Player specific one\r\n     *\r\n     */\r\n    public getLocationFromLMS(): number {\r\n\r\n        // debug code, keep it\r\n        /*\r\n        let pageLocation: string = this.scormService.getLocation();\r\n\r\n        console.log('@@@@@unitService.getLocationFromLMS pageLocation=' + pageLocation);\r\n        console.log('@@@@@unitService.getLocationFromLMS pageLocation=' + +pageLocation);\r\n        if (pageLocation === null) { console.log('@@@@@unitService.getLocationFromLMS pageLocation is null'); }\r\n        if (pageLocation === undefined) { console.log\r\n            ('@@@@@unitService.getLocationFromLMS pageLocation is undefined'); }\r\n        if (pageLocation === '') { console.log('@@@@@unitService.getLocationFromLMS pageLocation is empty string'); }\r\n        */\r\n\r\n        /*\r\n        if (!(pageLocation === null || pageLocation === '')) {\r\n\r\n            this.highestPageProgress =\r\n            (+pageLocation > this.highestPageProgress) ? +pageLocation : this.highestPageProgress;\r\n            return +pageLocation;\r\n        }\r\n        */\r\n        return +this.scormService.getLocation();\r\n    }\r\n\r\n    /**\r\n     * set highest page progress, save to LMS if scormService is Initialized\r\n     *\r\n     * @param\tpageNum\tnumber we are trying to set as the highest page progress\r\n     * @param\tsaveLMS\ttrue save to LMS\r\n     */\r\n    public setHighestPageProgress(pageNum: number, saveLMS: boolean = false): void {\r\n        if (pageNum > this.highestPageProgress) {\r\n\r\n            this.highestPageProgress = pageNum;\r\n\r\n            if (saveLMS && this.scormService.isInitialized()) {\r\n\r\n                this.scormService.saveLocation(String(pageNum));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Get the page number as the highest page progress\r\n    *\r\n    */\r\n    public getHighestPageProgress(): number {\r\n        return this.highestPageProgress;\r\n    }\r\n\r\n    /**\r\n     * Test to see if the given page is higher then the Highest page progress.\r\n     *\r\n     * @param pageID of the page that should be tested to see if its after the highest Page progress\r\n     */\r\n    public isPageAfterHighestPageProgress(pageID: string): boolean {\r\n\r\n        return (this.getPageNumberFromPageID(pageID) > this.highestPageProgress);\r\n    }\r\n\r\n    /**\r\n     * get page number from pageID\r\n     *\r\n     * @param pageID\r\n     */\r\n    public getPageNumberFromPageID(pageID: string): number {\r\n\r\n        return this.pageUnitArray.findIndex(u => u.pageID === pageID);\r\n    }\r\n\r\n    /**\r\n     * get pageID from page number\r\n     *\r\n     * @param pageNumber\r\n     */\r\n    public getPageIDFromPageNumber(pageNumber: number): string {\r\n\r\n        return this.pageUnitArray[pageNumber].pageID;\r\n    }\r\n\r\n    /**\r\n    * get level number from config's level string\r\n    * for example, PageNumberLevel,MaxCourseMapLevel\r\n    *\r\n    * @param level string\r\n    * @returns {<number>}\r\n    */\r\n    private getLevelNumber(level: string): number {\r\n        switch (level) {\r\n            case 'IMI_LEVEL':\r\n                return UnitDataObject.IMI_LEVEL;\r\n            case 'MODULE_LEVEL':\r\n                return UnitDataObject.MODULE_LEVEL;\r\n            case 'TLO_LEVEL':\r\n                return UnitDataObject.TLO_LEVEL;\r\n            case 'ELO_LEVEL':\r\n                return UnitDataObject.ELO_LEVEL;\r\n            default:\r\n                return UnitDataObject.ELO_LEVEL;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get all page units calculated based on configuration's page-number-level and current page unit\r\n     * page-number-level could be IMI,Module,TLO,ELO,Page\r\n     * pageNumberLevel 1-5\r\n     */\r\n    public getConfigLevelPageUnits(): Array<UnitDataObject> {\r\n\r\n        const configLevel: number = this.getLevelNumber(this.configService.config.pageNumberLevel);\r\n        const configLevelUnit: UnitDataObject = this.getCurrentPageUnit().unitHierarchyArray[configLevel - 1];\r\n        if (configLevelUnit) {\r\n            return this.pageUnitArray.filter(u => u.unitHierarchyArray[configLevel - 1] === configLevelUnit);\r\n        } else {\r\n            // current page unit doesn't have the specified-level ancestor unit\r\n            return undefined;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Get current page number calculated based on configuration's page-number-level and current page unit\r\n     * page-number-level could be IMI,Module,TLO,ELO,Page\r\n     */\r\n    public getCurrentPageNumber(): number {\r\n        const array: Array<UnitDataObject> = this.getConfigLevelPageUnits();\r\n        if (array) {\r\n            return array.findIndex(u => u === this.getCurrentPageUnit()) + 1;\r\n        } else {\r\n            // current page unit doesn't have the specified-level ancestor unit\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get total page numbers calculated based on configuration's page-number-level and current page unit\r\n     * page-number-level could be IMI,Module,TLO,ELO,Page\r\n     */\r\n    public getTotalPageNumbers(): number {\r\n        const array: Array<UnitDataObject> = this.getConfigLevelPageUnits();\r\n        if (array) {\r\n            return array.length;\r\n        } else {\r\n            // current page unit doesn't have the specified-level ancestor unit\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get current page unit's breadcrumb\r\n     * return an array of hierarchical units(from top to bottom) for current page unit\r\n     */\r\n    public getCurrentPageUnitBreadcrumb(): Array<UnitDataObject> {\r\n        return this.getPageUnitBreadcrumb(this.getCurrentPageUnit());\r\n    }\r\n\r\n    /**\r\n     * Get page unit breadcrumb\r\n     * return an array of hierarchical units(from top to bottom) for supplied page unit\r\n     */\r\n    public getPageUnitBreadcrumb(pageUnit: UnitDataObject): Array<UnitDataObject> {\r\n        // filter out undefined units\r\n        return pageUnit.unitHierarchyArray.filter(unit => unit);\r\n    }\r\n\r\n\r\n    /**\r\n     * Get first page unit of the supplied unit. For example, find the first page inside a TLO.\r\n     * It will also be used to find the first page of a course without supplying the unit parameter\r\n     * @param unit - unit to start search (search root unit if not supplied)\r\n     */\r\n    public getFirstPageInUnit(unit?: UnitDataObject): UnitDataObject {\r\n        if (!unit) {\r\n            unit = this._unit;\r\n        }\r\n        return this.pageUnitArray.find(u => u.unitHierarchyArray[+unit.unitLevel - 1] === unit);\r\n    }\r\n\r\n    /**\r\n    * Get course map structure based on maximum course level from config\r\n    *\r\n    * @returns {Array<UnitDataObject>}\r\n    */\r\n    public getCourseMap(): Array<UnitDataObject> {\r\n        const maxLevel: number = this.getLevelNumber(this.configService.config.maxCourseMapLevel);\r\n        return this.UnitArray.filter(unit => +unit.unitLevel <= maxLevel\r\n            && +unit.unitLevel > UnitDataObject.IMI_LEVEL);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/services/unit.service.ts","import { ElementDataObject }\r\n    from '../data-objects/element.data-object';\r\nimport { EventDataObjectCollection }\r\n    from '../data-objects/event-system/event.data-object.collection';\r\nimport { EventPlayableDataObjectCollection }\r\n    from '../../../../player/model/data-objects/event-system/event.playable.data-object.collection';\r\nimport { VariableDataObject }\r\n    from '../data-objects/variable.data-object';\r\n\r\n\r\n/**\r\n * TODO: Write description.\r\n */\r\nexport class VariableService {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Array of variables in the course.\r\n     */\r\n    public variables: Array<VariableDataObject>;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new VariableService instance.\r\n     */\r\n    constructor() { }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Searching\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Searches our variables array for the VariableDataObject specified by the given variableID.\r\n     *\r\n     * @param   variableID  The ID of the VariableDataObject we are looking for.\r\n     *\r\n     * @returns If found, the VariableDataObject with the given ID, otherwise undefined.\r\n     */\r\n    public findVariable(variableID: string): VariableDataObject {\r\n         return this.variables.find( (variable: VariableDataObject) => variable.variableID === variableID );\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event System Handling\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Method takes ElementDataObject structure from PagePropertiesDataObject (\"Page Attribute component\"), parses out\r\n     * and creates Variable related Event System Data Objects, and applies them to the appropriate Variable Data Objects\r\n     *\r\n     * @param element\r\n     */\r\n    public mapEventsToVariables(element: ElementDataObject): void {\r\n        // console.log('VariableService.mapEventsToVariables(): !!!!!');\r\n        // console.log(element);\r\n\r\n        // If there are Variables to map events to:\r\n        if (this.variables) {\r\n            // Clear out current Variable Event related data prior to mapping to new ones\r\n            this.variables.forEach((variable: VariableDataObject) => {\r\n                // Clear by setting collection to null.  May want to watch for scenarios where undefined or [] better.\r\n                variable.eventCollection = null;\r\n            });\r\n\r\n            // Loop through each Variable element under Variables\r\n            element.children.forEach((variableElement: ElementDataObject) => {\r\n                // Get VariableID\r\n                // NOTE: Can't use constant defined in VariableDataObject b/c not using consistent name for some reason\r\n                const variableID: string =\r\n                    variableElement.getFirstChildElementByName('VariableID').value;\r\n                // console.log('variableID=' + variableID);\r\n\r\n                // Notes: Handle server generated XML which doesn't contain 'VariableID'\r\n                if (!variableID) {\r\n                    return;\r\n                }\r\n\r\n                // console.log('Get Event Collection Element Data Object');\r\n                // Get Event Collection Element Data Object\r\n                const eventCollectionElement: ElementDataObject =\r\n                    variableElement.getFirstChildElementByName(EventDataObjectCollection.EVENT_COLLECTION_ELEMENT_NAME);\r\n\r\n                // console.log('this.findVariable(variableID).eventCollection');\r\n                // console.log('Find result:' + this.findVariable(variableID));\r\n                // TODO: setup class factory to return appropriate version of Event class (hard code playable for now)\r\n                // Use VariableID to get Variable Data Object and assign its Event Collection\r\n                // To prevent an error when variable is not found (course is not saved yet),\r\n                // check\r\n                const foundVariable: VariableDataObject = this.findVariable(variableID);\r\n                if (foundVariable) {\r\n                    foundVariable.eventCollection = new EventPlayableDataObjectCollection(eventCollectionElement);\r\n                }\r\n                // console.log('mapEventsToVariables Done!');\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Debugging\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * For debugging TODO: should rename to toString()\r\n     * @returns {string}\r\n     */\r\n    public serializeClass(): string {\r\n        let outString: string = '\\n';\r\n\r\n        for (let i: number = 0; i < this.variables.length; i++) {\r\n            outString += '--------------------------------------------\\n';\r\n            outString += 'Variable #' + (i + 1).toString() + ':\\n';\r\n            outString += this.variables[i].toString();\r\n        }\r\n\r\n        return outString;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/services/variable.service.ts","import { Observable, Subscriber }   from 'rxjs/Rx';\r\n\r\nimport { Log, Logger }  from '../../log';\r\n\r\n\r\n/**\r\n * Sets up an observable process for accessing external JS objects or making external JS calls.  It is used for\r\n * processes like Transaction where we want to hold processing until we have all data regardless of whether it comes\r\n * from file, server, or memory (external JS objects).\r\n *\r\n * @see Transaction\r\n * @see TransactionTaskHandler\r\n * @see TransactionDataSource\r\n */\r\nexport class ExternalInterfaceHandler {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default A logger object named after the containing class.\r\n     */\r\n    private logger: Logger = Log.getInstance().getLogger('ExternalInterfaceHandler');\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new ExternalInterfaceHandler instance.\r\n     */\r\n    constructor() {\r\n\r\n        /* No implementation required. */\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    public getObservable(returnObject: any): Observable<any> {\r\n\r\n        this.logger.info('getObservable(): Get data from memory');\r\n        // NOTE:    Logging the returnObject directly (without concatenating to any string) allows object inspection in\r\n        //          the chrome developer tool.\r\n        console.log(returnObject);\r\n\r\n        return new Observable<any>( (subscriber: Subscriber<any>) => {\r\n            if (returnObject) {\r\n                subscriber.next(returnObject);\r\n            } else {\r\n                subscriber.error('ExternalInterfaceHandler Data Error');\r\n            }\r\n            subscriber.complete();\r\n        } );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/external-interface-handler.ts","import { Headers, Http, RequestOptions, Response }  from '@angular/http';\r\nimport { Observable }                               from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { InjectorService }  from '../services/injector.service';\r\nimport { PopUpService }     from '../../../../model/services/pop-up.service';\r\n\r\nimport { Log, Logger }  from '../../log';\r\nimport { XmlParser }    from './xml-parser';\r\n\r\n\r\n/**\r\n * This class initiates an HTTP request to a web server external to the application and handles any responses returned.\r\n * This includes handling any errors that might occur, especially no response errors.\r\n *\r\n * @see Transaction\r\n * @see TransactionTaskHandler\r\n * @see TransactionDataSource\r\n *\r\n */\r\nexport class HttpRequestHandler {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @see isDifTransaction\r\n     */\r\n    private _isDifTransaction: boolean = true;\r\n\r\n    /**\r\n     * @see requestXml\r\n     */\r\n    private _requestXml: Element;\r\n\r\n    /**\r\n     * The response XML sent back from the application server.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private responseXml: Element;\r\n\r\n    /**\r\n     * A reference to the Angular Http service for communicating with the application server or file system.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private http: Http;\r\n\r\n    /**\r\n     * The error message displayed to the user when their session has timed out.\r\n     *\r\n     * TODO: Move error constants to separate file.\r\n     *\r\n     * @default 'Server Error 140: Your session has timed out.  You will be redirected to the login page.'\r\n     */\r\n    private readonly SESSION_TIMEOUT: string =\r\n        'Server Error 140: Your session has timed out.  You will be redirected to the login page.';\r\n\r\n    /**\r\n     * The error message displayed to the user when an unidentified server error has occurred with the current request.\r\n     *\r\n     * TODO: Move error constants to separate file.\r\n     *\r\n     * @default 'Server Error 105: Unidentified error occurred.\r\n     */\r\n    private readonly UNIDENTIFIED_FAILURE: string = 'Server Error 105: Unidentified error occurred.';\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default A logger object named after the containing class.\r\n     */\r\n    private logger: Logger = Log.getInstance().getLogger('HttpRequestHandler');\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new HttpRequestHandler instance.\r\n     */\r\n    constructor() {\r\n\r\n        this.http = InjectorService.injector.get(Http);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * A flag that indicates whether or not the request comes from a DIF transaction.  If so, the expected response will\r\n     * be in DIF XML format.\r\n     *\r\n     * @default true\r\n     */\r\n    public set isDifTransaction(value: boolean ) {\r\n\r\n        this._isDifTransaction = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The request XML to send to the application server.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get requestXML(): Element {\r\n\r\n        return this._requestXml;\r\n    }\r\n\r\n    public set requestXML(value: Element) {\r\n\r\n        this._requestXml = value;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Request Initiation\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Sends a GET request to retrieve file data.\r\n     *\r\n     * TODO: Add input/output descriptions.\r\n     *\r\n     * @param   getURL\r\n     *\r\n     * @returns {Observable<any>}\r\n     */\r\n    public sendGetRequest(getURL: string): Observable<any> {\r\n\r\n        // Send get request to server\r\n        if (this._isDifTransaction) {\r\n\r\n            return this.http.get(getURL)\r\n                .map(this.extractFileData, this)\r\n                .catch(this.handleError);\r\n        } else {\r\n\r\n            return this.http.get(getURL)\r\n                .map((res: Response) => {\r\n                    return res.text();\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends a POST request to retrieve server data.\r\n     *\r\n     * TODO: Add input/output descriptions.\r\n     *\r\n     * @param   postURL\r\n     *\r\n     * @returns\r\n     */\r\n    public sendPostRequest(postURL: string): Observable<any> {\r\n\r\n        const headers: Headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n        const options: RequestOptions = new RequestOptions({ 'headers': headers });\r\n\r\n        // Convert XML request to string\r\n        let requestString: string = ((new XMLSerializer()).serializeToString(this._requestXml));\r\n\r\n        /*\r\n         * NOTE: Need to double encode the request to avoid this error:\r\n         *\r\n         * Global.Application_Error(0) - Application Error-HttpRequestValidationException:\r\n         * A potentially dangerous Request.Form value was detected from the client (xmlData=\"<?xml version='1.0' ...\")\r\n         *\r\n         */\r\n        requestString = encodeURIComponent(requestString);\r\n\r\n        const params: string = 'xmlData=' + encodeURIComponent(requestString);\r\n\r\n        // this.logger.info('posting to server ... ' + params);\r\n\r\n        // Send post request to server\r\n        if (this._isDifTransaction) {\r\n\r\n            return this.http.post(postURL, params, options)\r\n                .map(this.extractServerData, this)\r\n                .catch(this.handleError);\r\n        } else {\r\n\r\n            return this.http.post(postURL, params, options)\r\n                .map((res: Response) => {\r\n                    return res.text();\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Response Handling\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * TODO: Improve comment.\r\n     *\r\n     * Callback to process response from file.\r\n     *\r\n     * @param   response\r\n     *\r\n     * @returns\r\n     */\r\n    private extractFileData(response: Response): Element {\r\n\r\n        // this.logger.info('extractFileData(): response = ' + response.text());\r\n        if (!response || XmlParser.findFirstDescendantByName(\r\n                XmlParser.xmlStringToElement(response.text()), 'parsererror')) {\r\n            InjectorService.injector.get(PopUpService).openSystemMessage(this.UNIDENTIFIED_FAILURE);\r\n            return undefined;\r\n        }\r\n\r\n        return XmlParser.xmlStringToElement(response.text());\r\n    }\r\n\r\n    /**\r\n     * TODO: Improve comment.\r\n     *\r\n     * Callback to process response data from server.\r\n     *\r\n     * @param   response\r\n     *\r\n     * @returns\r\n     */\r\n    protected extractServerData(response: Response): Element {\r\n\r\n        const popUpService: PopUpService = InjectorService.injector.get(PopUpService);\r\n        try {\r\n            // this.logger.debug('extractServerData(): response = ' + response.text());\r\n\r\n            // Convert responseString to XML\r\n            this.responseXml = XmlParser.xmlStringToElement(response.text());\r\n\r\n            // DOM parser used to build XML doesn't throw errors\r\n            // so checking for parsererror tag to identify abnormal responses from server\r\n            if (XmlParser.findFirstDescendantByName(this.responseXml, 'parsererror')) {\r\n                this.logger.error ('ServerTransaction.processResponse(): parsererror tag found');\r\n\r\n                let errorString: string;\r\n\r\n                // If error found check for session timeout (otherwise unrecognized response)\r\n                const timeoutSearchString: string = 'action=\"./Login.aspx?';\r\n\r\n                if (response.text().indexOf(timeoutSearchString) > 0) {\r\n                    // Finding timeoutSearchString in response indicates that the user's session has timed out\r\n                    this.logger.error('ServerTransaction.processResponse(): session timeout found');\r\n                    errorString = '<error>' + this.SESSION_TIMEOUT + '</error>';\r\n                    popUpService.openSystemMessage(this.SESSION_TIMEOUT);\r\n\r\n                } else {\r\n                    // Otherwise we have a response from the server that we can't identify\r\n                    this.logger.error('##### ServerTransaction.processResponse(): unidentifiable response');\r\n                    errorString = '<error>' + this.UNIDENTIFIED_FAILURE + '</error>';\r\n                    popUpService.openSystemMessage(this.UNIDENTIFIED_FAILURE);\r\n                }\r\n\r\n                // Return error response\r\n                this.logger.error('##### ServerTransaction.processResponse(): errorString = ' + errorString);\r\n                return XmlParser.xmlStringToElement(errorString);\r\n\r\n            } else {\r\n                // If no error return response from server\r\n                this.logger.error\r\n                ('##### ServerTransaction.processResponse(): parsererror tag NOT found process normally');\r\n                return this.responseXml;\r\n            }\r\n\r\n        } catch (e) {\r\n            // Handles responses from the server that fail parsing (also not identifiable)\r\n            this.logger.error('##### ServerTransaction.processResponse(): unidentifiable response ' + e.toString());\r\n            popUpService.openSystemMessage(this.UNIDENTIFIED_FAILURE);\r\n            return XmlParser.xmlStringToElement('<error>' + this.UNIDENTIFIED_FAILURE + '</error>');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback to handle errors communicating with server (generally no response or bad URL).\r\n     *\r\n     * TODO: Add additional processing (Flash version also opened popup with error code/message (from Message.as)).\r\n     *\r\n     * @param   error\r\n     *\r\n     * @returns\r\n     */\r\n    protected handleError(error: any): Observable<any> {\r\n\r\n        this.logger.error('http-request-handler.handleError(): ' + error);\r\n        InjectorService.injector.get(PopUpService).openSystemMessage('http-request-handler.handleError(): ' + error);\r\n        return Observable.throw(error);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/http-request-handler.ts","import { Observable }   from 'rxjs/Observable';\r\n\r\nimport { Transaction }  from './transaction';\r\n\r\nimport { LoadConfigTaskHandler }    from './transaction-task-handlers/load-config.task-handler';\r\n\r\n\r\n/**\r\n * This class is responsible for loading configuration data from file.\r\n *\r\n * @see Transaction\r\n * @see TransactionDataSource\r\n */\r\nexport class LoadConfigTransaction extends Transaction {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new LoadConfigTransaction instance.\r\n     */\r\n    constructor() {\r\n\r\n        super('LoadConfig');\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public startTransaction(): Observable<any> {\r\n\r\n        // add TaskHandler for loading config data\r\n        const taskHandler: LoadConfigTaskHandler = new LoadConfigTaskHandler();\r\n        taskHandler.buildRequestXml();\r\n        this.addTaskHandler(taskHandler);\r\n\r\n        // Send request to get processed\r\n        return super.startTransaction();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/load-config.transaction.ts","import { Observable }   from 'rxjs/Observable';\r\n\r\nimport { Transaction }  from './transaction';\r\n\r\nimport { LoadPageTaskHandler }  from './transaction-task-handlers/load-page.task-handler';\r\n\r\n\r\n/**\r\n * This class is responsible for loading page data from the various TransactionDataSources (server/file/memory).\r\n *\r\n * @see Transaction\r\n * @see TransactionDataSource\r\n */\r\nexport class LoadPageTransaction extends Transaction {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The unique ID of the Page whose data we will load.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private pageID: string;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new LoadPageTransaction instance.\r\n     *\r\n     * @param   pageID   The unique ID of the Page whose data we will load.\r\n     */\r\n    constructor(pageID: string) {\r\n\r\n        super('LoadPage');\r\n\r\n        this.pageID = pageID;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Methods\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    public startTransaction(): Observable<any> {\r\n\r\n        // add TaskHandler for loading page data\r\n        const loadPageTaskHandler: LoadPageTaskHandler = new LoadPageTaskHandler();\r\n        loadPageTaskHandler.buildRequestXml(this.pageID);\r\n        this.addTaskHandler(loadPageTaskHandler);\r\n\r\n        // After building up all requests, sending out all requests to get processed\r\n        return super.startTransaction();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/load-page.transaction.ts","import { InjectorService }              from '../../services/injector.service';\nimport { StartupConfigurationService }  from '../../../../../model/services/startup-configuration-service';\n\nimport { ConfigDataObject }         from '../../data-objects/config.data-object';\nimport { TransactionDataSource }    from '../transaction';\nimport { TransactionTaskHandler }   from './transaction-task-handler';\n\nimport { Log }  from '../../../log';\n\n\n/**\n * This task handler makes the request to load the application's configuration file.  The response is then parsed and\n * from that data a configuration data object is created in the startup configuration service for use by the rest of the\n * application.\n *\n * @see TransactionTaskHandler\n * @see StartupConfigurationService\n * @see ConfigDataObject\n */\nexport class LoadConfigTaskHandler extends TransactionTaskHandler {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Constructor / Initialization\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Constructor - creates a new LoadConfigTaskHandler instance.\n     */\n    constructor() {\n\n        super('LoadConfig');\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Accessors\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @inheritDoc\n     */\n    protected setDataSource(): void {\n\n        // data source is always \"File\"\n        this._dataSource = TransactionDataSource.File;\n        this.fileUrl = './assets/config.xml';\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Request Handling\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Builds the XML for the load config request.\n     *\n     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the\n     * response if a valid one is received.\n     *\n     * @returns The root element of the load config request XML.\n     */\n    public buildRequestXml(): Element {\n\n        return this.requestXml;\n    }\n\n    /**\n     * Parse the XML response to our load configuration request, and create a configuration data object in the\n     * StartupConfigurationService for use by the rest of the application.\n     *\n     * @inheritDoc\n     */\n    public processResponse(): void {\n\n        const startupConfigurationService: StartupConfigurationService =\n            InjectorService.injector.get(StartupConfigurationService);\n\n        startupConfigurationService.config = new ConfigDataObject(this.responseData);\n\n        // Set the logger's log level to the value we got from config.xml.\n        Log.getInstance().configureLoggerFactory(startupConfigurationService.config.logLevel);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-config.task-handler.ts","import { InjectorService }  from '../../services/injector.service';\nimport { PageService }      from '../../services/page.service';\n\nimport { ElementDataObject }    from '../../data-objects/element.data-object';\nimport { PageDataObject }       from '../../data-objects/page.data-object';\n\nimport { TransactionDataSource }    from '../transaction';\nimport { TransactionTaskHandler }   from './transaction-task-handler';\n\nimport { Log, Logger }  from '../../../log';\nimport { XmlParser }    from '../xml-parser';\n\n\n/**\n * This task handler makes the request to load the content data for a given page in the course.  The response is then\n * parsed and from that data a page data object is created in the page service for use by the rest of the application.\n *\n * @see TransactionTaskHandler\n * @see PageService\n * @see PageDataObject\n */\nexport class LoadPageTaskHandler extends TransactionTaskHandler {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Instance Variables / Properties\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * An instance of the logger class for outputting log messages.\n     *\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\n     * each log statement that is output.\n     *\n     * @default undefined\n     */\n    private loadPageTaskHandlerLogger: Logger;\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Constructor / Initialization\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Constructor - creates a new LoadPageTaskHandler instance.\n     */\n    constructor() {\n\n        super('LoadEditScreen');\n    }\n\n    /**\n     * @inheritDoc\n     */\n    protected constructorPreprocessing(): void {\n\n        this.loadPageTaskHandlerLogger = Log.getInstance().getLogger('LoadPageTaskHandler');\n\n        super.constructorPreprocessing();\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Accessors\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * In addition to the typical factors that determine what our dataSource should be, for the LoadPageTaskHandler\n     * we also need the pageID of the page we are attempting to load.\n     *\n     * @inheritDoc\n     *\n     * @param   pageID  The ID of the page we are attempting to load.\n     *\n     * @see TransactionDataSource\n     */\n    protected setDataSource(pageID?: string): void {\n\n        // If the Player was invoked from the PageDesigner, and the pageID of the page we are trying to load belongs to\n        // the page currently being edited, then we need to get our data from memory so we can show the latest changes.\n        //\n        // If the Player was invoked from the TemplateDesigner, there is no page to load, just the Template.  Template\n        // data is also loaded from memory to show potentially unsaved changes in the TemplateDesigner.\n        //\n        // Otherwise we call our super's implementation to determine the dataSource.\n        //\n        // NOTE: The unitID passed in from the PageDesigner is actually a pageID (I know right?)\n        if ((this.startupConfigurationService.caller === 'Page' && pageID === this.startupConfigurationService.unitId)\n            || (this.startupConfigurationService.caller === 'Template')) {\n\n            this._dataSource = TransactionDataSource.Memory;\n\n        } else {\n\n            super.setDataSource();\n        }\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Request Handling\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Builds the XML for the load page request.\n     *\n     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the\n     * response if a valid one is received.\n     *\n     * @param   pageID  The page ID of the page whose content we wish to load.\n     *\n     * @returns The root element of the load page request XML.\n     */\n    public buildRequestXml(pageID: string): Element {\n\n        this.requestXml.appendChild(\n\n            XmlParser.xmlStringToElement(`<Page><PageID>${pageID}</PageID></Page>`)\n        );\n\n        // Reset the dataSource based on the pageID.\n        this.setDataSource(pageID);\n\n        // If the Player is launched from the PageDesigner starting on the page that is currently being edited\n        // (dataSource is Memory, see setDataSource for details), set the location of the page content data.\n        // If player is offline, data source is File, set FileURL\n        if (this.dataSource === TransactionDataSource.Memory) {\n            this._memoryObject = window.opener.Preview.pageData;\n        } else if (this.dataSource === TransactionDataSource.File) {\n            this.fileUrl = this.startupConfigurationService.getPageFileUrl(pageID);\n        }\n\n        return this.requestXml;\n    }\n\n    /**\n     * Creates the page data and assigns it to the PageService.\n     *\n     * @inheritDoc\n     */\n    public processResponse(): void {\n\n        let responseXML: Element;\n\n        // A reference to the \"Page\" Element which contains all of the page's properties as well as being the root of\n        // all Elements that make up the page content.  Unlike many other Elements, this one does not have a direct\n        // correlation with a data object.  Instead, its properties together with the child Elements of the\n        // ElementContainer are used to create the PageDataObject.\n        let pageElement: Element;\n\n        if (this.dataSource === TransactionDataSource.Memory) {\n\n            // If response is from MEMORY, root level element is the Page element\n            responseXML = XmlParser.xmlStringToElement(this.responseData);\n            pageElement = responseXML;\n\n\n        } else {\n\n            responseXML = this.responseData;\n            pageElement = XmlParser.findFirstDescendantByName(responseXML, 'Page');\n\n        }\n\n        this.loadPageTaskHandlerLogger.debug('processResponse(): Load Edit Screen ResponseXML = ');\n        // NOTE:    logging the responseXML directly (without concatenating to any string) allows object inspection in\n        //          the chrome developer tool.\n        // console.log('*** Page Data ***');\n        // console.log(responseXML.innerHTML);\n\n        const pageService: PageService = InjectorService.injector.get(PageService);\n\n        // A reference to the \"ElementContainer\" Element which is the parent of all the Elements that make up the page\n        // content.  It too does not have a direct correlation with a particular data object.\n        const elementContainerElement: Element = XmlParser.findFirstDescendantByName(pageElement, 'ElementContainer');\n\n        // The data object representation of the page content which we create from the \"ElementContainer\" Element and\n        // its descendants.\n        const pageContent: ElementDataObject = new ElementDataObject(elementContainerElement);\n\n        // The data object representation of the page which we create using the properties of the \"Page\" Element along\n        // with the \"ElementContainer\" Element and its descendants.\n        const newPage: PageDataObject = new PageDataObject(pageContent, pageElement);\n\n        pageService.page = newPage;\n\n        // NOTE:    logging the PageDataObject directly (without concatenating to any string) allows object inspection\n        //          in the chrome developer tool.\n        // console.log('*** Page Object ***');\n        // console.log(newPage);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-page.task-handler.ts","import { InjectorService }  from '../../services/injector.service';\r\nimport { ReferenceService } from '../../services/reference.service';\r\n\r\nimport { ReferenceDataObject }  from '../../data-objects/reference.data-object';\r\n\r\nimport { TransactionDataSource }    from '../transaction';\r\nimport { TransactionTaskHandler }   from './transaction-task-handler';\r\n\r\nimport { Log, Logger }  from '../../../log';\r\nimport { XmlParser }    from '../xml-parser';\r\n\r\n\r\n/**\r\n * This task handler makes the request to load the list of external references associated with the course.  The response\r\n * is then parsed and from that data an array of reference data objects is created in the reference service for use by\r\n * the rest of the application.\r\n *\r\n * @see TransactionTaskHandler\r\n * @see ReferenceService\r\n * @see ReferenceDataObject\r\n */\r\nexport class LoadReferencesTaskHandler extends TransactionTaskHandler {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private loadReferencesTaskHandlerLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new LoadReferencesTaskHandler instance.\r\n     */\r\n    constructor() {\r\n\r\n        super('LoadReferenceList');\r\n\r\n        // If player is offline, data source is File, set FileURL\r\n        if (this.dataSource === TransactionDataSource.File) {\r\n            this.fileUrl = this.startupConfigurationService.referenceFileUrl;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n\r\n        this.loadReferencesTaskHandlerLogger = Log.getInstance().getLogger('LoadReferencesTaskHandler');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Request Handling\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Builds the XML for the load reference list request.\r\n     *\r\n     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the\r\n     * response if a valid one is received.\r\n     *\r\n     * @param   unitID  The unit ID of the course whose references we wish to load.\r\n     * @param   pageID  The page ID of the current page in the course whose references we wish to load.\r\n     *\r\n     * @returns The root element of the load reference list request XML.\r\n     */\r\n    public buildRequestXml(unitID?: string, pageID?: string): Element {\r\n\r\n        if (pageID) {\r\n\r\n            this.requestXml.appendChild\r\n            (\r\n                XmlParser.xmlStringToElement(`<Page><PageID>${pageID}</PageID></Page>`)\r\n            );\r\n\r\n        } else {\r\n\r\n            this.requestXml.appendChild\r\n                (\r\n                    XmlParser.xmlStringToElement(`<Unit><UnitID>${unitID}</UnitID></Unit>`)\r\n                );\r\n        }\r\n\r\n        return this.requestXml;\r\n    }\r\n\r\n    /**\r\n     * Creates the reference list and assigns it to the ReferenceService.\r\n     *\r\n     * @inheritDoc\r\n     */\r\n    public processResponse(): void {\r\n\r\n        this.loadReferencesTaskHandlerLogger.trace('Load References ResponseXML = ' + this.responseData);\r\n\r\n        let responseXML: Element = this.responseData;\r\n        if (this.dataSource === TransactionDataSource.File) {\r\n            responseXML = XmlParser.findFirstDescendantByName(this.responseData, 'Response');\r\n        }\r\n\r\n        const  referencesElement: Element = XmlParser.findFirstDescendantByName(responseXML, 'References');\r\n        const responseElements: Array<Element> = XmlParser.getChildElements(referencesElement);\r\n        const referenceService: ReferenceService = InjectorService.injector.get(ReferenceService);\r\n\r\n        referenceService.references = [];\r\n\r\n        for (const element of responseElements) {\r\n\r\n            console.log(element.innerHTML);\r\n            console.log(element.tagName);\r\n\r\n            if (element.tagName === 'Reference') {\r\n                const newReference: ReferenceDataObject = new ReferenceDataObject();\r\n                newReference.initializeDataFromServer(element);\r\n                referenceService.references.push(newReference);\r\n            }\r\n        }\r\n\r\n        this.loadReferencesTaskHandlerLogger.trace(referenceService.serializeClass());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-references.task-handler.ts","import { InjectorService }  from '../../services/injector.service';\nimport { UnitTypeService }  from '../../services/unit-type.service';\n\nimport { UnitTypeDataObject }   from '../../data-objects/unit-type.data-object';\n\nimport { TransactionDataSource }    from '../transaction';\nimport { TransactionTaskHandler }   from './transaction-task-handler';\n\nimport { Log, Logger }  from '../../../log';\nimport { XmlParser }    from '../xml-parser';\n\n\n/**\n * This task handler makes the request to load the unit type list which specifies the various types of units that are\n * available for the course.  The response is then parsed and from that data an array of unit type data objects is\n * created in the unit type service for use by the rest of the application.\n *\n * @see TransactionTaskHandler\n * @see UnitTypeService\n * @see UnitTypeDataObject\n */\nexport class LoadUnitTypeTaskHandler extends TransactionTaskHandler {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Instance Variables / Properties\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * An instance of the logger class for outputting log messages.\n     *\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\n     * each log statement that is output.\n     *\n     * @default undefined\n     */\n    private loadUnitTypeTaskHandlerLogger: Logger;\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Constructor / Initialization\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Constructor - creates a new LoadUnitTypeTaskHandler instance.\n     */\n    constructor() {\n\n        super('LoadUnitType');\n\n        // If player is offline, data source is File, set FileURL\n        if (this.dataSource === TransactionDataSource.File) {\n            this.fileUrl = this.startupConfigurationService.unitTypeFileUrl;\n        }\n    }\n\n    /**\n     * @inheritDoc\n     */\n    protected constructorPreprocessing(): void {\n\n        this.loadUnitTypeTaskHandlerLogger = Log.getInstance().getLogger('LoadUnitTypeTaskHandler');\n\n        super.constructorPreprocessing();\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Request Handling\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Builds the XML for the load unit type list request.\n     *\n     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the\n     * response if a valid one is received.\n     *\n     * NOTE:\n     *          Yes, this method is supposed to be basically empty. :)  Unlike most other task handlers we just need the\n     *          requestXml to have a single Element with our requestName as its tagName.  This is setup in our super.\n     *\n     * @returns The root element of the load unit type list request XML.\n     */\n    public buildRequestXml(): Element {\n\n        return this.requestXml;\n    }\n\n    /**\n     * Creates the unit type array inside the UnitTypeService.\n     *\n     * @inheritDoc\n     */\n    public processResponse(): void {\n\n        this.loadUnitTypeTaskHandlerLogger.trace('Load Unit Type ResponseXML => ');\n        console.log(this.responseData);\n\n        let responseXML: Element = this.responseData;\n        if (this.dataSource === TransactionDataSource.File) {\n            responseXML = XmlParser.findFirstDescendantByName(this.responseData, 'Response');\n        }\n\n        const responseElements: Array<Element> = XmlParser.getChildElements(responseXML);\n\n        const unitTypeService: UnitTypeService = InjectorService.injector.get(UnitTypeService);\n        unitTypeService.unitTypes = [];\n\n        for (const element of responseElements) {\n\n            if (element.tagName === 'UnitType') {\n\n                const newUnitType: UnitTypeDataObject = new UnitTypeDataObject();\n                newUnitType.initializeDataFromServer(element);\n                unitTypeService.unitTypes.push(newUnitType);\n            }\n        }\n\n        this.loadUnitTypeTaskHandlerLogger.trace(unitTypeService.serializeClass());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-unit-type.task-handler.ts","import { InjectorService }  from '../../services/injector.service';\nimport { UnitService }      from '../../services/unit.service';\n\nimport { TransactionDataSource }    from '../transaction';\nimport { TransactionTaskHandler }   from './transaction-task-handler';\n\nimport { Log, Logger }  from '../../../log';\nimport { XmlParser }    from '../xml-parser';\n\n\n/**\n * This task handler makes the request to load the course's unit hierarchy (A.K.A course structure, A.K.A. course map,\n * A.K.A. table of contents).  The response is then parsed and the data sent to the unit service for further processing\n * and ultimately use by the rest of the application.\n *\n * @see TransactionTaskHandler\n * @see UnitService\n */\nexport class LoadUnitTaskHandler extends TransactionTaskHandler {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Instance Variables / Properties\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * An instance of the logger class for outputting log messages.\n     *\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\n     * each log statement that is output.\n     *\n     * @default undefined\n     */\n    private loadUnitTaskHandlerLogger: Logger;\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Constructor / Initialization\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Constructor - creates a new LoadUnitTaskHandler instance.\n     */\n    constructor() {\n\n        super('LoadTOC');\n\n        // If the Player is launched from the CourseDesigner (dataSource is Memory, see setDataSource for details), set\n        // the location of the unit data.\n        // If player is offline, data source is File, set FileURL\n        if (this.dataSource === TransactionDataSource.Memory) {\n            this._memoryObject = window.opener.Preview.unitData;\n        } else if (this.dataSource === TransactionDataSource.File) {\n            this.fileUrl = this.startupConfigurationService.unitFileUrl;\n        }\n    }\n\n    /**\n     * @inheritDoc\n     */\n    protected constructorPreprocessing(): void {\n\n        this.loadUnitTaskHandlerLogger = Log.getInstance().getLogger('LoadUnitTaskHandler');\n\n        super.constructorPreprocessing();\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Accessors\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * @inheritDoc\n     */\n    protected setDataSource(): void {\n\n        // If the Player was invoked from the CourseDesigner, then we need to get our data from memory so we can show\n        // the latest changes.  Otherwise we call our super's implementation to determine the dataSource.\n        if (this.startupConfigurationService.caller === 'Module') {\n\n            this._dataSource = TransactionDataSource.Memory;\n\n        } else {\n\n            super.setDataSource();\n        }\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Request Handling\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Builds the XML for the load unit hierarchy request.\n     *\n     * @param   unitID  The unit ID of the course whose unit hierarchy we wish to load.\n     * @param   pageID  The page ID of the current page in the course whose unit hierarchy we wish to load.\n     *\n     * @returns The root element of the load unit hierarchy request XML.\n     */\n    public buildRequestXml(unitID?: string, pageID?: string): Element {\n\n        if (pageID) {\n\n            this.requestXml.appendChild\n            (\n                XmlParser.xmlStringToElement(`<Page><PageID>${pageID}</PageID></Page>`)\n            );\n\n        } else {\n\n            this.requestXml.appendChild\n                (\n                    XmlParser.xmlStringToElement(`<Unit><UnitID>${unitID}</UnitID></Unit>`)\n                );\n        }\n\n        return this.requestXml;\n    }\n\n    /**\n     * Creates the course's unit hierarchy and assigns it to the UnitService.\n     *\n     * @inheritDoc\n     */\n    public processResponse(): void {\n\n        let rootUnitResponseXML: Element;\n        // If the dataSource is TransactionDataSource.Memory, it's a root unit element XML.\n        if (this.dataSource === TransactionDataSource.Memory) {\n            rootUnitResponseXML = XmlParser.xmlStringToElement(this.responseData);\n        } else {\n            rootUnitResponseXML = XmlParser.findFirstDescendantByName(this.responseData, 'Unit');\n        }\n\n        this.loadUnitTaskHandlerLogger.trace('processResponse(): Load Unit root responseXML = ');\n        console.log(rootUnitResponseXML);\n\n        // set course unit hierarchy in the UnitService to make it available to the rest of the application.\n        const unitService: UnitService = InjectorService.injector.get(UnitService);\n        unitService.setRootUnit(rootUnitResponseXML);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-unit.task-handler.ts","import { InjectorService }  from '../../services/injector.service';\r\nimport { VariableService }  from '../../services/variable.service';\r\n\r\nimport { VariablePlayableDataObject }   from '../../../../../model/data-objects/variable.playable.data-object';\r\n\r\nimport { TransactionDataSource }    from '../transaction';\r\nimport { TransactionTaskHandler }   from './transaction-task-handler';\r\n\r\nimport { Log, Logger }  from '../../../log';\r\nimport { XmlParser }    from '../xml-parser';\r\n\r\n\r\n/**\r\n * This task handler makes the request to load all of the course's user-defined variables.  The response is then parsed\r\n * and from that data an array of variable playable data objects is created in the variable service for use by the rest\r\n * of the application.\r\n *\r\n * @see TransactionTaskHandler\r\n * @see VariableService\r\n * @see VariablePlayableDataObject\r\n */\r\nexport class LoadUserVariablesTaskHandler extends TransactionTaskHandler {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An instance of the logger class for outputting log messages.\r\n     *\r\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\r\n     * each log statement that is output.\r\n     *\r\n     * @default undefined\r\n     */\r\n    private loadUserVariablesTaskHandlerLogger: Logger;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor - creates a new LoadUserVariablesTaskHandler instance.\r\n     */\r\n    constructor() {\r\n\r\n        super('LoadVariableList');\r\n\r\n        // If player is offline, data source is File, set FileURL\r\n        if (this.dataSource === TransactionDataSource.File) {\r\n            this.fileUrl = this.startupConfigurationService.variableFileUrl;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n\r\n        this.loadUserVariablesTaskHandlerLogger = Log.getInstance().getLogger('LoadUserVariablesTaskHandler');\r\n\r\n        super.constructorPreprocessing();\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Request Handling\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Builds the XML for the load user-defined variables request.\r\n     *\r\n     * @param   unitID  The unit ID of the course whose user defined variables we wish to load.\r\n     * @param   pageID  The page ID of the current page in the course whose user defined variables we wish to load.\r\n     *\r\n     * @returns The root element of the load user-defined variables request XML.\r\n     */\r\n    public buildRequestXml(unitID?: string, pageID?: string): Element {\r\n\r\n        if (pageID) {\r\n            this.requestXml.appendChild\r\n            (\r\n                XmlParser.xmlStringToElement(`<Page><PageID>${pageID}</PageID></Page>`)\r\n            );\r\n\r\n        } else {\r\n\r\n            this.requestXml.appendChild\r\n                (\r\n                    XmlParser.xmlStringToElement(`<Unit><UnitID>${unitID}</UnitID></Unit>`)\r\n                );\r\n        }\r\n\r\n        return this.requestXml;\r\n    }\r\n\r\n    /**\r\n     * Creates the user-defined variable list inside the VariableService.\r\n     *\r\n     * @inheritDoc\r\n     */\r\n    public processResponse(): void {\r\n\r\n        let responseXML: Element = this.responseData;\r\n        if (this.dataSource === TransactionDataSource.File) {\r\n            responseXML = XmlParser.findFirstDescendantByName(this.responseData, 'Response');\r\n        }\r\n\r\n        const variableService: VariableService = InjectorService.injector.get(VariableService);\r\n        variableService.variables = [];\r\n\r\n        const responseElements: Array<Element> = XmlParser.getChildElements(responseXML);\r\n\r\n        for (const element of responseElements) {\r\n\r\n            if (element.tagName === 'Variable') {\r\n\r\n                const newVariable: VariablePlayableDataObject = new VariablePlayableDataObject();\r\n                newVariable.initializeDataFromServer(element);\r\n                variableService.variables.push(newVariable);\r\n            }\r\n        }\r\n\r\n        this.loadUserVariablesTaskHandlerLogger.trace(variableService.serializeClass());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-user-variables.task-handler.ts","import { InjectorService }              from '../../services/injector.service';\r\nimport { StartupConfigurationService }  from '../../../../../model/services/startup-configuration-service';\r\n\r\nimport { TransactionDataSource }    from '../transaction';\r\n\r\nimport { XmlParser }    from '../xml-parser';\r\n\r\n\r\n/**\r\n * This class is a helper to the Transaction class.  It lets the Transaction know what type of communication is required\r\n * and provides handling for any responses specific to that communication.  This includes handling any errors indicated\r\n * in the response. It is abstract, containing the common functionality for all transaction task handlers, and must be\r\n * sub-classed for each specific use case.\r\n *\r\n * @see Transaction\r\n */\r\nexport abstract class TransactionTaskHandler {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Reference to StartupConfigurationService singleton.\r\n     *\r\n     * @default A StartupConfigurationService reference.\r\n     */\r\n    protected startupConfigurationService: StartupConfigurationService =\r\n        InjectorService.injector.get(StartupConfigurationService);\r\n\r\n    /**\r\n     * @see dataSource\r\n     */\r\n    protected _dataSource: TransactionDataSource;\r\n\r\n    /**\r\n     * @see memoryObject\r\n     */\r\n    protected _memoryObject: any;\r\n\r\n    /**\r\n     * @see fileUrl\r\n     */\r\n    private _fileUrl: string;\r\n\r\n    /**\r\n     * @see requestName\r\n     */\r\n    private _requestName: string;\r\n\r\n    /**\r\n     * @see requestXml\r\n     */\r\n    private _requestXml: Element;\r\n\r\n    /**\r\n     * @see responseData\r\n     */\r\n    private _responseData: any;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Abstract Constructor - provides implementation common to all TransactionTaskHandlers.\r\n     *\r\n     * @param   requestName The name of the request this handler uses to ask for data.  It is sent to us as a string\r\n     *                      literal from the constructors of our derived classes.\r\n     */\r\n    constructor(requestName: string) {\r\n\r\n        this._requestName =  requestName;\r\n\r\n        const requestString: string =\r\n            `<Request Name=\"${this._requestName}\">\r\n            </Request>`;\r\n\r\n        this._requestXml = XmlParser.xmlStringToElement(requestString);\r\n        this.setDataSource();\r\n\r\n        this.constructorPreprocessing();\r\n    }\r\n\r\n    /**\r\n     * Runs any constructor process that is permitted to be overridden in derived classes.  Derived classes can use this\r\n     * method to apply logic specific to the derived class.  Any constructor process that should not be overridden by\r\n     * derived classes should be put directly in the constructor.\r\n     */\r\n    protected constructorPreprocessing(): void {\r\n\r\n        /* No implementation required. */\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The XML that defines the request this handler uses.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get requestXml(): Element {\r\n\r\n        return this._requestXml;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The value of the \"Name\" attribute of the Request tag in the XML that defines the request this handler uses.\r\n     *\r\n     * It is passed into our constructor as a string literal from the constructors of our derived classes.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get requestName(): string {\r\n\r\n        return this._requestName;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * A reference to the JavaScript object (it could be anything!) that contains the data required for this task\r\n     * handler when the dataSource is set to TransactionDataSource.Memory.\r\n     *\r\n     * Usually it is passed into an ExternalInterfaceHandler.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get memoryObject(): any {\r\n\r\n        return this._memoryObject;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The response data sent back to us from one of the various TransactionDataSources.\r\n     *\r\n     * Usually it is XML data, but it could be any object when coming from an external interface.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get responseData(): any {\r\n\r\n        return this._responseData;\r\n    }\r\n\r\n    public set responseData(value: any) {\r\n\r\n        this._responseData = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The URL of the file that contains the data this task handler needs when the dataSource is set to\r\n     * TransactionDataSource.File.\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get fileUrl(): string {\r\n\r\n        return this._fileUrl;\r\n    }\r\n\r\n    public set fileUrl(value: string) {\r\n\r\n        this._fileUrl = value;\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The source that this task handler needs to retrieve data from.  Typical sources include: the application server,\r\n     * a file from the filesystem, or an object in memory.\r\n     *\r\n     * Its value will be one of the members of the TransactionDataSource enumeration which specifies all of the sources\r\n     * transactions can retrieve data from.\r\n     *\r\n     * @see TransactionDataSource\r\n     *\r\n     * @default undefined\r\n     */\r\n    public get dataSource(): TransactionDataSource {\r\n\r\n        return this._dataSource;\r\n    }\r\n\r\n    /**\r\n     * The source that this task handler needs to retrieve data from.  Typical sources include: the application server,\r\n     * a file from the filesystem, or an object in memory.\r\n     *\r\n     * Its value will be one of the members of the TransactionDataSource enumeration which specifies all of the sources\r\n     * transactions can retrieve data from.\r\n     *\r\n     * For basic rules, the dataSource is determined by one or two factors:\r\n     *\r\n     *  1. The application or module that invoked the Player.\r\n     *  2. The name of the request that this TransactionTaskHandler uses.\r\n     *\r\n     * For advanced rules, see the documentation of the task handlers that override this method.\r\n     *\r\n     * @see TransactionDataSource\r\n     */\r\n    protected setDataSource(): void {\r\n\r\n        // This is the default data source.\r\n        this._dataSource = TransactionDataSource.Server;\r\n\r\n        // When running standalone we always get our data from a file.\r\n        if (this.startupConfigurationService.caller === 'Player') {\r\n\r\n            this._dataSource = TransactionDataSource.File;\r\n        }\r\n\r\n        // caller => Admin,Module,Page,Template,Player\r\n        switch (this.startupConfigurationService.caller) {\r\n\r\n            // TODO: create a stub for the load template request and put this in it\r\n        case 'Template': //\r\n            // only load template data, get from memory, othersie from server\r\n            if (this._requestName === 'LoadTemplate') {\r\n                   this._dataSource = TransactionDataSource.Memory;\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Data Handling\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * This method processes any data that may have been returned to us through our responseData property.\r\n     *\r\n     * Usually a Transaction will instantiate one or more TransactionTaskHandlers and then initiate any required\r\n     * communications on their behalf.  Upon reception, it will divide up an overall response from one of the\r\n     * TransactionDataSources.  Finally, it parses out individual responses and returns them to the\r\n     * TransactionTaskHandler that initially required the data.\r\n     *\r\n     * Typically the responseData is an XML Element (when dataSource is File or Server) or an XML-formatted string (when\r\n     * dataSource is Memory), but it could be any object when coming from an external interface.\r\n     */\r\n    public processResponse(): void {\r\n\r\n        /* No implementation required. */\r\n    }\r\n\r\n    /**\r\n     * Creates a CDATA Element by wrapping the given string in a CDATA tag and then converting the entire string to\r\n     * an Element.\r\n     *\r\n     * @param   data    The content to include in the CDATA Element.\r\n     *\r\n     * @returns A CDATA Element containing the given string as its content.\r\n     */\r\n    protected createCDATA(data: string): Element {\r\n\r\n        return XmlParser.xmlStringToElement(`<![CDATA[${data}]]>`);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts","import { Observable }   from 'rxjs/Observable';\n\nimport { InjectorService }              from '../services/injector.service';\nimport { PopUpService }                 from '../../../../model/services/pop-up.service';\nimport { StartupConfigurationService }  from '../../../../model/services/startup-configuration-service';\n\nimport { ExternalInterfaceHandler } from './external-interface-handler';\nimport { HttpRequestHandler }       from './http-request-handler';\nimport { TransactionTaskHandler }   from './transaction-task-handlers/transaction-task-handler';\n\nimport { Log, Logger }  from '../../log';\nimport { XmlParser }    from './xml-parser';\n\n\n/**\n * An enumeration that defines the various sources transactions can attempt to retrieve data from.\n *\n * Sources:\n *\n *  Server  -   The data is located on the application server.\n *\n *  File    -   The data resides in a file on the filesystem (either the application server's filesystem or the local\n *              client's filesystem).\n *\n *  Memory  -   The data is already loaded into an object held in client-side memory.\n */\nexport enum TransactionDataSource {\n\n    Server,\n    File,\n    Memory\n}\n\n\n/**\n * This class facilitates communication with sources external to the current module or application.  This includes\n * web servers, the file system, other application modules, etc.  It is abstract, containing the common functionality\n * for all transactions, and must be sub-classed for each specific use case.  A transaction contains one or more\n * TransactionTaskHandler helper classes that let it know what type of communication is required and provide handling\n * for any responses specific to that communication.  It also keeps track of observables returned from one or more\n * HttpRequestHandler helper classes it creates to perform the actual communication and handle any responses returned.\n *\n * A typical order of operations for a transaction is as follows:\n *\n *  1.  The service creates the appropriate transaction for a particular communication task.\n *  2.  The transaction instantiates specific TransactionTaskHandlers.\n *  3.  Where necessary, the transaction groups tasks by the destination the communications need to go to (server,\n *      file system, memory, etc.) and creates an HttpRequestHandler for each group.\n *  4.  The HttpRequestHandlers create and send their HttpRequests and return observables to the transaction.\n *  5.  The transaction subscribes to the observables returned by the HttpRequestHandlers and waits for the responses.\n *  6.  The HttpRequestHandlers receive (or don't) their responses and handle any errors such as server unavailable,\n *      and file not found.\n *  7.  The transaction is notified that the request responses have been received and validates them handling errors\n *      such as unknown response.\n *  8.  The transaction returns the individual responses back to the corresponding TransactionTaskHandlers.\n *  9.  The TransactionTaskHandlers parse their responses and potentially return data to the service or handle errors\n *      such as the response indicating that the communication did not have the desired result.\n *\n *  @see TransactionTaskHandler\n *  @see TransactionDataSource\n *  @see HttpRequestHandler\n *  @see ExternalInterfaceHandler\n */\nexport abstract class Transaction {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Instance Variables / Properties\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * A reference to the StartupConfigurationService singleton so we can access startup info.\n     *\n     * TODO: Used only by some subclasses at this point - should we keep it here?\n     *\n     * @default A StartupConfigurationService reference.\n     */\n    protected startupConfigurationService: StartupConfigurationService =\n        InjectorService.injector.get(StartupConfigurationService);\n\n    /**\n     * @see serverUrl\n     */\n    private _serverUrl: string = '../Admin/ProcessXMLRequest.aspx';\n\n    /**\n     * TODO: Add description.\n     *\n     * @default undefined\n     */\n    private applicationName: string;\n\n    /**\n     * TODO: Add description.\n     *\n     * @default undefined\n     */\n    private transactionName: string;\n\n    /**\n     * An array of source handlers.\n     *\n     * @default An empty array of arrays of TransactionTaskHandler.\n     */\n    private sourceHandlers: Array<Array<TransactionTaskHandler>> = [];\n\n    /**\n     * An array of the task handlers contained in this transaction.\n     *\n     * @default An empty array of TransactionTaskHandler.\n     */\n    private taskHandlers: Array<TransactionTaskHandler> = [];\n\n    /**\n     * An instance of the logger class for outputting log messages.\n     *\n     * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before\n     * each log statement that is output.\n     *\n     * @default undefined\n     */\n    private logger: Logger = Log.getInstance().getLogger('Transaction');\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Constructor / Initialization\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Abstract Constructor - provides implementation common to all Transactions.\n     *\n     * TODO: Add parameter descriptions\n     *\n     * @param   transactionName Needs description.\n     * @param   applicationName Needs description.\n     */\n    constructor(transactionName: string = null, applicationName: string = null) {\n\n        this.transactionName = transactionName;\n        this.applicationName = applicationName;\n\n        // TODO: should come up with some consistent way of handling applicationName\n        if (applicationName == null) {\n            this.applicationName = 'Reviewer';\n        }\n\n        this.logger.info('Transaction.constructor(): transactionName = ' + transactionName);\n        this.constructorPreprocessing();\n    }\n\n    /**\n     * Runs any constructor process that is permitted to be overridden in derived classes.  Derived classes can use this\n     * method to apply logic specific to the derived class.  Any constructor process that should not be overridden by\n     * derived classes should be put directly in the constructor.\n     */\n    protected constructorPreprocessing(): void {\n\n        /* No implementation required. */\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Accessors\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * The URL of the application server that can process our post request.\n     *\n     * @default '../Admin/ProcessXMLRequest.aspx'\n     */\n    public set serverUrl(value: string ) {\n\n        this._serverUrl = value;\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Start Communication\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Adds a task handler to our array.\n     *\n     * @param   taskHandler The TransactionTaskHandler object to add to our array.\n     */\n    protected addTaskHandler(taskHandler: TransactionTaskHandler): void {\n\n        this.taskHandlers.push(taskHandler);\n    }\n\n    /**\n     * Starts the process to get data from a TransactionDataSource (server/file/memory).\n     *\n     * @returns An array of Observables (one for each request that was dispatched).\n     */\n    protected sendRequest(): Observable<any>  {\n\n        console.log('Transaction.sendRequest(): started');\n\n        // Array of Observables returned from transaction data sources that were asked to supply data\n        const dataSourceObservables: Array<Observable<Element>> = [];\n\n        // %%%%%%% read server data (usually with multiple task handlers sent in a single HTTP request/response) %%%%%%%\n\n        // A subset of our taskHandlers array containing only those handlers requiring data from the application server.\n        const serverTaskHandlers: Array<TransactionTaskHandler> =\n            this.taskHandlers.filter((r) => r.dataSource === TransactionDataSource.Server);\n\n        // If there are any server task handlers, prepare a server request.\n        if (serverTaskHandlers.length > 0 ) {\n\n            // Setup an XML wrapper for the request.\n            const requestString: string = `<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n                <${this.applicationName}Request>\n                    <Action Event=\"${this.transactionName}\"></Action>\n                    <Requests></Requests>\n                </${this.applicationName}Request>`;\n\n            // Create an HttpRequestHandler to request data from the server.\n            const httpRequestHandler: HttpRequestHandler = new HttpRequestHandler();\n            httpRequestHandler.requestXML = XmlParser.xmlStringToElement(requestString);\n\n            // Build the contents of the overall request XML by combining the request XMLs from each of the server\n            // task handlers under the \"Requests\" Element in the requestString.\n            const requestsElement: Element =\n                XmlParser.findFirstDescendantByName(httpRequestHandler.requestXML, 'Requests');\n            serverTaskHandlers.forEach((r) => {\n\n                console.log(r.requestName + ' dataSource = ' + r.dataSource + ' Request XML = ' + r.requestXml);\n                requestsElement.appendChild(r.requestXml);\n            });\n\n            console.log(httpRequestHandler.requestXML);\n\n            // The observable returned by the HttpRequestHandler that sends and receives data to and from the server.\n            const serverObservable: Observable<Element> = httpRequestHandler.sendPostRequest(this._serverUrl)\n                .catch(this.handleObservableError);\n            dataSourceObservables.push(serverObservable);\n\n            this.sourceHandlers.push(serverTaskHandlers);\n        }\n\n        // %%%%%%%%% read file data (one file at a time) %%%%%%%%%%\n        this.taskHandlers.filter((r) => r.dataSource === TransactionDataSource.File).forEach((r) => {\n\n                console.log(r.requestName + ' dataSource = ' + r.dataSource + ` File URL = ${r.fileUrl}`);\n\n                // Create HTTRequestHandler to get data from file\n                const httpRequestFileHandler: HttpRequestHandler = new HttpRequestHandler();\n\n                // Get observable from HttpRequestHandler and add to dataSourceObservables array\n                const fileSource: Observable<Element> = httpRequestFileHandler.sendGetRequest(r.fileUrl)\n                    .catch(this.handleObservableError);\n\n                dataSourceObservables.push(fileSource);\n                this.sourceHandlers.push([r]);\n            }\n        );\n\n        // %%%%%%%%% read memory data %%%%%%%%%%\n        this.taskHandlers.filter((r) => r.dataSource === TransactionDataSource.Memory).forEach((r) => {\n\n            this.logger.info('Transaction.sendRequest(): MEMORY Task Handler = ' + r.requestName);\n\n            // Create ExternalInterfaceHandler to get data from memory\n            const externalInterfaceHandler: ExternalInterfaceHandler = new ExternalInterfaceHandler();\n\n            const memorySource: Observable<any> = externalInterfaceHandler.getObservable(r.memoryObject)\n                .catch(this.handleObservableError);\n\n            dataSourceObservables.push(memorySource);\n            this.sourceHandlers.push([r]);\n        });\n\n        return Observable.forkJoin(dataSourceObservables);\n    }\n\n    /**\n     * TODO: Needs description\n     *\n     * NOTE:\n     *          Normally derived classes override this method in order to add their specific implementation details.\n     *\n     * @returns {Observable<any>}\n     */\n    public startTransaction(): Observable<any> {\n\n        // this.logger.debug('startTransaction(): from transaction super');\n\n        return this.sendRequest()\n            .map(this.processObservableResponses, this)\n            .catch(this.handleObservableError);\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////// Handle Communication Response\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * TODO: Needs description\n     *\n     * @param error\n     *\n     * @returns {any}\n     */\n    private handleObservableError(error: any): Observable<any> {\n\n        InjectorService.injector.get(PopUpService).openSystemMessage(error.message);\n\n        // console.error('An http error occurred', error);\n        return Observable.throw(error.message || error);\n    }\n\n    /**\n     * Processes the observable responses that are returned from the various transaction data sources.\n     *\n     * @param   responses   An array of Observable responses returned by the data sources we asked for information from.\n     */\n    protected processObservableResponses(responses: Array<Element>): void {\n\n        console.log('Observable response source array length => ' + responses.length);\n\n        // Loop through the array of responses from the forkjoined observables\n        responses.forEach((response, index) => {\n\n            // this.logger.info('processObservableResponses(): data = ' + responseXML);\n            const handler: TransactionTaskHandler = this.sourceHandlers[index][0];\n            switch (handler.dataSource) {\n\n                // Right now we use this transaction class to interact with all other external files\n                // (for example, config,manifest) that return other formats.  So we leave converting\n                // the response to XML, if necessary, to the task handlers.\n                case TransactionDataSource.File:\n                    if (!response) {\n                        return;\n                    }\n                    handler.responseData = response;\n                    break;\n\n                case TransactionDataSource.Memory:\n                    // NOTE:    At this point, although Unit and Page data that we get from Designer memory are XML\n                    //          strings, we may use this to interact with other external javascript in the future that\n                    //          return other formats.  So we leave converting the response to XML, if necessary, to the\n                    //          task handlers.\n\n                    if (!response) {\n                        return;\n                    }\n\n                    handler.responseData = response;\n                    break;\n\n                case TransactionDataSource.Server:\n                    handler.responseData = response;\n\n                    // Check for a successful response.\n                    if (!this.validateRequestResponse(response)) {\n\n                        return;\n                    }\n\n                    // A reference to the \"Responses\" Element which contains a collection of \"Response\" Elements.\n                    const responsesElement: Element = XmlParser.findFirstDescendantByName(response, 'Responses');\n                    // The task handlers associated with this particular observable response.\n                    const handlers: Array<TransactionTaskHandler> = this.sourceHandlers[index];\n\n                    // Parse the response for individual task handler results, then map those back to the appropriate\n                    // task handler.\n                    for ( const child of XmlParser.getChildElements(responsesElement) ) {\n\n                        // Get the \"Name\" attribute from the \"Response\" Element.\n                        const responseName: string = XmlParser.getAttribute(child, 'Name');\n\n                        // Use the \"Name\" attribute to match the \"Response\" root Element with the appropriate task\n                        // handler, then set the task handler's responseData property.\n                        handlers.find((h) => h.requestName === responseName).responseData = child;\n\n                    }\n\n                    break;\n            }\n        });\n\n        // Call individual task handlers processResponse methods\n        this.processTaskHandlerResponses();\n    }\n\n    /**\n     * Handles request status errors that are indicated in the response XML. Sends a notification to open a popup\n     * containing the error message and writes the error to the log.\n     *\n     * @param   responseXML The root Element of the XML request response.\n     *\n     * @return True if the request status is \"Succeed\", otherwise false.\n     */\n    protected validateRequestResponse(responseXML: Element): boolean {\n\n        const requestStatus: string = XmlParser.getTextContent(\n            XmlParser.findFirstDescendantByName(responseXML, 'RequestProcessStatus'));\n        // this.logger.debug('validateRequestResponse(): requestStatus = ' + requestStatus);\n\n        if (requestStatus !== 'Succeed') {\n\n            // TODO: do we popup ErrorData here?\n            const responseErrorCode: string = XmlParser.getTextContent(\n               XmlParser.findFirstDescendantByName(responseXML, 'ErrorCode'));\n            const responseErrorMessage: string = XmlParser.getTextContent(\n               XmlParser.findFirstDescendantByName(responseXML, 'ErrorMessage'));\n            InjectorService.injector.get(PopUpService).openSystemMessage\n            (responseErrorCode + ': ' + responseErrorMessage);\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Calls each individual task handler to process its own response data.\n     */\n    protected processTaskHandlerResponses(): void {\n\n        this.taskHandlers.forEach((handler) => {\n\n            // this.logger.debug('processResponse(): for handler -> ' + handler.requestName);\n            handler.processResponse();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/transaction.ts","import { InjectorService }  from '../services/injector.service';\r\nimport { PopUpService }     from '../../../../model/services/pop-up.service';\r\n\r\n\r\n/**\r\n * This module exports utility functions that provide the ability to work with / manipulate XML.\r\n *\r\n * NOTE:\r\n *          Originally this was implemented as class with static methods.  We're trying it as a module to see if it's\r\n *          better.\r\n *\r\n * TODO: Turn this into a service.\r\n *\r\n * We're not supposed to use internal modules or namespaces anymore.  I thought this was an external module but I guess\r\n * it's setup wrong and I'm not sure how to do it.  Anyway now that we know better this class makes much more sense as a\r\n * service.\r\n */\r\nexport module XmlParser {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// XML Creation / Conversion\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Uses the ES6 DOMParser to parse the given XML string into a Document object.\r\n     *\r\n     * @param   xmlString   An XML formatted string.\r\n     *\r\n     * @returns A Document object if successful, otherwise undefined.\r\n     */\r\n    export function xmlStringToDocument(xmlString: string): Document {\r\n\r\n        const domParser: DOMParser = new DOMParser();\r\n\r\n        try {\r\n\r\n            return domParser.parseFromString(xmlString, 'text/xml');\r\n\r\n        } catch (e) {\r\n\r\n            InjectorService.injector.get(PopUpService).openSystemMessage(e.toString());\r\n            // console.log('XmlParser.xmlStringToDocument(): error: ' + e);\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convenience function that uses xmlStringToDocument to parse the given XML string into a Document object then\r\n     * dereferences the Document in order to return its root node.\r\n     *\r\n     * @param   xmlString   An XML formatted string.\r\n     *\r\n     * @returns The root node of the new Document if successful, otherwise undefined.\r\n     */\r\n    export function xmlStringToElement(xmlString: string): HTMLElement {\r\n\r\n        const xmlDoc: Document = xmlStringToDocument(xmlString);\r\n\r\n        if (xmlDoc !== undefined) {\r\n\r\n            return xmlDoc.documentElement;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Converts a DOM Document or DOM Element object to a string.\r\n     *\r\n     * @param   xml The Document or Element to convert.\r\n     */\r\n    export function xmlToString(xml: any): string {\r\n\r\n        return (new XMLSerializer()).serializeToString(xml);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// XML Hierarchy Searching\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Recursively Finds the first descendant of the given Element that has the specified tag name using a breadth-first\r\n     * search.\r\n     *\r\n     * NOTE:\r\n     *          This function is recursive.  It will search the entire element hierarchy under the given Element.\r\n     *\r\n     *          We made this function because the built in DOM parsing provides no method for getting just the first\r\n     *          occurrence of a particularly named descendant element.  The traditional alternative which is to use\r\n     *          getElementsByTagName to get all occurrences and then extract just the first one is horribly inefficient.\r\n     *\r\n     * @param   element The Element whose descendant we wish to find.\r\n     * @param   tagName The tag name of the descendant we wish to find.\r\n     *\r\n     * @returns The first descendant Element with the specified tag name if found, otherwise undefined.\r\n     */\r\n    export function findFirstDescendantByName(element: Element, tagName: string): Element {\r\n\r\n        // The Element whose children we are currently searching for the given tagName.\r\n        let searchElement: Element = element;\r\n        // A queue of searchElement children we build as we go so we can search the hierarchy in the proper order.\r\n        const searchQueue: Array<Element> = [];\r\n\r\n        do {\r\n\r\n            const searchElementChildren: Array<Element> = getChildElements(searchElement);\r\n\r\n            for (const child of searchElementChildren) {\r\n\r\n                if (child.tagName === tagName) {\r\n\r\n                    return child;\r\n\r\n                } else {\r\n\r\n                    searchQueue.push(child);\r\n                }\r\n            }\r\n\r\n            searchElement = searchQueue.shift();\r\n\r\n        } while (searchElement !== undefined);\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Convenience function that uses findFirstDescendantByName and getTextContent to find the text content of the\r\n     * first descendant of the given Element that has the specified tag name.\r\n     *\r\n     * NOTE:\r\n     *          This function assumes that the first child Node of the first descendant Element is a text Node and\r\n     *          returns its nodeValue.  This isn't guaranteed to always be true, but it works with the use cases of our\r\n     *          current data structure.\r\n     *\r\n     * @example\r\n     *          element =   <X IsProperty=\"true\">\r\n     *                          <ElementID>2108163</ElementID>\r\n     *                          <ParentElementID>2108146</ParentElementID>\r\n     *                          <Value><![CDATA[250]]></Value>\r\n     *                          <IsTemplate>false</IsTemplate>\r\n     *                          <ElementSource>0</ElementSource>\r\n     *                          <IsUpdated />\r\n     *                      </X>\r\n     *\r\n     *              findDescendantTextContentByName(element, 'ParentElementID') // returns 2108146\r\n     *\r\n     *\r\n     * @param   element The ancestor of the Element whose text content we wish to get.\r\n     * @param   tagName The tag name of the Element whose text content we wish to get.\r\n     *\r\n     * @returns If it exists, the nodeValue of the first child Node of the first descendant of the given Element with\r\n     *          the specified tag name, otherwise undefined.\r\n     */\r\n    export function findDescendantTextContentByName(element: Element, tagName: string): string {\r\n\r\n        const descendant: Element = findFirstDescendantByName(element, tagName);\r\n\r\n        let textContent: string;\r\n\r\n        if (descendant) { textContent = getTextContent(descendant); }\r\n\r\n        return textContent;\r\n    }\r\n\r\n    /**\r\n     * Finds the next sibling of the given Element that has the specified tag name.\r\n     *\r\n     * @param   element     The Element whose sibling we wish to find.\r\n     * @param   tagName     The tag name of the sibling Element we wish to find.\r\n     *\r\n     * @returns If it exists, the next sibling of the given Element with the specified name, otherwise undefined.\r\n     */\r\n    export function findNextSiblingByName(element: Element, tagName: string): Element {\r\n\r\n        let searchElement: Element = element.nextElementSibling;\r\n\r\n        while (searchElement !== null && searchElement.tagName !== tagName) {\r\n\r\n            searchElement = searchElement.nextElementSibling;\r\n        }\r\n\r\n        // When there is no next sibling, nextSibling returns null not undefined.  Following TypeScript conventions\r\n        // we are using only undefined, so convert the result in case the caller specifically checks for undefined.\r\n        if (searchElement === null) { searchElement = undefined; }\r\n\r\n        return searchElement;\r\n    }\r\n\r\n    /**\r\n     * Convenience function that uses findNextSiblingByName to find the next sibling of the given Element that has the\r\n     * same tag name as the given Element.\r\n     *\r\n     * @param   element     The Element whose sibling we wish to find.\r\n     *\r\n     * @returns If it exists, the next sibling of the given Element with the same name, otherwise undefined.\r\n     */\r\n    export function findNextSiblingWithSameName(element: Element): Element {\r\n\r\n        return findNextSiblingByName(element, element.tagName);\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Element Data Retrieval\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Gets the value of the attribute with the given name, of the given Element.\r\n     *\r\n     * @param   element         The Element whose attribute we wish to get.\r\n     * @param   attributeName   The name of the attribute we wish to get.\r\n     *\r\n     * @returns If it exists, the value of the attribute with the given name, of the given Element, otherwise undefined.\r\n     */\r\n    export function getAttribute(element: Element, attributeName: string): string {\r\n\r\n        let attribute: string = element.getAttribute(attributeName);\r\n\r\n        if (attribute === null) { attribute = undefined; }\r\n\r\n        return attribute;\r\n    }\r\n\r\n    /**\r\n     * Gets the text content of the given Element.\r\n     *\r\n     * Text content is a plain text string of the text that appears between an Element's start and end tags.  This does\r\n     * not include text that might be between the tags of any child elements it may have (as Node.innerText does).\r\n     *\r\n     * NOTE:\r\n     *          This function assumes that the first child Node of the Element is a text Node and returns its nodeValue.\r\n     *          This isn't guaranteed to always be true, but it works with the use cases of our current data structure.\r\n     *\r\n     * @param   element The Element whose text content we wish to get.\r\n     *\r\n     * @returns If it exists, the nodeValue of the first child Node of the given Element, otherwise an empty string.\r\n     */\r\n    export function getTextContent(element: Element): string {\r\n\r\n        // In case there is no text content, default to an empty string so the calling code can handle it gracefully.\r\n        let textContent: string = '';\r\n\r\n        // If this Element has at least one child Node and that Node has a nodeValue (depending on the actual Node type,\r\n        // nodeValue could be null), then most likely that nodeValue is the text content we are looking for.\r\n        // ...probably :)\r\n        if (element.childNodes[0] && element.childNodes[0].nodeValue) {\r\n\r\n            textContent = element.childNodes[0].nodeValue;\r\n        }\r\n\r\n        return textContent;\r\n    }\r\n\r\n    /**\r\n     * Gets a list of the child Elements of the given Element.\r\n     *\r\n     * It does this by checking if the nodeType of each of the childNodes of the Element is of type \"Element\" and if so,\r\n     * pushing it onto an Array.\r\n     *\r\n     * NOTE:    The entire reason why this function exists is because Microsoft, in their infinite wisdom, chose to\r\n     *          ignore the standard and not implement the children getter for Elements when the document type is XML.\r\n     *\r\n     * @param   element The Element whose child Elements we wish to retrieve.\r\n     *\r\n     * @returns An Array containing any child Elements the given element has (if none, the Array is empty).\r\n     */\r\n    export function getChildElements(element: Element): Array<Element> {\r\n\r\n        const childElements: Array<Element> = [];\r\n\r\n        /* tslint:disable:prefer-for-of */\r\n        /* Temporarily disable this rule because the linter doesn't understand that element.childNodes isn't an array */\r\n        for (let i: number = 0; i < element.childNodes.length; i++) {\r\n\r\n            // If this Node is also an Element (nodeType is 1 which corresponds to the Node.ELEMENT_NODE constant), then\r\n            // add it to the list of child Elements.\r\n            // NOTE: We don't use the constant because it's not typed and it may not be defined in all browsers.\r\n            if (element.childNodes[i].nodeType === 1) {\r\n\r\n                childElements.push(element.childNodes[i] as Element);\r\n            }\r\n        }\r\n        /* tslint:enable:prefer-for-of */\r\n\r\n        return childElements;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/model/transactions/xml-parser.ts","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n@NgModule({\r\n    imports: [ CommonModule ],\r\n})\r\n\r\n\r\n/*\r\n*\r\n*   Shared module for DIF.  Contains code that is used by the Player as well as the future Designer modules.\r\n*   Should be imported once by the app using this common module when it starts and nowhere else.\r\n*\r\n* */\r\nexport class SystemSharedModule {\r\n\r\n    /*\r\n    *   Module constructor\r\n    *\r\n    *   NOTE: To protect against lazy loading, constructor injects SystemSharedModule into itself using the @SkipSelf\r\n    *           decorator which tells it to look for SystemSharedModule in an injector above this one.  If it finds one,\r\n    *           something is attempting to load this module lazily and it will trigger the error.  If there isn't one,\r\n    *           null will be returned, which the @Optional decorator indicates is ok.\r\n    * */\r\n    constructor (@Optional() @SkipSelf() singletonModule: SystemSharedModule) {\r\n        if (singletonModule) {\r\n            throw new Error('SystemSharedModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/system-shared/system-shared.module.ts","import { CommonModule }             from '@angular/common';\r\nimport { HttpModule }               from '@angular/http';\r\nimport { MdButtonModule,\r\n         MdIconModule,\r\n         MdListModule,\r\n         MdTooltipModule,\r\n         MdSliderModule }           from '@angular/material';\r\nimport { NgModule }                 from '@angular/core';\r\n\r\nimport {DragulaModule}              from 'ng2-dragula';\r\n\r\nimport { AppBarComponent }              from './view/app-bar.component';\r\nimport { PageIndicatorComponent }       from './view/sub-component/page-indicator.component';\r\nimport { PathedPageTitleComponent }     from './view/sub-component/pathed-page-title.component';\r\nimport { CommentsButtonComponent }      from './view/comments-button.component';\r\nimport { ControlBarComponent }          from './view/control-bar.component';\r\nimport { PopUpComponent }               from './view/pop-up.component';\r\nimport { SideNavContentComponent }      from './view/sidenav-content.component';\r\nimport { CourseMapComponent }           from './view/sidenav-components/course-map.component';\r\nimport { UnitDisplayComponent }         from './view/sidenav-components/unit-display.component';\r\nimport { ReferencesComponent }          from './view/sidenav-components/references.component';\r\nimport { ReferenceDisplayComponent }    from './view/sidenav-components/reference-display.component';\r\n\r\n\r\n@NgModule({\r\n    // TODO: If we add more modules we might want to make a shared module.\r\n    imports: [\r\n        CommonModule,\r\n        DragulaModule,\r\n        HttpModule,\r\n        MdButtonModule,\r\n        MdIconModule,\r\n        MdListModule,\r\n        MdTooltipModule,\r\n        MdSliderModule,\r\n    ],\r\n    declarations: [\r\n        AppBarComponent,\r\n        PageIndicatorComponent,\r\n        PathedPageTitleComponent,\r\n        CommentsButtonComponent,\r\n        ControlBarComponent,\r\n        PopUpComponent,\r\n        SideNavContentComponent,\r\n        CourseMapComponent,\r\n        UnitDisplayComponent,\r\n        ReferencesComponent,\r\n        ReferenceDisplayComponent,\r\n    ],\r\n    exports: [ AppBarComponent, ControlBarComponent, SideNavContentComponent, PopUpComponent, CommentsButtonComponent ]\r\n})\r\n\r\n/**\r\n * TODO: Add class description.\r\n */\r\nexport class UserInterfaceModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/user-interface.module.ts","module.exports = \"<div class=\\\"appBar\\\" [ngStyle]=\\\"{'height.px': appBarHeight}\\\">\\r\\n    <div style=\\\"float:left; width:80%;\\\">\\r\\n        <div class=\\\"menuButtonDiv\\\">\\r\\n            <button md-icon-button style=\\\"margin: 5px\\\" (click)=\\\"onMenuButtonClicked()\\\"><md-icon style=\\\"color: white\\\">menu</md-icon></button>\\r\\n        </div>\\r\\n        <div class=\\\"heading\\\">\\r\\n            <player-pathed-page-title></player-pathed-page-title>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div style=\\\"float:left; width:19%; padding-right: 1%;\\\">\\r\\n        <div class=\\\"pageIndicator\\\">\\r\\n            <player-page-indicator></player-page-indicator>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/app-bar.component.html\n// module id = ./src/app/user-interface/view/app-bar.component.html\n// module chunks = main","/**\r\n * Created by KRasmussen on 3/14/2017.\r\n */\r\n\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { PageService } from '../../shared/system-shared/model/services/page.service';\r\nimport { UnitService } from '../../shared/system-shared/model/services/unit.service';\r\n\r\n@Component({\r\n    selector: \"player-app-bar\",\r\n    templateUrl: 'app-bar.component.html',\r\n    styleUrls:  [ 'user-interface.module.css' ]\r\n})\r\n\r\n/**\r\n * TODO: Comment Me!!\r\n */\r\nexport class AppBarComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The height of the app bar\r\n     * TODO: Maybe this should just be height???\r\n     *\r\n     */\r\n    @Input()\r\n    appBarHeight: number;\r\n\r\n    @Output() menuButtonClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor for the Control Bar Component. Used to inject pageService and unitService\r\n     *\r\n     * @param pageService\r\n     * @param unitService\r\n     */\r\n    constructor(private pageService: PageService, private unitService: UnitService) {}\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handlers\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Menu Button Click handler. Emit an Event to let the app component know we have been clicked.\r\n     */\r\n    public onMenuButtonClicked (): void {\r\n        this.menuButtonClicked.emit();\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/app-bar.component.ts","module.exports = \"<div [dragula]='\\\"comment-bag\\\"'\\r\\n     style=\\\"position: absolute; top: 20px; left: 30px; width: 0px; height: 0px; padding: 0px;\\\"\\r\\n     [ngStyle]=\\\"{'padding-right.px': horizontalDropTargetPadding,\\r\\n                'padding-bottom.px': verticalDropTargetPadding}\\\">\\r\\n</div>\\r\\n<div [dragula]='\\\"comment-bag\\\"'\\r\\n     style=\\\"position: absolute; top: 20px; width: 0px; height: 0px; padding: 0px;\\\"\\r\\n     [ngStyle]=\\\"{'right.px': rightPosition,\\r\\n                'padding-bottom.px': verticalDropTargetPadding,\\r\\n                'padding-left.px': horizontalDropTargetPadding}\\\">\\r\\n</div>\\r\\n<div [dragula]='\\\"comment-bag\\\"'\\r\\n     style=\\\"position: absolute; width: 0px; height: 0px; padding: 0px;\\\"\\r\\n     [ngStyle]=\\\"{'right.px': rightPosition,\\r\\n                'bottom.px': bottomPosition,\\r\\n                'padding-left.px': horizontalDropTargetPadding,\\r\\n                'padding-top.px': verticalDropTargetPadding }\\\">\\r\\n    <div style=\\\"width: 56px; height: 56px;\\\">\\r\\n        <button md-fab color=\\\"accent\\\" (click)=\\\"openComment()\\\"><md-icon>{{commentIconState}}</md-icon></button>\\r\\n    </div>\\r\\n</div>\\r\\n<div [dragula]='\\\"comment-bag\\\"'\\r\\n     style=\\\"position: absolute; left: 30px; width: 0px; height: 0px; padding: 0px;\\\"\\r\\n     [ngStyle]=\\\"{'bottom.px': bottomPosition,\\r\\n                'padding-top.px': verticalDropTargetPadding,\\r\\n                'padding-right.px': horizontalDropTargetPadding}\\\">\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/comments-button.component.html\n// module id = ./src/app/user-interface/view/comments-button.component.html\n// module chunks = main","import {Component, Input, NgZone, OnInit} from '@angular/core';\r\nimport { InjectorService } from '../../shared/system-shared/model/services/injector.service';\r\nimport { UnitService } from '../../shared/system-shared/model/services/unit.service';\r\nimport { PageService } from '../../shared/system-shared/model/services/page.service';\r\nimport {DragulaService} from 'ng2-dragula';\r\n\r\n// declare var DIFComment: any;\r\n\r\n@Component({\r\n    selector: 'player-comments-button',\r\n    templateUrl: 'comments-button.component.html',\r\n    styleUrls:  [ 'user-interface.module.css' ]\r\n})\r\n\r\n/**\r\n * CommentsButtonComponent\r\n */\r\nexport class CommentsButtonComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The width of the player for use in positioning the comments button drop able areas\r\n     */\r\n    @Input()\r\n    width: number;\r\n\r\n    /**\r\n     * The height of the player for use in positioning the comments button drop able areas\r\n     */\r\n    @Input()\r\n    height: number;\r\n\r\n    /**\r\n     * Property that lets us know if we are currently dragging. True if we are dragging.\r\n     * @type {boolean}\r\n     * @default false\r\n     */\r\n    private isDragging: boolean = false;\r\n\r\n    /**\r\n     * Property that lats us know if we have a comment.\r\n     * @type {boolean}\r\n     */\r\n    private hasComment: boolean = false;\r\n\r\n    /**\r\n     * @Todo: comment me!!!\r\n     */\r\n    private commentWindowUnit: string;\r\n\r\n    /**\r\n     * @Todo: comment me!!!\r\n     */\r\n    private commentWindowHasComment: boolean = false;\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor inject pageService,unitService and NgZone; set angularComponentRef\r\n     *\r\n     * @param unitService\r\n     * @param PageService\r\n     * @param zone\r\n     */\r\n    constructor(private unitService: UnitService, private pageService: PageService, private zone: NgZone, dragService: DragulaService) {\r\n        window['angularComponentRef'] = {\r\n            component: this,\r\n            zone: this.zone,\r\n            componentFn: (unitID: string, status: string): void => this.callFromOutside(unitID, status)\r\n        };\r\n        // console.log('111@@@@@@@##### constructor');\r\n\r\n        // drag and drop event subscriptions\r\n        dragService.drag.subscribe(() => this.onDrag());\r\n        dragService.dragend.subscribe(() => this.onDragEnd());\r\n\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Outside Call\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * callFromOutside function set commentWindowUnit and commentWindowHasComment\r\n     *\r\n     * @param unitID\r\n     * @param status\r\n     */\r\n    callFromOutside(unitID: string, status: string): void {\r\n\r\n        // console.log('2@@@@@@@#####calledFromOutside ' + unitID + ' ' + status);\r\n\r\n        this.commentWindowUnit = unitID;\r\n        switch (status) {\r\n            case 'true':\r\n            case 'True':\r\n                this.commentWindowHasComment = true;\r\n                break;\r\n            default:\r\n                this.commentWindowHasComment = false;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Determines which icon to show. The icon shows depends on weather or not current page has comment(s).\r\n     *\r\n     * To check weather or not current page has comment(s), need to check whether unitService is set first\r\n     *  commentIconState is called multiple times when the player page loaded --this is bad\r\n     *  unitService/pageservice is not ready when commentIconState is first called\r\n     *  fortunately, unitService/pageservice is ready before the final commentIconState called\r\n     *\r\n     * if unit match with commentWindowUnit, commentWindowHasComment will overwrite hasComment\r\n     *\r\n     * @returns string\r\n     */\r\n    get commentIconState(): string {\r\n\r\n        if (this.pageService.page) {\r\n\r\n            // if unit match with commentWindowUnit\r\n            if (this.unitService.getCurrentPageUnit().unitID === this.commentWindowUnit) {\r\n\r\n                this.hasComment = this.commentWindowHasComment;\r\n            } else {\r\n\r\n                this.hasComment = this.unitService.getCurrentPageUnit().hasComments;\r\n            }\r\n        }\r\n\r\n        // console.log('333@@@@@@@#####this.commentIconState hasComment=' + this.hasComment);\r\n        // console.log('333@@@@@@@#####this.commentIconState commentWindowUnit=' + this.commentWindowUnit);\r\n        // console.log('333@@@@@@@#####this.commentIconState commentWindowHasComment=' + this.commentWindowHasComment);\r\n\r\n        if (this.hasComment === true) {\r\n            return 'chat';\r\n        }\r\n        return 'chat_bubble';\r\n    }\r\n\r\n    // TODO: these numbers will have to change to account for top and bottom bar better when we make things resizable\r\n    /**\r\n     * Right position of the drop targets \"bags\" located on the right side of the screen\r\n     * @returns {number}\r\n     */\r\n    public get rightPosition(): number {\r\n        return (this.width - 86) * -1;\r\n    }\r\n\r\n    /**\r\n     * Bottom position of the drop targets \"bags\" located on the bottom of the screen\r\n     * @returns {number}\r\n     */\r\n    public get bottomPosition(): number {\r\n        return (this.height - 156) *  -1;\r\n    }\r\n\r\n    /**\r\n     * Determines the vertical padding of the drop target. This value changes during a drag to allow from a larger\r\n     * drop target or \"bag\" as Dragula calls it.\r\n     * @returns {number}\r\n     */\r\n    public get verticalDropTargetPadding(): number {\r\n        return (this.isDragging) ? this.height * .33 : 0;\r\n    }\r\n\r\n    /**\r\n     * Determines the horizontal padding of the drop target. This value changes during a drag to allow from a larger\r\n     * drop target or \"bag\" as Dragula calls it.\r\n     * @returns {number}\r\n     */\r\n    public get horizontalDropTargetPadding(): number {\r\n        return (this.isDragging) ? this.width * .41 : 0;\r\n    }\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handlers\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * openComment Handles the click event\r\n     *\r\n     */\r\n    protected openComment(): void {\r\n\r\n        let commentwindow: any = window.open('../Comments/Comment.aspx?unitID=' +\r\n            this.unitService.getCurrentPageUnit().unitID, 'htmlCommentWindow',\r\n            'location=yes,height=534,width=900,scrollbars=no,status=yes');\r\n    }\r\n\r\n    // drag event handlers\r\n    /**\r\n     * Event handler for the event that happens at the start of a drag. Used to tell if we are currently dragging.\r\n     */\r\n    private onDrag(): void {\r\n        this.isDragging = true;\r\n    }\r\n\r\n    /**\r\n     * Event handler for the event that happens at the end of a drag. Used to tell if we are currently dragging.\r\n     */\r\n    private onDragEnd(): void {\r\n        this.isDragging = false;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/comments-button.component.ts","module.exports = \"<div class=\\\"controlBar\\\" [ngStyle]=\\\"{'height.px': controlBarHeight}\\\" style=\\\"overflow: hidden; width: 100%\\\">\\r\\n    <div style=\\\"float:left; width:49%; height:29px; padding-left: 1%;\\\">\\r\\n        <!-- commented out not deleted because we tend to change our minds! :)\\r\\n        <player-play-pause-button *ngIf=\\\"isPlayPauseButtonVisible\\\" [isDisabled]=\\\"isPlayPauseButtonDisabled\\\" [isVisible]=\\\"isPlayPauseButtonVisible\\\"></player-play-pause-button>\\r\\n\\r\\n        <button md-icon-button *ngIf=\\\"isPreviousButtonVisible\\\" [disabled]=\\\"isPreviousButtonDisabled\\\" (click)=\\\"onPreviousPageClick()\\\" style=\\\"float: left;position: relative;top: -5px;\\\"><md-icon>arrow_back</md-icon></button>\\r\\n        <button md-icon-button *ngIf=\\\"isNextButtonVisible\\\" [disabled]=\\\"isNextButtonDisabled\\\" (click)=\\\"onNextPageClick()\\\" style=\\\"float: left;position: relative;top: -5px;\\\"><md-icon>arrow_forward</md-icon></button>\\r\\n        <button md-icon-button *ngIf=\\\"isReloadButtonVisible\\\" [disabled]=\\\"isReloadButtonDisabled\\\" (click)=\\\"onPageReloadClicked()\\\" style=\\\"float: left;position: relative;top: -5px;\\\"><md-icon>refresh</md-icon></button>\\r\\n        -->\\r\\n        <!--\\r\\n        <button md-icon-button *ngIf=\\\"isPrintButtonVisible\\\" [disabled]=\\\"isPrintButtonDisabled\\\" style=\\\"float: left;position: relative;top: -5px;\\\"><md-icon>print</md-icon></button>\\r\\n        <player-volume-control *ngIf=\\\"isVolumeControlVisible\\\" [isDisabled]=\\\"isVolumeControlDisabled\\\"></player-volume-control>\\r\\n        -->\\r\\n    </div>\\r\\n    <div style=\\\"float:left; width:49%; padding-right: 1%;\\\">\\r\\n        <button md-icon-button *ngIf=\\\"isNextButtonVisible\\\" [disabled]=\\\"isNextButtonDisabled\\\" (click)=\\\"onNextPageClick()\\\" style=\\\"float: right;position: relative;top: -5px;\\\"><md-icon>arrow_forward</md-icon></button>\\r\\n        <button md-icon-button *ngIf=\\\"isPreviousButtonVisible\\\" [disabled]=\\\"isPreviousButtonDisabled\\\" (click)=\\\"onPreviousPageClick()\\\" style=\\\"float: right;position: relative;top: -5px;\\\"><md-icon>arrow_back</md-icon></button>\\r\\n        <button md-icon-button *ngIf=\\\"isReloadButtonVisible\\\" [disabled]=\\\"isReloadButtonDisabled\\\" (click)=\\\"onPageReloadClicked()\\\" style=\\\"float: right;position: relative;top: -5px;\\\"><md-icon>refresh</md-icon></button>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/control-bar.component.html\n// module id = ./src/app/user-interface/view/control-bar.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\r\nimport { PageService } from '../../shared/system-shared/model/services/page.service';\r\nimport { UnitService } from '../../shared/system-shared/model/services/unit.service';\r\n\r\n@Component({\r\n    selector: \"player-control-bar\",\r\n    templateUrl: 'control-bar.component.html',\r\n    styleUrls:  [ '../../app.component.css' ]// TODO: Change this!!!\r\n})\r\n\r\n/**\r\n * The Component representing the bottom bar of our player. Currently it contains the buttons for reload, play/pause,\r\n * volume control, next and previous.\r\n */\r\nexport class ControlBarComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * The height of this component\r\n     *\r\n     * TODO: meybe this should just be called height\r\n     */\r\n    @Input()\r\n    controlBarHeight: number;\r\n\r\n    idOfLastPageNavigatedFrom: String = '';\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Constructor for the Control Bar Component. Used to inject pageService and unitService\r\n     *\r\n     * @param pageService\r\n     * @param unitService\r\n     */\r\n    constructor(private pageService: PageService, private unitService: UnitService) {}\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Determines if the Play / Pause Button is Disabled\r\n     *\r\n     * @returns {boolean} true if the Play / Pause button should be disabled or if the page is not set yet.\r\n     */\r\n    public get isPlayPauseButtonDisabled(): boolean {\r\n        return this.pageHasPageProperties() ? !this.pageService.page.pageProperties.isPlayPauseEnabled : false;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Play / Pause Button is Visible. If its not visible we will not add it to the DOM.\r\n     *\r\n     * @returns {boolean} true if the Play / Pause button should be added to the DOM.\r\n     */\r\n    public get isPlayPauseButtonVisible(): boolean {\r\n        return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isPlayPauseVisible : false;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Reload Button is Disabled\r\n     *\r\n     * @returns {boolean} true if the Reload button should be disabled or if the page is not set yet.\r\n     */\r\n    public get isReloadButtonDisabled(): boolean {\r\n        return this.pageHasPageProperties() ? !this.pageService.page.pageProperties.isReloadEnabled && !this.pageService.isPageLoaded : false;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Reload Button is Visible. If its not visible we will not add it to the DOM.\r\n     *\r\n     * @returns {boolean} true if the Reload button should be added to the DOM.\r\n     */\r\n    public get isReloadButtonVisible(): boolean {\r\n        return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isReloadVisible : false;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Print Button is Disabled\r\n     *\r\n     * @returns {boolean} true if the Print button should be disabled or if the page is not set yet.\r\n     */\r\n    public get isPrintButtonDisabled(): boolean {\r\n        return this.pageHasPageProperties() ? !this.pageService.page.pageProperties.isPrintEnabled : false;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Print Button is Visible. If its not visible we will not add it to the DOM.\r\n     *\r\n     * @returns {boolean} true if the Print button should be added to the DOM.\r\n     */\r\n    public get isPrintButtonVisible(): boolean {\r\n        return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isPrintVisible : false;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Volume Control is Disabled\r\n     *\r\n     * @returns {boolean} true if the Volume Control should be disabled or if the page is not set yet.\r\n     */\r\n    public get isVolumeControlDisabled(): boolean {\r\n        return this.pageHasPageProperties() ? !this.pageService.page.pageProperties.isVolumeControlEnabled : false;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Volume Control is Visible. If its not visible we will not add it to the DOM.\r\n     *\r\n     * @returns {boolean} true if the Volume Control should be added to the DOM.\r\n     */\r\n    public get isVolumeControlVisible(): boolean {\r\n        return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isVolumeControlVisible : false;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Previous Button is Disabled.\r\n     *\r\n     * If page and unit exist. If the Previous Button is Enabled and this is not the first page\r\n     *\r\n     * @returns {boolean} true if the Previous button should be disabled or if the page or is not set yet.\r\n     */\r\n    public get isPreviousButtonDisabled(): boolean {\r\n        if (this.pageService.page && this.unitService.isFirstPageUnit()) {\r\n            return true;\r\n        }\r\n\r\n        if (!this.pageService.isPageLoaded) {\r\n            return true;\r\n        }\r\n        console.log(\"isPageLoaded : \" + this.pageService.isPageLoaded);\r\n        if (this.pageHasPageProperties()) {\r\n            return !this.pageService.page.pageProperties.isPreviousButtonEnabled;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Previous Button is Visible. If its not visible we will not add it to the DOM.\r\n     *\r\n     * @returns {boolean} true if the Previous button should be added to the DOM.\r\n     */\r\n    public get isPreviousButtonVisible(): boolean {\r\n        return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isPreviousButtonVisible : true;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Next Button is Disabled\r\n     *\r\n     * @returns {boolean} true if the Next button should be disabled or if the page is not set yet.\r\n     */\r\n    public get isNextButtonDisabled(): boolean {\r\n        if (this.pageService.page && this.unitService.isLastPageUnit() || !this.pageService.isPageLoaded) {\r\n            return true;\r\n        }\r\n        console.log(\"isPageLoaded : \" + this.pageService.isPageLoaded);\r\n        if (this.pageHasPageProperties()) {\r\n            return !this.pageService.page.pageProperties.isNextButtonEnabled;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determines if the Next Button is Visible. If its not visible we will not add it to the DOM.\r\n     *\r\n     * @returns {boolean} true if the Next button should be added to the DOM. Defaults to true if pageProperties doesn't exist.\r\n     */\r\n    public get isNextButtonVisible(): boolean {\r\n        return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isNextButtonVisible : true;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Validation\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    private pageHasPageProperties(): boolean {\r\n        return !!(this.pageService.page && this.pageService.page.pageProperties );\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handlers\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     *\r\n     */\r\n    protected onPageReloadClicked(): void {\r\n        this.pageService.loadPage(this.pageService.page.pageID);\r\n    }\r\n\r\n    /**\r\n     * on Previous Page click handler\r\n     *\r\n     */\r\n    protected onPreviousPageClick(): void {\r\n        //if (this.pageService.page && this.pageService.page.pageID !== this.idOfLastPageNavigatedFrom) {\r\n            //console.log(\"^^^ page navigation information:\" + this.idOfLastPageNavigatedFrom + \" \" + this.pageService.page.pageID);\r\n          //  this.idOfLastPageNavigatedFrom = this.pageService.page.pageID;\r\n            this.pageService.loadPreviousPage();\r\n        //}\r\n    }\r\n\r\n    /**\r\n     * on Next Page click handler\r\n     *\r\n     */\r\n    protected onNextPageClick(): void {\r\n        //if (this.pageService.page && this.pageService.page.pageID !== this.idOfLastPageNavigatedFrom) {\r\n            //console.log(\"^^^ page navigation information:\" + this.idOfLastPageNavigatedFrom + \" \" + this.pageService.page.pageID);\r\n            //this.idOfLastPageNavigatedFrom = this.pageService.page.pageID;\r\n            this.pageService.loadNextPage();\r\n        //}\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/control-bar.component.ts","module.exports = \"<div style=\\\"width: 445px; height: 276px\\\">\\r\\n    <div class=\\\"popUpHeader\\\" style=\\\"width: 421px; height: 30px; padding: 12px;\\\" [ngStyle]=\\\"{ 'background-color': popUpDataObject.titleBarColor}\\\">\\r\\n        <md-icon style=\\\"float: left; padding-top: 4px; padding-right: 14px;\\\" [ngStyle]=\\\"{ 'color': popUpDataObject.titleTextColor}\\\">{{popUpDataObject.titleIcon}}</md-icon>\\r\\n        <span class=\\\"popUpHeaderText\\\" style=\\\"font-weight: bold; padding: 6px; display: block; width: 371px; float: left; text-overflow: ellipsis;\\\" [ngStyle]=\\\"{ 'color': popUpDataObject.titleTextColor}\\\">{{popUpDataObject.titleText}}</span>\\r\\n    </div>\\r\\n    <div class=\\\"popUpText\\\" style=\\\"padding:12px 25px 12px 25px; width: 395px; height: 140px; overflow-y: auto\\\">\\r\\n        <p [innerHtml]=\\\"popUpDataObject.message\\\"></p>\\r\\n    </div>\\r\\n    <div [ngStyle]=\\\"{ 'width.px': buttonWidth }\\\" style=\\\"margin:auto\\\">\\r\\n        <button md-raised-button style=\\\" margin: 10px; width: 88px; font-family: 'Open Sans', sans-serif;\\\" (click)=\\\"onOkClicked()\\\">Ok</button>\\r\\n        <button md-raised-button *ngIf=\\\"hasCancel\\\" style=\\\" margin: 10px; width: 88px; font-family: 'Open Sans', sans-serif;\\\" (click)=\\\"onCancelClicked()\\\">Cancel</button>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/pop-up.component.html\n// module id = ./src/app/user-interface/view/pop-up.component.html\n// module chunks = main","import {Component} from '@angular/core';\r\nimport {PopUpService} from '../../model/services/pop-up.service';\r\nimport {PopUpDataObject} from '../../model/data-objects/pop-up.data-object';\r\nimport {MdDialogRef} from '@angular/material';\r\n\r\n\r\n@Component({\r\n    selector: 'player-pop-up',\r\n    templateUrl: 'pop-up.component.html',\r\n    styleUrls:  [ 'user-interface.module.css' ],\r\n})\r\n\r\n/**\r\n * Comment This class\r\n */\r\nexport class PopUpComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     *\r\n     */\r\n    popUpDataObject: PopUpDataObject;\r\n\r\n    hasCancel: boolean = false;\r\n\r\n    buttonWidth: number;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     *\r\n     * @param popUpService\r\n     */\r\n    constructor( private popUpService: PopUpService, private dialogRef: MdDialogRef<PopUpComponent>) {\r\n        this.popUpDataObject = this.popUpService.popUpDataObject;\r\n\r\n        if ( this.popUpDataObject.buttonConfiguration === 'ok') {\r\n            this.hasCancel = false;\r\n            this.buttonWidth = 108;\r\n        } else if (this.popUpDataObject.buttonConfiguration === 'okCancel') {\r\n            this.hasCancel = true;\r\n            this.buttonWidth = 221;\r\n        }\r\n\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handlers\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     *\r\n     */\r\n    public onOkClicked(): void {\r\n        if (this.popUpDataObject.callBackFunction) {\r\n            this.popUpDataObject.callBackFunction();\r\n        }\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public onCancelClicked(): void {\r\n        // close this popup\r\n        this.dialogRef.close();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/pop-up.component.ts","module.exports = \"<div class=\\\"sidenavSeperartor\\\" style=\\\"height: 48px; background-color: white;\\\">\\r\\n    <md-icon md-list-icon class=\\\"subMenuIcon\\\">explore</md-icon><span class=\\\"openSans subMenuTitleText\\\">Course Map</span>\\r\\n</div>\\r\\n<div style=\\\"height: 500px; overflow-y: auto; clear: both;\\\">\\r\\n    <div *ngFor=\\\"let unit of units\\\">\\r\\n        <player-unit-display [unit]=\\\"unit\\\" [isProgressLocked]=\\\"isProgressLocked\\\" (unitClicked)=\\\"unitClickedHandler();\\\"></player-unit-display>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/sidenav-components/course-map.component.html\n// module id = ./src/app/user-interface/view/sidenav-components/course-map.component.html\n// module chunks = main","import {Component, Output, EventEmitter}    from '@angular/core';\r\nimport { UnitService }  from '../../../shared/system-shared/model/services/unit.service';\r\nimport {UnitDataObject} from '../../../shared/system-shared/model/data-objects/unit.data-object';\r\nimport {StartupConfigurationService} from '../../../model/services/startup-configuration-service';\r\n\r\n@Component({\r\n    selector: 'player-course-map',\r\n    templateUrl: 'course-map.component.html',\r\n    styleUrls:  [ '../user-interface.module.css' ]\r\n})\r\n\r\n/**\r\n *The CourseMap Component contains a list of unit-displays.\r\n */\r\nexport class CourseMapComponent {\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  Emits when any unit in the list has ben clicked.\r\n     *\r\n     * @type {EventEmitter<any>}\r\n     */\r\n    @Output() unitClicked: EventEmitter <any> = new EventEmitter<any>();\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  Constructor for CourseMapComponent.\r\n     *\r\n     * @param unitService\r\n     * @param startUpConfig\r\n     */\r\n    constructor( private unitService: UnitService, private startUpConfig: StartupConfigurationService ) {}\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * List of units to display in this component.\r\n     * @returns {Array<UnitDataObject>}\r\n     */\r\n    public get units(): Array<UnitDataObject> {\r\n        return this.unitService.getCourseMap();\r\n    }\r\n\r\n    /**\r\n     * Sets if progress is locked on the Units to determine if they should be disabled.\r\n     * @returns {boolean}\r\n     */\r\n    public get isProgressLocked(): boolean {\r\n        return this.startUpConfig.config.lockProgress;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handler\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Event handler to catch when one of the Unit-Displays are clicked\r\n     */\r\n    public unitClickedHandler(): void {\r\n        this.unitClicked.emit(null);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/sidenav-components/course-map.component.ts","module.exports = \"<button md-button style=\\\"width: 100%; padding-left:0px;\\\" (click)=\\\"onClick()\\\">\\r\\n    <md-icon style=\\\"float:left; padding: 10px; padding-top: 14px\\\">{{typeIcon}}</md-icon>\\r\\n    <div style=\\\"text-align: left;\\\">\\r\\n        <span class=\\\"truncated\\\" style=\\\"display: block; font-size: 14px; font-weight: normal; height: 25px;\\\">{{name}}</span>\\r\\n        <span class=\\\"truncated\\\" style=\\\"display: block; font-size: 12px; color: #838383; font-weight: normal; line-height: initial\\\">{{detail}}</span>\\r\\n    </div>\\r\\n</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/sidenav-components/reference-display.component.html\n// module id = ./src/app/user-interface/view/sidenav-components/reference-display.component.html\n// module chunks = main","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ReferenceDataObject} from '../../../shared/system-shared/model/data-objects/reference.data-object';\r\n\r\n@Component({\r\n    selector: 'player-reference-display',\r\n    templateUrl: 'reference-display.component.html',\r\n    styleUrls:  [ '../user-interface.module.css' ]\r\n})\r\n\r\n/**\r\n * ReferenceDisplayComponent Displays one reference that is clickable. When clicked the reference opens in a new window.\r\n */\r\nexport class ReferenceDisplayComponent implements OnInit {\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  The data Object for the reference that this component represents\r\n     */\r\n    @Input()\r\n    reference: ReferenceDataObject;\r\n\r\n    /**\r\n     *  Name of the reference\r\n     */\r\n    public name: string = '';\r\n\r\n    /**\r\n     *  The string that corresponds with the material icon the we use for this reference\r\n     */\r\n    public typeIcon: string = '';\r\n\r\n    /**\r\n     * The url of this reference\r\n     */\r\n    public url: string = '';\r\n\r\n    /**\r\n     * The detail information that will show in this component\r\n     *\r\n     * @type {string}\r\n     */\r\n    public detail: string = '';\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor for the ReferenceDisplayComponent\r\n     */\r\n    constructor() { }\r\n\r\n    /**\r\n     *  OnInit component Lifecycle hook for setting up this component when the reference is available\r\n     */\r\n    ngOnInit(): void {\r\n        // set the icon we will use for this reference based on type.\r\n        if (this.reference.referenceType === 'FILE') {\r\n            this.typeIcon = 'description';\r\n            this.detail = this.reference.originalFileName;\r\n        } else {\r\n            this.typeIcon = 'public';\r\n            this.detail = this.reference.referenceURL;\r\n        }\r\n\r\n        this.name = this.reference.referenceName;\r\n        this.url = this.reference.referenceURL;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handlers\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Handler fore when this component is clicked. Opens the URL\r\n     */\r\n    public onClick(): void {\r\n        window.open(this.url);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/sidenav-components/reference-display.component.ts","module.exports = \"<div class=\\\"sidenavSeperartor\\\" style=\\\"height: 48px; background-color: white;\\\">\\r\\n    <md-icon md-list-icon class=\\\"subMenuIcon\\\">attachment</md-icon><span class=\\\"openSans subMenuTitleText\\\">References</span>\\r\\n</div>\\r\\n<div style=\\\"height: 500px; overflow-y: auto; clear: both; background-color: white;\\\">\\r\\n    <div *ngFor=\\\"let reference of referenceArray\\\">\\r\\n        <player-reference-display [reference]=\\\"reference\\\"></player-reference-display>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/sidenav-components/references.component.html\n// module id = ./src/app/user-interface/view/sidenav-components/references.component.html\n// module chunks = main","import { Component }        from '@angular/core';\r\nimport { ReferenceService } from '../../../shared/system-shared/model/services/reference.service';\r\nimport {ReferenceDataObject} from '../../../shared/system-shared/model/data-objects/reference.data-object';\r\n\r\n@Component({\r\n    selector: 'player-references',\r\n    templateUrl: 'references.component.html',\r\n    styleUrls:  [ '../user-interface.module.css' ]\r\n})\r\n\r\n/**\r\n * The ReferenceComponent contains a list of References\r\n */\r\nexport class ReferencesComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The constructor for the ReferencesComponent\r\n     *\r\n     * @param referenceService\r\n     */\r\n    constructor(private referenceService: ReferenceService) {}\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * An array list of the references for this course.\r\n     *\r\n     * @returns {Array<ReferenceDataObject>}\r\n     */\r\n    public get referenceArray(): Array<ReferenceDataObject> {\r\n        return this.referenceService.references;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/sidenav-components/references.component.ts","module.exports = \"<button md-button style=\\\"width: 100%; height: 46px; text-align: left; font-family: 'Open Sans', sans-serif;\\\" [ngStyle]=\\\"{'padding-left.px': indentAmount}\\\" [disabled]=\\\"isDisabled\\\" (click)=\\\"onClick()\\\"><span class=\\\"truncated\\\">{{unit.unitName}}</span></button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/sidenav-components/unit-display.component.html\n// module id = ./src/app/user-interface/view/sidenav-components/unit-display.component.html\n// module chunks = main","import {Component, Input, Output, OnInit, EventEmitter} from '@angular/core';\r\nimport {PageService} from '../../../shared/system-shared/model/services/page.service';\r\nimport {UnitDataObject} from '../../../shared/system-shared/model/data-objects/unit.data-object';\r\nimport {UnitService} from '../../../shared/system-shared/model/services/unit.service';\r\n\r\n@Component({\r\n    selector: 'player-unit-display',\r\n    templateUrl: 'unit-display.component.html',\r\n    styleUrls:  [ '../user-interface.module.css' ]\r\n})\r\n\r\n/**\r\n * The UnitDisplayComponent displays a navigable Unit. It's disables according to course progression. And indents\r\n * According to hierarchy level.\r\n */\r\nexport class UnitDisplayComponent implements OnInit {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The unit being displayed by this component\r\n     */\r\n    @Input()\r\n    unit: UnitDataObject;\r\n\r\n    /**\r\n     * If progress lock is on.\r\n     */\r\n    @Input()\r\n    isProgressLocked: boolean;\r\n\r\n    /**\r\n     * Emits onclick of this component\r\n     */\r\n    @Output() unitClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * The PageID we will navigate to when this is clicked.\r\n     */\r\n    private pageIDToNavigateTo: string;\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  The Constructor for the UnitDisplayComponent\r\n     *\r\n     * @param unitService\r\n     * @param pageService\r\n     */\r\n    constructor( private unitService: UnitService, private pageService: PageService) {}\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  Name of the Unit this Component represents\r\n     * @returns {string}\r\n     */\r\n    public get unitName(): string {\r\n        return this.unit.unitName;\r\n    }\r\n\r\n    /**\r\n     * Determines if this component is Disabled.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    public get isDisabled(): boolean{\r\n        if (!this.pageIDToNavigateTo) { return true; }\r\n        if (!this.isProgressLocked) { return false; }\r\n        return (this.unitService.isPageAfterHighestPageProgress( this.pageIDToNavigateTo ));\r\n    }\r\n\r\n    /**\r\n     *  Determines how much to indent this unit.\r\n     *\r\n     * @returns {number}\r\n     */\r\n    public get indentAmount(): number{\r\n        return (+this.unit.unitLevel * 15) - 10;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handlers\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  Event Handler for when this component is clicked. Emits this components unitClicked Event.\r\n     */\r\n    public onClick(): void {\r\n        this.pageService.loadPage(this.pageIDToNavigateTo);\r\n        this.unitClicked.emit(null);\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Angular Component Lifecycle Hooks\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  OnInt setup pageIDToNavigateTo\r\n     */\r\n    ngOnInit(): void {\r\n        if ( this.unit ) {\r\n            const pageUnit: UnitDataObject = this.unitService.getFirstPageInUnit(this.unit);\r\n            // find out if first page in unit exists before we set pageIDToNavigateTo\r\n            if (pageUnit) {\r\n                this.pageIDToNavigateTo = pageUnit.pageID;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/sidenav-components/unit-display.component.ts","module.exports = \"<div style=\\\"width:237px;\\\">\\r\\n    <div class=\\\"topDivider sidenavSeperartor\\\" style=\\\"width:100%; height:29px;\\\"></div>\\r\\n    <div style=\\\"overflow: hidden; width:237px;\\\">\\r\\n        <div *ngIf=\\\"menuState === 'mainMenu'\\\" [@mainMenuTrigger]=\\\"menuState\\\" style=\\\"position: absolute; width:237px\\\">\\r\\n            <div class=\\\"tinyInvisibleSeparator\\\" style=\\\"height: 3px;\\\"></div>\\r\\n            <button md-button class=\\\"mainMenuButton\\\" (click)=\\\"onCourseMapClicked()\\\" [disabled]=\\\"isCourseMapDisabled\\\">\\r\\n                <md-icon style=\\\"padding: 14px 30px 14px 0px; float:left;\\\">explore</md-icon>\\r\\n                <span class=\\\"backButtonText\\\">Course Map</span>\\r\\n            </button>\\r\\n            <button md-button class=\\\"mainMenuButton\\\" (click)=\\\"onReferencesClicked()\\\" [disabled]=\\\"isReferencesDisabled\\\">\\r\\n                <md-icon style=\\\"padding: 14px 30px 14px 0px; float:left;\\\">attachment</md-icon>\\r\\n                <span class=\\\"backButtonText\\\">References</span>\\r\\n            </button>\\r\\n            <button md-button class=\\\"mainMenuButton\\\" (click)=\\\"onHelpClicked()\\\">\\r\\n                <md-icon style=\\\"padding: 14px 30px 14px 0px; float:left;\\\">help</md-icon>\\r\\n                <span class=\\\"backButtonText\\\">Help</span>\\r\\n            </button>\\r\\n            <button *ngIf=\\\"isPrintVisible\\\" md-button class=\\\"mainMenuButton\\\" (click)=\\\"onPrintClicked()\\\" [disabled]=\\\"isPrintDisabled\\\">\\r\\n                <md-icon style=\\\"padding: 14px 30px 14px 0px; float:left;\\\">print</md-icon>\\r\\n                <span class=\\\"backButtonText\\\">Print</span>\\r\\n            </button>\\r\\n            <div class=\\\"exitDivider\\\" style=\\\"width:100%; height:8px; border-top: 1px solid lightgray\\\"></div>\\r\\n            <button md-button class=\\\"mainMenuButton\\\" (click)=\\\"onExitCourseClicked()\\\">\\r\\n                <md-icon style=\\\"padding: 14px 30px 14px 0px; float:left;\\\">cancel</md-icon>\\r\\n                <span class=\\\"backButtonText\\\">Exit Course</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"menuState === 'courseMap'\\\" [@subMenuTrigger]=\\\"menuState\\\" style=\\\"position: absolute; width:237px\\\">\\r\\n            <player-course-map (unitClicked)=\\\"onUnitClicked()\\\"></player-course-map>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"menuState === 'references'\\\" [@subMenuTrigger]=\\\"menuState\\\" style=\\\"position: absolute; width:237px\\\">\\r\\n            <player-references></player-references>\\r\\n        </div>\\r\\n    </div>\\r\\n    <a md-button *ngIf=\\\"menuState !== 'mainMenu'\\\" (click)=\\\"onBackButtonClicked()\\\" style=\\\"position: absolute; bottom: 10px; width: 237px; border-top: 1px solid lightgray\\\" [@subMenuTrigger]=\\\"menuState\\\">\\r\\n        <md-icon style=\\\"padding: 14px 30px 14px 0px; float:left;\\\">arrow_back</md-icon>\\r\\n        <span class=\\\"backButtonText\\\">Back</span>\\r\\n    </a>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/sidenav-content.component.html\n// module id = ./src/app/user-interface/view/sidenav-content.component.html\n// module chunks = main","import { Component, Output, EventEmitter }              from '@angular/core';\r\nimport { animate, state, style, transition, trigger }   from '@angular/animations';\r\n\r\nimport { SimpleTimer }      from 'ng2-simple-timer';\r\nimport { InjectorService }  from '../../shared/system-shared/model/services/injector.service';\r\nimport { ReferenceService } from '../../shared/system-shared/model/services/reference.service';\r\nimport { UnitService }      from '../../shared/system-shared/model/services/unit.service';\r\nimport { PageService }      from '../../shared/system-shared/model/services/page.service';\r\nimport {PopUpService} from '../../model/services/pop-up.service';\r\nimport {PopUpDataObject} from '../../model/data-objects/pop-up.data-object';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'player-sidenav-content',\r\n    templateUrl: 'sidenav-content.component.html',\r\n    styleUrls:  [ 'user-interface.module.css' ],\r\n\r\n    /**\r\n     * The Main Menu Animates in from the left and out to the left. The submenus animate in from the right and out to\r\n     * the right. All animations defined here happen when the HTML component is created or destroyed.\r\n     *\r\n     * The HTML Components existence is determined in an NgFor based off of the current value of Menu State.\r\n     */\r\n    animations: [\r\n        trigger('mainMenuTrigger', [\r\n            state('mainMenu', style({ transform: 'translateX(0)'})),\r\n            transition('void => *', [\r\n                style({transform: 'translateX(-100%)'}),\r\n                animate(150)\r\n            ]),\r\n            transition('* => void', [\r\n                animate(150 , style({transform: 'translateX(-100%)'}))\r\n            ])\r\n\r\n        ]),\r\n        trigger('subMenuTrigger', [\r\n            state('mainMenu', style({ transform: 'translateX(0)'})),\r\n            transition('void => *', [\r\n                style({transform: 'translateX(100%)'}),\r\n                animate(150)\r\n            ]),\r\n            transition('* => void', [\r\n                animate(150 , style({transform: 'translateX(100%)'}))\r\n            ])\r\n\r\n        ]),\r\n    ]\r\n\r\n})\r\n\r\n/**\r\n *  This class holds the contents of our SideNav. It represents both the main menu and handles the menu State creating\r\n *  the submenus as children when appropriate.\r\n */\r\nexport class SideNavContentComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    /**\r\n     * Event Dispatched to tell the main App component the we are closing the sideNav.\r\n     *\r\n     * @type {EventEmitter<any>}\r\n     */\r\n    @Output() closeSideNav: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * The current state of the menu\r\n     * @type {string}\r\n     * @default mainMenu;\r\n     */\r\n    public menuState: string = 'mainMenu';\r\n\r\n    /**\r\n     *  Reference to SimpleTimer to delay the printing.\r\n     */\r\n    private timer: SimpleTimer = InjectorService.injector.get(SimpleTimer);\r\n\r\n    /**\r\n     * Flag need because the timer method is called immediately the first time through.\r\n     * @type {boolean}\r\n     */\r\n    private timerStarted: boolean = false;\r\n\r\n    /**\r\n     * Location of HTML Player help file\r\n     * @type {string} - URL\r\n     */\r\n    private helpFileUrl: string = '../ReferenceDocuments/HtmlPlayerGuide.pdf';\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  Constructor for the SideNavContentComponent\r\n     * @param referenceService\r\n     * @param unitService\r\n     * @param pageService\r\n     * @param popUpService\r\n     */\r\n    constructor(private referenceService: ReferenceService,\r\n                private unitService: UnitService, private pageService: PageService,\r\n                private popUpService: PopUpService) {}\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     *  Determines if the course map menu item should be disabled.\r\n     *  Disabled is true if there are no units to display or no unit is loaded\r\n     * @returns {boolean}\r\n     * @default true\r\n     */\r\n    public get isCourseMapDisabled(): boolean {\r\n        if (this.unitService.unit) {\r\n            return (this.unitService.getCourseMap().length === 0);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     *  Determines if the references menu item should be disabled.\r\n     *  Disabled is true if this course has no references.\r\n     *\r\n     * @returns {boolean}\r\n     * @default true\r\n     */\r\n    public get isReferencesDisabled(): boolean {\r\n        if (this.referenceService.references) {\r\n            return (this.referenceService.references.length === 0);\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    /**\r\n     * Determines if the print menu item should be disabled.\r\n     *\r\n     * @returns {boolean}\r\n     * @default true this button is disabled by default.\r\n     */\r\n    public get isPrintDisabled(): boolean {\r\n        if (this.pageService.page && this.pageService.page.pageProperties) {\r\n            return !this.pageService.page.pageProperties.isPrintEnabled;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Determines if the print menu item should be added to the menu.\r\n     *\r\n     * @returns {boolean}\r\n     * @default true. it is added to the menu by default (Side Note: I think this is dumb!)\r\n     */\r\n    public get isPrintVisible(): boolean {\r\n        if (this.pageService.page && this.pageService.page.pageProperties) {\r\n            return this.pageService.page.pageProperties.isPrintVisible;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Event Handlers\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Sets menuState to courseMap when Course Map menu option is clicked.\r\n     */\r\n    public onCourseMapClicked(): void {\r\n        this.menuState = 'courseMap';\r\n    }\r\n\r\n    /**\r\n     * Sets menuState to references when References menu option is clicked.\r\n     */\r\n    public onReferencesClicked(): void {\r\n        this.menuState = 'references';\r\n    }\r\n\r\n    /**\r\n     * Opens Help PDF and closes SideNav when the Help menu option is Clicked\r\n     */\r\n    public onHelpClicked(): void {\r\n        const myWindow: any = window.open(this.helpFileUrl, '_blank');\r\n        myWindow.focus();\r\n        this.closeSideNav.emit(null);\r\n    }\r\n\r\n    /**\r\n     * Closes the sidenav and calls print. Print must be delayed or the side nav will block the print view.\r\n     */\r\n    public onPrintClicked(): void {\r\n        this.closeSideNav.emit(null);\r\n        // we have to wait for the SideNav to hide\r\n        this.timer.newTimer('printTimer', .2);\r\n        this.timer.subscribe('printTimer', e => {\r\n            if (!this.timerStarted) {\r\n               this.timerStarted = true;\r\n            } else {\r\n                this.timer.unsubscribe('printTimer');\r\n                this.timer.delTimer('printTimer');\r\n                this.timerStarted = false;\r\n                window.print();\r\n            }\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * Opens up a Pop-up to ask if they are sure they want to exit the course when the Exit Course button is clicked.\r\n     */\r\n    public onExitCourseClicked(): void {\r\n        const popUpData: PopUpDataObject = new PopUpDataObject('Are you sure you would like to exit the course?');\r\n        popUpData.titleText = 'Exit Course';\r\n        popUpData.callBackFunction = () => window.close();\r\n        popUpData.buttonConfiguration = 'okCancel';\r\n        this.popUpService.openPopUp(popUpData);\r\n    }\r\n\r\n    /**\r\n     * Sets menuState to mainMenu when back is clicked\r\n     */\r\n    public onBackButtonClicked(): void {\r\n        this.menuState = 'mainMenu';\r\n    }\r\n\r\n    /**\r\n     * When the CourseMap tells us that one of its units are clicked we tell the app component to close the SideNav.\r\n     */\r\n    public onUnitClicked(): void {\r\n        this.closeSideNav.emit(null);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/sidenav-content.component.ts","module.exports = \"<div *ngIf=\\\"isVisible\\\" style=\\\"color: white\\\">\\r\\n    <span>Page {{currentPageNumber}} of {{totalNumberOfPages}}</span>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/sub-component/page-indicator.component.html\n// module id = ./src/app/user-interface/view/sub-component/page-indicator.component.html\n// module chunks = main","import { Component }     from '@angular/core';\r\nimport { UnitService }          from '../../../shared/system-shared/model/services/unit.service';\r\nimport {PageService} from '../../../shared/system-shared/model/services/page.service';\r\n\r\n@Component({\r\n    selector: \"player-page-indicator\",\r\n    templateUrl: 'page-indicator.component.html',\r\n    styleUrls:  [ '../user-interface.module.css' ]\r\n})\r\n\r\n/**\r\n * TODO: Comment Me!!\r\n */\r\nexport class PageIndicatorComponent {\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor for the Control Bar Component. Used to inject pageService and unitService\r\n     *\r\n     * @param unitService\r\n     */\r\n    constructor(private unitService: UnitService, private pageService: PageService) {}\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The page number for the page we are currently displaying.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get currentPageNumber(): string {\r\n        if (this.unitService.unit && this.pageService.page) {\r\n            // TODO: anything but this functionality\r\n            if (this.isDisabled) { return '*'; };\r\n            return this.unitService.getCurrentPageNumber() + '';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * The total Number of pages.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get totalNumberOfPages(): string {\r\n        if (this.unitService.unit && this.pageService.page) {\r\n            // TODO: anything but this functionality\r\n            if (this.isDisabled) { return '*'; };\r\n            return this.unitService.getTotalPageNumbers() + '';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Flag indicating whether the page indicator should be disabled (shows * instead of page numbers ... dumb but ...)\r\n     * @return {boolean}\r\n     */\r\n    public get isDisabled(): boolean {\r\n        if (this.pageHasPageProperties()) {\r\n            // Use property from PageProperties - have to flip value since property is based on being enabled\r\n            return !this.pageService.page.pageProperties.isPageNumberEnabled;\r\n        } else {\r\n            // Otherwise set disabled false as default behavior\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Flag indicating whether the page indicator should be visible.\r\n     * @return {boolean}\r\n     */\r\n    public get isVisible(): boolean {\r\n        if (this.pageHasPageProperties()) {\r\n            // Use property from PageProperties\r\n            return this.pageService.page.pageProperties.isPageNumberVisible;\r\n        } else {\r\n            // Otherwise show it as the default behavior\r\n            return true;\r\n        }\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Validation\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Detect weather or not this page has page properties\r\n     * @TODO: this should possibly be moved to the server this is also used in the control bar and the Course Map\r\n     * @returns {boolean}\r\n     */\r\n    private pageHasPageProperties(): boolean {\r\n        return !!(this.pageService.page && this.pageService.page.pageProperties);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/sub-component/page-indicator.component.ts","module.exports = \"<div style=\\\"color: white; display: block; width: 90%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;\\\">\\r\\n        <span [mdTooltip]=\\\"pagePath\\\" mdTooltipShowDelay=\\\"333\\\" mdTooltipPosition=\\\"below\\\">\\r\\n            <span class=\\\"courseName\\\">{{courseName}}</span>\\r\\n            <span>-</span>\\r\\n            <span class=\\\"pageName\\\">{{pageName}}</span>\\r\\n        </span>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/sub-component/pathed-page-title.component.html\n// module id = ./src/app/user-interface/view/sub-component/pathed-page-title.component.html\n// module chunks = main","/**\r\n * Created by KRasmussen on 3/22/2017.\r\n */\r\nimport { Component }     from '@angular/core';\r\nimport { PageService }          from '../../../shared/system-shared/model/services/page.service';\r\nimport { UnitService }          from '../../../shared/system-shared/model/services/unit.service';\r\nimport {UnitDataObject} from \"../../../shared/system-shared/model/data-objects/unit.data-object\";\r\n\r\n@Component({\r\n    selector: \"player-pathed-page-title\",\r\n    templateUrl: 'pathed-page-title.component.html',\r\n    styleUrls:  [ '../user-interface.module.css' ]\r\n})\r\n\r\n\r\n/**\r\n * TODO: Comment Me!!\r\n */\r\nexport class PathedPageTitleComponent {\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Instance Variables / Properties\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Constructor / Initialization\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Constructor for the Control Bar Component. Used to inject pageService and unitService\r\n     *\r\n     * @param pageService\r\n     * @param unitService\r\n     */\r\n    constructor(private pageService: PageService, private unitService: UnitService) {}\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    ////////// Accessors\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * The name of the course\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get courseName(): string {\r\n        if (!this.unitService.unit) {\r\n            return '';\r\n        }\r\n        return this.unitService.unit.unitName;\r\n    }\r\n\r\n    /**\r\n     * The Name of the current page\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get pageName(): string {\r\n        return this.pageService.pageName;\r\n    }\r\n\r\n    /**\r\n     *  The Entire Unit path to the current page.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public get pagePath(): string {\r\n        if (!this.pageService.page || !this.unitService.unit) {\r\n            return '';\r\n        }\r\n         const unitBreadcrumbList: Array<UnitDataObject> =  this.unitService.getCurrentPageUnitBreadcrumb();\r\n         let breadcrumbString: string = '';\r\n\r\n        for ( let i: number = 0; i < unitBreadcrumbList.length; i++ ) {\r\n            breadcrumbString += unitBreadcrumbList[i].unitName;\r\n            if ( i !== unitBreadcrumbList.length - 1 ) {\r\n                breadcrumbString += ' - ';\r\n            }\r\n        }\r\n\r\n        return breadcrumbString;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-interface/view/sub-component/pathed-page-title.component.ts","module.exports = \".appBar{\\r\\n    background-color: #424242;\\r\\n    width:100%;\\r\\n    height:47px;\\r\\n    -webkit-box-shadow: 0px 2px 5px black;\\r\\n            box-shadow: 0px 2px 5px black;\\r\\n}\\r\\n\\r\\n.menuButtonDiv{\\r\\n    height: 47px;\\r\\n    width: 50px;\\r\\n\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.heading {\\r\\n    padding-top:16px;\\r\\n}\\r\\n\\r\\n.courseName{\\r\\n    font-family: 'Open Sans', sans-serif;\\r\\n    color: white;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n.pageName{\\r\\n    font-family: 'Open Sans', sans-serif;\\r\\n    color: white;\\r\\n    font-size: 14px;\\r\\n}\\r\\n\\r\\n.pageIndicator {\\r\\n    margin: 5px;\\r\\n    padding-top:11px;\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n.controlBar{\\r\\n    background-color: #FAFAFA;\\r\\n    width:100%;\\r\\n    height:29px;\\r\\n\\r\\n    -webkit-box-shadow: 0px 0px 5px black;\\r\\n\\r\\n            box-shadow: 0px 0px 5px black;\\r\\n}\\r\\n\\r\\n.openSans{\\r\\n    font-family: 'Open Sans', sans-serif;\\r\\n    font-size: 14px; /*don't leave this here*/\\r\\n}\\r\\n\\r\\n/*sidenav*/\\r\\n\\r\\n.mainMenuButton{\\r\\n    width: 237px;\\r\\n    height: 47px;\\r\\n}\\r\\n\\r\\n.mainMenuIcon{\\r\\n    padding-right: 30px;\\r\\n}\\r\\n\\r\\n.subMenuIcon{\\r\\n    padding: 14px 30px 14px 16px;\\r\\n    float:left;\\r\\n}\\r\\n\\r\\n.subMenuTitleText{\\r\\n    font-family: 'Open Sans', sans-serif;\\r\\n    font-size: 14px;\\r\\n    font-weight: 500;\\r\\n    display: block;\\r\\n    padding-top: 16px;\\r\\n}\\r\\n\\r\\n.backButtonText{\\r\\n    font-family: 'Open Sans', sans-serif;\\r\\n    font-size: 14px;\\r\\n    font-weight: 500;\\r\\n    float:left;\\r\\n    position: relative;\\r\\n    top: 8px;\\r\\n}\\r\\n\\r\\n.sidenavSeperartor{\\r\\n    border-bottom: 1px solid lightgray;\\r\\n}\\r\\n\\r\\n.truncated {\\r\\n    display: block;\\r\\n    white-space: nowrap; /* forces text to single line */\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n.popUpContainer{\\r\\n\\r\\n}\\r\\n\\r\\n.popUpHeader {\\r\\n    -webkit-box-shadow: 0px 0px 5px black;\\r\\n            box-shadow: 0px 0px 5px black;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-interface/view/user-interface.module.css\n// module id = ./src/app/user-interface/view/user-interface.module.css\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}