webpackJsonp(["main"],{

/***/ "./src/$$_gendir lazy recursive":
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_gendir lazy recursive";

/***/ }),

/***/ "./src/app/app.component.css":
/***/ (function(module, exports) {

module.exports = ".window {\r\n    background-color: #fafafa;\r\n    color: #424242;\r\n    overflow: hidden;\r\n}\r\n\r\n.player {\r\n    /* temporary to see boundary of player until sizing fully implemented */\r\n    /*border: 1px solid light grey;*/\r\n    margin: 0 auto;\r\n    -webkit-transform-origin: top center;\r\n            transform-origin: top center;\r\n}\r\n\r\n.loading {\r\n    /* horizontally and vertically center block */\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n            transform: translate(-50%, -50%);\r\n    /* setup font and horizontally center within block */\r\n    font: 20px 'Open Sans', sans-serif;\r\n    text-align: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 2;\r\n}\r\n\r\n.hidden {\r\n    display: none !important;\r\n}"

/***/ }),

/***/ "./src/app/app.component.html":
/***/ (function(module, exports) {

module.exports = "<!--\nNOTE: The idea of this implementation is to show the loading interface or the player based on the loading flag.\n        Initially the flag is set to true.  Once the content is loaded and the interface has been rendered,\n        we would set the loading flag to false to show player and the content of the appropriate page.\n\n        This implementation is probably not quite right though, because once the processes are properly setup,\n        the component for the player and page stuff probably wouldn't actually be created until after the flag is\n        switched.  We still want those UI components to be created, just not shown until after everything is loaded.\n\n        Not sure if we will continue to try to size the player window, but for now reading width and height to\n        size this component.  This will likely need to be changed / adjusted when we have a better idea how everything\n        goes together.\n\n        TODO: Will probably want to modify this so that the PlayerComponent is just not visible until the loading\n        flag is set to false.  Based on this article though, binding the hidden property is not recommended though\n        http://angularjs.blogspot.com/2016/04/5-rookie-mistakes-to-avoid-with-angular.html\n        Can try binding hidden, but might not work.  Recommend setting display:none !important\n-->\n\n<div class=\"window player\" [ngStyle]=\"{'width.px': width, 'height.px': height, 'transform': 'scale('+ playerScale +')'}\">\n\n    <!-- Loading message and spinner -->\n    <div *ngIf=\"isLoading\" class=\"window loading\" [@loadingScreen]='state'>\n        <div style=\"position: relative; top: 47%; left: 50%; transform: translate(-50%, -50%);\">\n            <md-progress-spinner mode=\"indeterminate\" style=\"margin: 0 auto; width: 72px; height: 72px;\">\n            </md-progress-spinner>\n            <p>Loading, please wait.</p>\n        </div>\n    </div>\n\n    <!-- Player with chrome -->\n    <div *ngIf=\"showUserInterface\">\n        <player-app-bar *ngIf=\"isDataLoadingComplete\" style=\"width: 100%\" [appBarHeight]=\"appBarHeight\"\n                        (menuButtonClicked)=\"sidenav.toggle()\">\n        </player-app-bar>\n\n        <md-sidenav-container [ngStyle]=\"{'height.px': height - 27}\">\n            <md-sidenav #sidenav (close)=\"onSideNavClosed()\" style=\"overflow-x: hidden\">\n                <player-sidenav-content #sideNavContent (closeSideNav)=\"sidenav.close()\"></player-sidenav-content>\n            </md-sidenav>\n\n            <!-- player content -->\n            <app-player *ngIf=\"isDataLoadingComplete\" [ngClass]=\"{hidden: isLoading}\"\n                        [width]=\"width\" [height]=\"height\" [showUserInterface]=\"showUserInterface\">\n                Root Module Root Component Loading ...\n            </app-player>\n\n            <player-control-bar *ngIf=\"isDataLoadingComplete\"\n                                [controlBarHeight]=\"controlBarHeight\">\n            </player-control-bar>\n\n            <!-- Set z-index to arbitrary high value to keep comments action button on top - should be able to use\n                    position and stacking context to accomplish this, but not working b/c template components being\n                    layered above this for some reason (z-index is higher, but since they are children of app-player\n                    should be layered below if position and z-index of app-player set, but didn't work -->\n            <player-comments-button *ngIf=\"showCommentLink\"\n                                    style=\"position: absolute; z-index: 1000000; top: 0px; left: 0px;\"\n                                    [width]=\"width\" [height]=\"height\">\n            </player-comments-button>\n        </md-sidenav-container>\n    </div>\n\n    <!-- Player with no chrome -->\n    <div *ngIf=\"!showUserInterface\">\n        <!-- player content -->\n        <app-player *ngIf=\"isDataLoadingComplete\" [ngClass]=\"{hidden: isLoading}\"\n                    [width]=\"width\" [height]=\"height\" [showUserInterface]=\"showUserInterface\">\n            Root Module Root Component Loading ...\n        </app-player>\n\n        <player-comments-button *ngIf=\"showCommentLink\"\n                                style=\"z-index: 1000000; position: absolute; top: 0px; left: 0px;\"\n                                [width]=\"width\" [height]=\"height\">\n        </player-comments-button>\n    </div>\n\n</div>"

/***/ }),

/***/ "./src/app/app.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_animations__ = __webpack_require__("./node_modules/@angular/animations/@angular/animations.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__ = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__model_services_player_service__ = __webpack_require__("./src/app/model/services/player-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__model_services_startup_configuration_service__ = __webpack_require__("./src/app/model/services/startup-configuration-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__user_interface_view_sidenav_content_component__ = __webpack_require__("./src/app/user-interface/view/sidenav-content.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__model_services_scorm_service__ = __webpack_require__("./src/app/model/services/scorm-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__angular_material__ = __webpack_require__("./node_modules/@angular/material/@angular/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__user_interface_view_pop_up_component__ = __webpack_require__("./src/app/user-interface/view/pop-up.component.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var AppComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new AppComponent instance.
     *
     * NOTE: We are injecting the InjectorService to ensure its static reference setup so that it's ready for use.
     *
     * TODO:    Refactor AppComponent constructor to not use TypeScript's parameter properties.
     *          They are confusing and make documentation more difficult.
     * TODO:    Refactor AppComponent constructor so its parameters are listed alphabetically per coding conventions.
     *          In the absence of any other logical ordering, parameters should be listed alphabetically.
     *
     * @param   injectorService             A reference to the Player application's InjectorService.
     * @param   startupConfigurationService A reference to the Player application's StartupConfigurationService.
     * @param   playerService               A reference to the Player application's PlayerService.
     * @param   pageService                 A reference to the Player application's PageService.
     */
    function AppComponent(injectorService, startupConfigurationService, playerService, pageService, scormService, popUpService, mdDialog) {
        this.injectorService = injectorService;
        this.startupConfigurationService = startupConfigurationService;
        this.playerService = playerService;
        this.pageService = pageService;
        this.scormService = scormService;
        this.popUpService = popUpService;
        this.mdDialog = mdDialog;
        /**
         * This flag indicates when all initial Player, Course, and Page data is loaded.  Used to determine when player's
         * user interface and course content can be shown.
         *
         * @internal: Always the inverse of isLoading?  Do we need this?
         *
         * @default false
         */
        this.isDataLoadingComplete = false;
        /**
         * It is used to determine whether to show user interface.
         *
         * @default false
         */
        this.showUserInterface = false;
        this.showCommentLink = false;
        /**
         *  The animation state.
         *
         *  TODO: Why isn't this named animationState?
         *  TODO: Write a proper description.
         *  TODO: Incorporate state with loading somehow.
         *
         * @default 'visible'
         */
        this.state = 'visible';
        /**
         * This flag indicates whether to show the loading interface, or the user interface and page content.  It is only
         * used during startup.
         *
         * The loading interface should be shown until the point when all initial Player, Course, and Page data is loaded
         * and the UI components have been created.
         *
         * @default true
         */
        this.isLoading = true;
        /**
         *  The height of the AppBar component that by default is part of the user interface and sits above the content
         *  area.
         *
         *  @default 47
         */
        this.appBarHeight = 47;
        /**
         *  The height of the ControlBar component that by default is part of the user interface and sits below the content
         *  area.
         *
         *  @default 29
         */
        this.controlBarHeight = 29;
        this.playerScale = 1;
    }
    /**
     * Add a listener to event beforeunload to terminate the lms if scorm api is initialized
     * TODO: Not sure where this should be placed - here?  top of class (linter complains if placed before instance
     *          variables)?  with other functions / methods?  with callback methods?
     */
    AppComponent.prototype.terminateScormConnection = function (e) {
        if (this.scormService.isInitialized()) {
            this.scormService.Terminate();
        }
        // return undefined so that Browser won't prompt a popup
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * The AppComponent's implementation of the ngOnInit lifecycle hook starts the Player application's initialization
     * process by loading external XML config data via the StartupConfigurationService.
     *
     * When the Player is running in standalone/offline mode, then XML manifest and page directory data is also
     * loaded.
     *
     * We also subscribe to our popUpService here! Alowing us to know when to open a pop-up
     *
     * @inheritDoc
     */
    AppComponent.prototype.ngOnInit = function () {
        var _this = this;
        console.log('On Init WORK!!!!');
        this.startupConfigurationService.loadConfig().subscribe(function (data) {
            _this.onLoadConfigComplete();
        }, function (error) { _this.onObservableError(error); }, function () { });
        this.popUpService.displayPopUp.subscribe(function () { return _this.onOpenPopup(); });
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    AppComponent.prototype.scalePlayer = function () {
        this.playerScale = Math.max(1, Math.min(window.innerWidth / this.width, window.innerHeight / this.height));
        console.log("playerScale = " + this.playerScale + " window.innerWidth = " + window.innerWidth + " this.width = " + this.width + " window.innerHeight = " + window.innerHeight + " this.height = " + this.height);
    };
    /**
     * Handles the load configuration data is completed event.
     *
     * After loading our configuration data from an external XML file, if the Player is in standalone/offline mode
     * continue on to loading the manifest XML file, otherwise trigger the onStartupConfigurationComplete event.
     */
    AppComponent.prototype.onLoadConfigComplete = function () {
        var _this = this;
        if (this.startupConfigurationService.caller === 'Player') {
            this.startupConfigurationService.loadManifest().subscribe(function (data) {
                _this.onLoadManifestComplete();
            }, function (error) { _this.onObservableError(error); }, function () { });
        }
        else {
            this.onStartupConfigurationComplete();
        }
    };
    /**
     * Handles the load manifest data is completed event.
     *
     * After loading the manifest data (which we only do in standalone/offline mode), continue on to load the page
     * directory (also used only in standalone/offline mode).
     */
    AppComponent.prototype.onLoadManifestComplete = function () {
        var _this = this;
        this.startupConfigurationService.loadPageDirectory().subscribe(function (data) {
            _this.onStartupConfigurationComplete();
        }, function (error) { _this.onObservableError(error); }, function () { });
    };
    /**
     * Handles the startup configuration is completed event.
     *
     * After loading all external configuration data (including manifest and page directory data when the Player is in
     * standalone/offline mode), startup configuration is now complete.
     *
     * Continue the Player application's initialization process by loading the Player initialization data (unit type,
     * unit hierarchy/structure [TOC], references, and variables).
     */
    AppComponent.prototype.onStartupConfigurationComplete = function () {
        var _this = this;
        this.width = this.startupConfigurationService.playerWidth;
        this.height = this.startupConfigurationService.playerHeight;
        this.resizeWindow();
        // window.addEventListener('resize', this.scalePlayer);
        window.onresize = function (event) { _this.scalePlayer(); };
        this.scalePlayer();
        if (this.startupConfigurationService.caller === 'Template') {
            // If launched from Template Designer can skip loading course related data (b/c it doesn't apply)
            this.onLoadInitDataComplete();
        }
        else {
            // Otherwise start loadInitData process to load course related data
            this.playerService.loadInitData().subscribe(function (data) {
                _this.onLoadInitDataComplete();
            }, function (error) {
                _this.onObservableError(error);
            }, function () {
            });
        }
    };
    /**
     * Handles the load Player initialization data is completed event.
     *
     * After loading the Player initialization data, continue on to loading the launch page data.
     */
    AppComponent.prototype.onLoadInitDataComplete = function () {
        var _this = this;
        var getLaunchPage = this.pageService.getLaunchPage();
        // Check observable to handle scenario where there is no launch page
        if (getLaunchPage) {
            // If observable returned, subscribe to initiate process of loading the launch page
            getLaunchPage.subscribe(function (data) {
                _this.showInterface();
            }, function (error) {
                _this.onObservableError(error);
            }, function () {
            });
        }
        else {
            // If no observable returned, there is no launch page to load - show user interface (if applicable) with no
            // content
            this.showInterface();
        }
    };
    /**
     *
     */
    AppComponent.prototype.onSideNavClosed = function () {
        this.sideNavContent.menuState = 'mainMenu';
    };
    /**
     *
     */
    AppComponent.prototype.onOpenPopup = function () {
        var mdDialogConfig = new __WEBPACK_IMPORTED_MODULE_10__angular_material__["c" /* MdDialogConfig */]();
        mdDialogConfig.disableClose = true;
        this.mdDialog.open(__WEBPACK_IMPORTED_MODULE_11__user_interface_view_pop_up_component__["a" /* PopUpComponent */], mdDialogConfig);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * resize player window based on player width and height
     */
    AppComponent.prototype.resizeWindow = function () {
        resizeBy(this.startupConfigurationService.playerWidth - window.innerWidth, this.startupConfigurationService.playerHeight - window.innerHeight);
    };
    ;
    /**
     * Show player user interface (chrome, comment button, etc.)
     */
    AppComponent.prototype.showInterface = function () {
        this.showUserInterface = this.startupConfigurationService.showUserInterface;
        this.isDataLoadingComplete = true;
        // set showCommentLink (should not show when running as Player or previewing from Template Designer)
        if (this.startupConfigurationService.caller !== 'Player' &&
            this.startupConfigurationService.caller !== 'Template') {
            this.showCommentLink = true;
        }
        // This should hide the loading interface once the page data has been loaded.  If this is still too
        // soon, may have to try moving to an Angular lifecycle hook
        this.isLoading = false;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Error Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * A general error handler for Observables.
     *
     * @param   error   The particular Error to pass to the error notification.
     *
     * @returns Observable An error Observable: emits only the error notification using the given error argument.
     */
    AppComponent.prototype.onObservableError = function (error) {
        __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_9__model_services_pop_up_service__["a" /* PopUpService */]).openSystemMessage(error.message);
        return __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__["a" /* Observable */].throw(error.message || error);
    };
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])('sideNavContent'),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_7__user_interface_view_sidenav_content_component__["a" /* SideNavContentComponent */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_7__user_interface_view_sidenav_content_component__["a" /* SideNavContentComponent */]) === "function" && _a || Object)
    ], AppComponent.prototype, "sideNavContent", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["HostListener"])('window:beforeunload', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [typeof (_b = typeof Event !== "undefined" && Event) === "function" && _b || Object]),
        __metadata("design:returntype", void 0)
    ], AppComponent.prototype, "terminateScormConnection", null);
    AppComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
            selector: 'player-root',
            // host: { 'window:beforeunload': 'doSomething($event)' },  TODO: Can we remove?
            template: __webpack_require__("./src/app/app.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")],
            animations: [
                Object(__WEBPACK_IMPORTED_MODULE_0__angular_animations__["j" /* trigger */])('loadingScreen', [
                    Object(__WEBPACK_IMPORTED_MODULE_0__angular_animations__["g" /* state */])('visible', Object(__WEBPACK_IMPORTED_MODULE_0__angular_animations__["h" /* style */])({
                        opacity: '1'
                    })),
                    Object(__WEBPACK_IMPORTED_MODULE_0__angular_animations__["g" /* state */])('void', Object(__WEBPACK_IMPORTED_MODULE_0__angular_animations__["h" /* style */])({
                        opacity: '0',
                    })),
                    Object(__WEBPACK_IMPORTED_MODULE_0__angular_animations__["i" /* transition */])('* => void', Object(__WEBPACK_IMPORTED_MODULE_0__angular_animations__["e" /* animate */])('1000ms ease-in'))
                ])
            ]
        })
        /**
         * The root component, of the root module, of the Player application.
         *
         * One of the key responsibilities of this component is to facilitate the startup/initialization sequence of the Player
         * application.  There are two key routes this process can take depending on what mode the Player is executing in.
         *
         * Standalone / Offline Mode
         *
         *  1. Load config XML.
         *  2. Load manifest XML.
         *  3. Load page directory XML.
         *  4. Load Player initialization data.
         *  5. Load launch page data.
         *
         * All Other Modes
         *
         *  1. Load config XML.
         *  2. Load Player initialization data.
         *  3. Load launch page data.
         *
         * TODO: Add a more detailed description of its relationship to the UI and content modules once structure is finalized.
         */
        ,
        __metadata("design:paramtypes", [typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_injector_service__["a" /* InjectorService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_injector_service__["a" /* InjectorService */]) === "function" && _c || Object, typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_6__model_services_startup_configuration_service__["a" /* StartupConfigurationService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_6__model_services_startup_configuration_service__["a" /* StartupConfigurationService */]) === "function" && _d || Object, typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_5__model_services_player_service__["a" /* PlayerService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_5__model_services_player_service__["a" /* PlayerService */]) === "function" && _e || Object, typeof (_f = typeof __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_services_page_service__["a" /* PageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_services_page_service__["a" /* PageService */]) === "function" && _f || Object, typeof (_g = typeof __WEBPACK_IMPORTED_MODULE_8__model_services_scorm_service__["a" /* ScormService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_8__model_services_scorm_service__["a" /* ScormService */]) === "function" && _g || Object, typeof (_h = typeof __WEBPACK_IMPORTED_MODULE_9__model_services_pop_up_service__["a" /* PopUpService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_9__model_services_pop_up_service__["a" /* PopUpService */]) === "function" && _h || Object, typeof (_j = typeof __WEBPACK_IMPORTED_MODULE_10__angular_material__["b" /* MdDialog */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_10__angular_material__["b" /* MdDialog */]) === "function" && _j || Object])
    ], AppComponent);
    return AppComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/app.component.js.map

/***/ }),

/***/ "./src/app/app.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__ = __webpack_require__("./node_modules/@angular/platform-browser/@angular/platform-browser.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("./node_modules/@angular/http/@angular/http.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_material__ = __webpack_require__("./node_modules/@angular/material/@angular/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_simple_timer__ = __webpack_require__("./node_modules/ng2-simple-timer/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_simple_timer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_simple_timer__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_hammerjs__ = __webpack_require__("./node_modules/hammerjs/hammer.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_hammerjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_hammerjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__player_player_module__ = __webpack_require__("./src/app/player/player.module.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__shared_system_shared_system_shared_module__ = __webpack_require__("./src/app/shared/system-shared/system-shared.module.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__user_interface_user_interface_module__ = __webpack_require__("./src/app/user-interface/user-interface.module.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__model_services_player_service__ = __webpack_require__("./src/app/model/services/player-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__shared_system_shared_model_services_reference_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/reference.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__model_services_scorm_service__ = __webpack_require__("./src/app/model/services/scorm-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__model_services_startup_configuration_service__ = __webpack_require__("./src/app/model/services/startup-configuration-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__shared_system_shared_model_services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__shared_system_shared_model_services_unit_type_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit-type.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__shared_system_shared_model_services_variable_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/variable.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__app_component__ = __webpack_require__("./src/app/app.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__user_interface_view_pop_up_component__ = __webpack_require__("./src/app/user-interface/view/pop-up.component.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





















var AppModule = /** @class */ (function () {
    /**
     * The root module of the Player application.
     */
    function AppModule() {
    }
    AppModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_3__angular_core__["NgModule"])({
            declarations: [__WEBPACK_IMPORTED_MODULE_19__app_component__["a" /* AppComponent */]],
            imports: [
                __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__["a" /* BrowserModule */],
                __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* HttpModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_material__["a" /* MdButtonModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_material__["i" /* MdProgressSpinnerModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_material__["j" /* MdSidenavModule */],
                __WEBPACK_IMPORTED_MODULE_6__player_player_module__["a" /* PlayerModule */],
                __WEBPACK_IMPORTED_MODULE_7__shared_system_shared_system_shared_module__["a" /* SystemSharedModule */],
                __WEBPACK_IMPORTED_MODULE_8__user_interface_user_interface_module__["a" /* UserInterfaceModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_material__["e" /* MdDialogModule */]
            ],
            providers: [
                __WEBPACK_IMPORTED_MODULE_4_ng2_simple_timer__["SimpleTimer"],
                __WEBPACK_IMPORTED_MODULE_2__angular_material__["b" /* MdDialog */],
                __WEBPACK_IMPORTED_MODULE_9__shared_system_shared_model_services_injector_service__["a" /* InjectorService */],
                __WEBPACK_IMPORTED_MODULE_10__shared_system_shared_model_services_page_service__["a" /* PageService */],
                __WEBPACK_IMPORTED_MODULE_11__model_services_player_service__["a" /* PlayerService */],
                __WEBPACK_IMPORTED_MODULE_12__model_services_pop_up_service__["a" /* PopUpService */],
                __WEBPACK_IMPORTED_MODULE_13__shared_system_shared_model_services_reference_service__["a" /* ReferenceService */],
                __WEBPACK_IMPORTED_MODULE_14__model_services_scorm_service__["a" /* ScormService */],
                __WEBPACK_IMPORTED_MODULE_15__model_services_startup_configuration_service__["a" /* StartupConfigurationService */],
                __WEBPACK_IMPORTED_MODULE_16__shared_system_shared_model_services_unit_service__["a" /* UnitService */],
                __WEBPACK_IMPORTED_MODULE_17__shared_system_shared_model_services_unit_type_service__["a" /* UnitTypeService */],
                __WEBPACK_IMPORTED_MODULE_18__shared_system_shared_model_services_variable_service__["a" /* VariableService */]
            ],
            entryComponents: [__WEBPACK_IMPORTED_MODULE_2__angular_material__["d" /* MdDialogContainer */], __WEBPACK_IMPORTED_MODULE_20__user_interface_view_pop_up_component__["a" /* PopUpComponent */]],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_19__app_component__["a" /* AppComponent */]]
        })
        /**
         * The root module of the Player application.
         */
    ], AppModule);
    return AppModule;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/app.module.js.map

/***/ }),

/***/ "./src/app/index.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__app_component__ = __webpack_require__("./src/app/app.component.ts");
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_module__ = __webpack_require__("./src/app/app.module.ts");
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__app_module__["a"]; });
/**
 * App Barrel file
 *
 * A barrel file is a way to roll up exports from several ES2015 modules into a single convenient ES2015 module. The
 * barrel itself is an ES2015 module file that re-exports selected exports of other ES2015 modules.  The idea is to make
 * it easier when it's necessary to import many related modules.  With the barrel file you can import all the modules
 * in a single statement from one source instead of many statements pulling from many sources.  The use of barrel files
 * is optional (sort of.  See note below).
 *
 * NOTE:
 *          This file was originally created by the angular CLI (1.0.0beta.17) when we created our new project.  Since
 *          the AppModule and AppComponent are only imported in a few places its usefulness is dubious.  Especially
 *          since as barrel files grow large they can be difficult to maintain as order becomes important to avoid
 *          circular dependencies.  We attempted to remove this file and change the format of the import statement in
 *          main.ts but for some reason this causes (at least it's the cause as far as we can tell) the webpack bundles
 *          to break in an inexplicable way at run-time.  So it stays for now...for now.
 */


//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/index.js.map

/***/ }),

/***/ "./src/app/model/data-objects/manifest.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManifestDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");

/**
 * data object holder for offline IMIManifest.xml file
 *
 */
var ManifestDataObject = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new ManifestDataObject instance.
     *
     * @param   sourceXml
     */
    function ManifestDataObject(sourceXml) {
        this.constructFromXml(sourceXml);
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Accessors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * constructFromXML method is used to populate the ManifestDataObject with source XML element
     *
     * @param   sourceXML               the source XML of manifest file.
     */
    ManifestDataObject.prototype.constructFromXml = function (sourceXml) {
        var children = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getChildElements(sourceXml);
        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
            var child = children_1[_i];
            switch (child.tagName) {
                case 'Pages':
                    this.pages = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getTextContent(child);
                    break;
                case 'Content':
                    this.content = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getTextContent(child);
                    break;
                case 'Course':
                    var courseInfos = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getChildElements(child);
                    for (var _a = 0, courseInfos_1 = courseInfos; _a < courseInfos_1.length; _a++) {
                        var info = courseInfos_1[_a];
                        switch (info.tagName) {
                            case 'CourseDir':
                                this.courseDir = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getTextContent(info);
                                break;
                            case 'CourseTOC':
                                this.courseTOC = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getTextContent(info);
                                break;
                            case 'CourseUnitType':
                                this.courseUnitType = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getTextContent(info);
                                break;
                            case 'PageDir':
                                this.pageDir = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getTextContent(info);
                                break;
                            case 'ReferenceDir':
                                this.referenceDir = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getTextContent(info);
                                break;
                            case 'Variables':
                                this.courseVariables = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getTextContent(info);
                                break;
                        }
                    }
                    ;
                    break;
            }
        }
        ;
    };
    return ManifestDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/manifest.data-object.js.map

/***/ }),

/***/ "./src/app/model/data-objects/page-file-Url.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PageFileUrlDataObject; });
/**
 * data object holder for offline Page file URL
 *
 */
var PageFileUrlDataObject = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor of page url data object class.
     */
    function PageFileUrlDataObject() {
    }
    return PageFileUrlDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/page-file-Url.data-object.js.map

/***/ }),

/***/ "./src/app/model/data-objects/pop-up.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PopUpDataObject; });
/**
 *  This is configuration for a Pop Up (System Message) create one of these and pass it into the PopUpService to create
 *  your Pop Up.
 */
var PopUpDataObject = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *
     */
    function PopUpDataObject(message) {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The message to display in the Pop Up
         *
         * @type {string}
         * @default ''
         */
        this.message = '';
        /**
         * The text to display in the title bar.
         *
         * @type {string}
         * @default 'System Message'
         */
        this.titleText = 'System Message';
        /**
         * The material icon font string identifier for the title bar icon. Set this to '' if you don't want any icon.
         *
         * @type {string}
         * @default 'error'
         */
        this.titleIcon = 'error';
        /**
         * The color of the title bar.
         *
         * @type {string}
         * @default '#FFFFFF'
         */
        this.titleBarColor = '#FFFFFF';
        /**
         * The color of the title text.
         *
         * @type {string}
         * @default '#000000'
         */
        this.titleTextColor = '#000000';
        /**
         * Defines what button configuration this Pop Up has.
         * The two valid configurations are 'ok' and 'okCancel'
         *
         * @type {string}
         * @default 'ok'
         */
        this.buttonConfiguration = 'ok'; // can also be set to 'okCancel';
        /**
         * A callback function to call when ok is pressed. if undefined nothing will occur.
         *
         * @type {any}
         * @default undefined
         */
        this.callBackFunction = undefined;
        /**
         * Determines if the Pop Up can be closed by clicking away from it.
         * @type {boolean}
         * @default true
         */
        this.disableClose = true;
        // Currently the string passed in (typically constructed by Flash interface at this point) contains carriage
        // returns as \n so they need to be replaced with <br>
        // NOTE: If we find ourselves needing this elsewhere, we should consolidate the functionality to some service
        this.message = message.replace(/[\n]/g, '<br>');
    }
    return PopUpDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/pop-up.data-object.js.map

/***/ }),

/***/ "./src/app/model/data-objects/variable.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VariablePlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__ = __webpack_require__("./node_modules/rxjs/_esm5/Subject.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_variable_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/variable.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Playable version of base variable data object.
 */
var VariablePlayableDataObject = /** @class */ (function (_super) {
    __extends(VariablePlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new VariablePlayableDataObject instance.
     */
    function VariablePlayableDataObject() {
        var _this = _super.call(this) || this;
        // Create a new asynchronous EventEmitter for when our value property changes.
        _this.onValueChanged = new __WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__["b" /* Subject */]();
        return _this;
    }
    Object.defineProperty(VariablePlayableDataObject.prototype, "value", {
        get: function () {
            return this._value;
        },
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The value of the variable that is represented by this data object.
         *
         * Changing this value triggers two events:
         *
         *  1.  An Event System EventDataObject.ON_CHANGE event.
         *
         *  2.  A VariableDataObject.onValueChanged event used by text components that can have variable references embedded
         *      in their content.
         *
         * // TODO: Enumerate actual default values for each variable type.
         * @default Varies depending upon the variable type.  The value is provided by the DataBase.
         */
        set: function (value) {
            this._value = value;
            // Process of loading another page clears out eventCollection for all variables.  Need to check if
            // eventCollection exists before processing it.
            if (this.eventCollection) {
                // Trigger the Event System's Variable onChange Event.
                this.eventCollection.processEvent(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_CHANGE);
            }
            // Trigger our own onValueChanged event.
            this.onValueChanged.next();
        },
        enumerable: true,
        configurable: true
    });
    return VariablePlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_variable_data_object__["a" /* VariableDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/variable.playable.data-object.js.map

/***/ }),

/***/ "./src/app/model/services/player-service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PlayerService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transactions_load_player_init_data_transaction__ = __webpack_require__("./src/app/model/transactions/load-player-init-data.transaction.ts");

/*
 *  Service class to provide player related tasks, like load player init data.
 **/
var PlayerService = /** @class */ (function () {
    function PlayerService() {
    }
    /*
    * Load player init data - unit,type,reference,variable
    *
    *
    **/
    PlayerService.prototype.loadInitData = function () {
        var loadPlayerInitTransaction = new __WEBPACK_IMPORTED_MODULE_0__transactions_load_player_init_data_transaction__["a" /* LoadPlayerInitDataTransaction */]();
        return loadPlayerInitTransaction.startTransaction();
    };
    return PlayerService;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/player-service.js.map

/***/ }),

/***/ "./src/app/model/services/pop-up.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PopUpService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__data_objects_pop_up_data_object__ = __webpack_require__("./src/app/model/data-objects/pop-up.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Subject__ = __webpack_require__("./node_modules/rxjs/_esm5/Subject.js");


/**
 * This Service Acts as a centralized place for opening popup
 */
var PopUpService = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * The constructor for this service.
     */
    function PopUpService() {
        /**
         *Comment me!
         *
         * @type {Subject}
         */
        this.displayPopUp = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Subject__["b" /* Subject */]();
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Once You Pop the Fun Don't Stop
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *
     * @param popUpDataObject
     */
    PopUpService.prototype.openPopUp = function (popUpDataObject) {
        this.popUpDataObject = popUpDataObject;
        this.displayPopUp.next();
    };
    /**
     * Convenience method for opening a generic system message.
     */
    PopUpService.prototype.openSystemMessage = function (message) {
        var popUpData = new __WEBPACK_IMPORTED_MODULE_0__data_objects_pop_up_data_object__["a" /* PopUpDataObject */](message);
        this.popUpDataObject = popUpData;
        this.displayPopUp.next();
    };
    return PopUpService;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/pop-up.service.js.map

/***/ }),

/***/ "./src/app/model/services/scorm-service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ScormService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scorm_api_wrapper__ = __webpack_require__("./src/app/model/services/scorm/api-wrapper.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scorm_interaction__ = __webpack_require__("./src/app/model/services/scorm/interaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__scorm_objective__ = __webpack_require__("./src/app/model/services/scorm/objective.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__ = __webpack_require__("./src/app/model/services/scorm/lms.constant.ts");




/*
 * Service class to provide SCORM related tasks, like ...
 *
 * TODO: get/set/commit/terminate are set to public for test purpuse, will change to private
 **/
var ScormService = /** @class */ (function () {
    /**
     * constructor for ScormService. ScormService is a singalton. This Constructor is not to be called directly!
     */
    function ScormService() {
        /**
         * List of interactions currently stored locally.
         */
        this.interactions = [];
        console.log('@@@ ScormService.constructor @@@');
        this.initializeScorm();
        // check interactions. Debug code
        // for (let i: number = 0; i < this.interactions.length; i++) {
        //     console.log('@@@ ScormService.constructor @@@ interactions=' + this.interactions[i].serializeToString());
        // }
    }
    /**
     * get API version
     */
    ScormService.prototype.getAPIVersion = function () {
        return this.apiwrapper.version;
    };
    /**
     * wirte API session log information
     */
    ScormService.prototype.writeLogToConsole = function () {
        for (var i = 0; i < this.apiwrapper.sessionLogs.length; i++) {
            console.log('\n apiwrapper.sessionLogs [' + i + ']' +
                this.apiwrapper.sessionLogs[i].timestamp + '---' +
                this.apiwrapper.sessionLogs[i].scormFn + '---' +
                this.apiwrapper.sessionLogs[i].scormFnArgs + '---' +
                this.apiwrapper.sessionLogs[i].errorCode + '---' +
                this.apiwrapper.sessionLogs[i].errorCodeString + '---' +
                this.apiwrapper.sessionLogs[i].diagnostic);
        }
    };
    /**
     * check is initialized
     *
     * @returns boolean
     */
    ScormService.prototype.isInitialized = function () {
        return this.apiwrapper.isInitialized();
    };
    /**
     * Get an Interaction out of the interactions array using an interaction ID.
     *
     *
     * @param 	interactionID 	ID used to return the interaction we are looking for
     *
     * @return	Interaction		Interaction whose ID matches the interactionID passed into this function
     */
    ScormService.prototype.GetInteractionByID = function (interactionID) {
        for (var i = 0; i < this.interactions.length; i++) {
            if (this.interactions[i].id === interactionID) {
                return this.interactions[i];
            }
        }
        return undefined;
    };
    /**
     * 	Save the interaction to the interactions array and the LMS
     *
     * @param	interaction	 interaction to be Saved
     */
    ScormService.prototype.saveInteraction = function (interaction) {
        var questionLocation = this.getInteractionLocation(interaction);
        console.log('@@@ScormService.saveInteraction questionLocation=' + questionLocation);
        this.interactions[questionLocation] = interaction;
        if (this.isInitialized()) {
            this.writeInteraction(interaction);
        }
    };
    /**
     * 	Find if the given interaction is in the interactions array
     *
     * @param interaction 	the interaction to find
     *
     * @return boolean	return true	if its exists otherwise  return false
     */
    ScormService.prototype.isInteractionSaved = function (interaction) {
        for (var i = 0; i < this.interactions.length; i++) {
            if (this.interactions[i].id === interaction.id) {
                return true;
            }
        }
        return false;
    };
    /**
     * A convenience method to initialize the communication with the lms
     * It will
     *      1) check SCORM API first;
     *      2) Initialize API and set the session start time;
     *      3) if completion_status is passed/completed, terminate the LMS
     *              else initializeSCORMValues and getInitalQuizData
     *
     * @param
     * @returns boolean
     *
     */
    ScormService.prototype.initializeScorm = function () {
        this.apiwrapper = new __WEBPACK_IMPORTED_MODULE_0__scorm_api_wrapper__["a" /* APIWrapper */]();
        if (this.apiwrapper.initialize()) {
            // Get completion status
            var completion_status = this.get(__WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].CMI_COMPLETION_STATUS);
            // If course has already been completed, then terminate from the LMS
            if (completion_status === 'passed' || completion_status === 'completed') {
                // Terminate from the LMS.
                this.Terminate();
                return false;
            }
            else {
                this.initializeSCORMValues();
                this.getInitalQuizData();
            }
            return true;
        }
        else {
            return false;
        }
    };
    /**
     *  Get the index of a perticular Interaction from the interations array.
     *
     * @param 	interaction 	interaction to find
     *
     * @return 	number 	index of the interaction array or next available index if not existed
     */
    ScormService.prototype.getInteractionLocation = function (interaction) {
        var interactionLength = this.interactions.length;
        for (var i = 0; i < interactionLength; i++) {
            if (this.interactions[i].id === interaction.id) {
                return i;
            }
        }
        return interactionLength;
    };
    /**
     * Write interaction to the LMS
     *
     * @param 	interaction		interaction being written to the LMS
     */
    ScormService.prototype.writeInteraction = function (interaction) {
        // first find if interactin exists
        var count = parseInt(this.get('cmi.interactions._count'), 10);
        var interactionFound = false;
        var position = 0;
        while (position < count && !interactionFound) {
            if (interaction.id === this.get('cmi.interactions.' + position + '.id')) {
                interactionFound = true;
            }
            else {
                position++;
            }
        }
        // we have the position (existed or new) to put it at, now write it. 
        this.set('cmi.interactions.' + position + '.id', interaction.id);
        this.set('cmi.interactions.' + position + '.type', interaction.type);
        for (var i = 0; i < interaction.objectives.length; i++) {
            this.set('cmi.interactions.' + position + '.objectives.' + i + '.id', interaction.objectives[i]);
        }
        this.set('cmi.interactions.' + position + '.timestamp', interaction.timestamp);
        // for (let n: number = 0; n < interaction.correctResponses.length; n++) {
        //    this.set('cmi.interactions.' + position + '.correct_responses.' + n + '.pattern',
        //        interaction.correctResponses[n]);
        // }
        // correctResponses is just a string
        this.set('cmi.interactions.' + position + '.correct_responses.' + '0' + '.pattern', interaction.correctResponses);
        this.set('cmi.interactions.' + position + '.weighting', interaction.weighting);
        this.set('cmi.interactions.' + position + '.learner_response', interaction.learnerResponse);
        this.set('cmi.interactions.' + position + '.result', interaction.result);
        this.set('cmi.interactions.' + position + '.latency', interaction.latency);
        this.set('cmi.interactions.' + position + '.description', interaction.description);
        this.commit();
    };
    /**
     * Run the possess necessary for course completion. ie seting succes_status completion_status...
     */
    ScormService.prototype.executeCourseCompletetion = function () {
        if (this.isInitialized()) {
            this.set(__WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].CMI_COMPLETION_STATUS, __WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].COMPLETED);
            // Set whether the course is successful
            //  internal base behaviour is always successful when set
            this.set(__WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].CMI_SUCCESS_STATUS, __WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].PASSED);
            // Tell scorm api that upon closing the course this attempt is finished and will NOT be resumed
            this.set(__WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].CMI_EXIT, __WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].NORMAL);
            this.commit();
        }
    };
    /**
     * Set cmi.location
     *
     * @param 		Location value being set
     *
     * @return boolean	if it was succesful
     */
    ScormService.prototype.saveLocation = function (location) {
        var bool = this.set('cmi.location', location);
        this.commit();
        return bool;
    };
    /**
     * Get the current location from the LMS
     *
     * @return string	the location
     */
    ScormService.prototype.getLocation = function () {
        return this.get('cmi.location');
    };
    /**
     *	Get Quiz from interations vector by name. Compiles a Vector of interactions who have the same Quiz name.
     *
     * @param	quizName 	to look for in our interactions
     *
     * @return	Array<Interactions>	List of interactions who have the Quiz name we are looking for
     */
    ScormService.prototype.getQuiz = function (quizName) {
        var quizArray = [];
        for (var i = 0; i < this.interactions.length; i++) {
            if ((this.interactions[i]).objectives[0] === quizName) {
                quizArray[quizArray.length] = this.interactions[i];
            }
        }
        return quizArray;
    };
    /**
     * Wirte an objective to the LMS
     *
     * @param 	Objective	objective to be written
     */
    ScormService.prototype.writeObjective = function (objective) {
        var i = this.getObjectiveLocation(objective.objectiveName);
        this.set('cmi.objectives.' + i + '.id', objective.objectiveName);
        this.set('cmi.objectives.' + i + '.score.min', '' + objective.scoreMin);
        this.set('cmi.objectives.' + i + '.score.max', '' + objective.scoreMax);
        this.set('cmi.objectives.' + i + '.score.scaled', '' + objective.scoreScaled);
        this.set('cmi.objectives.' + i + '.score.raw', '' + objective.scoreRaw);
        // We do not use cmi.objectives.n.success_status
        // this.set('cmi.objectives.' + i + '.success_status', objective.successStatus);
        this.set('cmi.objectives.' + i + '.completion_status', objective.completionStatus);
        this.set('cmi.objectives.' + i + '.description', objective.objectiveDesc);
        this.commit();
    };
    /**
     * Get Objective from the LMS by Name
     * Note: Should likely be named GetObjectiveByName
     *
     * @param 	objectiveName	Name of the objective
     *
     * @return		Objective
     */
    ScormService.prototype.getObjective = function (objectiveName) {
        var i = this.getObjectiveLocation(objectiveName);
        var objective = new __WEBPACK_IMPORTED_MODULE_2__scorm_objective__["a" /* Objective */]();
        objective.objectiveName = objectiveName;
        objective.objectiveDesc = objectiveName;
        objective.objectiveID = i;
        if (i < parseInt(this.get('cmi.objectives._count'), 10)) {
            objective.scoreMin = parseInt(this.get('cmi.objectives.' + i + '.score.min'), 10);
            objective.scoreMax = parseInt(this.get('cmi.objectives.' + i + '.score.max'), 10);
            objective.scoreRaw = parseFloat(this.get('cmi.objectives.' + i + '.score.raw'));
            objective.scoreScaled = parseFloat(this.get('cmi.objectives.' + i + '.score.scaled'));
            objective.completionStatus = this.get('cmi.objectives.' + i + '.completion_status');
            // We do not use cmi.objectives.n.success_status
            // objective.successStatus = this.get('cmi.objectives.' + i + '.success_status');
        }
        return objective;
    };
    /**
     * Get Objective Location by Name
     *
     * @param 	objectiveName	name of the objective that will be found
     *
     * @return number	index of the Objective we are finding, or next available index if not existed
     */
    ScormService.prototype.getObjectiveLocation = function (objectiveName) {
        var objectiveCount = parseInt(this.get('cmi.objectives._count'), 10);
        for (var i = 0; i < objectiveCount; i++) {
            if (this.get('cmi.objectives.' + i + '.id') === objectiveName) {
                return i;
            }
        }
        return objectiveCount;
    };
    /**
     * Set parameter
     *
     * @param dataObject
     * @param value
     *
     * @returns boolean
     */
    ScormService.prototype.set = function (dataObject, value) {
        return this.apiwrapper.setScormValue(dataObject, value);
    };
    /**
     * Get parameter from the LMS
     *
     * @return string
     */
    ScormService.prototype.get = function (param) {
        return this.apiwrapper.getScormValue(param);
    };
    /**
     * Get parameter from the LMS
     *
     */
    ScormService.prototype.commit = function () {
        return this.apiwrapper.commit();
    };
    /**
     * terminate comunication with the LMS.
     * It will
     *      1) LMScommit/commit;
     *      2) set session_time;
     *      3) LMSFinish/Terminate
     *
     */
    ScormService.prototype.Terminate = function () {
        this.apiwrapper.finish();
    };
    /**
     * Set SCORM values to the desired initail state
     *
     * @internal this was put into its own function to be able to be overidden in client specific code
     */
    ScormService.prototype.initializeSCORMValues = function () {
        this.setDefaultCompleteStatus();
        this.markAttemptToBeSuspended();
        this.setupScore();
        this.commit();
    };
    /**
     * Call to the LMS tor retrieve any interactions that were stored before this attempt was suspended.
     *
     * Most of LMS 'get' call don't work in SCORM1.2 since those properties are set to WO (write only)
     *
     */
    ScormService.prototype.getInitalQuizData = function () {
        this.interactions = [];
        var numberInteractions = parseInt(this.get('cmi.interactions._count'), 10);
        if (numberInteractions > 0 && this.getAPIVersion() !== '1.2') {
            for (var i = 0; i < numberInteractions; i++) {
                var id = this.get('cmi.interactions.' + i + '.id');
                var type = this.get('cmi.interactions.' + i + '.type');
                // objectives
                var numObjectives = parseInt(this.get('cmi.interactions.' + i + '.objectives._count'), 10);
                var objectiveArray = [];
                for (var z = 0; z < numObjectives; z++) {
                    objectiveArray[z] = this.get('cmi.interactions.' + i + '.objectives.' + z + '.id');
                }
                var interaction = new __WEBPACK_IMPORTED_MODULE_1__scorm_interaction__["a" /* Interaction */](id, type, objectiveArray);
                interaction.timestamp = this.get('cmi.interactions.' + i + '.timestamp');
                interaction.weighting = this.get('cmi.interactions.' + i + '.weighting');
                var numCorrect = parseInt(this.get('cmi.interactions.' + i + '.correct_responses._count'), 10);
                for (var n = 0; n < numCorrect; n++) {
                    interaction.addCorrectResponse(this.get('cmi.interactions.' + i + '.correct_responses.'
                        + n + '.pattern'));
                }
                interaction.learnerResponse = this.get('cmi.interactions.' + i + '.learner_response');
                interaction.latency = this.get('cmi.interactions.' + i + '.latency');
                interaction.result = this.get('cmi.interactions.' + i + '.result');
                interaction.description = this.get('cmi.interactions.' + i + '.description');
                this.interactions[i] = interaction;
            }
        }
    };
    /**
     * set CMI_COMPLETION_STATUS to be INCOMPLETE
     *
     * @internal base behaviour sets only cmi.exit
     */
    ScormService.prototype.setDefaultCompleteStatus = function () {
        this.set(__WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].CMI_COMPLETION_STATUS, __WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].INCOMPLETE);
    };
    /**
     * Tell scorm api that upon closing the course this attempt not finished and will be resumed
     *
     * Note: These are the default settings to ensure that the course is suspended upon exiting the course.
     *
     * @internal base behaviour sets only cmi.exit
     */
    ScormService.prototype.markAttemptToBeSuspended = function () {
        this.set(__WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].CMI_EXIT, __WEBPACK_IMPORTED_MODULE_3__scorm_lms_constant__["a" /* LMSConstant */].SUSPEND);
    };
    /**
     * Set the scorm values required to setup score
     *
     * @internal these base values will be overriden in client specific code
     */
    ScormService.prototype.setupScore = function () {
        this.set('cmi.score.min', '0');
        this.set('cmi.score.max', '100');
    };
    return ScormService;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/scorm-service.js.map

/***/ }),

/***/ "./src/app/model/services/scorm/api-wrapper.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return APIWrapper; });
var APIWrapper = /** @class */ (function () {
    /**
     * Constructor
     * @param
     */
    function APIWrapper() {
        this.LMS_INITIALIZED = false;
        this.scormLog = false;
        this.sessionLogs = [];
    }
    /**
     * timeintervalConvertion
     * Convert miliseconds to timeinterval (Scorm 2004 data model values)
     *
     * @param  miliseconds (int)
     * @returns 2004 timeinterval  P[yY][mM][dD][T[hH][nM][s[.s]S]] (string)
     *
     */
    APIWrapper.timeintervalConvertion = function (miliseconds) {
        if (miliseconds !== 0) {
            var _miliseconds = miliseconds;
            var milisec = _miliseconds % 1000;
            var remainder = (_miliseconds - milisec) / 1000;
            var sec = remainder % 60;
            remainder = (remainder - sec) / 60;
            // SCORM only supports Centiseconds
            sec = +(sec + milisec / 100).toFixed(2);
            var min = remainder % 60;
            remainder = (remainder - min) / 60;
            var hours = remainder % 24;
            remainder = (remainder - hours) / 24;
            var days = remainder;
            var _asString = 'P';
            _asString = _asString + (days > 0 ? days + 'D' : '');
            _asString = _asString + ((hours > 0 || min > 0 || sec > 0) ? 'T' : '');
            _asString = _asString + (hours > 0 ? hours + 'H' : '');
            _asString = _asString + (min > 0 ? min + 'M' : '');
            _asString = _asString + (sec > 0 ? sec + 'S' : '');
            return _asString;
        }
    };
    APIWrapper.prototype.unset = function () {
        this.LMS_INITIALIZED = false;
        this.API = undefined;
    };
    /**
     * A convenience method that do the correct sequence of calls to initialize the communication with the lms
     * It checks SCORM API first, then Initialize API and set the session start time
     *
     * @param
     * @returns boolean
     *
     */
    APIWrapper.prototype.initialize = function () {
        this.configure();
        if (this.API) {
            return this.lmsInitialize();
        }
        else {
            return false;
        }
    };
    /**
     * A convenience method that instantiate the SCORM API
     *
     * @param
     *
     */
    APIWrapper.prototype.configure = function () {
        this.API = this.findAPI(window);
        if ((!this.API) && (window.opener)) {
            this.API = this.findAPI(window.opener);
        }
        // if (!this.API) {
        //    throw new Error('A valid SCORM API Adapter can not be found in the window or in the window.opener');
        // }
    };
    /**
     * A convenience method that find the SCORM API
     *
     * @param Window object
     * @returns SCORMAPI
     *
     */
    APIWrapper.prototype.findAPI = function (win) {
        var maxTries = 7;
        var findedAPI = undefined;
        var findAPITries = 0;
        if (!win) {
            return undefined;
        }
        while ((!win.API && !win.API_1484_11) && (win.parent) && (win.parent !== win) && findAPITries < maxTries) {
            findAPITries++;
            win = win.parent;
        }
        if (this.version) { // If SCORM version is specified by user, look for specific API
            switch (this.version) {
                case '2004':
                    if (win.API_1484_11) {
                        findedAPI = win.API_1484_11;
                    }
                    else {
                        console.log('SCORM version 2004 was specified by user, but API_1484_11 cannot be found.');
                    }
                    break;
                case '1.2':
                    if (win.API) {
                        findedAPI = win.API;
                    }
                    else {
                        console.log('SCORM version 1.2 was specified by user, but API cannot be found.');
                    }
                    break;
            }
        }
        else {
            if (win.API_1484_11) { // SCORM 2004-specific API
                this.version = '2004'; // Set version
                findedAPI = win.API_1484_11;
            }
            else if (win.API) { // SCORM 1.2-specific API
                this.version = '1.2'; // Set version
                findedAPI = win.API;
            }
        }
        // check scorm api
        // if (!win.API) {
        //   console.log('@@@@@@@@@win.API not found@@@@@@@@ ' + win.API);
        // }
        // if (!win.API_1484_11) {
        //   console.log('@@@@@@@@@win.API_1484_11 not found@@@@@@@@' + win.API_1484_11);
        // }
        return findedAPI;
    };
    /**
     * A convenience method that initialize
     *
     * @param
     * @returns boolean
     *
     */
    APIWrapper.prototype.lmsInitialize = function () {
        var operationName = 'Initialize';
        this.LMS_INITIALIZED = this.isSucceeded((this.version === '1.2') ?
            this.API.LMSInitialize('') : this.API.Initialize(''));
        this.logOperation(operationName, null);
        if (!this.isInitialized()) {
            this.abort(operationName);
            return false;
        }
        else {
            // set start time
            this.startDatetime = new Date();
            return true;
        }
    };
    /**
     * A convenience method that check the SCORM API
     *
     * @param
     * @returns boolean
     *
     */
    APIWrapper.prototype.isConfigured = function () {
        return !(this.API === undefined);
    };
    /**
     * A convenience method to get LMS_INITIALIZED
     *
     * @param
     * @returns boolean (LMS_INITIALIZED)
     *
     */
    APIWrapper.prototype.isInitialized = function () {
        return this.LMS_INITIALIZED;
    };
    APIWrapper.prototype.lmsCommit = function () {
        var operationName = 'Commit';
        // log commit
        this.logOperation(operationName, null);
        if (!this.isSucceeded((this.version === '1.2') ? this.API.LMSCommit('') : this.API.Commit(''))) {
            this.abort(operationName);
        }
    };
    APIWrapper.prototype.lmsFinish = function () {
        var operationName = 'Terminate';
        // log 
        this.logOperation(operationName, null);
        // set session_time 
        var elapsedTime = (new Date()).getTime() - this.startDatetime.getTime();
        this.logOperation('LMSSetValue', 'cmi.session_time:' + elapsedTime);
        this.setScormValue('cmi.session_time', APIWrapper.timeintervalConvertion(elapsedTime));
        if (!this.isSucceeded((this.version === '1.2') ? this.API.LMSFinish('') : this.API.Terminate(''))) {
            this.abort(operationName);
        }
        this.unset();
    };
    /**
     * Requests information from the LMS.
     * All maxChar related code is comentted out since maxChar is not used in flash code
     *
     * @param parameter (string, name of the 2004 SCORM data model element)
     * @param value (string, value for the data model element)
     *
     *
     * @returns boolean (the value of the specified data model element)
     *
     */
    // public setScormValue(parameter: string, value: string, maxChar: number): boolean {
    APIWrapper.prototype.setScormValue = function (parameter, value) {
        // return true if parameter or value is undefined or empty
        if (!parameter || !value || parameter === '' || value === '') {
            return true;
        }
        // Convert Scorm 2004 data model and session_time value to Scorm 1.2
        if (this.version === '1.2') {
            parameter = this.scorm12datamodel(parameter);
            if (parameter === 'cmi.core.session_time') {
                value = this.timeintervalToCMITimespan(value);
            }
            // Comment out since 1. we don't know waht logout doing; 2. Should use constant
            // if (parameter === 'cmi.core.exit' && value === 'normal') {
            //    value = 'logout';
            // }
        }
        // Modification to truncate description @MOD
        // maxChar = (typeof maxChar) ? maxChar : 0;
        // if (maxChar > 0 && parameter.search('cmi.interactions.') !== -1 && parameter.search('.description') !== -1) {
        //    if (value.length > maxChar) {
        //        value = value.substr(0, maxChar - 3);
        //        value += '...';
        //    }
        // }
        // log set
        this.logOperation('LMSSetValue', 'parameter: ' + parameter + '  value: ' + value);
        if (this.isSucceeded((this.version === '1.2') ?
            this.API.LMSSetValue(parameter, value) : this.API.SetValue(parameter, value))) {
            return true;
        }
        else {
            // Templorarily comment out abort which We should to make it work like existed flash player
            // this.abort('LMSSetValue');
            return false;
        }
    };
    /**
     * Requests information from the LMS.
     *
     * @param parameter (string, name of the 2004 SCORM data model element)
     * @returns string (the value of the specified data model element)
     *
     */
    APIWrapper.prototype.getScormValue = function (parameter) {
        // return '' if parameter is undefined or empty
        if (!parameter || parameter === '') {
            return '';
        }
        // Convert Scorm 2004 data model to Scorm 1.2
        parameter = this.scorm12datamodel(parameter);
        var value = (this.version === '1.2') ? this.API.LMSGetValue(parameter) : this.API.GetValue(parameter);
        // log get
        this.logOperation('LMSGetValue', 'parameter: ' + parameter + '  value: ' + value);
        return value;
    };
    // A convenience method with a more
    APIWrapper.prototype.commit = function () {
        this.lmsCommit();
    };
    // A convenience method that do the correct sequence of calls to close the communication with the lms
    APIWrapper.prototype.finish = function () {
        this.lmsCommit();
        this.lmsFinish();
    };
    APIWrapper.prototype.abort = function (action) {
        this.LMS_INITIALIZED = false;
        this.API = null;
        // throw new Error('' + action + ' failed');
    };
    APIWrapper.prototype.logOperation = function (scormAPIFn, scormAPIFnArguments) {
        if (this.scormLog) {
            var scormLastErrCode = (this.version === '1.2') ?
                this.API.LMSGetLastError() : this.API.GetLastError();
            this.sessionLogs.push({
                'timestamp': Date.now(),
                'scormFn': scormAPIFn,
                'scormFnArgs': scormAPIFnArguments,
                'errorCode': scormLastErrCode,
                'errorCodeString': (this.version === '1.2') ? this.API.LMSGetErrorString(scormLastErrCode) :
                    this.API.GetErrorString(scormLastErrCode),
                'diagnostic': (this.version === '1.2') ? this.API.LMSGetDiagnostic(scormLastErrCode) :
                    this.API.GetDiagnostic(scormLastErrCode)
            });
        }
    };
    APIWrapper.prototype.isSucceeded = function (apiCall) {
        return 'true' === String(apiCall);
    };
    /**
     * Convert Scorm 2004 data model to Scorm 1.2 data model if Scorm vesion is 1.2
     *
     * @param data2004 for 2004 data model
     * @returns string of scorm 1.2 data model
     * TODO: Its a uncompleted list, need to add more if necessary;
     *
     */
    APIWrapper.prototype.scorm12datamodel = function (data2004) {
        var convertstr = data2004;
        if (this.version === '1.2') {
            if (data2004 === 'cmi.completion_status') {
                convertstr = 'cmi.core.lesson_status';
            }
            else if (data2004 === 'cmi.exit') {
                convertstr = 'cmi.core.exit';
            }
            else if (data2004 === 'cmi.location') {
                convertstr = 'cmi.core.lesson_location';
            }
            else if (data2004 === 'cmi.learner_id') {
                convertstr = 'cmi.core.student_id';
            }
            else if (data2004 === 'cmi.learner_name') {
                convertstr = 'cmi.core.student_name';
            }
            else if (data2004 === 'cmi.score.raw') {
                convertstr = 'cmi.core.score.raw';
            }
            else if (data2004 === 'cmi.score.min') {
                convertstr = 'cmi.core.score.min';
            }
            else if (data2004 === 'cmi.score.max') {
                convertstr = 'cmi.core.score.max';
            }
            else if (data2004.indexOf('cmi.interactions.') === 0 && data2004.indexOf('.timestamp') > 16) {
                convertstr = data2004.replace('.timestamp', '.time');
            }
            else if (data2004.indexOf('cmi.interactions.') === 0 && data2004.indexOf('.learner_response') > 16) {
                convertstr = data2004.replace('.learner_response', '.student_response');
            }
            else if (data2004 === 'adl.nav.request') {
                convertstr = '';
            }
            else if (data2004 === 'cmi.success_status') {
                convertstr = 'cmi.core.lesson_status';
            }
            else if (data2004.indexOf('cmi.interactions.') === 0 && data2004.indexOf('.description') > 16) {
                convertstr = '';
            }
            else if (data2004 === 'cmi.session_time') {
                convertstr = 'cmi.core.session_time';
            }
        }
        return convertstr;
    };
    /**
     * timeintervalToCMITimespant()
     * Convert Scorm 2004 data model values to Scorm 1.2 data model values if Scorm vesion is 1.2
     *
     *  Convert Scorm 2004 timeinterval to Scorm 1.2 CMITimespan
     *
     *  Example:
     *  2 days 3 hours 4 minutes and 55.66 seconds
     *  is passed in as a timeinterval that = 'P2DT3H4M55.66S'
     *
     *  its returned as a CMITimespan that = '0051:04:55.66';
     *
     * @param timeinterval 2004 timeinterval  P[yY][mM][dD][T[hH][nM][s[.s]S]] (string)
     * @returns {string} 1.2 CMITimespan hhhh:mm:ss.ss
     *
     */
    APIWrapper.prototype.timeintervalToCMITimespan = function (timeinterval) {
        // public timeintervalToCMITimespan(timeinterval: string): string{ // public is for test only
        var lastIndexFound = 1;
        var years = 0;
        var months = 0;
        var days = 0;
        var hours = 0;
        var minutes = 0;
        var seconds = 0;
        var fractSeconds = 0; // 100th of a second 
        if (timeinterval.indexOf('Y') !== -1) {
            years = parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('Y')), 10);
            lastIndexFound = timeinterval.indexOf('Y') + 1;
        }
        if (timeinterval.indexOf('M') !== -1 && timeinterval.indexOf('M') < timeinterval.indexOf('T')) {
            months = parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('M')), 10);
            lastIndexFound = timeinterval.indexOf('M') + 1;
        }
        if (timeinterval.indexOf('D') !== -1) {
            days = parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('D')), 10);
            lastIndexFound = timeinterval.indexOf('D') + 1;
        }
        timeinterval = timeinterval.substring(timeinterval.indexOf('T'));
        lastIndexFound = timeinterval.indexOf('T') + 1; // adjusting for The T
        if (timeinterval.indexOf('H') !== -1) {
            hours = parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('H')), 10);
            lastIndexFound = timeinterval.indexOf('H') + 1;
        }
        if (timeinterval.indexOf('M') !== -1) {
            minutes = parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('M')), 10);
            lastIndexFound = timeinterval.indexOf('M') + 1;
        }
        if (timeinterval.indexOf('S') !== -1) {
            seconds = Math.floor(parseInt(timeinterval.substring(lastIndexFound, timeinterval.indexOf('S')), 10));
            fractSeconds = parseInt(timeinterval.substring(timeinterval.indexOf('.') +
                1, timeinterval.indexOf('S')), 10);
            lastIndexFound = timeinterval.indexOf('S') + 1;
        }
        // months is impossible to convert to hours but this shouldn't be an issue for us 
        // in fact it should never be used
        var numberCMIHours = (years * 8760) + (months * 730) + (days * 24) + hours;
        if (numberCMIHours > 9999) {
            return '9999:99:99.99'; // caped at 4 digits or 9999 hours.
        }
        // make sure hours has 4 characters
        var CMIHours = '' + numberCMIHours;
        if (CMIHours.length < 4) {
            for (var i = 4 - CMIHours.length; i > 0; i--) {
                CMIHours = '0' + CMIHours;
            }
        }
        var CMIMinutes = (minutes < 10) ? '0' + minutes : '' + minutes; // make sure minutes has 2 characters
        var CMISeconds = (seconds < 10) ? '0' + seconds : '' + seconds; // make sure seconds has 2 characters
        var CMIFractSeconds = (fractSeconds < 10) ? '0' + fractSeconds : '' + fractSeconds;
        var CMITimespan = CMIHours + ':' + CMIMinutes + ':' + CMISeconds + '.' + CMIFractSeconds;
        return CMITimespan;
    };
    return APIWrapper;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/api-wrapper.js.map

/***/ }),

/***/ "./src/app/model/services/scorm/interaction.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Interaction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__api_wrapper__ = __webpack_require__("./src/app/model/services/scorm/api-wrapper.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lms_constant__ = __webpack_require__("./src/app/model/services/scorm/lms.constant.ts");


/*
 *  Interaction class for supported cmi.objectives data model
 */
var Interaction = /** @class */ (function () {
    /**
     * Constructor - Init properties
     *
     * @param   id          PageID
     *          type        Quiz type
     *          objectives  array of objective
     */
    function Interaction(id, type, objectives) {
        if (objectives === void 0) { objectives = null; }
        this._wieghting = '1';
        this._result = __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].UNANTICIPATED;
        // this._correct_responses = '';
        // this._correct_responses_text = '';
        this._id = id;
        if (!(type === __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].TRUE_FALSE || type === __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MULTIPLE_CHOICE
            || type === __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].FILL_IN || type === __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].LONG_FILL_IN
            || type === __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MATCHING || type === __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].PERFORMANCE
            || type === __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].SEQUENCING || type === __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].LIKERT
            || type === __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].NUMERIC || type === __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].OTHER)) {
            throw (new Error('Invalid Interaction type ' + type));
        }
        this._type = type;
        this._objectives = objectives;
        this._timestamp = new TimestampObject();
    }
    Object.defineProperty(Interaction.prototype, "id", {
        /**
         * retreives interaction id, read-only
         */
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Interaction.prototype, "type", {
        /**
         * retreives interaction type, read-only
         */
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Interaction.prototype, "objectives", {
        /**
         * retreives interaction objectives (an array of strings [QuizIDs]), read-only
         */
        get: function () {
            return this._objectives;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Interaction.prototype, "timestamp", {
        //////////////////////////////////////////////////////////////////
        // read & write getters and setters
        //////////////////////////////////////////////////////////////////
        /**
         * Timestamp is generally handle automatically. it represents when the user is presented with the question
         * it is created when the Interaction is created.
         *
         * The setter can be used to load in an existing timestamp, when the information is retrieved from SCORM
         * If the user is presented with the question that is loaded in from SCORM again, there should be a new timestamp
         */
        get: function () {
            return this._timestamp.toString();
        },
        set: function (value) {
            this._timestamp.parseSCORMTimestamp(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Interaction.prototype, "weighting", {
        /**
         * question weight, defaults to 1
         */
        get: function () {
            return this._wieghting;
        },
        set: function (value) {
            this._wieghting = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Interaction.prototype, "description", {
        /**
         * Interactinon Description (Question Text?)
         */
        get: function () {
            return this._description;
        },
        set: function (value) {
            this._description = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Interaction.prototype, "result", {
        /**
         * Interactinon Result set either from LMS of via CalculateResult function
         * values accepted by scorm are are:
             * 'correct'
             * 'incorrect'
             * 'unanticipated
             * 'neutral'
         *
         */
        get: function () {
            return this._result;
        },
        set: function (value) {
            this._result = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * compares correct response to learner response, and determines 'result'
     * calculation can be different based on quesion type
     *
     * @return
     */
    Interaction.prototype.calculateResult = function () {
        switch (this._type) {
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MULTIPLE_CHOICE:
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MATCHING:
            /*    for (let i: number = 0; i < this._correct_responses.length; i++) {
                    if (this._correct_responses[i] === this._learner_response) {
                        return LMSConstant.CORRECT;
                    }
                }
                return LMSConstant.INCORRECT;

            case LMSConstant.FILL_IN:
                // Fill in the blanks should not be case sensitve so use toLowerCase here,
                // also trim leading white space when comparing
                for (let n: number = 0; n < this._correct_responses.length; n++) {
                    if (this.trimWhitespace(this._correct_responses[n].toLowerCase())
                        === this.trimWhitespace(this._learner_response.toLowerCase())) {
                        return LMSConstant.CORRECT;
                    }
                }
                return LMSConstant.INCORRECT;
            */
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].FILL_IN:
                if (this._correct_responses.toLowerCase() === this._learner_response.toLowerCase()) {
                    return __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].CORRECT;
                }
                return __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].INCORRECT;
            default:
                throw (new Error('Invalid Interaction type(' + this._type + ')'));
        }
        // Unreachable code
        // return LMSConstant.UNANTICIPATED;
    };
    Interaction.prototype.trimWhitespace = function (value) {
        if (value) {
            return value.replace(/^\s+|\s+$/g, '');
        }
        return '';
    };
    Object.defineProperty(Interaction.prototype, "latency", {
        /**
         * how long it took the user to answer the question
         */
        get: function () {
            return this._latency.toString();
        },
        set: function (value) {
            if (this._latency === undefined) {
                this._latency = new TimeintervalObject();
            }
            ;
            this._latency.parseSCORMTimeinterval(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Question response Notes:
     *
     *
     * Each question type expects responses in a different format
     *
     *
     * (from Table 4.2.9.1a: Correct Response Pattern Format Requirements of SCORM 2004 4th Edition
     * Run-Time Environment (RTE) Version 1.1 document)
     *
     * TRUE_FALSE: acceptable resoponses include 'true' and 'false'
     *
     * MULTIPLE_CHOICE: An ISO-10646-1 characterstring representing a set of short_identifier_types,
     * where each element of the set is separated by a special reserved token ('[,]').
     * (accepts up to 36 short_identifier_types)
     * a multiple choice question can have more than 1 selected option be required for a correct answer
     *
     * FILL_IN: localized_string_type (250 chars). answer possibly preceded by {case_matters=<boolean>} and/or
     * {order_matters=<boolean>}
     * if more than one answer is required then the responses are delimited by a comma.
     *
     * LONG_FILL_IN: localized_string_type (4000 chars). answer possibly preceded by {case_matters=<boolean>}
     *
     * LIKERT: short_identifier_type
     *
     * MATCHING: matching are stored as a sereies of short_identifier_types, sorted as
     * <source a>[.]<target a>[,]<source b>[.]<target b>
     * where source a matches target a and source b matches target b
     *
     * PERFORMANCE: i do not forsee us using this one and it is complicated. for more info see official document
     *
     * SEQUENCING: a series of short_identifier_type in the format of <short_identifier_type>[,]<short_identifier_type>
     *
     * NUMERIC: a range of numbers in the format <min>[:]<max>
     * if min and max are the same number, then only one response will result to true.
     *
     * OTHER: characterstring (ISO-10646-1) 4000 characters
     *
     *
     */
    /**
     * AddCorrectResponse
     *
     * http://www.moschorus.com/centre/MosPub/documents/contenu/pages/SCORM_2004_4ED_RTE.pdf
     *
     * used to add the correct responses available to the user.
     * everytime it is called it adds a new acceptable response to the _correct_response array
     *
     * it is possible that an interaction will be loaded from SCORM and then used for a question,
     * for this reason we will need to check for duplicates
     *
     * accepts a variable number of parameters, depending on question type the information can be handled differently
     * I know that is messy, but it is better than trying to call a different function (or several functions)
     * for each possible question type
     *
     * if the question is a multiple choice question:
         *
         * it accepts a series of unique identifiers (elementIds for Radio/Checkbox) which are stored
         *      as a comma delimited string (expected by SCORM)
         * if more than one id is passed in, all id's are required for answer to be correct.
         *
         * when data is read in from SCORM, it will be passed to this function as one parameter which is an allready
         *      comma delimited string, the end results will be the the same
         *
         * SCORM only requires the LMS to support 10 correct responses for multiple choice
         *
     * if the question if fill in the blank:
         *
         *
         *
         * there are two types of fill in the blank. fill_in and long_fill_in:
             * fill_in supports 250 chacters, can have multiple strings seperated in comma delimited format
                * {case_matters=[boolean]}{order_matters=[boolean]}[localized_string_type][,][localized_string_type]
                 * if more than one string is present, each string must be contained in the answer to evaluate to true.
                 * SCORM only requrires LMS to handle 10 of these strings in one 'correct response'
                 * SCORM only requires LMS to support 5 correct responses for fill_in
                 * supports the following tags (they go in the front of the string):
                     *
                     * Reserved Delimiter Syntax 	Default Value       	Example
                     * -----------------------------------------------------------------------
                     * {lang=[language_type]}    	{lang=en}            	{lang=en}
                     * {case_matters=[boolean]} 	{case_matters=false} 	{case_matters=true}
                     *                          	                     	{case_matters=false}
                     * {order_matters=[boolean]} 	{order_matters=true} 	{order_matters=true}
                     *                           	                     	{order_matters=false}
                 *
             *
             * long_fill_in requires exact match but supports 4000 characters
                * only supports the {case_matters=[boolean]} &#38; {lang=[language_type]} tags
                * SCORM only requires LMS to support 5 correct responses for long_fill_in
            *
         *
            * matching :
                * Value Space:
                * An ISO-10646-1 characterstring representing a set of short_identifier_types, where each element of
                * the set isseparated by a special reserved token ('[,]'). The LMS shall support characterstrings that
                * include at least36 (the required SPM) short_identifier_types, separated by the reserved '[,]' token.
                * The LMS may extend theability to support more; however, this is implementation specific. The LMS is
                * only responsible for managing the SPM of 36 short_identifier_types.
                * Format:
                * The format of the characterstring shall be:
                    * [short_identifier_type][,][short_identifier_type]
                *
            *
        *
     *
     *
     * @param	responsesAsStrings
     */
    Interaction.prototype.addCorrectResponse = function (responsesAsStrings) {
        switch (this._type) {
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MULTIPLE_CHOICE:
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].FILL_IN:
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MATCHING:
                this._correct_responses = responsesAsStrings;
                break;
            default:
                throw (new Error('Invalid Interaction type(' + this._type + ')'));
        }
    };
    Object.defineProperty(Interaction.prototype, "correctResponses", {
        get: function () {
            return this._correct_responses;
        },
        enumerable: true,
        configurable: true
    });
    Interaction.prototype.addCorrectResponseText = function (responsesAsStrings) {
        switch (this._type) {
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MULTIPLE_CHOICE:
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].FILL_IN:
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MATCHING:
                this._correct_responses_text = responsesAsStrings;
                break;
            default:
                throw (new Error('Invalid Interaction type(' + this._type + ')'));
        }
    };
    Object.defineProperty(Interaction.prototype, "correctResponsesText", {
        get: function () {
            return this._correct_responses_text;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * SetLearnerResponse
     *
     * used to set the learner's responses to the question.
     *
     * called when the user answers the question, but NOT when data is read in from SCORM. Because it also signifies
     * the time that the question has been answer and sets the latency variable
     *
     * it also inderectly sets the Result variable
     *
     * accepts a variable number of parameters, depending on question type the information can be handled differently
     * I know that is messy, but it is better than trying to call a different function for each possible question type
     *
     * if the question is a multiple choice question:
         *
         * it accepts a series of unique identifiers (elementIds for Radio/Checkbox) which are stored as
         * a comma delimited string (expected by SCORM)
         * if more than one id is passed in, it shows that the user made more than one selection
         *
         * when read in from SCORM, it will passed in an all ids in one parameter as an allready comma delimited string,
         * the end results will be the the same
         *
     * @param	string responsesAsStrings
     */
    Interaction.prototype.setLearnerResponse = function (responsesAsStrings) {
        this._latency = new TimeintervalObject((new TimestampObject()).date.getTime() - this._timestamp.date.getTime());
        switch (this._type) {
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MULTIPLE_CHOICE:
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].FILL_IN:
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MATCHING:
                this._learner_response = responsesAsStrings;
                break;
            default:
                throw (new Error('Invalid Interaction type(' + this._type + ')'));
        }
        this._result = this.calculateResult();
    };
    Object.defineProperty(Interaction.prototype, "learnerResponse", {
        get: function () {
            return this._learner_response;
        },
        /**
         * Called by SCORM to load in allready answered question data
         */
        set: function (value) {
            this._learner_response = value;
        },
        enumerable: true,
        configurable: true
    });
    Interaction.prototype.setLearnerResponseText = function (responsesAsStrings) {
        switch (this._type) {
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MULTIPLE_CHOICE:
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].FILL_IN:
            case __WEBPACK_IMPORTED_MODULE_1__lms_constant__["a" /* LMSConstant */].MATCHING:
                this._learner_response_text = responsesAsStrings;
                break;
            default:
                throw (new Error('Invalid Interaction type(' + this._type + ')'));
        }
    };
    Object.defineProperty(Interaction.prototype, "learnerResponseText", {
        get: function () {
            return this._learner_response_text;
        },
        set: function (value) {
            this._learner_response_text = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Concatenate class properties into a string
     */
    Interaction.prototype.serializeToString = function () {
        var outString = 'Interaction Object:\n';
        outString += '_id = ' + this._id + '\n';
        outString += '_type = ' + this._type + '\n';
        outString += '_timestamp = ' + this._timestamp + '\n';
        outString += '_description = ' + this._description + '\n';
        outString += '_correct_responses = ' + this._correct_responses + '\n';
        outString += '_correct_responses_text = ' + this._correct_responses_text + '\n';
        outString += '_wieghting = ' + this._wieghting + '\n';
        outString += '_learner_response = ' + this._learner_response + '\n';
        outString += '_learner_response_text = ' + this._learner_response_text + '\n';
        outString += '_result = ' + this._result + '\n';
        outString += '_objectives array:' + '\n';
        for (var i = 0; i < this._objectives.length; i++) {
            outString += this._objectives[i] + '\n';
        }
        return outString;
    };
    return Interaction;
}());

var TimestampObject = /** @class */ (function () {
    /**
     * Constructor - creates a new TimestampObject instance.
     *
     * @param
     */
    function TimestampObject() {
        this._date = new Date();
    }
    TimestampObject.prototype.makeString = function (numDigits, theNumber) {
        var returnVar = '' + theNumber;
        while (returnVar.length < numDigits) {
            returnVar = '0' + returnVar;
        }
        return returnVar;
    };
    TimestampObject.prototype.toString = function () {
        return this.makeString(4, this._date.getFullYear()) + '-' + this.makeString(2, this._date.getMonth()) + '-'
            + this.makeString(2, this._date.getDate()) + 'T' + this.makeString(2, this._date.getHours()) + ':'
            + this.makeString(2, this._date.getMinutes()) + ':' + this.makeString(2, this._date.getSeconds());
    };
    /**
     * Convert time format from YYYY[-MM[-DD[Thh[:mm[:ss[.s[TZD]]]]]]] to Date
     * self explanitory except for:
     * s: One or more digits representing a decimal fraction of a second. If fractions of a second are used,
     *      SCORM further restricts the string to a maximum of 2 digits
     * TZD: Time zone designator (Z for UTC or +hh:mm or -hh:mm).
     *
     * @param string
     */
    TimestampObject.prototype.parseSCORMTimestamp = function (value) {
        var year = 0;
        var month = 0;
        var date = 0;
        var hours = 0;
        var minutes = 0;
        var seconds = 0;
        var ms = 0;
        year = parseInt((value.substr(0, 4)), 10); // YYYY
        if (value.charAt(4) === '-') {
            month = parseInt((value.substr(5, 2)), 10); // -MM
            if (value.charAt(7) === '-') {
                date = parseInt((value.substr(8, 2)), 10); // -DD
                if (value.charAt(10) === 'T') {
                    hours = parseInt((value.substr(11, 2)), 10); // Thh
                    if (value.charAt(13) === ':') {
                        minutes = parseInt((value.substr(14, 2)), 10); // :mm
                        if (value.charAt(16) === ':') {
                            seconds = parseInt((value.substr(17, 2)), 10); // :ss
                            if (value.charAt(19) === '.') {
                                if (isNaN(parseInt((value.substr(21, 1)), 10))) {
                                    // second digit not a number
                                    ms = parseInt((value.substr(20, 1)), 10); // :ss
                                    ms = ms * 100;
                                }
                                else {
                                    ms = parseInt((value.substr(20, 2)), 10); // .s
                                    ms = ms * 10;
                                }
                            }
                        }
                    }
                }
            }
        }
        this._date = new Date(year, month, date, hours, minutes, seconds, ms);
    };
    Object.defineProperty(TimestampObject.prototype, "date", {
        get: function () {
            return this._date;
        },
        enumerable: true,
        configurable: true
    });
    return TimestampObject;
}());
var TimeintervalObject = /** @class */ (function () {
    /**
     * Constructor - creates a new TimeintervalObject instance.
     * Convert miliseconds to timeinterval (P[yY][mM][dD][T[hH][nM][s[.s]S]] Scorm 2004 data model values)
     *
     * @param miliseconds
     */
    function TimeintervalObject(miliseconds) {
        if (miliseconds === void 0) { miliseconds = 0; }
        this._miliseconds = 0;
        if (miliseconds !== 0) {
            this._miliseconds = miliseconds;
            // use the APIWrapper.timeintervalConvertion to Convert miliseconds to timeinterval
            this._asString = __WEBPACK_IMPORTED_MODULE_0__api_wrapper__["a" /* APIWrapper */].timeintervalConvertion(miliseconds);
        }
    }
    TimeintervalObject.prototype.toString = function () {
        return this._asString;
    };
    TimeintervalObject.prototype.parseSCORMTimeinterval = function (value) {
        // dont need to parse and calculate the miliseconds at this point since we are only accessing the string version
        // function named this way to be consistant with TimestampObject
        this._asString = value;
    };
    return TimeintervalObject;
}());
//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/interaction.js.map

/***/ }),

/***/ "./src/app/model/services/scorm/lms.constant.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LMSConstant; });
/**
 * A collection of LMS constant
 *
 */
var LMSConstant = /** @class */ (function () {
    function LMSConstant() {
    }
    // these are the kinds of question types that the lms can accept
    LMSConstant.TRUE_FALSE = 'true-false';
    LMSConstant.MULTIPLE_CHOICE = 'choice';
    LMSConstant.FILL_IN = 'fill-in';
    LMSConstant.LONG_FILL_IN = 'long-fill-in';
    LMSConstant.MATCHING = 'matching';
    LMSConstant.PERFORMANCE = 'performance';
    LMSConstant.SEQUENCING = 'sequencing';
    LMSConstant.LIKERT = 'likert';
    LMSConstant.NUMERIC = 'numeric';
    LMSConstant.OTHER = 'other';
    // the lms accept these values for result
    LMSConstant.CORRECT = 'correct';
    LMSConstant.INCORRECT = 'incorrect';
    LMSConstant.UNANTICIPATED = 'unanticipated';
    LMSConstant.NEUTRAL = 'neutral';
    // it also accepts real numbers
    /**
     * The exit field in the scorm data model. cmi.exit
     */
    LMSConstant.CMI_EXIT = 'cmi.exit';
    // cmi.exit possible values
    LMSConstant.TIMEOUT = 'timeout';
    LMSConstant.SUSPEND = 'suspend';
    LMSConstant.LOGOUT = 'logout';
    LMSConstant.NORMAL = 'normal';
    // it also accepts an empty charstring
    /**
     * the success status field in the scorm 2004 data model. cmi.succes_status
     */
    LMSConstant.CMI_SUCCESS_STATUS = 'cmi.success_status';
    // lms values for success status (objective)
    LMSConstant.PASSED = 'passed';
    LMSConstant.FAILED = 'failed';
    LMSConstant.UNKNOWN = 'unknown';
    /**
     * the success status field in the scorm 2004 data model. cmi.succes_status
     */
    LMSConstant.CMI_COMPLETION_STATUS = 'cmi.completion_status';
    // lms values for completion status (objective)
    LMSConstant.COMPLETED = 'completed';
    LMSConstant.INCOMPLETE = 'incomplete';
    LMSConstant.NOT_ATTEMPTED = 'not attempted';
    return LMSConstant;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/lms.constant.js.map

/***/ }),

/***/ "./src/app/model/services/scorm/objective.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Objective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lms_constant__ = __webpack_require__("./src/app/model/services/scorm/lms.constant.ts");

/*
 *  Objective class for supported cmi.objectives data model
 */
var Objective = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new Objective instance.
     *
     * @param
     */
    function Objective() {
        this._objectiveID = 0;
        this._objectiveDesc = '';
        this._objectiveName = '';
        this._score_min = 0;
        this._score_max = 100;
        // We do not use cmi.objectives.n.success_status 
        // instead we use cmi.success_status
        // this._success_status = LMSConstant.UNKNOWN;
        this._completion_status = __WEBPACK_IMPORTED_MODULE_0__lms_constant__["a" /* LMSConstant */].INCOMPLETE;
    }
    Object.defineProperty(Objective.prototype, "objectiveID", {
        /**
         * The unique objectiveID
         *
         * @default undefined
         */
        get: function () {
            return this._objectiveID;
        },
        set: function (value) {
            this._objectiveID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Objective.prototype, "objectiveName", {
        get: function () {
            return this._objectiveName;
        },
        set: function (value) {
            this._objectiveName = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Objective.prototype, "objectiveDesc", {
        get: function () {
            return this._objectiveDesc;
        },
        set: function (value) {
            this._objectiveDesc = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Objective.prototype, "scoreRaw", {
        get: function () {
            return this._score_raw;
        },
        set: function (value) {
            this._score_raw = value;
            // score_raw/100 * 2 - 1
            this._score_scaled = +((value / 50) - 1).toFixed(2);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Objective.prototype, "scoreScaled", {
        get: function () {
            return this._score_scaled;
        },
        set: function (value) {
            this._score_scaled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Objective.prototype, "scoreMin", {
        get: function () {
            return this._score_min;
        },
        set: function (value) {
            this._score_min = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Objective.prototype, "scoreMax", {
        get: function () {
            return this._score_max;
        },
        set: function (value) {
            this._score_max = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Objective.prototype, "successStatus", {
        get: function () {
            return this._success_status;
        },
        set: function (value) {
            this._success_status = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Objective.prototype, "completionStatus", {
        get: function () {
            return this._completion_status;
        },
        set: function (value) {
            this._completion_status = value;
        },
        enumerable: true,
        configurable: true
    });
    return Objective;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/objective.js.map

/***/ }),

/***/ "./src/app/model/services/startup-configuration-service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return StartupConfigurationService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_querystring__ = __webpack_require__("./node_modules/querystring-es3/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_querystring___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_querystring__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_transactions_load_config_transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/load-config.transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__transactions_load_manifest_transaction__ = __webpack_require__("./src/app/model/transactions/load-manifest.transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__transactions_load_page_directory_transaction__ = __webpack_require__("./src/app/model/transactions/load-page-directory.transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_data_objects_query_string_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/query-string.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");






/**
 * This service provides access to Player configuration data that is loaded during startup.  This includes parameters
 * received from the server via query string, and from external files such as config, manifest, and page directory (when
 * running offline).
 *
 * @see LoadConfigTransaction
 * @see LoadManifestTransaction
 * @see LoadPageDirectoryTransaction
 * @see ConfigDataObject
 * @see ManifestDataObject
 * @see PageFileUrlDataObject
 * @see QueryStringDataObject
 */
var StartupConfigurationService = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new StartupConfigurationService instance.
     */
    function StartupConfigurationService() {
        /**
         * @see pageFileUrls
         */
        this._pageFileUrls = [];
        /**
         * An instance of the logger class for outputting log messages.
         *
         * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before
         * each log statement that is output.
         *
         * NOTE:
         *          At this point configuration info not read in yet, so logger will default to log at INFO level.
         *
         * @default A logger object named after the containing class.
         */
        this.logger = __WEBPACK_IMPORTED_MODULE_5__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('StartupConfigurationService');
        this.queryString = new __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_data_objects_query_string_data_object__["a" /* QueryStringDataObject */]();
        // Get info from query string
        var params = Object(__WEBPACK_IMPORTED_MODULE_0_querystring__["parse"])(location.search.substring(1));
        if (params) {
            // NOTE: If the caller is the Page Designer then the unit ID supplied is really a page ID
            this.queryString.unitId = params.UnitID;
            // TODO: Add PageID to distinguish from UnitID
            this.queryString.caller = params.Caller; // possible value=> Admin,Module,Page,Template,Player
            this.queryString.previewerWidth = +params.PreviewerWidth;
            this.queryString.previewerHeight = +params.PreviewerHeight;
            this.queryString.playerCode = params.PlayerCode;
        }
    }
    Object.defineProperty(StartupConfigurationService.prototype, "caller", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Indicates which of the framework's applications invoked the Player application.
         *
         * Possible values:
         *
         *  Admin
         *  Module
         *  Page
         *  Template
         *  Player
         *
         * TODO: Change this to an enum.
         *
         * @default 'Player'
         */
        get: function () {
            if (this.queryString.caller) {
                return this.queryString.caller;
            }
            else {
                return 'Player';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "config", {
        //////////////////////////////////////////////////////////
        /**
         * Contains the configuration file data that we loaded via the load configuration file transaction.
         *
         * @default undefined
         */
        get: function () {
            return this._config;
        },
        set: function (value) {
            this._config = value;
        },
        enumerable: true,
        configurable: true
    });
    //////////////////////////////////////////////////////////
    /**
     * TODO: Reword this description so it actually makes sense.
     *
     * get offline page file which holds page data
     *
     * @param pageID    The page ID of which page file we want to retrieve.
     */
    StartupConfigurationService.prototype.getPageFileUrl = function (pageID) {
        return this._pageFileUrls.find(function (page) { return page.pageID === pageID; }).pageUrl;
    };
    Object.defineProperty(StartupConfigurationService.prototype, "manifest", {
        //////////////////////////////////////////////////////////
        /**
         * Contains the manifest file data that we loaded via the load manifest file transaction.
         *
         * @default undefined
         */
        get: function () {
            return this._manifest;
        },
        set: function (value) {
            this._manifest = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "pageFileUrls", {
        //////////////////////////////////////////////////////////
        /**
         * An array of all the page file URLs that we loaded via the load page directory transaction.
         *
         * @default An empty array of PageFileUrlDataObject.
         */
        get: function () {
            return this._pageFileUrls;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "playerCode", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Write description.
         *
         * @default ?
         */
        get: function () {
            if (this.queryString.playerCode) {
                return this.queryString.playerCode;
            }
            else {
                return this._config.playerCode;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "pageDirectoryUrl", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Reword this description so it actually makes sense.
         *
         * holding offline page file directory (PageDIR.xml generated from server package process)
         *
         * @default ?
         */
        get: function () {
            return './' + this.manifest.courseDir + '/' + this.manifest.pageDir;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "playerHeight", {
        //////////////////////////////////////////////////////////
        /**
         * The total height of the Player window not including any of the browser interface.
         *
         * @default ?
         */
        get: function () {
            if (this.queryString.previewerHeight) {
                return this.queryString.previewerHeight;
            }
            else {
                return this._config.playerHeight;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "playerWidth", {
        //////////////////////////////////////////////////////////
        /**
         * The total width of the Player window not including any of the browser interface.
         *
         * @default ?
         */
        get: function () {
            if (this.queryString.previewerWidth) {
                return this.queryString.previewerWidth;
            }
            else {
                return this._config.playerWidth;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "unitFileUrl", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Reword this description so it actually makes sense.
         *
         * holding offline unit structure data
         *
         * @default ?
         */
        get: function () {
            return './' + this.manifest.courseDir + '/' + this.manifest.courseTOC;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "unitId", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         *
         * @default ?
         */
        get: function () {
            return this.queryString.unitId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "unitTypeFileUrl", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Reword this description so it actually makes sense.
         *
         * holding offline unit type data
         *
         * @default ?
         */
        get: function () {
            return './' + this.manifest.courseDir + '/' + this.manifest.courseUnitType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "referenceFileUrl", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Reword this description so it actually makes sense.
         *
         * holding offline references data
         *
         * @default ?
         */
        get: function () {
            return './' + this.manifest.courseDir + '/' + this.manifest.referenceDir;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "showUserInterface", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         *
         * @default ?
         */
        get: function () {
            return !this.playerCode.includes('NOUI_');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StartupConfigurationService.prototype, "variableFileUrl", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Reword this description so it actually makes sense.
         *
         * holding offline variables data
         *
         * @default ?
         */
        get: function () {
            return './' + this.manifest.courseDir + '/' + this.manifest.courseVariables;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Data Loading
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Creates and starts the load configuration file transaction.
     *
     * TODO: finish this description.
     *
     * @returns TODO: add return description.
     */
    StartupConfigurationService.prototype.loadConfig = function () {
        var _this = this;
        var loadConfigTransaction = new __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_transactions_load_config_transaction__["a" /* LoadConfigTransaction */]();
        return loadConfigTransaction.startTransaction().
            map(function () {
            // Reassign logger with new instance configured with settings from config file for future use in this class
            _this.logger = __WEBPACK_IMPORTED_MODULE_5__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('StartupConfigurationService');
            return _this.config;
        });
    };
    /**
     * Creates and starts the load manifest file transaction.
     *
     * TODO: finish this description.
     *
     * @returns TODO: add return description.
     */
    StartupConfigurationService.prototype.loadManifest = function () {
        var _this = this;
        var loadManifestTransaction = new __WEBPACK_IMPORTED_MODULE_2__transactions_load_manifest_transaction__["a" /* LoadManifestTransaction */]();
        return loadManifestTransaction.startTransaction().
            map(function () { return _this.manifest; });
    };
    /**
     * Creates and starts the load page directory file transaction.
     *
     * TODO: finish this description.
     *
     * @returns TODO: add return description.
     */
    StartupConfigurationService.prototype.loadPageDirectory = function () {
        var _this = this;
        var loadPageDirectoryTransaction = new __WEBPACK_IMPORTED_MODULE_3__transactions_load_page_directory_transaction__["a" /* LoadPageDirectoryTransaction */]();
        return loadPageDirectoryTransaction.startTransaction().
            map(function () { return _this.pageFileUrls; });
    };
    return StartupConfigurationService;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/startup-configuration-service.js.map

/***/ }),

/***/ "./src/app/model/transactions/load-manifest.transaction.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadManifestTransaction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transaction_task_handlers_load_Manifest_task_handler__ = __webpack_require__("./src/app/model/transactions/transaction-task-handlers/load-Manifest.task-handler.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * This class is responsible for loading the manifest file's data from the various TransactionDataSources
 * (server/file/memory).
 *
 * @see Transaction
 * @see TransactionDataSource
 */
var LoadManifestTransaction = /** @class */ (function (_super) {
    __extends(LoadManifestTransaction, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadManifestTransaction instance.
     */
    function LoadManifestTransaction() {
        return _super.call(this, 'LoadManifest') || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    LoadManifestTransaction.prototype.startTransaction = function () {
        // add TaskHandler for loading Manifest data
        var taskHandler = new __WEBPACK_IMPORTED_MODULE_1__transaction_task_handlers_load_Manifest_task_handler__["a" /* LoadManifestTaskHandler */]();
        taskHandler.buildRequestXml();
        this.addTaskHandler(taskHandler);
        // Send request to get processed
        return _super.prototype.startTransaction.call(this);
    };
    return LoadManifestTransaction;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_transaction__["a" /* Transaction */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-manifest.transaction.js.map

/***/ }),

/***/ "./src/app/model/transactions/load-page-directory.transaction.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadPageDirectoryTransaction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transaction_task_handlers_load_page_directory_task_handler__ = __webpack_require__("./src/app/model/transactions/transaction-task-handlers/load-page-directory.task-handler.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * This class is responsible for loading page directory data from the various TransactionDataSources
 * (server/file/memory).
 *
 * @see Transaction
 * @see TransactionDataSource
 */
var LoadPageDirectoryTransaction = /** @class */ (function (_super) {
    __extends(LoadPageDirectoryTransaction, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadPageDirectoryTransaction instance.
     */
    function LoadPageDirectoryTransaction() {
        return _super.call(this, 'LoadPageDirectory') || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    LoadPageDirectoryTransaction.prototype.startTransaction = function () {
        // add TaskHandler for loading PageDirectory data
        var taskHandler = new __WEBPACK_IMPORTED_MODULE_1__transaction_task_handlers_load_page_directory_task_handler__["a" /* LoadPageDirectoryTaskHandler */]();
        taskHandler.buildRequestXml();
        this.addTaskHandler(taskHandler);
        // Send request to get processed
        return _super.prototype.startTransaction.call(this);
    };
    return LoadPageDirectoryTransaction;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_transaction__["a" /* Transaction */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-page-directory.transaction.js.map

/***/ }),

/***/ "./src/app/model/transactions/load-player-init-data.transaction.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadPlayerInitDataTransaction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_transactions_transaction_task_handlers_load_unit_type_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-unit-type.task-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_transactions_transaction_task_handlers_load_user_variables_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-user-variables.task-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_transactions_transaction_task_handlers_load_unit_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-unit.task-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_transactions_transaction_task_handlers_load_references_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-references.task-handler.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/* tslint:enable:max-line-length */
/**
 * This class is responsible for loading all initial player data from the various TransactionDataSources
 * (server/file/memory).
 *
 * Currently the following data is loaded:
 *      - UnitType TODO: Not sure if we need this since we don't have the hover card on the page number.
 *      - Unit (unit hierarchy / course structure)
 *      - UserVariables
 *      - References
 *
 * @see Transaction
 * @see TransactionDataSource
 */
var LoadPlayerInitDataTransaction = /** @class */ (function (_super) {
    __extends(LoadPlayerInitDataTransaction, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadPlayerInitDataTransaction instance.
     */
    function LoadPlayerInitDataTransaction() {
        return _super.call(this, 'LoadPlayerInitData') || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    LoadPlayerInitDataTransaction.prototype.startTransaction = function () {
        // add TaskHandler for loading unit type list
        var loadUnitTypeTaskHandler = new __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_transactions_transaction_task_handlers_load_unit_type_task_handler__["a" /* LoadUnitTypeTaskHandler */]();
        loadUnitTypeTaskHandler.buildRequestXml();
        this.addTaskHandler(loadUnitTypeTaskHandler);
        // add TaskHandler for loading Unit
        var loadUnitTaskHandler = new __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_transactions_transaction_task_handlers_load_unit_task_handler__["a" /* LoadUnitTaskHandler */]();
        if (this.startupConfigurationService.caller === 'Page') {
            // pass pageID (the passed unitId from page designer is actually a pageID)
            loadUnitTaskHandler.buildRequestXml(null, this.startupConfigurationService.unitId);
        }
        else {
            loadUnitTaskHandler.buildRequestXml(this.startupConfigurationService.unitId); // pass unitID
        }
        this.addTaskHandler(loadUnitTaskHandler);
        // add request for loading user variables
        var loadUserVariablesTaskHandler = new __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_transactions_transaction_task_handlers_load_user_variables_task_handler__["a" /* LoadUserVariablesTaskHandler */]();
        if (this.startupConfigurationService.caller === 'Page') {
            // pass pageID (the passed unitId from page designer is actually a pageID)
            loadUserVariablesTaskHandler.buildRequestXml(null, this.startupConfigurationService.unitId);
        }
        else {
            loadUserVariablesTaskHandler.buildRequestXml(this.startupConfigurationService.unitId);
        }
        this.addTaskHandler(loadUserVariablesTaskHandler);
        // add TaskHandler for loading references
        var loadReferencesTaskHandler = new __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_transactions_transaction_task_handlers_load_references_task_handler__["a" /* LoadReferencesTaskHandler */]();
        if (this.startupConfigurationService.caller === 'Page') {
            // pass pageID (the passed unitId from page designer is actually a pageID)
            loadReferencesTaskHandler.buildRequestXml(null, this.startupConfigurationService.unitId);
        }
        else {
            loadReferencesTaskHandler.buildRequestXml(this.startupConfigurationService.unitId);
        }
        this.addTaskHandler(loadReferencesTaskHandler);
        // After building up all requests, sending out all requests to get processed
        return _super.prototype.startTransaction.call(this);
    };
    return LoadPlayerInitDataTransaction;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_transactions_transaction__["a" /* Transaction */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-player-init-data.transaction.js.map

/***/ }),

/***/ "./src/app/model/transactions/transaction-task-handlers/load-Manifest.task-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadManifestTaskHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_startup_configuration_service__ = __webpack_require__("./src/app/model/services/startup-configuration-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_objects_manifest_data_object__ = __webpack_require__("./src/app/model/data-objects/manifest.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_transactions_transaction_task_handlers_transaction_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* tslint:disable:max-line-length */




/* tslint:enable:max-line-length */
/**
 * This task handler makes the request to load the application's manifest file.  The response is then parsed and from
 * that data a manifest data object is created in the startup configuration service for use by the rest of the
 * application.
 *
 * @see TransactionTaskHandler
 * @see StartupConfigurationService
 * @see ManifestDataObject
 */
var LoadManifestTaskHandler = /** @class */ (function (_super) {
    __extends(LoadManifestTaskHandler, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadManifestTaskHandler instance.
     */
    function LoadManifestTaskHandler() {
        return _super.call(this, 'LoadManifest') || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Accessors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Set our source file URL after the super's implementation sets the data source.
     *
     * @inheritDoc
     */
    LoadManifestTaskHandler.prototype.setDataSource = function () {
        _super.prototype.setDataSource.call(this);
        this.fileUrl = './IMImanifest.xml';
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Request Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Builds the XML for load manifest request.
     *
     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the
     * response if a valid one is received.
     *
     * @returns The root element of the load manifest request XML.
     */
    LoadManifestTaskHandler.prototype.buildRequestXml = function () {
        return this.requestXml;
    };
    /**
     * Parses the received XML and creates a ManifestDataObject in the StartupConfigurationService.
     *
     * @inheritDoc
     */
    LoadManifestTaskHandler.prototype.processResponse = function () {
        var startupConfigurationService = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__services_startup_configuration_service__["a" /* StartupConfigurationService */]);
        startupConfigurationService.manifest = new __WEBPACK_IMPORTED_MODULE_2__data_objects_manifest_data_object__["a" /* ManifestDataObject */](this.responseData);
    };
    return LoadManifestTaskHandler;
}(__WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_transactions_transaction_task_handlers_transaction_task_handler__["a" /* TransactionTaskHandler */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-Manifest.task-handler.js.map

/***/ }),

/***/ "./src/app/model/transactions/transaction-task-handlers/load-page-directory.task-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadPageDirectoryTaskHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__data_objects_page_file_Url_data_object__ = __webpack_require__("./src/app/model/data-objects/page-file-Url.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_transactions_transaction_task_handlers_transaction_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_transactions_xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* tslint:disable:max-line-length */



/* tslint:enable:max-line-length */
/**
 * This task handler makes the request to load the application's page directory URL file.  The response is then parsed
 * and from that data a page file URL data object is created in the startup configuration service for use by the rest of
 * the application.
 *
 * That data object contains URLs for all of the page files that were generated during the server's course packaging
 * process.  This information is used to locate the local page content when the course is being consumed in an offline
 * environment.
 *
 * @see TransactionTaskHandler
 * @see StartupConfigurationService
 * @see PageFileUrlDataObject
 */
var LoadPageDirectoryTaskHandler = /** @class */ (function (_super) {
    __extends(LoadPageDirectoryTaskHandler, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadPageDirectoryTaskHandler instance.
     */
    function LoadPageDirectoryTaskHandler() {
        return _super.call(this, 'LoadPageDirectory') || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Accessors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Set our source file URL after the super's implementation sets the data source.
     *
     * @inheritDoc
     */
    LoadPageDirectoryTaskHandler.prototype.setDataSource = function () {
        _super.prototype.setDataSource.call(this);
        this.fileUrl = this.startupConfigurationService.pageDirectoryUrl;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Request Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Builds the XML for the load PageDirectory request.
     *
     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the
     * response if a valid one is received.
     *
     * @returns The root element of the load PageDirectory request XML.
     */
    LoadPageDirectoryTaskHandler.prototype.buildRequestXml = function () {
        return this.requestXml;
    };
    /**
     * Parses the received XML and creates an array of PageFileUrlDataObjects in the StartupConfigurationService.
     *
     * @inheritDoc
     */
    LoadPageDirectoryTaskHandler.prototype.processResponse = function () {
        var pages = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getChildElements(__WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].findFirstDescendantByName(this.responseData, 'Response'));
        for (var _i = 0, pages_1 = pages; _i < pages_1.length; _i++) {
            var page = pages_1[_i];
            var pageUrl = new __WEBPACK_IMPORTED_MODULE_0__data_objects_page_file_Url_data_object__["a" /* PageFileUrlDataObject */]();
            var childElements = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getChildElements(page);
            for (var _a = 0, childElements_1 = childElements; _a < childElements_1.length; _a++) {
                var child = childElements_1[_a];
                switch (child.tagName) {
                    case 'PageID':
                        pageUrl.pageID = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getTextContent(child);
                        break;
                    case 'PageURL':
                        pageUrl.pageUrl = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_transactions_xml_parser__["a" /* XmlParser */].getTextContent(child);
                        break;
                }
            }
            this.startupConfigurationService.pageFileUrls.push(pageUrl);
        }
    };
    return LoadPageDirectoryTaskHandler;
}(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_transactions_transaction_task_handlers_transaction_task_handler__["a" /* TransactionTaskHandler */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-page-directory.task-handler.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/action-system/framework-action.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FrameworkActionPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_action_system_framework_action_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/action-system/framework-action.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__framework_event_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/action-system/framework-event.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Playable version of FrameworkActionDataObject
 * @inheritDoc
 */
var FrameworkActionPlayableDataObject = /** @class */ (function (_super) {
    __extends(FrameworkActionPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    function FrameworkActionPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FrameworkActionPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.frameworkActionPlayableLogger = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('FrameworkActionDataObject');
        this.frameworkActionPlayableLogger.debug('constructorPreprocessing(): Playable FrameworkAction');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    Object.defineProperty(FrameworkActionPlayableDataObject.prototype, "defaultFunction", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        get: function () {
            return this.frameworkEvent.frameworkFunction;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FrameworkActionPlayableDataObject.prototype, "correctFunction", {
        get: function () {
            // TODO: Get the right function
            return this.frameworkEvent.frameworkFunction;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FrameworkActionPlayableDataObject.prototype, "inCorrectFunction", {
        get: function () {
            // TODO: Get the right function
            return this.frameworkEvent.frameworkFunction;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates and returns playable version of FrameworkEvent.
     *
     * @param element -> root level Element to construct FrameworkEvent from
     * @returns {FrameworkEventPlayableDataObject}
     */
    FrameworkActionPlayableDataObject.prototype.createFrameworkEvent = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_1__framework_event_playable_data_object__["a" /* FrameworkEventPlayableDataObject */](element);
    };
    /**
     * Starts Action System processing
     */
    FrameworkActionPlayableDataObject.prototype.processFrameworkAction = function (value) {
        this.frameworkActionPlayableLogger.debug('processFrameworkAction()');
        /*
        console.log('7777777 value = ');
        console.log(value);
        console.log('7777777 parent correct value = ');
        console.log(this.parent.correctValue);
        */
        this.frameworkEvent.processFrameworkEvent();
        /*
        if (value === undefined) {
            this.defaultFunction.processFrameworkFunction();
        } else if (value === this.parent.correctValue) {
            this.correctFunction.processFrameworkFunction();
        } else {
            this.inCorrectFunction.processFrameworkFunction();
        }
        */
    };
    return FrameworkActionPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_action_system_framework_action_data_object__["a" /* FrameworkActionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/framework-action.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/action-system/framework-event.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FrameworkEventPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_action_system_framework_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/action-system/framework-event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__framework_function_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/action-system/framework-function.playable.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Playable version of FrameworkEventDataObject
 * @inheritDoc
 */
var FrameworkEventPlayableDataObject = /** @class */ (function (_super) {
    __extends(FrameworkEventPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    function FrameworkEventPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FrameworkEventPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.frameworkEventPlayableLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('FrameworkEventDataObject');
        this.frameworkEventPlayableLogger.debug('constructorPreprocessing(): Playable FrameworkEvent');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates playable version of FrameworkFunction.
     *
     * @param element -> root level Element to construct FrameworkFunction from
     * @returns {FrameworkFunctionPlayableDataObject}
     */
    FrameworkEventPlayableDataObject.prototype.createFrameworkFunction = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_2__framework_function_playable_data_object__["a" /* FrameworkFunctionPlayableDataObject */](element);
    };
    /**
     * Starts processing FrameworkEvent
     */
    FrameworkEventPlayableDataObject.prototype.processFrameworkEvent = function () {
        this.frameworkEventPlayableLogger.debug('processFrameworkEvent()');
        this.frameworkFunction.processFrameworkFunction();
    };
    return FrameworkEventPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_action_system_framework_event_data_object__["a" /* FrameworkEventDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/framework-event.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/action-system/framework-function.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FrameworkFunctionPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_action_system_framework_function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/action-system/framework-function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/**
 * Playable version of FrameworkFunctionDataObject
 *
 * @internal: Typically we would create separate classes to handle the different functions for better encapsulation,
 *              but Designers already setup all functions in this one object and since the Action System should
 *              eventually be fully replaced by the Event System, hopefully all this can be dropped at some point.
 *
 * @inheritDoc
 */
var FrameworkFunctionPlayableDataObject = /** @class */ (function (_super) {
    __extends(FrameworkFunctionPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    function FrameworkFunctionPlayableDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Properties / Instance Variables
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Logger instance for logging
         */
        _this.frameworkFunctionPlayableLogger = __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('FrameworkFunctionPlayableDataObject');
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FrameworkFunctionPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.frameworkFunctionPlayableLogger = __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('FrameworkFunctionPlayableDataObject');
        this.frameworkFunctionPlayableLogger.debug('constructorPreprocessing(): Playable FrameworkFunction');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Starts processing FrameworkFunction
     */
    FrameworkFunctionPlayableDataObject.prototype.processFrameworkFunction = function () {
        this.frameworkFunctionPlayableLogger.debug('processFrameworkFunction()');
        switch (this.functionName) {
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_action_system_framework_function_data_object__["a" /* FrameworkFunctionDataObject */].GOTO_PAGE_FUNCTION:
                this.loadPage();
                break;
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_action_system_framework_function_data_object__["a" /* FrameworkFunctionDataObject */].NEXT_PAGE_FUNCTION:
                this.loadNextPage();
                break;
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_action_system_framework_function_data_object__["a" /* FrameworkFunctionDataObject */].PREV_PAGE_FUNCTION:
                this.loadPrevPage();
                break;
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_action_system_framework_function_data_object__["a" /* FrameworkFunctionDataObject */].MESSAGE_FUNCTION:
                this.showMessage();
                break;
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_action_system_framework_function_data_object__["a" /* FrameworkFunctionDataObject */].VALIDATE_FUNCTION:
                this.validate();
                break;
        }
    };
    /**
     * Load next page via PageService
     */
    FrameworkFunctionPlayableDataObject.prototype.loadNextPage = function () {
        __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */]).loadNextPage();
    };
    /**
     * Load prev page via PageService
     */
    FrameworkFunctionPlayableDataObject.prototype.loadPrevPage = function () {
        __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */]).loadPreviousPage();
    };
    /**
     * Load pageID specified in FrameworkParam Element via PageService
     */
    FrameworkFunctionPlayableDataObject.prototype.loadPage = function () {
        // Get pageID from data
        var pageID = this._localRoot.getFirstChildElementByName('FrameworkParam').
            getFirstChildElementByName('FrameworkConst').value;
        __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */]).loadPage(pageID);
    };
    /**
     * Show message
     */
    FrameworkFunctionPlayableDataObject.prototype.showMessage = function () {
        // Get message from data
        var message = this._localRoot.getFirstChildElementByName('FrameworkParam').
            getFirstChildElementByName('FrameworkConst').value;
        __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_4__model_services_pop_up_service__["a" /* PopUpService */]).openSystemMessage(message);
    };
    /**
     * Perform Component validation and run appropriate function
     *
     * @internal: Data structure for validate function looks like this.  Unlike other functions it has 2 FrameworkParams
     *              that contain FrameworkFunctions.  So processing is a little different as detailed in the code.
     * <FrameworkFunction>
     *     <ElementID>3023923</ElementID>
     *     <IsTemplate>false</IsTemplate>
     *     <IsProperty>true</IsProperty>
     *     <Value><![CDATA[Validate]]></Value>
     *     <FrameworkParam>
     *         <ElementID>3023924</ElementID>
     *         <IsTemplate>false</IsTemplate>
     *         <IsProperty>true</IsProperty>
     *         <Value><![CDATA[0]]></Value>
     *         <FrameworkFunction>
     *             <ElementID>3023925</ElementID>
     *             <IsTemplate>false</IsTemplate>
     *             <IsProperty>true</IsProperty>
     *             <Value><![CDATA[NextPage]]></Value>
     *         </FrameworkFunction>
     *     </FrameworkParam>
     *     <FrameworkParam>
     *         <ElementID>3023926</ElementID>
     *         <IsTemplate>false</IsTemplate>
     *         <IsProperty>true</IsProperty>
     *         <Value><![CDATA[1]]></Value>
     *         <FrameworkFunction>
     *             <ElementID>3023927</ElementID>
     *             <IsTemplate>false</IsTemplate>
     *             <IsProperty>true</IsProperty>
     *             <Value><![CDATA[PrevPage]]></Value>
     *         </FrameworkFunction>
     *     </FrameworkParam>
     * </FrameworkFunction>
     */
    FrameworkFunctionPlayableDataObject.prototype.validate = function () {
        console.log('!!! validate !!!');
        // Variable to hold FrameworkParam value we want based on whether or not validation is passed
        var getFrameworkParamValue;
        // Run component validation method via FrameworkEvent->FrameworkAction->ComponentDataObject.validate
        if (this._parent.parent.parent.validate()) {
            // When validation passed we want the function in FrameworkParam that has a value of 0
            // This data structure is pretty crappy, but will leave it, this system should be deprecated anyway
            getFrameworkParamValue = '0';
        }
        else {
            // When validation passed we want the function in FrameworkParam that has a value of 1
            getFrameworkParamValue = '1';
        }
        /*
        This process, which mirrors what's done in Flash, is also a little strange.  The 2 FrameworkParams of the
        validate method are FrameworkFunctions that are parsed and created on the fly at run time (rather than built
        during data loading).  This is simplest for now since the data structure is different from other functions.
        When implementing the Designers, if we are still supporting this system, we'll likely want to review the data
        structure and processing.
         */
        // Get the FrameworkParam Element that we're looking for based on whether or not validation was passed
        var frameworkParamElement = this._localRoot.children.find(function (element) {
            return (element.name === 'FrameworkParam' && element.value === getFrameworkParamValue);
        });
        // Get the FrameworkFunction Element contained in the FrameworkParam that we want
        var frameworkFunctionElement = frameworkParamElement.getFirstChildElementByName(__WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_action_system_framework_function_data_object__["a" /* FrameworkFunctionDataObject */].FRAMEWORK_FUNCTION_ELEMENT_NAME);
        // Create the FrameworkFunction (this is the function we want to run based on the results of validation)
        var frameworkFunction = new FrameworkFunctionPlayableDataObject(frameworkFunctionElement);
        // Run the function
        frameworkFunction.processFrameworkFunction();
    };
    return FrameworkFunctionPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_action_system_framework_function_data_object__["a" /* FrameworkFunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/framework-function.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/case.playable.data-object.collection.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CasePlayableDataObjectCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_case_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/case.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__case_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/case.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Playable version of Case Collection data object
 */
var CasePlayableDataObjectCollection = /** @class */ (function (_super) {
    __extends(CasePlayableDataObjectCollection, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function CasePlayableDataObjectCollection(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    CasePlayableDataObjectCollection.prototype.constructorPreprocessing = function () {
        this.casePlayableCollectionLogger = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('CasePlayableDataObjectCollection');
        this.casePlayableCollectionLogger.debug('constructorPreprocessing(): Playable Case Collection');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates and returns playable version of Case.
     *
     * @param sourceElement -> root level Element to construct an CaseDataObject from.
     */
    CasePlayableDataObjectCollection.prototype.createCase = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_1__case_playable_data_object__["a" /* CasePlayableDataObject */](sourceElement);
    };
    /**
     * Runs processing for Case Collection
     */
    CasePlayableDataObjectCollection.prototype.processCaseCollection = function () {
        this.casePlayableCollectionLogger.debug('processCaseCollection()');
        /*
            NOTE: AS version of this code calls method to sort Case Collection.  This is already done during
            construction of base.  Probably shouldn't have to do it again here.  Keep an eye on it.
        */
        /*
            Process Case objects, evaluating conditions and running functions as needed.

            NOTE: Array.some will run function for every item in array until function returns true (or function run for
            every item in array and returning false
        */
        var caseConditionPassed = this.caseCollection.some(function (caseObject) {
            return caseObject.processCase();
        });
        // If no default case or one with passing condition then nothing needs to be done, Case Collection processing
        // is complete, can notify parent Event Handler.
        if (!caseConditionPassed) {
            this.casePlayableCollectionLogger.debug('processCaseCollection(): NO DEFAULT OR PASSING CASE');
            this.childProcessComplete();
        }
    };
    /**
     * To be called in one of the following 2 scenarios:
     *
     *      1 - by child Playable Case objects when they are the default case or when their conditions are satisfied
     *          and their processing is complete
     *      2 - by this class's processCaseCollection when there is no default case or none of the cases are satisfied
     *
     * Once either of these things happen, the Case Collection can notify the parent Event Handler that case processing
     * is complete.
     *
     * @param event -> the EventHandlerPlayableDataObject that is reporting that its processing is complete
     */
    CasePlayableDataObjectCollection.prototype.childProcessComplete = function () {
        this.casePlayableCollectionLogger.debug('childProcessComplete()');
        this._parent.childProcessComplete();
    };
    return CasePlayableDataObjectCollection;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_case_data_object_collection__["a" /* CaseDataObjectCollection */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/case.playable.data-object.collection.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/case.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CasePlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_case_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/case.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__condition_branch_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/condition-branch.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__condition_leaf_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/condition-leaf.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__function_group_playable_data_object_collection__ = __webpack_require__("./src/app/player/model/data-objects/event-system/function-group.playable.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/**
 * Playable version of Case data object
 */
var CasePlayableDataObject = /** @class */ (function (_super) {
    __extends(CasePlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function CasePlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    CasePlayableDataObject.prototype.constructorPreprocessing = function () {
        this.casePlayableLogger = __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('CasePlayableDataObject');
        this.casePlayableLogger.debug('constructorPreprocessing(): Playable Case');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates playable version of this Condition Leaf.
     * @param sourceElement -> root level Element to construct Condition Leaf from.
     * @returns {ConditionLeafPlayableDataObject}
     */
    CasePlayableDataObject.prototype.createConditionLeaf = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_2__condition_leaf_playable_data_object__["a" /* ConditionLeafPlayableDataObject */](sourceElement);
    };
    /**
     * Overrides base.  Creates and returns a playable version of the Condition Branch object.
     * @param sourceElement -> root level Element to construct Condition Branch from.
     * @returns {ConditionBranchDataObject}
     */
    CasePlayableDataObject.prototype.createConditionBranch = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_1__condition_branch_playable_data_object__["a" /* ConditionBranchPlayableDataObject */](sourceElement);
    };
    /**
     * Overrides base.  Creates playable version of Function Group Collection.
     * @param sourceElement -> root level Element to construct Condition Branch from.
     * @returns {FunctionGroupDataObjectCollection}
     */
    CasePlayableDataObject.prototype.createFunctionGroupCollection = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_3__function_group_playable_data_object_collection__["a" /* FunctionGroupPlayableDataObjectCollection */](sourceElement);
    };
    /**
     * Runs processing for Case
     * @returns {boolean} -> true if case satisfied (default case or conditions passed), otherwise false
     */
    CasePlayableDataObject.prototype.processCase = function () {
        var conditionNodeResult;
        // Evaluate result of Condition Node if not default and if there is one
        // NOTE: Found instances in data where a case is default (doesn't need a conditionNode), but has an invalid
        //          conditionNode (not undefined).  So need to check default explicitly to prevent errors.
        if (!this.isDefaultCase && this.conditionNode) {
            conditionNodeResult =
                this.conditionNode
                    .evaluateCondition();
        }
        // Debugging
        this.casePlayableLogger.debug('processCase(): isDefaultCase = ' + this.isDefaultCase);
        this.casePlayableLogger.debug('processCase(): evaluateCondition = ' + conditionNodeResult);
        // If default or conditions passed process function group
        if (this.isDefaultCase || conditionNodeResult) {
            this.casePlayableLogger.debug('processCase(): FOUND DEFAULT AND/OR PASSING CASE');
            // Call method to process function group
            this.functionGroupCollection
                .processFunctionGroupCollection();
            return true;
        }
        else {
            // Do nothing
            return false;
        }
    };
    /**
     * To be called by child Function Group Collection object when its processing is complete.  At this point Case
     * processing is also complete so parent Case Collection can be notified.
     */
    CasePlayableDataObject.prototype.childProcessComplete = function () {
        this.casePlayableLogger.debug('childProcessComplete()');
        this._parent.childProcessComplete();
    };
    return CasePlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_case_data_object__["a" /* CaseDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/case.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/condition-branch.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConditionBranchPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_condition_branch_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/condition-branch.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__condition_leaf_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/condition-leaf.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Playable version of Condition Branch data object
 * @inheritDoc
 */
var ConditionBranchPlayableDataObject = /** @class */ (function (_super) {
    __extends(ConditionBranchPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function ConditionBranchPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * @inheritDoc
     */
    ConditionBranchPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.conditionBranchPlayableLogger = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('ConditionBranchPlayableDataObject');
        this.conditionBranchPlayableLogger.debug('constructorPreprocessing(): Playable Condition Branch');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates and returns playable version of Condition Leaf object.
     * @inheritDoc
     * @param sourceElement -> root level Element to construct Condition Leaf from.
     * @returns {ConditionLeafPlayableDataObject}
     */
    ConditionBranchPlayableDataObject.prototype.createConditionLeaf = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_1__condition_leaf_playable_data_object__["a" /* ConditionLeafPlayableDataObject */](sourceElement);
    };
    /**
     * Overrides base.  Creates and returns playable version of Condition Branch object.
     * @inheritDoc
     * @param sourceElement -> root level Element to construct Condition Branch from.
     * @returns {ConditionBranchPlayableDataObject}
     */
    ConditionBranchPlayableDataObject.prototype.createConditionBranch = function (sourceElement) {
        return new ConditionBranchPlayableDataObject(sourceElement);
    };
    /**
     * Evaluates result of Condition Node data structure by recursively evaluating and comparing the child nodes.
     * @returns {boolean}
     */
    ConditionBranchPlayableDataObject.prototype.evaluateCondition = function () {
        this.conditionBranchPlayableLogger.debug('evaluateCondition()');
        var result;
        switch (this.logicalOperator) {
            case __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_condition_branch_data_object__["a" /* ConditionBranchDataObject */].AND_OPERATOR:
                // Returns true if result of all Condition Nodes is true
                result = false;
                result = this.conditionNodeCollection.every(function (conditionNode) {
                    return (conditionNode
                        .evaluateCondition());
                });
                this.conditionBranchPlayableLogger.debug('evaluateCondition(): AND - result - ' + result);
                break;
            case __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_condition_branch_data_object__["a" /* ConditionBranchDataObject */].OR_OPERATOR:
                // Returns true if the result of any Condition node is true
                result = false;
                result = this.conditionNodeCollection.some(function (conditionNode) {
                    return (conditionNode
                        .evaluateCondition());
                });
                this.conditionBranchPlayableLogger.debug('evaluateCondition(): OR - result - ' + result);
                break;
        }
        return result;
    };
    return ConditionBranchPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_condition_branch_data_object__["a" /* ConditionBranchDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/condition-branch.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/condition-leaf.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConditionLeafPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_condition_leaf_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/condition-leaf.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__value_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/value.playable.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Playable version of Condition Leaf data object
 * @inheritDoc
 */
var ConditionLeafPlayableDataObject = /** @class */ (function (_super) {
    __extends(ConditionLeafPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function ConditionLeafPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * @inheritDoc
     */
    ConditionLeafPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.conditionLeafPlayableLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('ConditionLeafPlayableDataObject');
        this.conditionLeafPlayableLogger.debug('constructorPreprocessing(): Playable Condition Leaf');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates playable versions of Value object.
     * @param sourceElement
     * @returns {ValuePlayableDataObject}
     */
    ConditionLeafPlayableDataObject.prototype.createValueDataObject = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_2__value_playable_data_object__["a" /* ValuePlayableDataObject */](sourceElement);
    };
    /**
     * At this point only supports comparing 2 values.  Would need to be modified to support more.
     */
    ConditionLeafPlayableDataObject.prototype.evaluateCondition = function () {
        // Sort comparisonItems vector by order property to make sure they are evaluated in the correct order
        this.sortValueCollection();
        // NOTE: Not sure if there will ever be a scenario where more than 2 items are being compared and not sure how
        //          a scenario like that should be compared.  So for now this method will assume there are only 2 items
        //          to be compared.  In the future this can be modified to handle more items if needed.
        // Get value for 2 items being compared
        var firstValue = this.comparisonValueCollection[0].returnValue;
        var secondValue = this.comparisonValueCollection[1].returnValue;
        // Debugging
        this.conditionLeafPlayableLogger.debug('evaluateCondition(): ' +
            'firstItemValue = ' + firstValue +
            '  -  secondItemValue = ' + secondValue);
        this.conditionLeafPlayableLogger.debug('evaluateCondition(): comparisonOperator = ' + this.comparisonOperator);
        // NOTE: May eventually need to consider data types for comparisons.
        switch (this.comparisonOperator) {
            case this.EQUAL_TO:
                return (firstValue === secondValue);
            case this.EQUAL_TO_CASE_SENSITIVE:
                // Convert to string first in case numbers are being compared
                return (firstValue.toString().toLowerCase() === secondValue.toString().toLowerCase());
            case this.NOT_EQUAL_TO:
                return (firstValue !== secondValue);
            case this.GREATER_THAN:
                return (firstValue > secondValue);
            case this.GREATER_THAN_OR_EQUAL_TO:
                return (firstValue >= secondValue);
            case this.LESS_THAN:
                return (firstValue < secondValue);
            case this.LESS_THAN_OR_EQUAL_TO:
                return (firstValue <= secondValue);
        }
        // If for some reason we get out of the case statement without returning something
        return false;
    };
    /**
     * Sorts the Value objects stored in comparisonValueCollection
     * NOTE: AS code only sorts in playable, not sure how editable handles this (may want to move to base if
     *          editable can use it too)
     */
    ConditionLeafPlayableDataObject.prototype.sortValueCollection = function () {
        this.comparisonValueCollection.sort(function (valueObjectA, valueObjectB) {
            return valueObjectA.order - valueObjectB.order;
        });
    };
    return ConditionLeafPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_condition_leaf_data_object__["a" /* ConditionLeafDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/condition-leaf.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/event-handler.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventHandlerPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__case_playable_data_object_collection__ = __webpack_require__("./src/app/player/model/data-objects/event-system/case.playable.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_handler_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event-handler.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__event_playable_data_object_collection__ = __webpack_require__("./src/app/player/model/data-objects/event-system/event.playable.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/**
 * Playable version of Event Handler data object
 */
var EventHandlerPlayableDataObject = /** @class */ (function (_super) {
    __extends(EventHandlerPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function EventHandlerPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    EventHandlerPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.eventHandlerPlayableLogger = __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('EventHandlerPlayableDataObject');
        this.eventHandlerPlayableLogger.debug('constructorPreprocessing(): Playable Event Handler');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates and returns playable version of Case Collection.
     *
     * @param sourceElement -> root level Element to construct CasePlayableDataObjectCollection from.
     */
    EventHandlerPlayableDataObject.prototype.createCaseCollection = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_0__case_playable_data_object_collection__["a" /* CasePlayableDataObjectCollection */](sourceElement);
    };
    /**
     * Overrides base.  Creates and returns playable version of Event Collection.
     *
     * @param sourceElement -> root level Element to construct an EventPlayableDataObjectCollection from.
     */
    EventHandlerPlayableDataObject.prototype.createEventCollection = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_3__event_playable_data_object_collection__["a" /* EventPlayableDataObjectCollection */](sourceElement);
    };
    /**
     * Runs processing for Event Handler which entails starting the processing of its Case Collection.
     */
    EventHandlerPlayableDataObject.prototype.processEventHandler = function () {
        this.eventHandlerPlayableLogger.debug('processEventHandler()');
        // Process Case Collection
        if (this._caseCollection) {
            this._caseCollection.processCaseCollection();
        }
    };
    /**
     * To be called by child Case Collection objects when their processing is complete.  In this case it runs the Event
     * Handler onComplete Event (via _eventCollection) if there is one.
     */
    EventHandlerPlayableDataObject.prototype.childProcessComplete = function () {
        this.eventHandlerPlayableLogger.debug('childProcessComplete() - Try to run OnComplete event');
        // Try to process the OnComplete event for this Event Handler
        if (!this._eventCollection.processEvent(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_COMPLETE)) {
            // If the processEvent method returns undefined (either b/c there are no event handlers or the event is
            // already being processed, Event Handler processing can be considered complete and parent can be notified
            this.eventHandlerPlayableLogger.debug('childProcessComplete() - No OnComplete event notify parent done');
            this._parent.childProcessComplete(this);
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods to implement EventContainerPlayableDataObjectInterface
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     *
     * @internal
     * At this point the only Event that would make this callback is an on complete from another Event, so don't really
     * need to check the Event object being passed.  May need to if this ever changes.
     */
    EventHandlerPlayableDataObject.prototype.childEventComplete = function (event) {
        this.eventHandlerPlayableLogger.debug('childEventComplete() - OnComplete Event processing complete');
        // Event Handler and OnComplete Event processing complete, notify parent Event
        this._parent.childProcessComplete(this);
    };
    return EventHandlerPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_handler_data_object__["a" /* EventHandlerDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/event-handler.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/event.playable.data-object.collection.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventPlayableDataObjectCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_event_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__event_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/event.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Playable version of Event System data object class
 */
var EventPlayableDataObjectCollection = /** @class */ (function (_super) {
    __extends(EventPlayableDataObjectCollection, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function EventPlayableDataObjectCollection(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    EventPlayableDataObjectCollection.prototype.constructorPreprocessing = function () {
        this.eventPlayableCollectionLogger = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('EventPlayableDataObjectCollection');
        this.eventPlayableCollectionLogger.debug('constructorPreprocessing(): Playable Event Collection');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates playable version of an Event.
     *
     * @param sourceElement -> root level Element to construct an EventPlayableDataObject from.
     */
    EventPlayableDataObjectCollection.prototype.createEvent = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_1__event_playable_data_object__["a" /* EventPlayableDataObject */](sourceElement);
    };
    /**
     * Runs the Event associated with the passed trigger.
     *
     * @internal
     * TODO: May eventually want to create a separate method that will register the Event with some centralized Event
     *          Processor which will call this method to run the Event.
     *
     * @param trigger -> matched against the value of the EventDataObject.trigger property to identify the Event that
     *                      should be run by this method
     *
     * @returns {EventPlayableDataObject|undefined}
     * In scenarios where this call doesn't actually do anything (when the Event has no Event Handlers or the event is
     * already being processed), this call will return undefined.  Otherwise it returns a reference to the Event object
     * that is being processed
     */
    EventPlayableDataObjectCollection.prototype.processEvent = function (trigger) {
        console.log('********** EXECUTE EVENT - ' + trigger + ' **********');
        // Get Event associated with trigger
        var eventObject = this.getEventByTrigger(trigger);
        // If it exists
        if (eventObject) {
            // Process the event
            if (eventObject.processEvent()) {
                console.log('********** processed **********');
                // Return the event if it has Event Handlers and is not already being processed
                return eventObject;
            }
            else {
                console.log('********** not processed - no event handler or already running **********');
                // Otherwise return undefined to indicate that no new processing was started
                return undefined;
            }
        }
        else {
            console.log('********** NO EVENT FOR - ' + trigger + '**********');
            return undefined;
        }
    };
    /**
     * To be called by child Playable Event objects when their processing is complete so that processing at the Event
     * Collection level can continue.
     *
     * @param event -> the EventPlayableDataObject that is reporting that its processing is complete
     */
    EventPlayableDataObjectCollection.prototype.childProcessComplete = function (event) {
        this.eventPlayableCollectionLogger.debug('childProcessComplete()');
        // Check if Event Container is playable
        if (this.isPlayableEventContainer(this._parent)) {
            // If it is, call childEventComplete to notify it that it's Event Collection is complete
            this._parent.childEventComplete(event);
        }
    };
    /**
     * Type Guard function to check if Event Container is playable
     *
     * @param eventContainer
     * @returns {boolean}
     */
    EventPlayableDataObjectCollection.prototype.isPlayableEventContainer = function (eventContainer) {
        return eventContainer.childEventComplete !== undefined;
    };
    return EventPlayableDataObjectCollection;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_event_data_object_collection__["a" /* EventDataObjectCollection */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/event.playable.data-object.collection.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/event.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__event_handler_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/event-handler.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Playable version of Event System data object class
 */
var EventPlayableDataObject = /** @class */ (function (_super) {
    __extends(EventPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function EventPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    EventPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.eventPlayableLogger = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('EventPlayableDataObject');
        this.eventPlayableLogger.debug('constructorPreprocessing(): Playable Event');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
        this.eventHandlersInProgress = [];
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base method to return playable version of Event Handler
     *
     * @param sourceElement -> root level Element to construct an Event Handler from.
     */
    EventPlayableDataObject.prototype.createEventHandler = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_1__event_handler_playable_data_object__["a" /* EventHandlerPlayableDataObject */](sourceElement);
    };
    /**
     * Runs processing for Event which entails asynchronously starting the processing of all its Event Handlers.
     *
     * @returns (boolean) - True when the processEventHandler can be called (one exists and is not already running),
     *                      False otherwise
     */
    EventPlayableDataObject.prototype.processEvent = function () {
        var _this = this;
        this.eventPlayableLogger.debug('processEvent()');
        // Check to ensure event has Event Handlers and is not already being processed
        if (this.eventHandlerCollection.length > 0 && this.eventHandlersInProgress.length === 0) {
            // Kick off processing of all Event Handlers (asynchronously)
            this.eventHandlerCollection.forEach(function (eventHandler) {
                // Add Event Handler to list of Handlers that are in progress
                _this.eventHandlersInProgress.push(eventHandler);
                // Process Event Handler
                eventHandler.processEventHandler();
            });
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * To be called by child Playable Event Handler objects when their processing is complete so that processing at the
     * Event level can continue.  In this case checks to see whether there are any other asynchronously running Event
     * Handlers that are still processing, and if not tell the parent Event Collection that Event processing is done.
     *
     * @param event -> the EventHandlerPlayableDataObject that is reporting that its processing is complete
     */
    EventPlayableDataObject.prototype.childProcessComplete = function (eventHandler) {
        this.eventPlayableLogger.debug('childProcessComplete(): number previously in queue = ' +
            this.eventHandlersInProgress.length);
        // Remove Event Handler from in progress list
        this.eventHandlersInProgress.splice(this.eventHandlersInProgress.indexOf(eventHandler), 1);
        this.eventPlayableLogger.debug('childProcessComplete(): number remaining in queue = ' +
            this.eventHandlersInProgress.length);
        // If eventHandlersInProgress is empty all event handler processing is done.  Run parent childProcessComplete
        if (this.eventHandlersInProgress.length === 0) {
            this._parent.childProcessComplete(this);
        }
    };
    return EventPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/event.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/function-group.playable.data-object.collection.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FunctionGroupPlayableDataObjectCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_function_groups_function_group_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/function-groups/function-group.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_function_group_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/function-group.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__function_groups_function_group_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/function-groups/function-group.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




/**
 * Playable version of Function Group Collection
 */
var FunctionGroupPlayableDataObjectCollection = /** @class */ (function (_super) {
    __extends(FunctionGroupPlayableDataObjectCollection, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function FunctionGroupPlayableDataObjectCollection(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FunctionGroupPlayableDataObjectCollection.prototype.constructorPreprocessing = function () {
        this.functionGroupPlayableCollectionLogger =
            __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('FunctionGroupPlayableDataObjectCollection');
        this.functionGroupPlayableCollectionLogger.debug('constructorPreprocessing(): Playable Function Group Collection');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates and returns a Playable version of Function Group object
     *
     * @param sourceElement -> root level Element to construct Function Group from.
     * @returns {FunctionGroupPlayableDataObject}
     */
    FunctionGroupPlayableDataObjectCollection.prototype.createFunctionGroup = function (sourceElement) {
        return new __WEBPACK_IMPORTED_MODULE_2__function_groups_function_group_playable_data_object__["a" /* FunctionGroupPlayableDataObject */](sourceElement);
    };
    /**
     * Run all Function Groups in collection.
     */
    FunctionGroupPlayableDataObjectCollection.prototype.processFunctionGroupCollection = function () {
        this.functionGroupPlayableCollectionLogger.debug('processFunctionGroupCollection()');
        // Reset index and completedFunctionGroups to start from beginning
        this.processIndex = 0;
        this.completedFunctionGroups = [];
        // Start running the Function Groups
        this.runFunctionGroupUntilDoneOrAfter();
    };
    /**
     * Runs all Function Groups in functionGroupCollection asynchronously until either there aren't any left or a run
     * "After Previous" Function Group is encountered
     */
    FunctionGroupPlayableDataObjectCollection.prototype.runFunctionGroupUntilDoneOrAfter = function () {
        this.functionGroupPlayableCollectionLogger.debug('runFunctionGroupUntilDoneOrAfter(): starting index = ' + this.processIndex);
        // Start running Function Groups in collection until either there are none left or an execute after is reached
        do {
            var functionGroup = this.functionGroupCollection[this.processIndex];
            var nextFunctionGroup = this.functionGroupCollection[this.processIndex + 1];
            // If the next Function Group runs "after" this one, set waitForPreviousFunctionGroup to this one
            if (nextFunctionGroup && nextFunctionGroup.execute === __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_function_groups_function_group_data_object__["a" /* FunctionGroupDataObject */].EXECUTE_AFTER_VALUE) {
                this.waitForPreviousFunctionGroup = functionGroup;
            }
            this.functionGroupPlayableCollectionLogger.debug('runFunctionGroupUntilDoneOrAfter(): @index = ' + this.processIndex);
            // Run the Function Group
            this.functionGroupCollection[this.processIndex++]
                .processFunctionGroup();
        } while ((this.processIndex < this.functionGroupCollection.length) &&
            (this.functionGroupCollection[this.processIndex].execute !== __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_function_groups_function_group_data_object__["a" /* FunctionGroupDataObject */].EXECUTE_AFTER_VALUE));
    };
    /**
     * To be called by child Playable Function Group objects when their processing is complete so that processing at the
     * Collection level can continue.  In this case, if processing of the next Function Group in the collection is
     * waiting for a particular one to complete, it checks the completedFunctionGroup to the one its waiting for
     * (waitForPreviousFunctionGroup).  If it matches, it can call runFunctionGroupUntilDoneOrAfter to continue
     * processing.  If all of the Function Groups in the collection have been processed the parent Playable Case can
     * be notified (by calling its childProcessComplete method).
     *
     * @param event -> the FunctionGroupPlayableDataObject that is reporting that its processing is complete
     */
    FunctionGroupPlayableDataObjectCollection.prototype.childProcessComplete = function (completedFunctionGroup) {
        this.functionGroupPlayableCollectionLogger.debug('childProcessComplete(): functionGroup = ' + completedFunctionGroup.name);
        // Track that the Function Group was completed
        this.completedFunctionGroups.push(completedFunctionGroup);
        this.functionGroupPlayableCollectionLogger.debug('childProcessComplete(): total function groups = ' + this.functionGroupCollection.length);
        this.functionGroupPlayableCollectionLogger.debug('childProcessComplete(): total function groups complete = ' + this.completedFunctionGroups.length);
        if (completedFunctionGroup === this.waitForPreviousFunctionGroup) {
            this.functionGroupPlayableCollectionLogger.debug('childProcessComplete(): After Previous Function Group complete');
            // If the Function Group completed is the one we're waiting for, start running Function Groups again
            this.runFunctionGroupUntilDoneOrAfter();
        }
        else if (this.completedFunctionGroups.length === this.functionGroupCollection.length) {
            // If all of the Function Groups have finished processing, notify parent
            this.functionGroupPlayableCollectionLogger.debug('childProcessComplete(): All Function Groups completed');
            this._parent.childProcessComplete();
        }
    };
    return FunctionGroupPlayableDataObjectCollection;
}(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_function_group_data_object_collection__["a" /* FunctionGroupDataObjectCollection */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/function-group.playable.data-object.collection.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/function-groups/function-group.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FunctionGroupPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_function_groups_function_group_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/function-groups/function-group.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__function_playable_data_object_collection__ = __webpack_require__("./src/app/player/model/data-objects/event-system/function.playable.data-object.collection.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Playable version of Function Group data object
 */
var FunctionGroupPlayableDataObject = /** @class */ (function (_super) {
    __extends(FunctionGroupPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function FunctionGroupPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FunctionGroupPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.functionGroupPlayableLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('FunctionGroupPlayableDataObject');
        this.functionGroupPlayableLogger.debug('constructorPreprocessing(): Playable Function Group');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates and returns a playable version of FunctionDataObjectCollection object
     *
     * @param element -> root level Element to construct Function from.
     * @returns {FunctionPlayableDataObjectCollection}
     */
    FunctionGroupPlayableDataObject.prototype.createFunctionCollection = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_2__function_playable_data_object_collection__["a" /* FunctionPlayableDataObjectCollection */](element);
    };
    /**
     * Run all Function Groups in collection.
     */
    FunctionGroupPlayableDataObject.prototype.processFunctionGroup = function () {
        this.functionGroupPlayableLogger.debug('processFunctionGroup()');
        this.functionCollection.processFunctionCollection();
    };
    FunctionGroupPlayableDataObject.prototype.childProcessComplete = function () {
        this._parent.childProcessComplete(this);
    };
    return FunctionGroupPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_function_groups_function_group_data_object__["a" /* FunctionGroupDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/function-group.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/function.playable.data-object.collection.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FunctionPlayableDataObjectCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__functions_animate_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/animate.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__functions_change_page_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/change-page.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__functions_delay_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/delay.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__functions_display_message_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/display-message.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_data_objects_event_system_function_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/function.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__functions_set_property_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/set-property.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__functions_set_scorm_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/set-scorm.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__functions_set_variable_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/set-variable.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__functions_wait_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/wait.playable.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();










/**
 * Playable version of Function Collection
 */
var FunctionPlayableDataObjectCollection = /** @class */ (function (_super) {
    __extends(FunctionPlayableDataObjectCollection, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function FunctionPlayableDataObjectCollection(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        _this.sortFunctionCollection();
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FunctionPlayableDataObjectCollection.prototype.constructorPreprocessing = function () {
        this.functionPlayableCollectionLogger = __WEBPACK_IMPORTED_MODULE_5__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('FunctionPlayableDataObjectCollection');
        this.functionPlayableCollectionLogger.debug('constructorPreprocessing(): Playable Function Collection');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Override base.  Creates playable versions of the Animate Function.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {AnimatePlayableDataObject}
     */
    FunctionPlayableDataObjectCollection.prototype.createAnimate = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_0__functions_animate_playable_data_object__["a" /* AnimatePlayableDataObject */](element);
    };
    /**
     * Override base.  Creates playable version of Change Page Function
     *
     * @param element -> root level Element to construct Function from.
     * @returns {ChangePagePlayableDataObject}
     */
    FunctionPlayableDataObjectCollection.prototype.createChangePage = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_1__functions_change_page_playable_data_object__["a" /* ChangePagePlayableDataObject */](element);
    };
    /**
     * Override base.  Creates playable version of Delay Function
     *
     * @param element -> root level Element to construct Function from.
     * @returns {DelayPlayableDataObject}
     */
    FunctionPlayableDataObjectCollection.prototype.createDelay = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_2__functions_delay_playable_data_object__["a" /* DelayPlayableDataObject */](element);
    };
    /**
     * Overrides base.  Creates playable versions of DisplayMessage Function.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {DisplayMessagePlayableDataObject}
     */
    FunctionPlayableDataObjectCollection.prototype.createDisplayMessage = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_3__functions_display_message_playable_data_object__["a" /* DisplayMessagePlayableDataObject */](element);
    };
    /**
     * Overrides base.  Creates playable versions of SetProperty Function.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {SetPropertyPlayableDataObject}
     */
    FunctionPlayableDataObjectCollection.prototype.createSetProperty = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_6__functions_set_property_playable_data_object__["a" /* SetPropertyPlayableDataObject */](element);
    };
    /**
     * Overrides base.  Creates playable versions of SetScorm Function.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {SetScormPlayableDataObject}
     */
    FunctionPlayableDataObjectCollection.prototype.createSetScorm = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_7__functions_set_scorm_playable_data_object__["a" /* SetScormPlayableDataObject */](element);
    };
    /**
     * Overrides base.  Creates playable versions of SetVariable Function.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {SetVariablePlayableDataObject}
     */
    FunctionPlayableDataObjectCollection.prototype.createSetVariable = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_8__functions_set_variable_playable_data_object__["a" /* SetVariablePlayableDataObject */](element);
    };
    /**
     * Overrides base.  Creates playable versions of Wait Function.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {WaitPlayableDataObject}
     */
    FunctionPlayableDataObjectCollection.prototype.createWait = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_9__functions_wait_playable_data_object__["a" /* WaitPlayableDataObject */](element);
    };
    /**
     * Sorts the Function objects stored in functionCollection based on their order property.  Currently this only
     * needs to be done in the playable version of this class.
     */
    FunctionPlayableDataObjectCollection.prototype.sortFunctionCollection = function () {
        this.functionCollection.sort(function (functionA, functionB) {
            return functionA.order - functionB.order;
        });
    };
    /**
     * Starts processing the Function Collection by running the individual Functions
     */
    FunctionPlayableDataObjectCollection.prototype.processFunctionCollection = function () {
        /*
        Reset functionsToRun list with functionCollection
        NOTE: slice is supposed to produce "shallow" copy which seems to indicate it won't work on complex objects
                but it seems to work ok here.  Keep an eye on this for problems.
        */
        this.functionsToRun = this.functionCollection.slice();
        console.log(this.functionCollection);
        console.log(this.functionsToRun);
        this.runFunction();
    };
    /**
     * Run individual Function from top of Collection
     */
    FunctionPlayableDataObjectCollection.prototype.runFunction = function () {
        if (this.functionsToRun.length > 0) {
            // Remove Function from top of functionsToRun array and run it
            this.functionsToRun.shift()
                .runFunction();
        }
    };
    /**
     * To be called by child Function objects when their processing is complete.  In this case it runs the next Function
     * on the list if there are any left.  Otherwise it notifies parent that Function Collection processing is complete.
     */
    FunctionPlayableDataObjectCollection.prototype.childProcessComplete = function () {
        if (this.functionsToRun.length > 0) {
            this.runFunction();
        }
        else {
            this._parent.childProcessComplete();
        }
    };
    return FunctionPlayableDataObjectCollection;
}(__WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_data_objects_event_system_function_data_object_collection__["a" /* FunctionDataObjectCollection */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/function.playable.data-object.collection.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/animate.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnimatePlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gsap__ = __webpack_require__("./node_modules/gsap/TweenMax.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_gsap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_gsap__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_functions_animate_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/animate.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_function_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/function.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__motion_path_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/motion-path.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







/**
 * <p>Playable version of AnimateDataObject.  Changes value of a numeric component property over time.</p>
 */
var AnimatePlayableDataObject = /** @class */ (function (_super) {
    __extends(AnimatePlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function AnimatePlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    AnimatePlayableDataObject.prototype.constructorPreprocessing = function () {
        this.animatePlayableLogger = __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('AnimatePlayableDataObject');
        this.animatePlayableLogger.debug('constructorPreprocessing(): Playable Animate Function');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base.  Creates playable version of class.
     * @param element -> root level Element to construct Motion Path from.
     * @returns {MotionPathPlayableDataObject}
     */
    AnimatePlayableDataObject.prototype.createMotionPath = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_5__motion_path_playable_data_object__["a" /* MotionPathPlayableDataObject */](element);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Implement FunctionPlayableDataObjectInterface
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    AnimatePlayableDataObject.prototype.runFunction = function () {
        var _a, _b, _c;
        this.animatePlayableLogger.debug('runFunction(): component = ' + this.componentElementID + '  - duration = ' +
            this.duration);
        if (this._motionPathDataObjectCollection.length > 0 && this.componentElementID && this.duration) {
            this.animatePlayableLogger.debug('runFunction(): Running animation');
            /*
            Currently animation handled by tweening data object properties using GSAP.  Angular may provide
            alternative via Renderer, AnimationPlayer, AnimationStyles, and AnimationKeyframe to dynamically define
            animations.  Tried it.  It does work, but seems to work by modifying CSS styles, so may require access
            to DOM object.  Seems to be fairly new at this point with limited samples and documentation, so probably
            not ready at this point, but may want to look into it again in the future.
            https://netbasal.com/angular-2-explore-the-renderer-service-e43ef673b26c
            */
            // TODO: Move this logic into more central location - maybe PageService?  or maybe its own service?
            var pageService = __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_6__shared_system_shared_model_services_page_service__["a" /* PageService */]);
            // Get reference to component
            var component = pageService.getComponent(+this.componentElementID);
            // console.log('!!!!!! runFunction(): !!!!! componentElementID = ' + (+this.componentElementID));
            if (component) {
                this.animatePlayableLogger.debug('runFunction(): component found -> ' + component.name);
                this.animatePlayableLogger.debug('runFunction(): searching for display object ... ');
                console.log(component.viewComponent);
            }
            else {
                this.animatePlayableLogger.debug('runFunction(): component not found -> ' + component.name);
            }
            // Get MotionPath
            /*
            Currently Event System only generates Animate functions with a single MotionPath.  So for now, just tween
            for one MotionPath.  If eventually additional functionality is added to chain or create curves using
            multiple MotionPaths we'll need to use other parts of the library such as Timeline (Lite or Max for
            chaining) and/or TweenMax (for stuff like Bezier curves using SVG)
            */
            var motionPath = this._motionPathDataObjectCollection[0];
            // Get Property to Animate (property as recognized by DB)
            var dbProperty = motionPath.property;
            // console.log('!!!!! DB property = ' + dbProperty);
            // Get valueFrom, valueTo, and valueBy values from motionPath
            var valueFrom = motionPath.valueFrom();
            if (valueFrom !== undefined) {
                // console.log('!!!!! valueFrom = ' + valueFrom);
            }
            var valueTo = motionPath.valueTo();
            if (valueTo !== undefined) {
                // console.log('!!!!! valueTo = ' + valueTo);
            }
            var valueBy = motionPath.valueBy();
            if (valueBy !== undefined) {
                // console.log('!!!!! valueBy = ' + valueBy);
            }
            // Check for Wipe type animation via maskScale properties
            /*
            Special check for wipe animations - In Flash defined with motionPath property of maskScaleX or Y.  Our
            HTML components don't implement equivalent properties or handle clipping using a similar concept.  Need to
            translate data

            This special handling for wipe should be changed to preserve what should be a generic animation / tweening
            function.  Until the data can be changed to be more representative of what actually needs to happen in the
            HTML player, the data should be parsed as below and turned into motionPath / valueFrom/To/By and passed into
            a more general animation function
            */
            if (dbProperty === 'maskScaleX' || dbProperty === 'maskScaleY') {
                // Special setup to handle Wipe by tweening css clip
                // Get FunctionGroup data to see if this is an Entrance or Exit
                /*
                NOTE: In AS code Entrance and Exit is accomplished by a combination of SetValue and Animate functions.
                Not Animate alone.  Animate doesn't have sufficient info on its own to determine whether we have an
                Entrance or Exit.  To avoid having to access and inspect sibling Functions, for now, easiest to go to
                parent FunctionGroup to determine whether we have an Entrance or Exit.
                */
                // Parent of an Animate Function should be FunctionDataObjectCollection.  Check and get name.
                var functionGroupName = void 0;
                if (this._parent instanceof __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_function_data_object_collection__["a" /* FunctionDataObjectCollection */]) {
                    functionGroupName = this._parent.parent.name;
                    // console.log('$$$$$$$$$$ Parent Function Group name = ' + functionGroupName);
                }
                // Set default values for clip rectangle
                var top = 0;
                var right = component.width;
                var bottom = component.height;
                var left = 0;
                // Update clip rectangle properties based on motionPath and functionGroupName
                if (dbProperty === 'maskScaleY' && valueFrom === 1 && valueTo === 0) {
                    // Wipe - Up (from bottom)
                    if (functionGroupName === 'Entrance') {
                        top = component.height;
                    }
                    else if (functionGroupName === 'Exit') {
                        bottom = 0;
                    }
                }
                else if (dbProperty === 'maskScaleY' && valueFrom === 0 && valueTo === 1) {
                    // Wipe - Down (from top)
                    if (functionGroupName === 'Entrance') {
                        bottom = 0;
                    }
                    else if (functionGroupName === 'Exit') {
                        top = component.height;
                    }
                }
                else if (dbProperty === 'maskScaleX' && valueFrom === 1 && valueTo === 0) {
                    // Wipe - Left (from right)
                    if (functionGroupName === 'Entrance') {
                        left = component.width;
                    }
                    else if (functionGroupName === 'Exit') {
                        right = 0;
                    }
                }
                else if (dbProperty === 'maskScaleX' && valueFrom === 0 && valueTo === 1) {
                    // Wipe - Right (from left)
                    if (functionGroupName === 'Entrance') {
                        right = 0;
                    }
                    else if (functionGroupName === 'Exit') {
                        left = component.width;
                    }
                }
                // Build target clip string
                var targetClip = 'rect(' + top + 'px,' + right + 'px,' + bottom + 'px,' + left + 'px)';
                // Add clip rectangle with default initial setting (component fully visible)
                // NOTE: Adding dynamically since presence of clip causes problems with IE.  Problems with scrolling and
                //          in text components and with playing videos full screen
                component.viewComponent.addClip();
                // Animate Wipe
                if (functionGroupName === 'Entrance') {
                    // Animate from clip rectangle
                    __WEBPACK_IMPORTED_MODULE_0_gsap__["TweenLite"].from(component.viewComponent.elementRef.nativeElement, this.duration, {
                        clip: targetClip,
                        ease: __WEBPACK_IMPORTED_MODULE_0_gsap__["Power1"].easeInOut,
                        onComplete: this.completeHandler, onCompleteParams: [this, component, true],
                        onOverwrite: this.overwriteHandler
                    });
                }
                else if (functionGroupName === 'Exit') {
                    // Animate to clip rectangle
                    __WEBPACK_IMPORTED_MODULE_0_gsap__["TweenLite"].to(component.viewComponent.elementRef.nativeElement, this.duration, {
                        clip: targetClip,
                        ease: __WEBPACK_IMPORTED_MODULE_0_gsap__["Power1"].easeInOut,
                        onComplete: this.completeHandler, onCompleteParams: [this, component, true],
                        onOverwrite: this.overwriteHandler
                    });
                }
            }
            else {
                // If not a Wipe, can use normal process of tweening component property
                // Convert property name as defined by DB to get actual class property
                var classProperty = void 0;
                var propertyValue = void 0;
                // Check if property exists
                /*
                To accommodate stuff like maskScaleXY which exists in Flash, but not in HTML Player.  Wipe functionality
                implemented completely differently.  May want to consider changing data structure when we redesign
                PageDesigner.
                */
                if (component.getPropertyMap(dbProperty)) {
                    classProperty = component.getPropertyMap(dbProperty).publicName;
                }
                /*
                Special handle 'alpha' since generally stored in DB with upper case "A", but for some reason lower
                case "a" used in Designer for Animate Function.
                TODO: This should be fixed when PageDesigner redesigned
                */
                if (dbProperty === 'alpha') {
                    classProperty = dbProperty;
                }
                // console.log('!!!!! class property = ' + classProperty);
                if (classProperty) {
                    propertyValue = component[classProperty];
                    // console.log('!!!!! property value = ' + propertyValue);
                }
                /*
                Note that this approach actually tweens the ComponentDataObject's property directly and relies on
                data binding to actually animate the component.  Typically tweens done directly on DOM object.  Might
                want to watch for performance related issues.
                */
                if (typeof valueFrom === 'number' && typeof valueTo === 'number') {
                    __WEBPACK_IMPORTED_MODULE_0_gsap__["TweenLite"].fromTo(component, this.duration, (_a = {}, _a[classProperty] = valueFrom, _a), (_b = {},
                        _b[classProperty] = valueTo,
                        _b.ease = __WEBPACK_IMPORTED_MODULE_0_gsap__["Power1"].easeInOut,
                        _b.onComplete = this.completeHandler,
                        _b.onCompleteParams = [this, component],
                        _b.onOverwrite = this.overwriteHandler,
                        _b));
                }
                else if (typeof valueBy === 'number') {
                    var tweenTo = propertyValue + valueBy;
                    __WEBPACK_IMPORTED_MODULE_0_gsap__["TweenLite"].to(component, this.duration, (_c = {},
                        _c[classProperty] = tweenTo,
                        _c.ease = __WEBPACK_IMPORTED_MODULE_0_gsap__["Power1"].easeInOut,
                        _c.onComplete = this.completeHandler,
                        _c.onCompleteParams = [this, component],
                        _c.onOverwrite = this.overwriteHandler,
                        _c));
                } // NOTE: not sure if there are any other combinations used - add if needed
            }
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Callback / Event Handlers
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Callback function used when animate function completes
     * @param self -> reference to this object passed to retain reference
     * @param component -> reference to component being animated (not actually being used at this point)
     * @param isWipe -> optional - specifies clip rect to reset to (
     */
    AnimatePlayableDataObject.prototype.completeHandler = function (self, component, isWipe) {
        self.animatePlayableLogger.debug('completeHandler(): function name = ' + self.name);
        // After wipe animation remove clip rect that was dynamically added to prevent problems (noted above) in IE
        /*
        NOTE: Theoretically this should wait until after the visibility is set to hidden, but in practice, seems to
        work fine here.  If problems are noticed, may need to change when this is done.
        Like the other wipe specific handling, the special wipe handling here should not be part of a general animate
        function.  When designer / data redesigned should probably consider adding a separate function in the function
        group to do this.
        */
        if (isWipe) {
            component.viewComponent.removeClip();
        }
        // Animation complete - notify parent
        self._parent.childProcessComplete();
    };
    /**
     * Callback function used when animation function interrupted by another animation.  Currently uses default "auto"
     * setting which will only overwrite the individual tweening properties that overlap / conflict.
     *
     * @param overwrittenTween -> animation being interrupted
     * @param overwritingTween -> animation that is interrupting
     * @param target -> object being animated / tweened
     * @param overwrittenProperties -> object properties being tweened
     */
    AnimatePlayableDataObject.prototype.overwriteHandler = function (overwrittenTween, overwritingTween, target, overwrittenProperties) {
        // this.animatePlayableLogger.debug('overwriteHandler()');
        // Create reference to overwrittenTween's vars property which contains its configuration variables
        var vars = overwrittenTween.vars;
        // Get onComplete function and parameters from vars and call it so that Event System processing can continue
        overwrittenTween.eventCallback('onComplete').apply(this, vars.onCompleteParams);
    };
    return AnimatePlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_functions_animate_data_object__["a" /* AnimateDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/animate.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/change-page.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChangePagePlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_change_page_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/change-page.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




/**
 * Playable version of ChangePage data object
 */
var ChangePagePlayableDataObject = /** @class */ (function (_super) {
    __extends(ChangePagePlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function ChangePagePlayableDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        _this.pageService = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_page_service__["a" /* PageService */]);
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    ChangePagePlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableChangePageLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('ChangePagePlayableDataObject');
        this.playableChangePageLogger.debug('constructorPreprocessing(): Playable ChangePage');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * <p>Run ChangePage.</p>
     *
     */
    ChangePagePlayableDataObject.prototype.runFunction = function () {
        this.playableChangePageLogger.debug('runFunction(): type = ' + this.type + ' pageID = ' + this.pageID);
        switch (this.type) {
            // TODO: Get the following constant from ChangePageLibraryDataObject when available
            // for example, case ChangePageLibraryDataObject.TYPE_NEXT_PAGE:
            case ChangePagePlayableDataObject.TYPE_NEXT_PAGE:
                this.pageService.loadNextPage();
                break;
            case ChangePagePlayableDataObject.TYPE_PREVIOUS_PAGE:
                this.pageService.loadPreviousPage();
                break;
            case ChangePagePlayableDataObject.TYPE_SELECT_PAGE:
                this.pageService.loadPage(this.pageID);
                break;
        }
        /* NOTE:	Unlike other functions, loading another page should prevent any subsequent functions from running.
            To ensure consistency, childProcessComplete not called.  (Otherwise subsequent functions that run
            almost immediately could sometimes execute properly while the player makes the asynchronous requests
            needed to load another page)
        */
        // (this.parent as FunctionPlayableDataObjectCollection).childProcessComplete();
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * TODO: Move this constant to ChangePageLibraryDataObject when available
     * <p>Type value to load the next page in the course sequence.</p>
     */
    ChangePagePlayableDataObject.TYPE_NEXT_PAGE = 'NextPage';
    /**
     * TODO: Move this constant to ChangePageLibraryDataObject when available
     * <p>Type value to load the next page in the course sequence.</p>
     */
    ChangePagePlayableDataObject.TYPE_PREVIOUS_PAGE = 'PreviousPage';
    /**
     * TODO: Move this constant to ChangePageLibraryDataObject when available
     * <p>Type value to load the next page in the course sequence.</p>
     */
    ChangePagePlayableDataObject.TYPE_SELECT_PAGE = 'SelectPage';
    return ChangePagePlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_change_page_data_object__["a" /* ChangePageDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/change-page.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/delay.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DelayPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_delay_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/delay.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * Playable version of Delay data object
 */
var DelayPlayableDataObject = /** @class */ (function (_super) {
    __extends(DelayPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function DelayPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    DelayPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableDelayLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('DelayPlayableDataObject');
        this.playableDelayLogger.debug('constructorPreprocessing(): Playable Delay');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * <p>Run Delay.</p>
     *
     */
    DelayPlayableDataObject.prototype.runFunction = function () {
        var _this = this;
        setTimeout(function () { return _this._parent.childProcessComplete(); }, this.duration * 1000);
    };
    return DelayPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_delay_data_object__["a" /* DelayDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/delay.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/display-message.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DisplayMessagePlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_display_message_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/display-message.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_data_objects_pop_up_data_object__ = __webpack_require__("./src/app/model/data-objects/pop-up.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/**
 * Playable version of DisplayMessage data object
 */
var DisplayMessagePlayableDataObject = /** @class */ (function (_super) {
    __extends(DisplayMessagePlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function DisplayMessagePlayableDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        _this.popupService = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_3__model_services_pop_up_service__["a" /* PopUpService */]);
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    DisplayMessagePlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableDisplayMessageLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('DisplayMessagePlayableDataObject');
        this.playableDisplayMessageLogger.debug('constructorPreprocessing(): Playable DisplayMessage');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * <p>Run DisplayMessage.</p>
     *
     */
    DisplayMessagePlayableDataObject.prototype.runFunction = function () {
        var _this = this;
        var popUpData = new __WEBPACK_IMPORTED_MODULE_4__model_data_objects_pop_up_data_object__["a" /* PopUpDataObject */](this.message);
        popUpData.titleText = this.messageTitle;
        popUpData.titleTextColor = this.messageTitleBarTextColor;
        popUpData.titleBarColor = this.messageTitleBarColor;
        popUpData.callBackFunction = function () { return _this._parent.childProcessComplete(); };
        this.popupService.openPopUp(popUpData);
    };
    return DisplayMessagePlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_display_message_data_object__["a" /* DisplayMessageDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/display-message.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/get-math.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetMathPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_math_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/get-math.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__value_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/value.playable.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Playable version of GetMath data object
 */
var GetMathPlayableDataObject = /** @class */ (function (_super) {
    __extends(GetMathPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function GetMathPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    GetMathPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableGetMathLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('GetMathPlayableDataObject');
        this.playableGetMathLogger.debug('constructorPreprocessing(): Playable GetMath');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Overrides base version.
     * Performs playable GetMath object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    GetMathPlayableDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_math_data_object__["a" /* GetMathDataObject */].VALUE_OBJECT_ELEMENT_NAME:
                var valueObject = new __WEBPACK_IMPORTED_MODULE_2__value_playable_data_object__["a" /* ValuePlayableDataObject */](element);
                valueObject.parent = this;
                this._valueList.push(valueObject);
                this.playableGetMathLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    /**
     * Run Math calculation process
     *
     */
    GetMathPlayableDataObject.prototype.runFunction = function () {
        // list of numerical values
        var numericalValueList = [];
        var result;
        this.sortOrder();
        // first we get all the values of the children ValueDataObject;
        for (var _i = 0, _a = this._valueList; _i < _a.length; _i++) {
            var value = _a[_i];
            numericalValueList.push(+value.returnValue);
        }
        if (numericalValueList.length > 1) {
            switch (this.operator) {
                case __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_math_data_object__["a" /* GetMathDataObject */].ADD:
                    result = this.add(numericalValueList);
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_math_data_object__["a" /* GetMathDataObject */].SUBTRACT:
                    result = this.subtract(numericalValueList);
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_math_data_object__["a" /* GetMathDataObject */].MULTIPLY:
                    result = this.multiply(numericalValueList);
                    break;
                case __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_math_data_object__["a" /* GetMathDataObject */].DIVIDE:
                    result = this.divide(numericalValueList);
                    break;
            }
            this.playableGetMathLogger.debug('returned math calculation value = ' + result);
            this.returnValue = result;
        }
    };
    /**
     * Function for adding up 2 values in the given list
     */
    GetMathPlayableDataObject.prototype.add = function (values) {
        return values[0] + values[1];
    };
    /**
     * Function for subtracting value1 from value2 in the given list
     */
    GetMathPlayableDataObject.prototype.subtract = function (values) {
        return values[0] - values[1];
    };
    /**
     * Function for multiply 2 values in the given list
     */
    GetMathPlayableDataObject.prototype.multiply = function (values) {
        return values[0] * values[1];
    };
    /**
     * Function for dividing up 2 values in the given list
     */
    GetMathPlayableDataObject.prototype.divide = function (values) {
        if (values[1] !== 0) {
            return values[0] / values[1];
        }
        return values[0];
    };
    return GetMathPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_math_data_object__["a" /* GetMathDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/get-math.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/get-property.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetPropertyPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_property_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/get-property.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




/**
 * Playable version of GetProperty data object
 */
var GetPropertyPlayableDataObject = /** @class */ (function (_super) {
    __extends(GetPropertyPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function GetPropertyPlayableDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        _this.pageService = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_page_service__["a" /* PageService */]);
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    GetPropertyPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableGetPropertyLogger = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('GetPropertyPlayableDataObject');
        this.playableGetPropertyLogger.debug('constructorPreprocessing(): Playable GetProperty');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * <p>Run GetProperty.</p>
     *
     */
    GetPropertyPlayableDataObject.prototype.runFunction = function () {
        if (this.componentElementID && this.propertyName) {
            var component = this.pageService.getComponent(+this.componentElementID);
            if (component && component.getPropertyMap(this.propertyName)) {
                this.playableGetPropertyLogger.debug('runFunction(): property found - ' + this.propertyName);
                this.returnValue = component[component.getPropertyMap(this.propertyName).publicName];
                this.playableGetPropertyLogger.debug('returned property value = ' + this.returnValue);
            }
            else {
                this.playableGetPropertyLogger.debug('ERROR: runFunction(): component (' + component.name +
                    ') property (' + this.propertyName + ') not found');
            }
        }
        else {
            this.playableGetPropertyLogger.debug('runFunction(): Error Missing required Data: ComponentElementID and PropertyName');
        }
    };
    return GetPropertyPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_property_data_object__["a" /* GetPropertyDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/get-property.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/get-random-number.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetRandomNumberPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_random_number_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/get-random-number.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * Playable version of GetRandomNumber data object
 */
var GetRandomNumberPlayableDataObject = /** @class */ (function (_super) {
    __extends(GetRandomNumberPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function GetRandomNumberPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    GetRandomNumberPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableGetRandomNumberLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('GetRandomNumberPlayableDataObject');
        this.playableGetRandomNumberLogger.debug('constructorPreprocessing(): Playable GetRandomNumber');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * <p>Run GetRandomNumber.</p>
     *
     */
    GetRandomNumberPlayableDataObject.prototype.runFunction = function () {
        if (!isNaN(this.from) && !isNaN(this.to)) {
            // set min and max based of the given numbers
            var minimumValue = this.from;
            var maximumValue = this.to;
            if (this.from > this.to) {
                minimumValue = this.to;
                maximumValue = this.from;
            }
            // generate the random number within the range, this range
            // is inclusive meaning both minimum and maximum are possible outcomes
            var range = maximumValue - minimumValue;
            var value = Math.random() * (range + 1);
            value = Math.floor(value + minimumValue);
            this.playableGetRandomNumberLogger.debug('returned random number = ' + value);
            // Set returnValue to property value
            this.returnValue = value;
        }
    };
    return GetRandomNumberPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_random_number_data_object__["a" /* GetRandomNumberDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/get-random-number.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/get-typed-constant.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetTypedConstantPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_data_types_color_data_type__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/data-types/color.data-type.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_functions_get_typed_constant_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/get-typed-constant.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_data_objects_variable_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/variable.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




/**
 * Playable version of GetTypedConstant data object
 */
var GetTypedConstantPlayableDataObject = /** @class */ (function (_super) {
    __extends(GetTypedConstantPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function GetTypedConstantPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    GetTypedConstantPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableGetTypedConstantLogger = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('GetTypedConstantPlayableDataObject');
        this.playableGetTypedConstantLogger.debug('constructorPreprocessing(): Playable GetTypedConstant');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * <p>Run GetTypedConstant.</p>
     *
     */
    GetTypedConstantPlayableDataObject.prototype.runFunction = function () {
        // only ever needs to run once so first we check if _typedValue is still null
        if (!this._typedValue) {
            if (this.constantValue !== '' && this.type !== '') {
                switch (this.type) {
                    case __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_data_objects_variable_data_object__["a" /* VariableDataObject */].VARIABLE_TYPE_BOOLEAN:
                        this._typedValue = (this.constantValue.toLowerCase() === 'true');
                        break;
                    case __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_data_objects_variable_data_object__["a" /* VariableDataObject */].VARIABLE_TYPE_NUMBER:
                        var numberValue = +this.constantValue;
                        if (isNaN(numberValue)) {
                            this.playableGetTypedConstantLogger.debug('ERROR: Variable Value convertion failed : Value '
                                + this.constantValue + ' is not a Number');
                        }
                        else {
                            this._typedValue = numberValue;
                        }
                        break;
                    case __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_data_objects_variable_data_object__["a" /* VariableDataObject */].VARIABLE_TYPE_STRING:
                        // TODO: Should consider adding handling for color data types in constants
                        // Setup RegExp to test if string is a hex color
                        var colorPattern = /^0x[0-9,a-f]{6}$/i;
                        // Test pattern
                        if (colorPattern.exec(this.constantValue)) {
                            // If hex color convert to ColorDataType and set typedValue to webColor
                            var color = new __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_data_types_color_data_type__["a" /* ColorDataType */](this.constantValue);
                            this._typedValue = color.webColor;
                        }
                        else {
                            // Otherwise handle as regular string
                            this._typedValue = this.constantValue;
                        }
                        break;
                    default:
                        this.playableGetTypedConstantLogger.debug('ERROR: Variable Value convertion failed : type '
                            + this.type + ' Not Supported by the front end');
                        break;
                }
            }
            else {
                this.playableGetTypedConstantLogger.debug('runFunction(): Error Missing required Data: Value = '
                    + this.constantValue + ' and Type = ' + this.type);
            }
        }
        this.playableGetTypedConstantLogger.debug('returned constant = ' + this._typedValue);
        // Set returnValue to value of constant
        this.returnValue = this._typedValue;
    };
    return GetTypedConstantPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_functions_get_typed_constant_data_object__["a" /* GetTypedConstantDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/get-typed-constant.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/get-variable.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetVariablePlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_variable_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/get-variable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_variable_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/variable.service.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




/**
 * Playable version of GetVariable data object
 */
var GetVariablePlayableDataObject = /** @class */ (function (_super) {
    __extends(GetVariablePlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function GetVariablePlayableDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        _this.variableService = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_variable_service__["a" /* VariableService */]);
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    GetVariablePlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableGetVariableLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('GetVariablePlayableDataObject');
        this.playableGetVariableLogger.debug('constructorPreprocessing(): Playable GetVariable');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * <p>Run GetVariable.</p>
     *
     */
    GetVariablePlayableDataObject.prototype.runFunction = function () {
        if (this.variableID) {
            console.log('!!!!!!!!!! ' + this.variableID);
            console.log('!!!!!!!!!! ' + this.variableService.findVariable(this.variableID));
            this.returnValue = this.variableService.findVariable(this.variableID).value;
            this.playableGetVariableLogger.debug('returned variable value = ' + this.returnValue);
        }
        else {
            this.playableGetVariableLogger.debug('runFunction(): Error Missing required Data: VariableID');
        }
    };
    return GetVariablePlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_get_variable_data_object__["a" /* GetVariableDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/get-variable.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/motion-path.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MotionPathPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_functions_motion_path_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/motion-path.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__value_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/value.playable.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * <p>Playable version of MotionPathDataObject.  Provides access to properties of the MotionPathDataObject by
 * evaluating the ValueDataObjects that they are defined by.  Otherwise doesn't implement a process type method like
 * other playable Event Data Objects.</p>
 */
var MotionPathPlayableDataObject = /** @class */ (function (_super) {
    __extends(MotionPathPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this MotionPath object that include the parameters that it takes in and ultimately define what the
     * MotionPath will do.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be undefined / undefined)
     */
    function MotionPathPlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    MotionPathPlayableDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.motionPathPlayableLogger = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('MotionPathDataObject');
        this.motionPathPlayableLogger.debug('constructorPreprocessing(): Playable MotionPath');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Accessors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * ValueFrom value (returned from ValueFrom ValueDataObject)
     * @returns {number|undefined}
     */
    MotionPathPlayableDataObject.prototype.valueFrom = function () {
        if (this._valueFromValueDataObject) {
            return +this._valueFromValueDataObject.returnValue;
        }
        else {
            return undefined;
        }
    };
    /**
     * ValueTo value (returned from ValueTo ValueDataObject)
     * @returns {number|undefined}
     */
    MotionPathPlayableDataObject.prototype.valueTo = function () {
        if (this._valueToValueDataObject) {
            // NOTE: May need more robust error handling if for some reason value object doesn't return a number
            return +this._valueToValueDataObject.returnValue;
        }
        else {
            return undefined;
        }
    };
    /**
     * ValueBy value (returned from ValueBy ValueDataObject)
     * @returns {number|undefined}
     */
    MotionPathPlayableDataObject.prototype.valueBy = function () {
        if (this._valueByValueDataObject) {
            return +this._valueByValueDataObject.returnValue;
        }
        else {
            return undefined;
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct ValueDataObject from.
     * @returns {ValuePlayableDataObject}
     */
    MotionPathPlayableDataObject.prototype.createValue = function (element) {
        return new __WEBPACK_IMPORTED_MODULE_2__value_playable_data_object__["a" /* ValuePlayableDataObject */](element);
    };
    return MotionPathPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_functions_motion_path_data_object__["a" /* MotionPathDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/motion-path.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/set-property.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SetPropertyPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_set_property_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/set-property.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__value_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/value.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/**
 * Playable version of SetProperty data object
 */
var SetPropertyPlayableDataObject = /** @class */ (function (_super) {
    __extends(SetPropertyPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function SetPropertyPlayableDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        _this.pageService = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_services_page_service__["a" /* PageService */]);
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    SetPropertyPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableSetPropertyLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('SetPropertyPlayableDataObject');
        this.playableSetPropertyLogger.debug('constructorPreprocessing(): Playable SetProperty');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * overrides base version
     * @param sourceElement
     */
    SetPropertyPlayableDataObject.prototype.createValueDataObject = function (sourceElement) {
        this._value = new __WEBPACK_IMPORTED_MODULE_3__value_playable_data_object__["a" /* ValuePlayableDataObject */](sourceElement);
        this._value.parent = this;
    };
    /**
     * <p>Run SetProperty.</p>
     *
     */
    SetPropertyPlayableDataObject.prototype.runFunction = function () {
        // Get value from ValueDataObject
        var value = this._value.returnValue;
        // Call method to set property
        this.setProperty(value);
        // send completion to parent
        this._parent.childProcessComplete();
    };
    /**
     * <p>Function that sets the property's value.</p>
     */
    SetPropertyPlayableDataObject.prototype.setProperty = function (value) {
        if (!this.componentElementID || !this.propertyName) {
            this.playableSetPropertyLogger.debug('runFunction(): Error Missing required Data: ComponentElementID and PropertyName');
            return;
        }
        var component = this.pageService.getComponent(+this.componentElementID);
        if (!component) {
            this.playableSetPropertyLogger.debug('ERROR: runFunction(): component not found - ' + this.componentElementID);
            return;
        }
        if (!component.getPropertyMap(this.propertyName)) {
            this.playableSetPropertyLogger.debug('ERROR: runFunction(): property not found - ' + this.propertyName);
        }
        else {
            this.playableSetPropertyLogger.debug('Vaule Before Set = ' + component[component.getPropertyMap(this.propertyName).publicName]);
            component[component.getPropertyMap(this.propertyName).publicName] = value;
            this.playableSetPropertyLogger.debug('Vaule After Set = ' + component[component.getPropertyMap(this.propertyName).publicName]);
        }
    };
    return SetPropertyPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_set_property_data_object__["a" /* SetPropertyDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/set-property.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/set-scorm.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SetScormPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_set_scorm_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/set-scorm.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__value_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/value.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_services_scorm_service__ = __webpack_require__("./src/app/model/services/scorm-service.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/**
 * Playable version of SetScorm data object
 */
var SetScormPlayableDataObject = /** @class */ (function (_super) {
    __extends(SetScormPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function SetScormPlayableDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        _this.scormService = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_4__model_services_scorm_service__["a" /* ScormService */]);
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    SetScormPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableSetScormLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('SetScormPlayableDataObject');
        this.playableSetScormLogger.debug('constructorPreprocessing(): Playable SetScorm');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * overrides base version
     * @param sourceElement
     */
    SetScormPlayableDataObject.prototype.createValueDataObject = function (sourceElement) {
        this._value = new __WEBPACK_IMPORTED_MODULE_3__value_playable_data_object__["a" /* ValuePlayableDataObject */](sourceElement);
        this._value.parent = this;
    };
    /**
     * <p>Run SetScorm.</p>
     *
     */
    SetScormPlayableDataObject.prototype.runFunction = function () {
        // Get value from ValueDataObject
        var value = this._value.returnValue;
        // Call method to set scorm
        this.setScorm(value);
        // send completion to parent
        this._parent.childProcessComplete();
    };
    /**
     * <p>Function that sets the scorm's value.</p>
     */
    SetScormPlayableDataObject.prototype.setScorm = function (value) {
        this.playableSetScormLogger.debug('scorm object = ' + this.ScormDataObject);
        this.playableSetScormLogger.debug('set value = ' + value);
        if (this.scormService.isInitialized()) {
            this.playableSetScormLogger.debug('Before set, Scorm object value = '
                + this.scormService.get(this.ScormDataObject));
            this.scormService.set(this.ScormDataObject, String(value));
            this.scormService.commit();
            this.playableSetScormLogger.debug('After set, Scorm object value = '
                + this.scormService.get(this.ScormDataObject));
        }
        else {
            this.playableSetScormLogger.debug('Scorm service is not initialized!!!');
        }
    };
    return SetScormPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_set_scorm_data_object__["a" /* SetScormDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/set-scorm.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/set-variable.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SetVariablePlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_set_variable_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/set-variable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_variable_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/variable.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__value_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/value.playable.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/**
 * Playable version of SetVariable data object
 */
var SetVariablePlayableDataObject = /** @class */ (function (_super) {
    __extends(SetVariablePlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function SetVariablePlayableDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        _this.variableService = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_variable_service__["a" /* VariableService */]);
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    SetVariablePlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableSetVariableLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('SetVariablePlayableDataObject');
        this.playableSetVariableLogger.debug('constructorPreprocessing(): Playable SetVariable');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * overrides base version
     * @param sourceElement
     */
    SetVariablePlayableDataObject.prototype.createValueDataObject = function (sourceElement) {
        this._value = new __WEBPACK_IMPORTED_MODULE_4__value_playable_data_object__["a" /* ValuePlayableDataObject */](sourceElement);
        this._value.parent = this;
    };
    /**
     * <p>Run SetVariable.</p>
     *
     */
    SetVariablePlayableDataObject.prototype.runFunction = function () {
        // Get value from ValueDataObject
        var value = this._value.returnValue;
        // Call method to set variable
        this.setVariable(value);
        // send completion to parent
        this._parent.childProcessComplete();
    };
    /**
     * <p>Function that sets the variable's value.</p>
     */
    SetVariablePlayableDataObject.prototype.setVariable = function (value) {
        var targetVariable = this.variableService.findVariable(this.variableID);
        if (targetVariable) {
            this.playableSetVariableLogger.debug('Value Before Set = ' + targetVariable.value);
            targetVariable.value = value;
            this.playableSetVariableLogger.debug('Value After Set = ' + targetVariable.value);
        }
        else {
            this.playableSetVariableLogger.debug('ERROR: Variable does not exsist.');
        }
    };
    return SetVariablePlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_set_variable_data_object__["a" /* SetVariableDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/set-variable.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/functions/wait.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WaitPlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_wait_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/wait.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




/**
 * Playable version of Wait data object
 */
var WaitPlayableDataObject = /** @class */ (function (_super) {
    __extends(WaitPlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function WaitPlayableDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        _this.pageService = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_page_service__["a" /* PageService */]);
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    WaitPlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableWaitLogger = __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('WaitPlayableDataObject');
        this.playableWaitLogger.debug('constructorPreprocessing(): Playable Wait');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * <p>Run Wait Function</p>
     * If Event does not exist or is never fired then this funciton won't return completetion.
     */
    WaitPlayableDataObject.prototype.runFunction = function () {
        var _this = this;
        if (this.componentElementID) {
            var component_1 = this.pageService.getComponent(+this.componentElementID);
            if (component_1) {
                // subscribe component onComplete event
                component_1.onComplete.subscribe(function () {
                    _this.sendCompletion(component_1);
                });
            }
            else {
                this.playableWaitLogger.debug('ERROR: component not found');
            }
        }
    };
    /**
     * <p>Function called on the competion</p>
     */
    WaitPlayableDataObject.prototype.sendCompletion = function (component) {
        this.playableWaitLogger.debug('Wait completed!!!!!!!!!!');
        // component.onComplete.unsubscribe();
        this._parent.childProcessComplete();
    };
    return WaitPlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_wait_data_object__["a" /* WaitDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/wait.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/model/data-objects/event-system/value.playable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ValuePlayableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_functions_get_math_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/get-math.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_functions_get_property_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/get-property.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_data_objects_event_system_functions_get_random_number_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/get-random-number.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_data_objects_event_system_functions_get_typed_constant_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/get-typed-constant.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_system_shared_model_data_objects_event_system_functions_get_variable_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/get-variable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__functions_get_math_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/get-math.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__functions_get_property_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/get-property.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__functions_get_random_number_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/get-random-number.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__functions_get_typed_constant_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/get-typed-constant.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_get_variable_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/event-system/functions/get-variable.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__shared_system_shared_model_data_objects_event_system_value_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/value.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();













/**
 * Playable version of Value data object
 */
var ValuePlayableDataObject = /** @class */ (function (_super) {
    __extends(ValuePlayableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function ValuePlayableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    ValuePlayableDataObject.prototype.constructorPreprocessing = function () {
        this.playableValueLogger = __WEBPACK_IMPORTED_MODULE_11__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('ValuePlayableDataObject');
        this.playableValueLogger.debug('constructorPreprocessing(): Playable Value');
        _super.prototype.constructorPreprocessing.call(this);
    };
    Object.defineProperty(ValuePlayableDataObject.prototype, "returnValue", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>Return value of the ValueDataObject.</p>
         *
         * @default true
         */
        get: function () {
            this.executeGetValue();
            return this._returnValue;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    ValuePlayableDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_data_objects_event_system_functions_function_data_object__["a" /* FunctionDataObject */].FUNCTION_ELEMENT_NAME:
                this.functionDataObject = this.createPlayableFunction(element);
                break;
        }
    };
    /**
     * @inheritDoc
     */
    ValuePlayableDataObject.prototype.createPlayableFunction = function (functionElement) {
        // Get Function Name
        var functionName = functionElement.getFirstChildElementByName('Name').value;
        switch (functionName) {
            case __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_data_objects_event_system_functions_get_typed_constant_data_object__["a" /* GetTypedConstantDataObject */].NAME_ELEMENT_NAME:
                return new __WEBPACK_IMPORTED_MODULE_9__functions_get_typed_constant_playable_data_object__["a" /* GetTypedConstantPlayableDataObject */](functionElement);
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_functions_get_property_data_object__["a" /* GetPropertyDataObject */].NAME_ELEMENT_NAME:
                return new __WEBPACK_IMPORTED_MODULE_7__functions_get_property_playable_data_object__["a" /* GetPropertyPlayableDataObject */](functionElement);
            case __WEBPACK_IMPORTED_MODULE_5__shared_system_shared_model_data_objects_event_system_functions_get_variable_data_object__["a" /* GetVariableDataObject */].NAME_ELEMENT_NAME:
                return new __WEBPACK_IMPORTED_MODULE_10__functions_get_variable_playable_data_object__["a" /* GetVariablePlayableDataObject */](functionElement);
            case __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_functions_get_math_data_object__["a" /* GetMathDataObject */].NAME_ELEMENT_NAME:
                return new __WEBPACK_IMPORTED_MODULE_6__functions_get_math_playable_data_object__["a" /* GetMathPlayableDataObject */](functionElement);
            case __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_data_objects_event_system_functions_get_random_number_data_object__["a" /* GetRandomNumberDataObject */].NAME_ELEMENT_NAME:
                return new __WEBPACK_IMPORTED_MODULE_8__functions_get_random_number_playable_data_object__["a" /* GetRandomNumberPlayableDataObject */](functionElement);
            default:
                this.playableValueLogger.debug('ERROR: parseElement: ' + functionName + ' Not A Vaild Return Value Function');
                return undefined;
        }
    };
    /**
     * <p>Runs runFunction() on the playable FunctionDataObject starting the process of getting the value.</p>
     */
    ValuePlayableDataObject.prototype.executeGetValue = function () {
        this.functionDataObject.runFunction();
        // Get returnValue of FunctionDataObject
        this._returnValue = this.functionDataObject.returnValue;
    };
    return ValuePlayableDataObject;
}(__WEBPACK_IMPORTED_MODULE_12__shared_system_shared_model_data_objects_event_system_value_data_object__["a" /* ValueDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/value.playable.data-object.js.map

/***/ }),

/***/ "./src/app/player/player.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PlayerModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_animations__ = __webpack_require__("./node_modules/@angular/platform-browser/@angular/platform-browser/animations.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__("./node_modules/@angular/common/@angular/common.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__("./node_modules/@angular/forms/@angular/forms.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__("./node_modules/@angular/http/@angular/http.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_material__ = __webpack_require__("./node_modules/@angular/material/@angular/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__view_directive_audio_event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/audio-event-handler.directive.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__view_directive_checkbox_event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/checkbox-event-handler.directive.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__view_directive_dropdown_list_event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/dropdown-list-event-handler.directive.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__view_directive_event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/event-handler.directive.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__view_directive_radio_button_event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/radio-button-event-handler.directive.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__view_directive_text_event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/text-event-handler.directive.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__view_directive_video_event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/video-event-handler.directive.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__view_audio_component__ = __webpack_require__("./src/app/player/view/audio.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__view_button_component__ = __webpack_require__("./src/app/player/view/button.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__view_checkbox_component__ = __webpack_require__("./src/app/player/view/checkbox.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__view_content_window_component__ = __webpack_require__("./src/app/player/view/content-window.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__view_dropdown_list_component__ = __webpack_require__("./src/app/player/view/dropdown-list.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__view_html_component__ = __webpack_require__("./src/app/player/view/html.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__view_image_component__ = __webpack_require__("./src/app/player/view/image.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__view_menu_component__ = __webpack_require__("./src/app/player/view/menu.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__view_page_component__ = __webpack_require__("./src/app/player/view/page.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__view_player_component__ = __webpack_require__("./src/app/player/view/player.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__view_quiz_fill_in_blank_component__ = __webpack_require__("./src/app/player/view/quiz-fill-in-blank.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__view_quiz_match_component__ = __webpack_require__("./src/app/player/view/quiz-match.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__view_quiz_multiple_choice_component__ = __webpack_require__("./src/app/player/view/quiz-multiple-choice.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__view_quiz_result_component__ = __webpack_require__("./src/app/player/view/quiz-result.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__view_radio_button_component__ = __webpack_require__("./src/app/player/view/radio-button.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__view_text_display_component__ = __webpack_require__("./src/app/player/view/text-display.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__view_text_input_component__ = __webpack_require__("./src/app/player/view/text-input.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__view_text_input_area_component__ = __webpack_require__("./src/app/player/view/text-input-area.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__view_video_component__ = __webpack_require__("./src/app/player/view/video.component.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
































var PlayerModule = /** @class */ (function () {
    /**
     * Player module - contains view and model objects associated with Player
     *
     * TODO: might want to break this down into smaller player related modules (initialization?, player chrome?, player
     * TODO: content area?) in which case this would maybe be the module that takes handles the page content? Yes :) - PV
     * TODO: and then after renaming this module replace that useless description up above :P
     */
    function PlayerModule() {
    }
    PlayerModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_4__angular_core__["NgModule"])({
            imports: [__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_animations__["a" /* BrowserAnimationsModule */], __WEBPACK_IMPORTED_MODULE_1__angular_common__["a" /* CommonModule */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["b" /* FormsModule */], __WEBPACK_IMPORTED_MODULE_3__angular_http__["c" /* HttpModule */], __WEBPACK_IMPORTED_MODULE_5__angular_material__["a" /* MdButtonModule */], __WEBPACK_IMPORTED_MODULE_5__angular_material__["g" /* MdIconModule */]],
            declarations: [
                __WEBPACK_IMPORTED_MODULE_6__view_directive_audio_event_handler_directive__["a" /* AudioEventHandlerDirective */],
                __WEBPACK_IMPORTED_MODULE_7__view_directive_checkbox_event_handler_directive__["a" /* CheckboxEventHandlerDirective */],
                __WEBPACK_IMPORTED_MODULE_8__view_directive_dropdown_list_event_handler_directive__["a" /* DropdownListEventHandlerDirective */],
                __WEBPACK_IMPORTED_MODULE_9__view_directive_event_handler_directive__["a" /* EventHandlerDirective */],
                __WEBPACK_IMPORTED_MODULE_10__view_directive_radio_button_event_handler_directive__["a" /* RadioButtonEventHandlerDirective */],
                __WEBPACK_IMPORTED_MODULE_11__view_directive_text_event_handler_directive__["a" /* TextEventHandlerDirective */],
                __WEBPACK_IMPORTED_MODULE_12__view_directive_video_event_handler_directive__["a" /* VideoEventHandlerDirective */],
                __WEBPACK_IMPORTED_MODULE_13__view_audio_component__["a" /* AudioComponent */],
                __WEBPACK_IMPORTED_MODULE_14__view_button_component__["a" /* ButtonComponent */],
                __WEBPACK_IMPORTED_MODULE_15__view_checkbox_component__["a" /* CheckboxComponent */],
                __WEBPACK_IMPORTED_MODULE_16__view_content_window_component__["a" /* ContentWindowComponent */],
                __WEBPACK_IMPORTED_MODULE_17__view_dropdown_list_component__["a" /* DropdownListComponent */],
                __WEBPACK_IMPORTED_MODULE_18__view_html_component__["a" /* HtmlComponent */],
                __WEBPACK_IMPORTED_MODULE_19__view_image_component__["a" /* ImageComponent */],
                __WEBPACK_IMPORTED_MODULE_20__view_menu_component__["a" /* MenuComponent */],
                __WEBPACK_IMPORTED_MODULE_21__view_page_component__["a" /* PageComponent */],
                __WEBPACK_IMPORTED_MODULE_22__view_player_component__["a" /* PlayerComponent */],
                __WEBPACK_IMPORTED_MODULE_23__view_quiz_fill_in_blank_component__["a" /* QuizFillInBlankComponent */],
                __WEBPACK_IMPORTED_MODULE_24__view_quiz_match_component__["a" /* QuizMatchComponent */],
                __WEBPACK_IMPORTED_MODULE_25__view_quiz_multiple_choice_component__["a" /* QuizMultipleChoiceComponent */],
                __WEBPACK_IMPORTED_MODULE_26__view_quiz_result_component__["a" /* QuizResultComponent */],
                __WEBPACK_IMPORTED_MODULE_27__view_radio_button_component__["a" /* RadioButtonComponent */],
                __WEBPACK_IMPORTED_MODULE_28__view_text_display_component__["a" /* TextDisplayComponent */],
                __WEBPACK_IMPORTED_MODULE_29__view_text_input_component__["a" /* TextInputComponent */],
                __WEBPACK_IMPORTED_MODULE_30__view_text_input_area_component__["a" /* TextInputAreaComponent */],
                __WEBPACK_IMPORTED_MODULE_31__view_video_component__["a" /* VideoComponent */],
            ],
            exports: [__WEBPACK_IMPORTED_MODULE_22__view_player_component__["a" /* PlayerComponent */]]
        })
        /**
         * Player module - contains view and model objects associated with Player
         *
         * TODO: might want to break this down into smaller player related modules (initialization?, player chrome?, player
         * TODO: content area?) in which case this would maybe be the module that takes handles the page content? Yes :) - PV
         * TODO: and then after renaming this module replace that useless description up above :P
         */
    ], PlayerModule);
    return PlayerModule;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/player.module.js.map

/***/ }),

/***/ "./src/app/player/view/abstract.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AbstractComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * TODO: rewrite this
 *
 * Abstract base class for all DIF components, like button, image, audio...
 * All angular view components of DIF component should be extended from this base class
 */
var AbstractComponent = /** @class */ (function () {
    function AbstractComponent() {
    }
    Object.defineProperty(AbstractComponent.prototype, "commonStyleProperties", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * An Object containing style properties common to all of the application's Angular view components.
         *
         * A style is an object containing key/value pairs where the keys are CSS properties and the values are CSS values.
         * It is used by the ngStyle directive to update the inline style attribute of HTML elements.  The inline style
         * controls the way that elements are displayed.
         *
         * Angular view components may define one or more styles that are applied to one or more of the elements laid out
         * in their template.  This application's Angular view components use the properties provided by this object to help
         * define the styles they need.
         *
         * @default An Object containing style properties common to all application view components.
         */
        get: function () {
            return {
                'top.px': this.dataSource.y,
                'left.px': this.dataSource.x,
                'width.px': this.dataSource.width,
                'height.px': this.dataSource.height,
                'position': 'absolute',
                'z-index': this.dataSource.z,
                'visibility': this.dataSource.visible ? 'visible' : 'hidden',
                'opacity': this.dataSource.alpha
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractComponent.prototype, "clip", {
        /**
         * Clip setting to allow viewing entire component (typically used as an initial setting)
         * @returns {string}
         */
        get: function () {
            var clip = 'rect(0px,' + this.dataSource.width + 'px,' + this.dataSource.height + 'px,' + '0px)';
            return clip;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    AbstractComponent.prototype.ngOnInit = function () {
        this.dataSource.viewComponent = this;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Add clip via css style to the component
     * @param clip -> clip rectangle to add (uses initial setting as default if none passed)
     */
    AbstractComponent.prototype.addClip = function (clip) {
        if (clip === void 0) { clip = this.clip; }
        var renderer = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_0__angular_core__["RendererFactory2"]).createRenderer(this.elementRef.nativeElement);
        renderer.setStyle(this.elementRef.nativeElement, 'clip', this.clip);
    };
    /**
     * Remove clip from style
     */
    AbstractComponent.prototype.removeClip = function () {
        var renderer = __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_0__angular_core__["RendererFactory2"]).createRenderer(this.elementRef.nativeElement);
        renderer.removeStyle(this.elementRef.nativeElement, 'clip');
    };
    var _a, _b;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_component_data_object__["a" /* ComponentDataObject */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_component_data_object__["a" /* ComponentDataObject */]) === "function" && _a || Object)
    ], AbstractComponent.prototype, "dataSource", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('elementRef', { read: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"] }),
        __metadata("design:type", typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]) === "function" && _b || Object)
    ], AbstractComponent.prototype, "elementRef", void 0);
    return AbstractComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/abstract.component.js.map

/***/ }),

/***/ "./src/app/player/view/audio.component.html":
/***/ (function(module, exports) {

module.exports = "<div [ngStyle]=\"wrapperDivTagStyleObject\" (click)=\"onClickDiv()\">\r\n    <audio #elementRef playerAudioEventHandler [dataSource]=\"dataSource\"\r\n           [ngStyle]=\"audioTagStyleObject\"\r\n           [controls] = \"audio.displayControls\"\r\n           [autoplay] = \"audio.autoPlay\">\r\n\r\n        <source *ngIf=\"audio.urlMp3\" type=\"audio/mpeg\" src={{audio.urlMp3}}>\r\n        <source *ngIf=\"audio.urlOgg\" type=\"audio/ogg\" src={{audio.urlOgg}}>\r\n        <source *ngIf=\"audio.urlWav\" type=\"audio/wav\" src={{audio.urlWav}}>\r\n\r\n    </audio>\r\n\r\n    <!--\r\n    NOTE: eventually will probably build custom component, for now using md-icon-button (since we're using an\r\n            md-icon) which by default has a transparent background.\r\n    -->\r\n    <button *ngIf=\"audio.transcript\" md-icon-button (click)=\"onClickTranscriptButton($event)\"\r\n            style=\"position:absolute; bottom:0px; right:0px; background-color: white\">\r\n\r\n        <md-icon>subject</md-icon>\r\n    </button>\r\n\r\n    <div [ngStyle]=\"transcriptDivTagStyleObject\" [innerHtml]=\"audio.transcript\"></div>\r\n</div>"

/***/ }),

/***/ "./src/app/player/view/audio.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AudioComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__abstract_component__ = __webpack_require__("./src/app/player/view/abstract.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var AudioComponent = /** @class */ (function (_super) {
    __extends(AudioComponent, _super);
    function AudioComponent() {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Variables / Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.transcriptVisibility = 'hidden';
        return _this;
    }
    Object.defineProperty(AudioComponent.prototype, "wrapperDivTagStyleObject", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the div tag wrapper for
         * this component's template.
         *
         * @default A style Object containing the CSS properties for this component's wrapper div for the audio tag.
         */
        get: function () {
            var tagStyle = this.commonStyleProperties;
            if (this.audio.displayIcon) {
                // Add audio icon to component as background image
                tagStyle['background'] = 'url("../../Images/audio-icon.png") no-repeat center top/contain';
            }
            return tagStyle;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioComponent.prototype, "audioTagStyleObject", {
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the audio tag used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for this component's audio tag.
         */
        get: function () {
            var audioTagWidth;
            if (this.audio.transcript) {
                audioTagWidth = this.audio.width - 43; // component width - transcript button width (38px) + 5px
            }
            else {
                audioTagWidth = this.audio.width;
            }
            return {
                'position': 'absolute',
                'bottom.px': 0,
                'left.px': 0,
                'width.px': audioTagWidth
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioComponent.prototype, "transcriptDivTagStyleObject", {
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute for the div tag used for
         * this component's transcript.
         *
         * @default A style Object containing the CSS properties for this component's transcript div.
         */
        get: function () {
            // TODO: Will have to see how this looks in different browsers - may need to dynamically calculate or
            //          parameterize dimensions of transcript button
            return {
                'top.px': 0,
                'left.px': 0,
                'width.px': this.dataSource.width,
                'height.px': this.dataSource.height - 33,
                'position': 'absolute',
                'z-index': this.dataSource.z + 1,
                'background-color': 'white',
                'visibility': this.transcriptVisibility,
                'overflow-y': 'scroll',
                'white-space': 'pre-wrap'
            };
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handlers
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Event handler for clicking on wrapper div - toggles play state of the Audio component
     */
    AudioComponent.prototype.onClickDiv = function () {
        // Check if click to play option is enabled
        // NOTE: Might be better if there is a way to conditionally exclude the event handler based on option.
        if (this.audio.clickToPlay) {
            // NOTE: Don't want to toggle audio when transcript is being shown
            if (this.transcriptVisibility === 'hidden') {
                // NOTE: Though we could access the audio element and run play on it directly, we do this through the
                // data object instead so that its playing property stays in sync (not sure if there is a way to two-way
                // bind that).  This way it reflects the correct value to other parts of the Player such as the Event
                // System which interacts with the components primarily through the data object.
                // Toggle playing of audio
                if (this.audio.playing) {
                    this.audio.playing = false;
                }
                else {
                    this.audio.playing = true;
                }
            }
        }
    };
    /**
     * Event handler for clicking on the transcript button - toggles visibility of transcript
     * @param event
     */
    AudioComponent.prototype.onClickTranscriptButton = function (event) {
        // Block click event from triggering events on elements beneath it
        event.stopPropagation();
        if (this.transcriptVisibility === 'hidden') {
            this.transcriptVisibility = 'visible';
        }
        else {
            // Currently can't be triggered b/c transcript covers button and no way to close it yet
            this.transcriptVisibility = 'hidden';
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    AudioComponent.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        this.audio = this.dataSource;
    };
    AudioComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-audio',
            template: __webpack_require__("./src/app/player/view/audio.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * The view model of the application's Angular audio component.
         */
    ], AudioComponent);
    return AudioComponent;
}(__WEBPACK_IMPORTED_MODULE_1__abstract_component__["a" /* AbstractComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/audio.component.js.map

/***/ }),

/***/ "./src/app/player/view/button.component.html":
/***/ (function(module, exports) {

module.exports = "<!-- Standard button -->\r\n<!--\r\n    Fixed inline styles added to override default MD settings since user defines size of button and we don't impose\r\n    limitations on that at this point.  In future may want to consider creating separate css file for things like this.\r\n    Overridden styles include:\r\n        padding - to override the default 16px added to left and right which causes problems when button is narrow\r\n        min-width - to override the default 88px which again causes problems when button is narrow\r\n        line-height - to override the default 36px which causes problems when button is short\r\n\r\n    By default md-raised-button (md-button as well) use the background color associated with the theme (so tends to\r\n    blend in).  Since we want it to be more visible, set it to use our accent color instead.  Eventually we might use a\r\n    more stylized accent color for the player which we might not want to apply to components in the page content.  Might\r\n    want to use separate pallet for components in page content vs the player.\r\n -->\r\n<button md-raised-button *ngIf=\"buttonDataSource.useDefaultImages; else elseBlock\"\r\n        #elementRef playerEventHandler\r\n        [dataSource]=\"dataSource\"\r\n        [ngStyle]=\"buttonTagStyle\"\r\n        color=\"accent\"\r\n        style=\"padding: 0px!important; min-width: 0px!important; line-height: 0px!important\">\r\n    {{buttonDataSource.text}}\r\n</button>\r\n\r\n<!-- Button with user defined background images -->\r\n<ng-template #elseBlock>\r\n    <button #elementRef playerEventHandler\r\n            [dataSource]=\"dataSource\"\r\n            [ngStyle]=\"buttonTagStyle\"\r\n            (mouseover)=\"onMouseOver()\"\r\n            (mouseout)=\"onMouseOut()\"\r\n            (mousedown)=\"onMouseDown()\"\r\n            (mouseup)=\"onMouseUp()\">\r\n        {{buttonDataSource.text}}\r\n    </button>\r\n</ng-template>\r\n"

/***/ }),

/***/ "./src/app/player/view/button.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ButtonComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__abstract_component__ = __webpack_require__("./src/app/player/view/abstract.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var ButtonComponent = /** @class */ (function (_super) {
    __extends(ButtonComponent, _super);
    /**
     * The view model of the application's Angular button component.
     */
    function ButtonComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ButtonComponent.prototype, "color", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The color CSS property.  Color is used to implement the font color property for this component.
         *
         * In our model data, font color is stored as a hexadecimal value with a "0x" prefix.  We need to replace the prefix
         * with "#" so we can use it as a CSS value.
         *
         * @default #000000 (black)
         */
        get: function () {
            return this.buttonDataSource.fontColor.replace(/0x/i, '#');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonComponent.prototype, "buttonTagStyle", {
        //////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the button tag used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for this component's button tag.
         */
        get: function () {
            var tagStyle = this.commonStyleProperties;
            tagStyle['font-family'] = this.buttonDataSource.font;
            tagStyle['font-size.px'] = this.buttonDataSource.fontSize;
            tagStyle['color'] = this.color;
            tagStyle['font-style'] = (this.buttonDataSource.italic) ? 'italic' : 'normal';
            tagStyle['text-decoration'] = (this.buttonDataSource.underline) ? 'underline' : 'none';
            tagStyle['font-weight'] = (this.buttonDataSource.bold) ? 'bold' : 'normal';
            // Set additional styles when using background images
            if (!this.buttonDataSource.useDefaultImages) {
                // Vit: Only this syntax works for all three button states
                tagStyle['background'] = 'url(' + this.currentImageSource + ') 0% 0% / ' +
                    this.buttonDataSource.width + 'px ' +
                    this.buttonDataSource.height + 'px';
                tagStyle['border'] = 'none';
            }
            return tagStyle;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonComponent.prototype, "clip", {
        /**
         * Override base class clip setting to allow viewing entire component (typically used as an initial setting)
         * @returns {string}
         */
        get: function () {
            // Angular MD Raised Button requires a larger clip rectangle to accommodate drop shadows
            // Dimensions added to clip rectangle at this point is a little arbitrary based on observation.  Might need to
            // change if not sufficient for specific scenarios.  Tested - not tall enough (bottom not big enough) when
            // in down state (which makes drop shadow larger).  Not fixing at this point until sure that we're going to use
            // the md-raised-button over md-button (probably selected more b/c of current colors)
            var clip = 'rect(-5px,' + (this.buttonDataSource.width + 5).toString() + 'px,' +
                (this.buttonDataSource.height + 5).toString() + 'px,' + '-5px)';
            return clip;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Handler for the mouse over event to keep the image we are currently displaying in sync with the current mouse
     * state.
     */
    ButtonComponent.prototype.onMouseOver = function () {
        this.currentImageSource = this.buttonDataSource.urlOverStateImage;
    };
    /**
     * Handler for the mouse out event to keep the image we are currently displaying in sync with the current mouse
     * state.
     */
    ButtonComponent.prototype.onMouseOut = function () {
        console.log('onMouseOut');
        this.currentImageSource = this.buttonDataSource.urlUpStateImage;
    };
    /**
     * Handler for the mouse down event to keep the image we are currently displaying in sync with the current mouse
     * state.
     */
    ButtonComponent.prototype.onMouseDown = function () {
        this.currentImageSource = this.buttonDataSource.urlDownStateImage;
    };
    /**
     * Handler for the mouse up event to keep the image we are currently displaying in sync with the current mouse
     * state.
     */
    ButtonComponent.prototype.onMouseUp = function () {
        this.currentImageSource = this.buttonDataSource.urlOverStateImage;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    ButtonComponent.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        this.buttonDataSource = this.dataSource;
        this.currentImageSource = this.buttonDataSource.urlUpStateImage;
    };
    ButtonComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-button',
            template: __webpack_require__("./src/app/player/view/button.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * The view model of the application's Angular button component.
         */
    ], ButtonComponent);
    return ButtonComponent;
}(__WEBPACK_IMPORTED_MODULE_1__abstract_component__["a" /* AbstractComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/button.component.js.map

/***/ }),

/***/ "./src/app/player/view/checkbox.component.html":
/***/ (function(module, exports) {

module.exports = "<input #elementRef playerCheckboxEventHandler [dataSource]=\"dataSource\" type=\"checkbox\" [ngStyle]=\"inputTagStyle\"\r\n       [(ngModel)]= \"checkbox.checked\" >\r\n"

/***/ }),

/***/ "./src/app/player/view/checkbox.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CheckboxComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__abstract_component__ = __webpack_require__("./src/app/player/view/abstract.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var CheckboxComponent = /** @class */ (function (_super) {
    __extends(CheckboxComponent, _super);
    /**
     * The view model of the application's Angular checkbox component.
     */
    function CheckboxComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CheckboxComponent.prototype, "inputTagStyle", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the input tag used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for this component's input tag.
         */
        get: function () {
            return this.commonStyleProperties;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    CheckboxComponent.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        this.checkbox = this.dataSource;
    };
    CheckboxComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-checkbox',
            template: __webpack_require__("./src/app/player/view/checkbox.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * The view model of the application's Angular checkbox component.
         */
    ], CheckboxComponent);
    return CheckboxComponent;
}(__WEBPACK_IMPORTED_MODULE_1__abstract_component__["a" /* AbstractComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/checkbox.component.js.map

/***/ }),

/***/ "./src/app/player/view/content-window.component.html":
/***/ (function(module, exports) {

module.exports = "<div [ngStyle]=\"divTagStyleObject\">\r\n    <ng-template ngFor let-component [ngForOf]=\"contentWindow.components\">\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'AudioDataObject'\">\r\n            <player-audio [dataSource]=\"component\"></player-audio>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'ButtonDataObject'\">\r\n            <player-button [dataSource]=\"component\"></player-button>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'CheckboxDataObject'\">\r\n            <player-checkbox [dataSource]=\"component\"></player-checkbox>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'DropdownListDataObject'\">\r\n            <player-dropdown-list [dataSource]=\"component\"></player-dropdown-list>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'HtmlDataObject'\">\r\n            <player-html [dataSource]=\"component\"></player-html>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'ImageDataObject'\">\r\n            <player-image [dataSource]=\"component\"></player-image>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'VideoDataObject'\">\r\n            <player-video [dataSource]=\"component\"></player-video>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'QuizFillInBlankDataObject'\">\r\n            <player-quiz-fill-in-blank [quizFillInBlank]=\"component\"></player-quiz-fill-in-blank>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'QuizMatchDataObject'\">\r\n            <player-quiz-match [quizMatch]=\"component\"></player-quiz-match>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'QuizMultipleChoiceDataObject'\">\r\n            <player-quiz-multiple-choice [quizMultipleChoice]=\"component\"></player-quiz-multiple-choice>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'QuizResultDataObject'\">\r\n            <player-quiz-result [quizResult]=\"component\"></player-quiz-result>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'RadioButtonDataObject'\">\r\n            <player-radio-button [dataSource]=\"component\"></player-radio-button>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'TextDisplayDataObject'\">\r\n            <player-text-display [dataSource]=\"component\"></player-text-display>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'TextInputDataObject'\">\r\n            <player-text-input [dataSource]=\"component\"></player-text-input>\r\n        </ng-template>\r\n\r\n        <ng-template [ngIf]=\"component.constructor['name'] === 'TextInputAreaDataObject'\">\r\n            <player-text-input-area [dataSource]=\"component\"></player-text-input-area>\r\n        </ng-template>\r\n\r\n    </ng-template>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/player/view/content-window.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContentWindowComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_content_window__ = __webpack_require__("./src/app/shared/system-shared/model/content-window.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ContentWindowComponent = /** @class */ (function () {
    /*
     *
     * ComponentDataObject for DIF content window component
     *
     * */
    function ContentWindowComponent() {
    }
    /**
     * Event handler for button click
     *
     * @param id
     */
    ContentWindowComponent.prototype.onButtonClick = function (id) {
        this.newTargetX = this.contentWindow.findChildComponent(id).x;
    };
    Object.defineProperty(ContentWindowComponent.prototype, "divTagStyleObject", {
        /**
         *  The Object used in the ngStyle decorator that defines the style settings for the container div tag in this component's template.
         *
         * @returns     any
         */
        get: function () {
            // console.log(this.contentWindow.serializeToString());
            var background = 'transparent';
            var border = 'transparent';
            if (this.contentWindow.backgroundAlpa === '1') {
                background = this.contentWindow.backgroundColor;
            }
            if (this.contentWindow.borderAlpha === '1') {
                border = this.contentWindow.borderColor;
            }
            return {
                // 'opacity': 1 - parseInt(this.contentWindow.backgroundAlpa,10),
                'width.px': this.contentWindow.width,
                'height.px': this.contentWindow.height,
                'position': 'absolute',
                'top.px': this.contentWindow.y,
                'left.px': this.contentWindow.x,
                'overflow': 'hidden',
                'z-index': this.contentWindow.z,
                'border-style': 'solid',
                'border-width': '1px',
                'border-color': border,
                'background-color': background,
            };
        },
        enumerable: true,
        configurable: true
    });
    var _a;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_content_window__["a" /* ContentWindow */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_content_window__["a" /* ContentWindow */]) === "function" && _a || Object)
    ], ContentWindowComponent.prototype, "contentWindow", void 0);
    ContentWindowComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-content-window',
            template: __webpack_require__("./src/app/player/view/content-window.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /*
         *
         * ComponentDataObject for DIF content window component
         *
         * */
    ], ContentWindowComponent);
    return ContentWindowComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/content-window.component.js.map

/***/ }),

/***/ "./src/app/player/view/directive/audio-event-handler.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AudioEventHandlerDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/event-handler.directive.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var AudioEventHandlerDirective = /** @class */ (function (_super) {
    __extends(AudioEventHandlerDirective, _super);
    function AudioEventHandlerDirective() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Properties / Instance Variables
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    AudioEventHandlerDirective.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        // Add audio play/pause/stop related event emitter subscription
        this.addSubscription();
        // Always add on complete listener
        this.createEventListener('ended', __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_COMPLETE);
    };
    /**
     * Parse event triggers
     *
     * overrides base version
     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...
     */
    AudioEventHandlerDirective.prototype.parseEventTriggers = function (eventType) {
        _super.prototype.parseEventTriggers.call(this, eventType);
        switch (eventType) {
            case __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_PLAY:
                this.createEventListener('play', eventType);
                break;
            case __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_PAUSE:
                this.createEventListener('pause', eventType);
                break;
        }
    };
    /**
      * Process event
      * overrides base version.
      *
      * @param   event       TODO: Add param description.
      * @param   eventType   An application defined event type (e.g. OnClick, OnDoubleClick, etc.).
      */
    AudioEventHandlerDirective.prototype.processEvent = function (event, eventType) {
        _super.prototype.processEvent.call(this, event, eventType);
        // Emit Audio's onComplete event
        var audioDataObject = this.dataSource;
        audioDataObject.onComplete.emit();
    };
    /**
    * Add audio play/pause/stop related event emitter subscription
    *
    */
    AudioEventHandlerDirective.prototype.addSubscription = function () {
        var audioDataObject = this.dataSource;
        var audioHtmlObject = this.elementRef.nativeElement;
        audioDataObject.onPlay.subscribe(function () {
            audioHtmlObject.play();
        });
        audioDataObject.onPause.subscribe(function () {
            audioHtmlObject.pause();
        });
        audioDataObject.onStop.subscribe(function () {
            audioHtmlObject.pause();
            audioHtmlObject.currentTime = 0;
        });
    };
    AudioEventHandlerDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[playerAudioEventHandler]'
        })
    ], AudioEventHandlerDirective);
    return AudioEventHandlerDirective;
}(__WEBPACK_IMPORTED_MODULE_2__event_handler_directive__["a" /* EventHandlerDirective */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/audio-event-handler.directive.js.map

/***/ }),

/***/ "./src/app/player/view/directive/checkbox-event-handler.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CheckboxEventHandlerDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/event-handler.directive.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var CheckboxEventHandlerDirective = /** @class */ (function (_super) {
    __extends(CheckboxEventHandlerDirective, _super);
    function CheckboxEventHandlerDirective() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Parse event triggers
     *
     * overrides base version
     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...
     */
    CheckboxEventHandlerDirective.prototype.parseEventTriggers = function (eventType) {
        _super.prototype.parseEventTriggers.call(this, eventType);
        switch (eventType) {
            case __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_CHECKED:
                this.createEventListener('change', eventType);
                break;
            case __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_UNCHECKED:
                this.createEventListener('change', eventType);
                break;
        }
    };
    /**
     * Process event
     *
     * overrides base version
     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...
     */
    CheckboxEventHandlerDirective.prototype.processEvent = function (event, eventType) {
        if (eventType === __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_CHECKED || eventType === __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_UNCHECKED) {
            this.updateCheckedInDataSource(event);
        }
        else {
            _super.prototype.processEvent.call(this, event, eventType);
        }
    };
    /**
     * Overrides base.  Adds call to updateCheckedInDataSource.
     *
     * @inheritDoc
     */
    CheckboxEventHandlerDirective.prototype.processAction = function (event) {
        console.log('!!! CheckboxDirective - processAction triggered !!!');
        // NOTE: if Action and Event could run this method twice
        // TODO: check to make sure this doesn't cause any bugs, otherwise will have to deal with it
        this.updateCheckedInDataSource(event);
        _super.prototype.processAction.call(this, event);
    };
    /**
     * Updates checked property in CheckboxDataObject to match state of component / display object
     * TODO: Jay says the intention of this is to allow Event System to trigger the change event on the component to
     *          trigger a further Event System ON_CHECKED or ON_UNCHECKED, and any Action System validation processes.
     *          Not sure at this point whether this behavior is desirable (Flash Player doesn't do this).
     */
    CheckboxEventHandlerDirective.prototype.updateCheckedInDataSource = function (event) {
        this.dataSource.checked = event.currentTarget.checked;
    };
    CheckboxEventHandlerDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[playerCheckboxEventHandler]'
        })
    ], CheckboxEventHandlerDirective);
    return CheckboxEventHandlerDirective;
}(__WEBPACK_IMPORTED_MODULE_2__event_handler_directive__["a" /* EventHandlerDirective */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/checkbox-event-handler.directive.js.map

/***/ }),

/***/ "./src/app/player/view/directive/dropdown-list-event-handler.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DropdownListEventHandlerDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/event-handler.directive.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var DropdownListEventHandlerDirective = /** @class */ (function (_super) {
    __extends(DropdownListEventHandlerDirective, _super);
    function DropdownListEventHandlerDirective() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Parse event triggers
     *
     * overrides base version
     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...
     */
    DropdownListEventHandlerDirective.prototype.parseEventTriggers = function (eventType) {
        _super.prototype.parseEventTriggers.call(this, eventType);
        switch (eventType) {
            case __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_SELECTION_CHANGE:
                this.createEventListener('change', eventType);
                break;
        }
    };
    DropdownListEventHandlerDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[playerDropdownListEventHandler]'
        })
    ], DropdownListEventHandlerDirective);
    return DropdownListEventHandlerDirective;
}(__WEBPACK_IMPORTED_MODULE_2__event_handler_directive__["a" /* EventHandlerDirective */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/dropdown-list-event-handler.directive.js.map

/***/ }),

/***/ "./src/app/player/view/directive/event-handler.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventHandlerDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var EventHandlerDirective = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    function EventHandlerDirective(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        /**
         * An instance of the logger class for outputting log messages.
         *
         * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before
         * each log statement that is output.
         *
         * @default A logger object named after the containing class.
         */
        this.logger = __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_log__["a" /* Log */].getInstance().getLogger('EventHandlerDirective');
        /**
         * Used by click events(single,double...), calculate number of mouse clicks during the inteval
         */
        this.clickCount = 0;
        /**
         * Define mouse click the elapsed time between two single click
         * default to half second
         */
        this.clickInterval = 0.5;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    EventHandlerDirective.prototype.ngOnInit = function () {
        this.IsCustomClickHandling = false;
        // Setup event listeners for Event System
        if (this.dataSource.eventCollection) {
            for (var _i = 0, _a = this.dataSource.eventCollection.eventCollection; _i < _a.length; _i++) {
                var event = _a[_i];
                // Skip if no event handler defined
                if (event.eventHandlerCollection.length > 0) {
                    this.parseEventTriggers(event.trigger);
                }
            }
        }
        // both single and double click will be handled by the click event
        if (this.IsCustomClickHandling) {
            this.createEventListener('click', __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_CLICK);
        }
        // Check if component has FrameworkAction with a FrameworkEvent (apparently components can (maybe always) have
        // empty FrameworkActions).  Then setup event listeners for Action System.
        // NOTE: Might be more efficient to consolidate Event and Action System events into one set of listeners if we
        //          have time to design the process in the future.
        if (this.dataSource.frameworkAction.frameworkEvent) {
            console.log('!!!!!!!!!! EventHandlerDirective.ngOnInit(): component ' + this.dataSource.name +
                ' has FrameworkAction with a FrameworkEvent');
            this.parseFrameworkEvent(this.dataSource.frameworkAction.frameworkEvent.eventName);
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Parse event triggers
     * TODO: Add method description.
     *
     * @param   eventType   An application defined event type (e.g. OnClick, OnDoubleClick, etc.).
     */
    EventHandlerDirective.prototype.parseEventTriggers = function (eventType) {
        switch (eventType) {
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_CLICK:
                // Note: Do not remove this commentted line, it will be used for future custom click handling
                // this.IsCustomClickHandling = true;
                this.createEventListener('click', eventType);
                break;
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_DOUBLE_CLICK:
                // Note: Do not remove this commentted line, it will be used for future custom click handling
                // this.IsCustomClickHandling = true;
                this.createEventListener('dblclick', eventType);
                break;
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_MOUSE_OVER:
                this.createEventListener('mouseover', eventType);
                break;
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_MOUSE_OUT:
                this.createEventListener('mouseleave', eventType);
                break;
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_FOCUS:
                this.createEventListener('focus', eventType);
                break;
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_FOCUS_LOST:
                this.createEventListener('blur', eventType);
                break;
        }
    };
    /**
     * Parse FrameworkEvent eventName to setup event listeners for Action System
     *
     * @param   eventName   An Action System defined event name / type (e.g. functionButtonPressed, etc.).
     */
    EventHandlerDirective.prototype.parseFrameworkEvent = function (eventName) {
        switch (eventName) {
            case 'functionButtonPressed':
                this.createEventListenerForActionSystem('click');
                break;
            default:
                this.createEventListenerForActionSystem('change');
                break;
        }
    };
    /**
     * Create event listener
     * TODO: Add method description.
     *
     * @param   eventName   An angular event name (e.g. click, dblclick, etc.).
     * @param   eventType   An application defined event type (e.g. OnClick, OnDoubleClick, etc.).
     */
    EventHandlerDirective.prototype.createEventListener = function (eventName, eventType) {
        var _this = this;
        this.logger.debug('createEventListener(): ' + this.dataSource.name + ', event name = ' + eventName);
        this.renderer.listen(this.elementRef.nativeElement, eventName, function (e) {
            _this.processEvent(e, eventType);
        });
    };
    /**
     * Create event listener for Action System
     *
     * @param eventName
     */
    EventHandlerDirective.prototype.createEventListenerForActionSystem = function (eventName) {
        var _this = this;
        this.logger.debug('createEventListenerForActionSystem: ' + this.dataSource.name + ', event name = ' +
            eventName);
        this.renderer.listen(this.elementRef.nativeElement, eventName, function (e) {
            _this.processAction(e);
        });
    };
    /**
     * Process event
     * TODO: Add method description.
     *
     * @param   event       TODO: Add param description.
     * @param   eventType   An application defined event type (e.g. OnClick, OnDoubleClick, etc.).
     */
    EventHandlerDirective.prototype.processEvent = function (event, eventType) {
        this.logger.debug('processEvent(): ' + this.dataSource.name + ', event type = ' + eventType);
        // Note: Do not remove the commentted lines, it will be used for future custom click handling
        // if (eventType === EventDataObject.ON_CLICK) {
        // this.processCustomClickEvent();
        // } else {
        this.dataSource.eventCollection.processEvent(eventType);
        // }
    };
    // Note: Do not remove the method, it will be used for future custom click handling
    EventHandlerDirective.prototype.processCustomClickEvent = function () {
        var _this = this;
        setTimeout(function () { return _this.processSingleOrDoubleClickEvent(); }, this.clickInterval * 1000);
        this.clickCount++;
    };
    /**
     * Callback function when set time out ended.
     * Check click count, if one click process single click, more than one click process double click event
     * Reset click count
     */
    // Note: Do not remove the method, it will be used for future custom click handling
    EventHandlerDirective.prototype.processSingleOrDoubleClickEvent = function () {
        if (this.clickCount === 1) {
            this.dataSource.eventCollection
                .processEvent(__WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_CLICK);
        }
        else {
            this.dataSource.eventCollection
                .processEvent(__WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_DOUBLE_CLICK);
        }
        this.clickCount = 0;
    };
    /**
     * Start Action System processing
     * @param event
     */
    EventHandlerDirective.prototype.processAction = function (event) {
        this.logger.debug('processAction(): ' + this.dataSource.name);
        this.dataSource.frameworkAction.processFrameworkAction();
    };
    EventHandlerDirective.prototype.mouseover = function () {
        this.dataSource.mouseOver = true;
    };
    ;
    EventHandlerDirective.prototype.mouseleave = function () {
        this.dataSource.mouseOver = false;
    };
    EventHandlerDirective.prototype.focus = function () {
        this.dataSource.focus = true;
    };
    ;
    EventHandlerDirective.prototype.focusLost = function () {
        this.dataSource.focus = false;
    };
    var _a, _b, _c;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_component_data_object__["a" /* ComponentDataObject */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_component_data_object__["a" /* ComponentDataObject */]) === "function" && _a || Object)
    ], EventHandlerDirective.prototype, "dataSource", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('mouseenter'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], EventHandlerDirective.prototype, "mouseover", null);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('mouseleave'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], EventHandlerDirective.prototype, "mouseleave", null);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('focus'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], EventHandlerDirective.prototype, "focus", null);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('blur'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], EventHandlerDirective.prototype, "focusLost", null);
    EventHandlerDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[playerEventHandler]'
        }),
        __metadata("design:paramtypes", [typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]) === "function" && _b || Object, typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer2"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer2"]) === "function" && _c || Object])
    ], EventHandlerDirective);
    return EventHandlerDirective;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/event-handler.directive.js.map

/***/ }),

/***/ "./src/app/player/view/directive/radio-button-event-handler.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RadioButtonEventHandlerDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/event-handler.directive.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var RadioButtonEventHandlerDirective = /** @class */ (function (_super) {
    __extends(RadioButtonEventHandlerDirective, _super);
    function RadioButtonEventHandlerDirective() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    RadioButtonEventHandlerDirective.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        // Always add on change listener
        this.createEventListener('change', __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_CHANGE);
    };
    /**
     * Process event
     *
     * overrides base version
     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...
     */
    RadioButtonEventHandlerDirective.prototype.processEvent = function (event, eventType) {
        _super.prototype.processEvent.call(this, event, eventType);
        if (eventType === __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_CHANGE) {
            this.updateCheckedInDataSource(event);
        }
        else {
            _super.prototype.processEvent.call(this, event, eventType);
        }
    };
    /**
     * Overrides base.  Adds call to updateCheckedInDataSource.
     *
     * @inheritDoc
     */
    RadioButtonEventHandlerDirective.prototype.processAction = function (event) {
        // NOTE: if Action and Event could run this method twice
        // TODO: check to make sure this doesn't cause any bugs, otherwise will have to deal with it
        this.updateCheckedInDataSource(event);
        _super.prototype.processAction.call(this, event);
    };
    /**
     * Updates checked property in RadioButtonDataObject to match state of component / display object
     * TODO: Jay says the intention of this is to allow Event System to trigger the change event on the component to
     *          trigger a further Event System ON_SELECTED and any Action System validation processes.  Not sure at this
     *          point whether this behavior is desirable (Flash Player does have this behavior for the radio button, but
     *          not for other components.
     */
    RadioButtonEventHandlerDirective.prototype.updateCheckedInDataSource = function (event) {
        this.dataSource.selected = event.currentTarget.checked;
    };
    RadioButtonEventHandlerDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[playerRadioButtonEventHandler]'
        })
    ], RadioButtonEventHandlerDirective);
    return RadioButtonEventHandlerDirective;
}(__WEBPACK_IMPORTED_MODULE_2__event_handler_directive__["a" /* EventHandlerDirective */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/radio-button-event-handler.directive.js.map

/***/ }),

/***/ "./src/app/player/view/directive/text-event-handler.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextEventHandlerDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/event-handler.directive.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TextEventHandlerDirective = /** @class */ (function (_super) {
    __extends(TextEventHandlerDirective, _super);
    function TextEventHandlerDirective() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Parse event triggers
     *
     * overrides base version
     * @param   eventType   DIF defined event type, for example, OnClick, OnDoubleClick...
     */
    TextEventHandlerDirective.prototype.parseEventTriggers = function (eventType) {
        _super.prototype.parseEventTriggers.call(this, eventType);
        switch (eventType) {
            case __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_CHANGE:
                this.createEventListener('input', eventType);
                break;
        }
    };
    TextEventHandlerDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[playerTextEventHandler]'
        })
    ], TextEventHandlerDirective);
    return TextEventHandlerDirective;
}(__WEBPACK_IMPORTED_MODULE_2__event_handler_directive__["a" /* EventHandlerDirective */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/text-event-handler.directive.js.map

/***/ }),

/***/ "./src/app/player/view/directive/video-event-handler.directive.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VideoEventHandlerDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__event_handler_directive__ = __webpack_require__("./src/app/player/view/directive/event-handler.directive.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var VideoEventHandlerDirective = /** @class */ (function (_super) {
    __extends(VideoEventHandlerDirective, _super);
    /**
     * TODO: Add description.
     */
    function VideoEventHandlerDirective() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    VideoEventHandlerDirective.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        // Add video play/pause/stop related event emitter subscription
        this.addSubscription();
        // Always add on complete listener
        // TODO: This event listener is never removed (released), it could cause memory/performance issue ...
        this.createEventListener('ended', __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_COMPLETE);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    VideoEventHandlerDirective.prototype.parseEventTriggers = function (eventType) {
        _super.prototype.parseEventTriggers.call(this, eventType);
        switch (eventType) {
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_PLAY:
                this.createEventListener('play', eventType);
                break;
            case __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_PAUSE:
                this.createEventListener('pause', eventType);
                break;
        }
    };
    /**
     * @inheritDoc
     */
    VideoEventHandlerDirective.prototype.processEvent = function (event, eventType) {
        _super.prototype.processEvent.call(this, event, eventType);
        // Emit Video's onComplete event
        var movieDataObject = this.dataSource;
        movieDataObject.onComplete.emit();
    };
    /**
     * Add video play/pause/stop related event emitter subscription.
     */
    VideoEventHandlerDirective.prototype.addSubscription = function () {
        var videoDataObject = this.dataSource;
        var htmlVideoElement = this.elementRef.nativeElement;
        videoDataObject.onPlay.subscribe(function () {
            htmlVideoElement.play();
        });
        videoDataObject.onPause.subscribe(function () {
            htmlVideoElement.pause();
        });
        videoDataObject.onStop.subscribe(function () {
            htmlVideoElement.pause();
            htmlVideoElement.currentTime = 0;
        });
    };
    VideoEventHandlerDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[playerVideoEventHandler]'
        })
        /**
         * TODO: Add description.
         */
    ], VideoEventHandlerDirective);
    return VideoEventHandlerDirective;
}(__WEBPACK_IMPORTED_MODULE_1__event_handler_directive__["a" /* EventHandlerDirective */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/video-event-handler.directive.js.map

/***/ }),

/***/ "./src/app/player/view/dropdown-list.component.html":
/***/ (function(module, exports) {

module.exports = "<select #elementRef playerDropdownListEventHandler [dataSource]=\"dataSource\"\r\n        [(ngModel)]=\"dropdownList.selection\"\r\n        [ngStyle]=\"selectTagStyle\" >\r\n\r\n    <!-- Option for default option / prompt text -->\r\n    <option [ngValue]=\"dropdownList.defaultOption.text\" selected disabled hidden [ngStyle]=\"optionTagStyle\">\r\n        {{dropdownList.defaultOption.text}}\r\n    </option>\r\n\r\n    <!-- Loop to build the rest of the option elements -->\r\n    <ng-template ngFor let-option [ngForOf]=\"dropdownList.optionList\">\r\n        <option [ngValue]=\"option.text\" [ngStyle]=\"optionTagStyle\">{{option.text}}</option>\r\n    </ng-template>\r\n\r\n</select>\r\n"

/***/ }),

/***/ "./src/app/player/view/dropdown-list.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DropdownListComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__abstract_component__ = __webpack_require__("./src/app/player/view/abstract.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var DropdownListComponent = /** @class */ (function (_super) {
    __extends(DropdownListComponent, _super);
    /**
     * The view model of the application's Angular drop-down list component.
     *
     * TODO: If autoSize is true we need to resize based on the largest option!!!
     * TODO: Figure how to implement this and implement it!
     * TODO: Figure out what we want to do about text-align (see comment below).
     */
    function DropdownListComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DropdownListComponent.prototype, "color", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The color CSS property.  Color is used to implement the font color property for this component.
         *
         * In our model data, font color is stored as a hexadecimal value with a "0x" prefix.  We need to replace the prefix
         * with "#" so we can use it as a CSS value.
         *
         * @default #000000 (black)
         */
        get: function () {
            return this.dropdownList.fontColor.replace(/0x/i, '#');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListComponent.prototype, "fontWeight", {
        //////////////////////////////////////////////////////////
        /**
         * The font-weight CSS property.  Font-weight is used to implement the bold text property for this component.
         *
         * In our model data we store "bold" as a boolean value.  In order to use it as a CSS value we need to convert the
         * value (true/false) to a string ("bold"/"normal").
         *
         * @default 'normal'
         */
        get: function () {
            return (this.dropdownList.bold) ? 'bold' : 'normal';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListComponent.prototype, "fontStyle", {
        //////////////////////////////////////////////////////////
        /**
         * The font-style CSS property.  Font-style is used to implement the italic text property for this component.
         *
         * In our model data we store "italic" as a boolean value.  In order to use it as a CSS value we need to convert the
         * value (true/false) to a string ("italic"/"normal").
         *
         * @default 'normal'
         */
        get: function () {
            return (this.dropdownList.italic) ? 'italic' : 'normal';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListComponent.prototype, "textDecoration", {
        //////////////////////////////////////////////////////////
        /**
         * The text-decoration CSS property.  Text-decoration is used to implement the underline text property for this
         * component.
         *
         * In our model data we store "underline" as a boolean value.  In order to use it as a CSS value we need to convert
         * the value (true/false) to a string ("underline"/"none").
         *
         * @default 'none'
         */
        get: function () {
            return (this.dropdownList.underline) ? 'underline' : 'none';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListComponent.prototype, "textAlign", {
        //////////////////////////////////////////////////////////
        /**
         * The text-align CSS property.  Text-align is used to implement the align text property for this component.
         *
         * In our model data, the align property is stored as a string with an "Align" postfix.  We need to remove the
         * postfix so we can use it as a CSS value.
         *
         * TODO:
         *          This doesn't seem to do anything to the select option component in Chrome.
         *          Text-align-last works in some browsers as long as text-align is set to justify.
         *          See: http://stackoverflow.com/questions/10813528/is-it-possible-to-center-text-in-select-box
         *          Not implementing for now.
         *
         * @default 'left' TODO: Verify this.
         */
        get: function () {
            return this.dropdownList.align.slice(0, this.dropdownList.align.length - 5);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListComponent.prototype, "selectTagStyle", {
        //////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the select tag used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for this component's select tag.
         */
        get: function () {
            var tagStyle = this.commonStyleProperties;
            tagStyle['font-family'] = this.dropdownList.font;
            tagStyle['font-size.px'] = this.dropdownList.fontSize;
            tagStyle['color'] = this.color;
            tagStyle['font-style'] = this.fontStyle;
            tagStyle['text-decoration'] = this.textDecoration;
            tagStyle['font-weight'] = this.fontWeight;
            return tagStyle;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListComponent.prototype, "optionTagStyle", {
        //////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the option tag used in
         * this component's template.
         *
         * NOTE:
         *          Text-decoration doesn't seem to work on the options themselves.
         *
         * @default A style Object containing the CSS properties for this component's option tag.
         */
        get: function () {
            return {
                'font-family': this.dropdownList.font,
                'font-weight': this.fontWeight,
                'font-style': this.fontStyle,
                'text-decoration': this.textDecoration,
                'font-size.px': this.dropdownList.fontSize
            };
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    DropdownListComponent.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        this.dropdownList = this.dataSource;
    };
    DropdownListComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-dropdown-list',
            template: __webpack_require__("./src/app/player/view/dropdown-list.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * The view model of the application's Angular drop-down list component.
         *
         * TODO: If autoSize is true we need to resize based on the largest option!!!
         * TODO: Figure how to implement this and implement it!
         * TODO: Figure out what we want to do about text-align (see comment below).
         */
    ], DropdownListComponent);
    return DropdownListComponent;
}(__WEBPACK_IMPORTED_MODULE_1__abstract_component__["a" /* AbstractComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/dropdown-list.component.js.map

/***/ }),

/***/ "./src/app/player/view/html.component.html":
/***/ (function(module, exports) {

module.exports = "<iframe [ngStyle]=\"htmlTagStyleObject\" [src]=\"sanitizedURL\" title={{html.description}} style=\"border:none\"></iframe>\r\n"

/***/ }),

/***/ "./src/app/player/view/html.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HtmlComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__("./node_modules/@angular/platform-browser/@angular/platform-browser.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__abstract_component__ = __webpack_require__("./src/app/player/view/abstract.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

// we need this to prevent error: unsafe value used in a resource URL context


var HtmlComponent = /** @class */ (function (_super) {
    __extends(HtmlComponent, _super);
    function HtmlComponent(sanitizer) {
        var _this = _super.call(this) || this;
        _this.sanitizer = sanitizer;
        return _this;
    }
    HtmlComponent.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        this.html = this.dataSource;
        this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.html.URL);
    };
    Object.defineProperty(HtmlComponent.prototype, "htmlTagStyleObject", {
        /**
         * Return ngStyle object for common properties
         */
        get: function () {
            return this.commonStyleProperties;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HtmlComponent.prototype, "sanitizedURL", {
        /**
         * Sanitize the URL to prevent error: unsafe value used in a resource URL context
         */
        get: function () {
            return this.safeUrl;
        },
        enumerable: true,
        configurable: true
    });
    var _a;
    HtmlComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-html',
            template: __webpack_require__("./src/app/player/view/html.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * Component for DIF Html component
         */
        ,
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["c" /* DomSanitizer */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["c" /* DomSanitizer */]) === "function" && _a || Object])
    ], HtmlComponent);
    return HtmlComponent;
}(__WEBPACK_IMPORTED_MODULE_2__abstract_component__["a" /* AbstractComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/html.component.js.map

/***/ }),

/***/ "./src/app/player/view/image.component.html":
/***/ (function(module, exports) {

module.exports = "<img #elementRef playerEventHandler [dataSource]=\"dataSource\" src={{image.url}} alt={{image.description}} [ngStyle]=\"imgTagStyle\">\r\n"

/***/ }),

/***/ "./src/app/player/view/image.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__abstract_component__ = __webpack_require__("./src/app/player/view/abstract.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var ImageComponent = /** @class */ (function (_super) {
    __extends(ImageComponent, _super);
    /**
     * The view model of the application's Angular image component.
     */
    function ImageComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ImageComponent.prototype, "imgTagStyle", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The Object used in the ngStyle decorator that defines
         * the style settings for the img tag in this component's template.
         *
         * @returns     any
         */
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the img tag used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for this component's img tag.
         */
        get: function () {
            return this.commonStyleProperties;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    ImageComponent.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        this.image = this.dataSource;
    };
    ImageComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-image',
            template: __webpack_require__("./src/app/player/view/image.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * The view model of the application's Angular image component.
         */
    ], ImageComponent);
    return ImageComponent;
}(__WEBPACK_IMPORTED_MODULE_1__abstract_component__["a" /* AbstractComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/image.component.js.map

/***/ }),

/***/ "./src/app/player/view/menu.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\n    <button md-raised-button type=\"button\" (click)=\"onSavePageClick()\">Save Page</button>\n    <br><br>\n\n    <!-- <input id=\"menudatepicker\" /> -->\n\n    <!-- CAN ADD BACK IN IF KENDO ADDED TO CLI PROJECT\n    jQuery initialized Kendo numerictextbox\n    <input id=\"numerictextbox\" />\n    <br><br>\n    -->\n\n    Standard HTML5 number input element modified\n    <input type=number id=\"testSpan2\" value={{this.testNum}} />\n    <br><br>\n\n    <!-- CAN ADD BACK IN IF KENDO ADDED TO CLI PROJECT\n    <div id=\"container\">\n        Markup initialized Kendo numerictextbox\n        <input data-role=\"numerictextbox\" data-value=\"10\"/>\n        <input data-role=\"autocomplete\" data-bind=\"source: source\" />\n        <br><br>\n\n        <input data-role=\"datepicker\" />\n    </div>\n    -->\n\n    <!-- CAN ADD BACK IN IF KENDO ADDED TO CLI PROJECT\n    <div id=\"kendoWindow\">{{this.buttonString}}</div>\n    -->\n</div>\n"

/***/ }),

/***/ "./src/app/player/view/menu.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MenuComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

//import { kendo } from '../js/kendo.web';   // Why don't we need TODO something like this to import the kendo - kendo typings are global (not exported so it can't be imported)
var MenuComponent = /** @class */ (function () {
    function MenuComponent() {
        this.onSavePageClickEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.buttonString = "Save This Page";
        this.testNum = 9;
        this.autoCompleteData = ['a', 'b', 'c'];
    }
    /*
    bindKendo(test:number) {
        console.log("MenuComponent.bindNumericTextBox(): " + test);

        //$("#numerictextbox").kendoNumericTextBox({
        //    value: test
        //});

        $("#numerictextbox").kendoNumericTextBox();
        $("#numerictextbox").data("kendoNumericTextBox").value(this.testNum);

        // Initialize the Kendo UI DatePicker by calling the kendoDatePicker jQuery plugin
        //$("#menudatepicker").kendoDatePicker();

        kendo.bind($("#container"), {});

        $("#kendoWindow").kendoWindow();
    }
    */
    MenuComponent.prototype.ngOnInit = function () {
        // Don't really need to use jQuery on document ready event since Angular already has it covered
        // $(document).ready(this.bindKendo(this.testNum));
        // Call separate method to pass var to bind.  Needed when using jQuery event, but not needed without it
        // this.bindKendo(this.testNum);
        /* CAN ADD BACK IN IF KENDO ADDED TO CLI PROJECT
        $("#numerictextbox").kendoNumericTextBox();
        $("#numerictextbox").data("kendoNumericTextBox").value(this.testNum);

        //kendo.bind($("#container"), {source: ['a', 'b', 'c']});
        kendo.bind($("#container"), {source: this.autoCompleteData});

        $("#kendoWindow").kendoWindow();
        */
    };
    MenuComponent.prototype.onSavePageClick = function () {
        this.onSavePageClickEmitter.emit();
        this.testNum += 1;
        console.log('MenuComponent.onSavePageClick(): modified again ' + this.testNum);
        // CAN ADD BACK IN IF KENDO ADDED TO CLI PROJECT
        // $("#numerictextbox").data("kendoNumericTextBox").value(this.testNum);
        // this.autoCompleteData = ['c', 'd', 'e'];  // This doesn't work
    };
    var _a;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]) === "function" && _a || Object)
    ], MenuComponent.prototype, "onSavePageClickEmitter", void 0);
    MenuComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "player-menu",
            template: __webpack_require__("./src/app/player/view/menu.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /*
        *
        * This class is just a placeholder for some test code - can eventually be used for menu or some other part of the player chrome
        *
        * */
        ,
        __metadata("design:paramtypes", [])
    ], MenuComponent);
    return MenuComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/menu.component.js.map

/***/ }),

/***/ "./src/app/player/view/page.component.html":
/***/ (function(module, exports) {

module.exports = "<div style=\"border-width: 1px; border-style: solid; border-color: black; position: relative;\" [ngStyle]=\"{'width.px': width, 'height.px': height}\">\n    <ng-template ngFor let-component [ngForOf]=\"page.components\">\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'ContentWindow'\">\n            <player-content-window [contentWindow]=\"component\"></player-content-window>\n        </ng-template>\n\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'AudioDataObject'\">\n            <player-audio [dataSource]=\"component\"></player-audio>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'ButtonDataObject'\">\n            <player-button [dataSource]=\"component\"></player-button>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'CheckboxDataObject'\">\n            <player-checkbox [dataSource]=\"component\"></player-checkbox>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'DropdownListDataObject'\">\n            <player-dropdown-list [dataSource]=\"component\"></player-dropdown-list>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'HtmlDataObject'\">\n            <player-html [dataSource]=\"component\"></player-html>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'ImageDataObject'\">\n            <player-image [dataSource]=\"component\"></player-image>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'VideoDataObject'\">\n            <player-video [dataSource]=\"component\"></player-video>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'QuizFillInBlankDataObject'\">\n            <player-quiz-fill-in-blank [quizFillInBlank]=\"component\"></player-quiz-fill-in-blank>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'QuizMatchDataObject'\">\n            <player-quiz-match [quizMatch]=\"component\"></player-quiz-match>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'QuizMultipleChoiceDataObject'\">\n            <player-quiz-multiple-choice [quizMultipleChoice]=\"component\"></player-quiz-multiple-choice>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'QuizResultDataObject'\">\n            <player-quiz-result [quizResult]=\"component\"></player-quiz-result>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'RadioButtonDataObject'\">\n            <player-radio-button [dataSource]=\"component\"></player-radio-button>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'TextDisplayDataObject'\">\n            <player-text-display [dataSource]=\"component\"></player-text-display>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'TextInputDataObject'\">\n            <player-text-input [dataSource]=\"component\"></player-text-input>\n        </ng-template>\n\n        <ng-template [ngIf]=\"component.constructor['name'] === 'TextInputAreaDataObject'\">\n            <player-text-input-area [dataSource]=\"component\"></player-text-input-area>\n        </ng-template>\n\n    </ng-template>\n</div>\n"

/***/ }),

/***/ "./src/app/player/view/page.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PageComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_page_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/page.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var PageComponent = /** @class */ (function () {
    function PageComponent(pageService) {
        this.pageService = pageService;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    PageComponent.prototype.ngAfterViewChecked = function () {
        // If new page loaded - trigger onLoad event
        if (this.page !== this.prevPage) {
            // we need to make sure pageProperties exists
            if (this.page.pageProperties) {
                /* setTimeout hack to insure that the proccessEvent doesn't cause a
                ExpressionChangedAfterItHasBeenCheckedError. Aparently angular doesn't like us to add components to the
                view in ngAfterViewChecked. There is likly a better solution than this.
                #ToDo: find a better solution to this.
                 */
                // setTimeout(() => (this.page.pageProperties.eventCollection as EventPlayableDataObjectCollection).processEvent(EventDataObject.ON_LOAD));
                this.pageService.isPageLoaded = true;
            }
            this.prevPage = this.page;
        }
    };
    var _a, _b;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_page_data_object__["a" /* PageDataObject */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_page_data_object__["a" /* PageDataObject */]) === "function" && _a || Object)
    ], PageComponent.prototype, "page", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], PageComponent.prototype, "width", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], PageComponent.prototype, "height", void 0);
    PageComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-page',
            template: __webpack_require__("./src/app/player/view/page.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /*
         *  ComponentDataObject container that holds components that make up the page contents
         *  NOTE:   This would sort of replace the "TemplateHolder" class in the Player.  In this prototype, it acts like a
         *          Player component.
         *
         * //TODO :I just pulled out all the data we got it does't mean this is by any means complete or fully implemented
         */
        ,
        __metadata("design:paramtypes", [typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_page_service__["a" /* PageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_page_service__["a" /* PageService */]) === "function" && _b || Object])
    ], PageComponent);
    return PageComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/page.component.js.map

/***/ }),

/***/ "./src/app/player/view/player.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"playerContainer\" [ngStyle]=\"{'height.px': contentAreaHeight}\">\n    <div class=\"contentArea\" [ngStyle]=\"{'height.px': contentAreaHeight}\">\n        <player-page *ngIf=\"page\" [page]=\"pageService.page\" [height]=\"contentAreaHeight\" [width]=\"width\"></player-page>\n    </div>\n</div>"

/***/ }),

/***/ "./src/app/player/view/player.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PlayerComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var PlayerComponent = /** @class */ (function () {
    /*
     *  Inject PageService
     */
    function PlayerComponent(pageService, unitService) {
        this.pageService = pageService;
        this.unitService = unitService;
        // temporary hard coded values not sure how we wanna do this
        this.appBarHeight = 47;
        this.controlBarHeight = 29;
    }
    /*
     *  Recommended to keep complex logic out of constructor.  Want to make sure complex logic run when we want.
     *  ngOnInit - Called once after the first ngOnChanges after Angular first displays the data-bound properties and
     *  sets the directive/component's input properties.
     */
    PlayerComponent.prototype.ngOnInit = function () {
        if (this.showUserInterface) {
            this.contentAreaHeight = this.height - this.appBarHeight - this.controlBarHeight;
        }
        else {
            this.contentAreaHeight = this.height;
        }
        // Set courseName from Unit if it exists (no unit when previewing from Template Designer)
        if (this.unitService.unit) {
            this.courseName = this.unitService.unit.unitName;
        }
        this.setPage();
    };
    /**
     * on Previous Page Event handler
     *
     */
    PlayerComponent.prototype.onPreviousPage = function () {
        this.setPage();
    };
    /**
     * on Next Page event handler
     *
     */
    PlayerComponent.prototype.onNextPage = function () {
        this.setPage();
    };
    /**
    * set page data object
    *
    */
    PlayerComponent.prototype.setPage = function () {
        this.page = this.pageService.page;
    };
    var _a, _b;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], PlayerComponent.prototype, "width", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], PlayerComponent.prototype, "height", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Boolean)
    ], PlayerComponent.prototype, "showUserInterface", void 0);
    PlayerComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-player',
            template: __webpack_require__("./src/app/player/view/player.component.html"),
            styles: [__webpack_require__("./src/app/player/view/player.module.css")]
        })
        /*
         *
         *  Root component for the player module.  Container for the components that make up the various portions of the player
         *  chrome and page content (if we don't decide to break those into separate modules)
         *
         */
        ,
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */]) === "function" && _a || Object, typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__["a" /* UnitService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__["a" /* UnitService */]) === "function" && _b || Object])
    ], PlayerComponent);
    return PlayerComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/player.component.js.map

/***/ }),

/***/ "./src/app/player/view/player.module.css":
/***/ (function(module, exports) {

module.exports = ".playerContainer{\r\n\tmargin: auto;\r\n\r\n\tbackground-color: grey;\r\n\twidth: 100%;/*1005px;*/\r\n\theight: 100%;/*695px;*/\r\n\r\n\toverflow: hidden;\r\n}\r\n\r\n.menuButtonDiv{\r\n\theight: 47px;\r\n\twidth: 50px;\r\n\r\n\tfloat: left;\r\n}\r\n\r\n.heading {\r\n\tpadding-top:16px;\r\n}\r\n\r\n.courseName{\r\n\tfont-family: 'Open Sans', sans-serif;\r\n    color: white;\r\n\tfont-size: 16px;\r\n}\r\n\r\n.pageName{\r\n\tfont-family: 'Open Sans', sans-serif;\r\n    color: white;\r\n\tfont-size: 14px;\r\n}\r\n\r\n.contentArea{\r\n\twidth:100%; \r\n\t/*height:619px;*/\r\n\r\n    overflow: hidden;\r\n}"

/***/ }),

/***/ "./src/app/player/view/quiz-fill-in-blank.component.html":
/***/ (function(module, exports) {

module.exports = "<div [ngStyle]='quizTagStyleObject'></div>\r\n<div [ngStyle]='quizQuestionStyleObject'>{{quizFillInBlank.question}}</div>\r\n<div [ngStyle] = 'quizTitleBoxStyleObject'></div>\r\n<div [ngStyle]='quizTitleStyleObject'>{{quizFillInBlank.quizAnswerTitle}}</div>\r\n<input type='text' [ngStyle]='quizAnswerStyleObject' [(ngModel)]=\"learnerResponse\">\r\n<button type='button' [ngStyle]='quizButtonStyleObject' (click)='submitPressed()'>Submit</button>"

/***/ }),

/***/ "./src/app/player/view/quiz-fill-in-blank.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuizFillInBlankComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_fill_in_blank_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/quiz-fill-in-blank.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__quiz_component__ = __webpack_require__("./src/app/player/view/quiz.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__ = __webpack_require__("./src/app/model/services/scorm/lms.constant.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * Created by vpozharov on 3/10/2017.
 */




var QuizFillInBlankComponent = /** @class */ (function (_super) {
    __extends(QuizFillInBlankComponent, _super);
    function QuizFillInBlankComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // Question text box
        _this.questionTop = 29;
        _this.questionLeft = 27;
        _this.questionRight = 27;
        _this.questionHeight = 107;
        _this.questionPaddingLeft = 5;
        _this.questionPaddingRight = 5;
        // Answer title box
        _this.titleBoxLeft = 27;
        _this.titleBoxRight = 27;
        _this.titleBoxTop = 160 - 10;
        _this.titleBoxHeight = 40 + 70;
        _this.titleBoxBackground = '#D8D8D8';
        // Answer Title
        _this.titleFontColor = 'Black';
        _this.titleFontBold = 'Bold';
        _this.titleFontSize = 18;
        _this.titleHeight = 30;
        _this.titleLeft = 43;
        _this.titleTop = 160;
        // Answer
        _this.answerLeft = 43;
        _this.answerRight = 43;
        _this.answerInitTop = 198;
        _this.answerHeight = 40;
        _this.answerFontSize = 32;
        return _this;
    }
    /**
     * ngOnInit() call initQuizComponent to initialize QUIZ/SCORM by passing quizFillInBlank
     *
     */
    QuizFillInBlankComponent.prototype.ngOnInit = function () {
        this.initQuizComponent(this.quizFillInBlank.quizName);
    };
    Object.defineProperty(QuizFillInBlankComponent.prototype, "quizTagStyleObject", {
        /**
         * Creates a ngStyle object for quizFillInBlank frame
         * @returns any (ngStyle object)
         */
        get: function () {
            return _super.prototype.getQuizOuterBoxStyle.call(this, this.quizFillInBlank);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankComponent.prototype, "quizQuestionStyleObject", {
        /**
         * Creates a ngStyle object for quiz fill in blank question
         * @returns any (ngStyle object)
         */
        get: function () {
            var left = this.quizFillInBlank.x + this.questionLeft;
            var top = this.quizFillInBlank.y + this.questionTop;
            var width = this.quizFillInBlank.width
                - this.questionLeft - this.questionRight
                - this.questionPaddingLeft - this.questionPaddingRight;
            return this.getQuizBoxStyle(this.quizFillInBlank, left, top, width, this.questionHeight);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankComponent.prototype, "quizTitleBoxStyleObject", {
        /**
         * Creates a ngStyle object for quiz fill in blank title box
         * @returns any (ngStyle object)
         */
        get: function () {
            var top = this.quizFillInBlank.y + this.titleBoxTop;
            var left = this.quizFillInBlank.x + this.titleBoxLeft;
            var width = this.quizFillInBlank.width - this.titleBoxLeft
                - this.titleBoxRight - this.paddingRight - this.paddingLeft;
            return this.getQuizBoxStyle(this.quizFillInBlank, left, top, width, this.titleBoxHeight, this.titleBoxBackground);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankComponent.prototype, "quizTitleStyleObject", {
        /**
         * Creates a ngStyle object for quiz fill in blank title
         * @returns any (ngStyle object)
         */
        get: function () {
            var top = this.quizFillInBlank.y + this.titleTop;
            var left = this.quizFillInBlank.x + this.titleLeft;
            var width = this.quizFillInBlank.width - this.titleBoxLeft - this.titleBoxRight;
            return this.getQuizLabelStyle(this.quizFillInBlank, left, top, width, this.titleFontSize, this.titleFontBold, 'left');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankComponent.prototype, "quizAnswerStyleObject", {
        /**
         * Creates a ngStyle object for quiz fill in blank answer
         * @returns any (ngStyle object)
         */
        get: function () {
            var top = this.quizFillInBlank.y + this.answerInitTop;
            var left = this.answerLeft + this.quizFillInBlank.x;
            var width = this.quizFillInBlank.width
                - this.answerLeft
                - this.paddingRight
                - this.paddingLeft
                - this.answerRight;
            return this.getQuizBoxStyle(this.quizFillInBlank, left, top, width, this.answerHeight, this.backColor, this.answerFontSize);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankComponent.prototype, "quizButtonStyleObject", {
        /**
         * Creates a ngStyle object for quizFillInBlank submit buttom
         * @returns any (ngStyle object)
         */
        get: function () {
            var left = this.quizFillInBlank.x + (this.quizFillInBlank.width - this.submitButtonWidth) / 2;
            var top = this.quizFillInBlank.y + this.quizFillInBlank.height + 17;
            return this.getQuizButtonStyle(this.quizFillInBlank, top, left);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * getQuizType
     *
     */
    QuizFillInBlankComponent.prototype.getQuizType = function () {
        return __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__["a" /* LMSConstant */].FILL_IN;
    };
    /**
     * getLearnerResponse function
     *
     * @returns string
     */
    QuizFillInBlankComponent.prototype.getLearnerResponse = function () {
        return this.learnerResponse;
    };
    /**
     * getCorrectResponses function get correction response in array
     *
     * @returns string
     */
    QuizFillInBlankComponent.prototype.getCorrectResponses = function () {
        return this.quizFillInBlank.correctAnswer;
    };
    /**
     * getDescription question/description
     *
     * @returns string
     */
    QuizFillInBlankComponent.prototype.getDescription = function () {
        return this.quizFillInBlank.question;
    };
    /**
     * validateAnswer function validate learner's response
     *
     * @returns boolean true if
     *          1) learner input is correct or
     *          2) learner input is incorrect AND multipleAttemptFlag false
     *          3) learner input is incorrect AND learnerAttempt is no less than allowedoption
     *
     */
    QuizFillInBlankComponent.prototype.validateAnswer = function (displayAlert) {
        if (displayAlert === void 0) { displayAlert = true; }
        var validate = true;
        if (this.getLearnerResponse().trim() === '') {
            validate = false;
            this.displayMessage('You must enter an answer to continue.');
        }
        else {
            // Leaner response is correct
            if (this.quizFillInBlank.correctAnswer === this.getLearnerResponse()) {
                // if feedbackFlag is true and feedBackCorrectMessage is not empty
                if (this.quizFillInBlank.feedBackFlag && this.quizFillInBlank.feedbackCorrectMessage !== '') {
                    this.displayMessage(this.quizFillInBlank.feedbackCorrectMessage);
                }
                this.gotoNextPage = true;
            }
            else { // Leaner response is incorrect
                this.learnerAttempt = this.learnerAttempt + 1;
                // if multipleAttemptFlag is true and learnerAttempt is less than allowed
                if (this.quizFillInBlank.multipleAttemptFlag
                    && this.quizFillInBlank.numberOfAttempts > this.learnerAttempt) {
                    this.displayMessage(this.quizFillInBlank.feedbackIncorrectAttempt);
                }
                else {
                    // if feedbackFlag is true and feedbackIncorrectMessage is not empty
                    if (this.quizFillInBlank.feedBackFlag && this.quizFillInBlank.feedbackIncorrectMessage !== '') {
                        this.displayMessage(this.quizFillInBlank.feedbackIncorrectMessage);
                    }
                    this.gotoNextPage = true;
                }
            }
        }
        console.log('---validateAnswer validate=' + validate);
        return validate;
    };
    var _a;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_fill_in_blank_data_object__["a" /* QuizFillInBlankDataObject */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_fill_in_blank_data_object__["a" /* QuizFillInBlankDataObject */]) === "function" && _a || Object)
    ], QuizFillInBlankComponent.prototype, "quizFillInBlank", void 0);
    QuizFillInBlankComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-quiz-fill-in-blank',
            template: __webpack_require__("./src/app/player/view/quiz-fill-in-blank.component.html")
        })
        /**
         * Component for DIF quiz Fill-In-Blank
         */
    ], QuizFillInBlankComponent);
    return QuizFillInBlankComponent;
}(__WEBPACK_IMPORTED_MODULE_2__quiz_component__["a" /* QuizComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/quiz-fill-in-blank.component.js.map

/***/ }),

/***/ "./src/app/player/view/quiz-match.component.html":
/***/ (function(module, exports) {

module.exports = "<div [ngStyle]='quizTagStyleObject'></div>\r\n\r\n<div [ngStyle]='quizQuestionStyleObject'>{{quizMatch.question}}</div>\r\n\r\n<div *ngIf=\"quizMatch.aAnswerText != ''\" [ngStyle]=\"quizAnswerTitleStyleObject1\">{{quizMatch.aTitle}}</div>\r\n<div *ngIf=\"quizMatch.bAnswerText != ''\" [ngStyle]=\"quizAnswerTitleStyleObject2\">{{quizMatch.bTitle}}</div>\r\n<div *ngIf=\"quizMatch.cAnswerText != ''\" [ngStyle]=\"quizAnswerTitleStyleObject3\">{{quizMatch.cTitle}}</div>\r\n<div *ngIf=\"quizMatch.dAnswerText != ''\" [ngStyle]=\"quizAnswerTitleStyleObject4\">{{quizMatch.dTitle}}</div>\r\n\r\n<div *ngIf=\"quizMatch.aAnswerText != ''\" [ngStyle]=\"quizAnswerStyleObject1\">{{quizMatch.aAnswerText}}</div>\r\n<div *ngIf=\"quizMatch.bAnswerText != ''\" [ngStyle]=\"quizAnswerStyleObject2\">{{quizMatch.bAnswerText}}</div>\r\n<div *ngIf=\"quizMatch.cAnswerText != ''\" [ngStyle]=\"quizAnswerStyleObject3\">{{quizMatch.cAnswerText}}</div>\r\n<div *ngIf=\"quizMatch.dAnswerText != ''\" [ngStyle]=\"quizAnswerStyleObject4\">{{quizMatch.dAnswerText}}</div>\r\n\r\n<select *ngIf=\"quizMatch.aAnswerText != ''\" [ngStyle]=\"quizComboStyleObject1\" [(ngModel)]=\"learnerResponses[0]\">\r\n    <option *ngFor=\"let str of quizMatch.optionChoices\" [value]=\"str\">\r\n        {{ str }}\r\n    </option>\r\n</select>\r\n\r\n<select *ngIf=\"quizMatch.bAnswerText != ''\" [ngStyle]=\"quizComboStyleObject2\" [(ngModel)]=\"learnerResponses[1]\">\r\n    <option *ngFor=\"let str of quizMatch.optionChoices\" [value]=\"str\">\r\n        {{ str }}\r\n    </option>\r\n</select>\r\n\r\n<select *ngIf=\"quizMatch.cAnswerText != ''\" [ngStyle]=\"quizComboStyleObject3\" [(ngModel)]=\"learnerResponses[2]\">\r\n    <option *ngFor=\"let str of quizMatch.optionChoices\" [value]=\"str\">\r\n        {{ str }}\r\n    </option>\r\n</select>\r\n\r\n<select *ngIf=\"quizMatch.dAnswerText != ''\" [ngStyle]=\"quizComboStyleObject4\" [(ngModel)]=\"learnerResponses[3]\">\r\n    <option *ngFor=\"let str of quizMatch.optionChoices\" [value]=\"str\">\r\n        {{ str }}\r\n    </option>\r\n</select>\r\n\r\n<div *ngIf=\"quizMatch.aAnswerText != ''\" [ngStyle]=\"quizChoiceStyleObject1\">{{quizMatch.aDisplayText}}</div>\r\n<div *ngIf=\"quizMatch.bAnswerText != ''\" [ngStyle]=\"quizChoiceStyleObject2\">{{quizMatch.bDisplayText}}</div>\r\n<div *ngIf=\"quizMatch.cAnswerText != ''\" [ngStyle]=\"quizChoiceStyleObject3\">{{quizMatch.cDisplayText}}</div>\r\n<div *ngIf=\"quizMatch.dAnswerText != ''\" [ngStyle]=\"quizChoiceStyleObject4\">{{quizMatch.dDisplayText}}</div>\r\n\r\n<button type='button' [ngStyle]='quizButtonStyleObject' (click)=\"submitPressed()\">Submit</button>\r\n"

/***/ }),

/***/ "./src/app/player/view/quiz-match.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuizMatchComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_match_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/quiz-match.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__quiz_component__ = __webpack_require__("./src/app/player/view/quiz.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__ = __webpack_require__("./src/app/model/services/scorm/lms.constant.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * Created by vpozharov.
 */




var QuizMatchComponent = /** @class */ (function (_super) {
    __extends(QuizMatchComponent, _super);
    /**
     * Constructor for QuizMatchComponent
     * (owerrides the base constructor to setup different modular variables)
     */
    function QuizMatchComponent() {
        var _this = _super.call(this) || this;
        // Question text box
        _this.questionTop = 29;
        _this.questionLeft = 27;
        _this.questionHeight = 54;
        _this.questionPaddingLeft = 5;
        _this.questionPaddingRight = 5;
        // Correlation between the quiz width and question width
        _this.questionWidthSlope = 0.9996;
        _this.questionWidthIntercept = -53.181;
        // Answer Titles:
        _this.answerTitleWidth = 40;
        // Answer
        _this.answerPaddingRight = 5;
        _this.answerPaddingLeft = 5;
        _this.answerInitTop = 117;
        _this.answerHeight = 63;
        // Correlation between the quiz width and question width
        _this.answerWidthSlope = 0.398;
        _this.answerWidthIntercept = -31.832;
        _this.answerGap = 19;
        // Combo
        _this.comboWidth = 53;
        _this.comboHeight = 30;
        _this.comboFontSize = 12;
        _this.learnerResponses = [];
        _this.fontSize = 16;
        return _this;
    }
    /**
     * ngOnInit() call initQuizComponent to initialize QUIZ/SCORM by passing quizMatch data object name
     *
     */
    QuizMatchComponent.prototype.ngOnInit = function () {
        this.initQuizComponent(this.quizMatch.quizName);
        // if get from LMS
        if (this.interaction.learnerResponse !== undefined) {
            // set learner response
            var lResponse = this.interaction.learnerResponse.split('[,]');
            for (var i = 0; i < lResponse.length; i++) {
                this.learnerResponses[i] = lResponse[i].charAt(4);
            }
            this.quizMatch.setQuizColumn(this.interaction.correctResponses);
        }
        else {
            this.quizMatch.shuffle();
            this.setLearnerResponses();
        }
    };
    Object.defineProperty(QuizMatchComponent.prototype, "quizTagStyleObject", {
        /**
         * Creates a ngStyle object for quiz match frame
         * @returns any (ngStyle object)
         */
        get: function () {
            return _super.prototype.getQuizOuterBoxStyle.call(this, this.quizMatch);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizQuestionStyleObject", {
        /**
         * Creates a ngStyle object for quiz match question
         * @returns any (ngStyle object)
         */
        get: function () {
            var left = this.quizMatch.x + this.questionLeft;
            var top = this.quizMatch.y + this.questionTop;
            var width = this.quizMatch.width * this.questionWidthSlope + this.questionWidthIntercept
                - this.questionPaddingLeft - this.questionPaddingRight;
            return this.getQuizBoxStyle(this.quizMatch, left, top, width, this.questionHeight);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizButtonStyleObject", {
        /**
         * Creates a ngStyle object for quiz match submit buttom
         * @returns any (ngStyle object)
         */
        get: function () {
            var left = this.quizMatch.x + (this.quizMatch.width - this.submitButtonWidth) / 2;
            var top = this.quizMatch.y + this.quizMatch.height + 17;
            return this.getQuizButtonStyle(this.quizMatch, top, left);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizAnswerStyleObject1", {
        /**
         * Creates a ngStyle object for quiz match answer A (1)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerMetrix(1);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizAnswerStyleObject2", {
        /**
         * Creates a ngStyle object for quiz match answer B (2)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerMetrix(2);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizAnswerStyleObject3", {
        /**
         * Creates a ngStyle object for quiz match answer C (3)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerMetrix(3);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizAnswerStyleObject4", {
        /**
         * Creates a ngStyle object for quiz match answer D (4)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerMetrix(4);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizAnswerTitleStyleObject1", {
        /**
         * Creates a ngStyle object for quiz match answer title A (1)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerTitleMetrix(1);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizAnswerTitleStyleObject2", {
        /**
         * Creates a ngStyle object for quiz match answer title B (2)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerTitleMetrix(2);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizAnswerTitleStyleObject3", {
        /**
         * Creates a ngStyle object for quiz match answer title C (3)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerTitleMetrix(3);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizAnswerTitleStyleObject4", {
        /**
         * Creates a ngStyle object for quiz match answer title D (4)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerTitleMetrix(4);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizChoiceStyleObject1", {
        /**
         * Creates a ngStyle object for quiz match choice A (1)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateChoiceMetrix(1);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizChoiceStyleObject2", {
        /**
         * Creates a ngStyle object for quiz match choice B (2)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateChoiceMetrix(2);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizChoiceStyleObject3", {
        /**
         * Creates a ngStyle object for quiz match choice C (3)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateChoiceMetrix(3);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizChoiceStyleObject4", {
        /**
         * Creates a ngStyle object for quiz match choice D (4)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateChoiceMetrix(4);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizComboStyleObject1", {
        /**
         * Creates a ngStyle object for quiz match choice combo A (1)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerComboMetrix(1);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizComboStyleObject2", {
        /**
         * Creates a ngStyle object for quiz match choice combo B (2)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerComboMetrix(2);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizComboStyleObject3", {
        /**
         * Creates a ngStyle object for quiz match choice combo C (3)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerComboMetrix(3);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchComponent.prototype, "quizComboStyleObject4", {
        /**
         * Creates a ngStyle object for quiz match choice combo D (4)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerComboMetrix(4);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a ngStyle object for quiz match answer
     * @param - answer bumber (1-4)
     * @returns any (ngStyle object)
     */
    QuizMatchComponent.prototype.calculateAnswerMetrix = function (answerNumber) {
        var top = this.quizMatch.y
            + this.answerInitTop
            + (answerNumber - 1) * (this.answerHeight + this.answerGap);
        var left = this.questionLeft + this.quizMatch.x + this.answerTitleWidth;
        var width = this.quizMatch.width * this.answerWidthSlope + this.answerWidthIntercept
            - this.answerPaddingLeft - this.answerPaddingRight;
        return this.getQuizBoxStyle(this.quizMatch, left, top, width, this.answerHeight);
    };
    /**
     * Creates a ngStyle object for quiz match answer
     * @param - answer bumber (1-4)
     * @returns any (ngStyle object)
     */
    QuizMatchComponent.prototype.calculateChoiceMetrix = function (answerNumber) {
        var top = this.quizMatch.y
            + this.answerInitTop
            + (answerNumber - 1) * (this.answerHeight + this.answerGap);
        var left = this.quizMatch.x + this.quizMatch.width / 2 + this.comboWidth;
        var width = this.quizMatch.width * this.answerWidthSlope + this.answerWidthIntercept
            - this.answerPaddingLeft - this.answerPaddingRight;
        return this.getQuizBoxStyle(this.quizMatch, left, top, width, this.answerHeight);
    };
    /**
     * Creates a ngStyle object for quiz match answer title (e.g. 'A:'
     * @param - answer bumber (1-4)
     * @returns any (ngStyle object)
     */
    QuizMatchComponent.prototype.calculateAnswerTitleMetrix = function (answerNumber) {
        var top = this.quizMatch.y
            + this.answerInitTop
            + (answerNumber - 1) * (this.answerHeight + this.answerGap);
        var left = this.questionLeft + this.quizMatch.x;
        return this.getQuizAnswerTitleStyle(this.quizMatch, top, left, this.answerTitleWidth, this.answerHeight);
    };
    /**
     * Creates a ngStyle object for quiz match answer title (e.g. 'A:'
     * @param - answer bumber (1-4)
     * @returns any (ngStyle object)
     */
    QuizMatchComponent.prototype.calculateAnswerComboMetrix = function (answerNumber) {
        var top = this.quizMatch.y
            + this.answerInitTop
            + (answerNumber - 1) * (this.answerHeight + this.answerGap)
            + (this.answerHeight - this.comboHeight) / 2;
        var left = this.quizMatch.x + this.quizMatch.width / 2;
        return this.getQuizAnswerTitleStyle(this.quizMatch, top, left, this.comboWidth - 2, this.comboHeight, this.comboFontSize);
    };
    /**
     * set setLearnerResponses to '?'
     *
     */
    QuizMatchComponent.prototype.setLearnerResponses = function () {
        this.learnerResponses = [];
        for (var i = 0; i < this.quizMatch.correctAnswers.length; i++) {
            this.learnerResponses[i] = '?';
        }
    };
    /**
     * getQuizType
     *
     */
    QuizMatchComponent.prototype.getQuizType = function () {
        return __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__["a" /* LMSConstant */].MATCHING;
    };
    /**
     * getCorrectResponses function get correction response
     *
     * @returns string
     */
    QuizMatchComponent.prototype.getCorrectResponses = function () {
        var returnString = '';
        for (var i = 0; i < this.quizMatch.availableAnswersOrder.length; i++) {
            if (returnString !== '') {
                returnString = returnString + '[,]';
            }
            returnString = returnString + this.quizMatch.availableAnswersOrder[i] + '[.]' + this.quizMatch.correctAnswers[i];
        }
        return returnString;
    };
    /**
     * getCorrectResponsesText function
     *
     * @returns string
     */
    QuizMatchComponent.prototype.getCorrectResponsesText = function () {
        var returnString = '';
        for (var i = 0; i < this.quizMatch.availableAnswersOrder.length; i++) {
            var j = (this.quizMatch.correctAnswers[i] === 'A') ? 0 :
                (this.quizMatch.correctAnswers[i] === 'B') ? 1 :
                    (this.quizMatch.correctAnswers[i] === 'C') ? 2 :
                        (this.quizMatch.correctAnswers[i] === 'D') ? 3 : 0;
            if (returnString !== '') {
                returnString = returnString + '[,]';
            }
            returnString = returnString + this.quizMatch.availableAnswers[j] + '[.]' +
                this.quizMatch.availableChoices[i];
        }
        return returnString;
    };
    /**
     * getLearnerResponse function
     *
     * @returns string
     */
    QuizMatchComponent.prototype.getLearnerResponse = function () {
        var returnString = '';
        for (var i = 0; i < this.quizMatch.availableAnswersOrder.length; i++) {
            if (returnString !== '') {
                returnString = returnString + '[,]';
            }
            returnString = returnString + this.quizMatch.availableAnswersOrder[i] + '[.]' + this.learnerResponses[i];
        }
        return returnString;
    };
    /**
     * getLearnerResponseText function
     *
     * @returns string
     */
    QuizMatchComponent.prototype.getLearnerResponseText = function () {
        var returnString = '';
        for (var i = 0; i < this.quizMatch.availableAnswersOrder.length; i++) {
            var j = (this.learnerResponses[i] === 'A') ? 0 :
                (this.learnerResponses[i] === 'B') ? 1 :
                    (this.learnerResponses[i] === 'C') ? 2 :
                        (this.learnerResponses[i] === 'D') ? 3 : 0;
            if (returnString !== '') {
                returnString = returnString + '[,]';
            }
            returnString = returnString + this.quizMatch.availableAnswers[j] + '[.]'
                + this.quizMatch.availableChoices[i];
        }
        return returnString;
    };
    /**
     * getDescription question/description
     *
     * @returns string
     */
    QuizMatchComponent.prototype.getDescription = function () {
        return this.quizMatch.question;
    };
    /**
     * validateAnswer function validate learner's response
     *
     * @returns boolean true if
     *          1) learner input is correct or
     *          2) learner input is incorrect AND multipleAttemptFlag false
     *          3) learner input is incorrect AND learnerAttempt is no less than allowedoption
     *
     */
    QuizMatchComponent.prototype.validateAnswer = function (displayAlert) {
        if (displayAlert === void 0) { displayAlert = true; }
        var validate = true;
        // console.log('@@@@@@this.getCorrectResponses()=' + this.getCorrectResponses());
        // console.log('@@@@@@this.getLearnerResponse()=' + this.getLearnerResponse());
        if (this.getLearnerResponse().includes('?')) {
            validate = false;
            this.displayMessage('You must make all choices before continuing.');
        }
        else if (!this.isLearnerResponseUnique()) {
            validate = false;
            this.displayMessage('You may only select each letter one time.');
        }
        else {
            if (this.getCorrectResponses() === this.getLearnerResponse()) { // Leaner response is correct
                // if feedbackFlag is true and feedbackCorrectMessage is not empty
                if (this.quizMatch.feedBackFlag && this.quizMatch.feedbackCorrectMessage !== '') {
                    this.displayMessage(this.quizMatch.feedbackCorrectMessage);
                }
                this.gotoNextPage = true;
            }
            else { // Leaner response is incorrect
                this.learnerAttempt = this.learnerAttempt + 1;
                // if multipleAttemptFlag is true and learnerAttempt is less than allowed
                if (this.quizMatch.multipleAttemptFlag && this.quizMatch.numberOfAttempts > this.learnerAttempt) {
                    this.displayMessage(this.quizMatch.feedbackIncorrectAttempt);
                }
                else {
                    // if feedbackFlag is true and feedbackIncorrectMessage is not empty
                    if (this.quizMatch.feedBackFlag && this.quizMatch.feedbackIncorrectMessage !== '') {
                        this.displayMessage(this.quizMatch.feedbackIncorrectMessage);
                    }
                    this.gotoNextPage = true;
                }
            }
        }
        console.log('---validateAnswer validate=' + validate);
        return validate;
    };
    /**
     * isLearnerResponseUnique function
     *
     * @returns boolean
     *
     */
    QuizMatchComponent.prototype.isLearnerResponseUnique = function () {
        for (var i = 0; i < this.learnerResponses.length; i++) {
            for (var j = i + 1; j < this.learnerResponses.length; j++) {
                if (this.learnerResponses[i] === this.learnerResponses[j]) {
                    return false;
                }
            }
        }
        return true;
    };
    var _a;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_match_data_object__["a" /* QuizMatchDataObject */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_match_data_object__["a" /* QuizMatchDataObject */]) === "function" && _a || Object)
    ], QuizMatchComponent.prototype, "quizMatch", void 0);
    QuizMatchComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-quiz-match',
            template: __webpack_require__("./src/app/player/view/quiz-match.component.html")
        })
        /**
         * Component for DIF quiz match
         */
        ,
        __metadata("design:paramtypes", [])
    ], QuizMatchComponent);
    return QuizMatchComponent;
}(__WEBPACK_IMPORTED_MODULE_2__quiz_component__["a" /* QuizComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/quiz-match.component.js.map

/***/ }),

/***/ "./src/app/player/view/quiz-multiple-choice.component.html":
/***/ (function(module, exports) {

module.exports = "<div [ngStyle]='quizTagStyleObject'></div>\r\n<div [ngStyle]=\"quizQuestionStyleObject\">{{quizMultipleChoice.question}}</div>\r\n\r\n<input *ngIf=\"quizMultipleChoice.aChoiceText != ''\" type='radio' name='radiogroup' [ngStyle]=\"quizRadioStyleObject1\" value = 'A' [(ngModel)]=\"learnerResponse\">\r\n<input *ngIf=\"quizMultipleChoice.bChoiceText != ''\" type='radio' name='radiogroup' [ngStyle]=\"quizRadioStyleObject2\" value = 'B' [(ngModel)]=\"learnerResponse\">\r\n<input *ngIf=\"quizMultipleChoice.cChoiceText != ''\" type='radio' name='radiogroup' [ngStyle]=\"quizRadioStyleObject3\" value = 'C' [(ngModel)]=\"learnerResponse\">\r\n<input *ngIf=\"quizMultipleChoice.dChoiceText != ''\" type='radio' name='radiogroup' [ngStyle]=\"quizRadioStyleObject4\" value = 'D' [(ngModel)]=\"learnerResponse\">\r\n\r\n<div *ngIf=\"quizMultipleChoice.aChoiceText != ''\" [ngStyle]=\"quizAnswerStyleObject1\">\r\n    {{quizMultipleChoice.aChoiceText}}\r\n</div>\r\n\r\n<div *ngIf=\"quizMultipleChoice.bChoiceText != ''\" [ngStyle]=\"quizAnswerStyleObject2\">\r\n    {{quizMultipleChoice.bChoiceText}}\r\n</div>\r\n<div *ngIf=\"quizMultipleChoice.cChoiceText != ''\" [ngStyle]=\"quizAnswerStyleObject3\">\r\n    {{quizMultipleChoice.cChoiceText}}\r\n</div>\r\n<div *ngIf=\"quizMultipleChoice.dChoiceText != ''\" [ngStyle]=\"quizAnswerStyleObject4\">\r\n    {{quizMultipleChoice.dChoiceText}}\r\n</div>\r\n\r\n<button type='button' [ngStyle] =\"quizButtonStyleObject\" (click)=\"submitPressed()\" >Submit</button>\r\n\r\n"

/***/ }),

/***/ "./src/app/player/view/quiz-multiple-choice.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuizMultipleChoiceComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_multiple_choice_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/quiz-multiple-choice.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__quiz_component__ = __webpack_require__("./src/app/player/view/quiz.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__ = __webpack_require__("./src/app/model/services/scorm/lms.constant.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * Created by vpozharov on 3/10/2017.
 */




var QuizMultipleChoiceComponent = /** @class */ (function (_super) {
    __extends(QuizMultipleChoiceComponent, _super);
    function QuizMultipleChoiceComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // Question text box
        _this.questionTop = 29;
        // private questionBottom: number = 29;
        _this.questionLeft = 27;
        _this.questionRight = 26;
        _this.questionHeight = 54;
        _this.questionPaddingLeft = 5;
        _this.questionPaddingRight = 5;
        // Answers
        _this.gapLeft = 13; // A gap between the radio button and answer text box
        _this.answerPaddingLeft = 5;
        _this.answerPaddingRight = 5;
        _this.answerLeft = 35;
        _this.answerRight = 35;
        _this.answerInitTop = 117;
        _this.answerHeight = 63;
        _this.answerGap = 19; // gap between answers
        return _this;
    }
    /**
     * ngOnInit() call initQuizComponent to initialize QUIZ/SCORM by passing QuizMultipleChoiceDataObject
     *
     */
    QuizMultipleChoiceComponent.prototype.ngOnInit = function () {
        this.initQuizComponent(this.quizMultipleChoice.quizName);
    };
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizTagStyleObject", {
        /**
         * Creates a ngStyle object for quizMultipleChoice frame
         * @returns any (ngStyle object)
         */
        get: function () {
            return _super.prototype.getQuizOuterBoxStyle.call(this, this.quizMultipleChoice);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizQuestionStyleObject", {
        /**
         * Creates a ngStyle object for quizMultipleChoice question
         * @returns any (ngStyle object)
         */
        get: function () {
            var left = this.quizMultipleChoice.x + this.questionLeft;
            var top = this.quizMultipleChoice.y + this.questionTop;
            var width = this.quizMultipleChoice.width - this.questionLeft - this.questionRight
                - this.questionPaddingLeft - this.questionPaddingRight;
            return this.getQuizBoxStyle(this.quizMultipleChoice, left, top, width, this.questionHeight);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizRadioStyleObject1", {
        /**
         * Creates a ngStyle object for quizMultipleChoice radio button A (1)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateRadioStyle(1);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizRadioStyleObject2", {
        /**
         * Creates a ngStyle object for quizMultipleChoice radio button B (2)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateRadioStyle(2);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizRadioStyleObject3", {
        /**
         * Creates a ngStyle object for quizMultipleChoice radio button C (3)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateRadioStyle(3);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizRadioStyleObject4", {
        /**
         * Creates a ngStyle object for quizMultipleChoice radio button D (4)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateRadioStyle(4);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a ngStyle object for quizMultipleChoice radio button
     * @param - radio button bumber (1-4)
     * @returns any (ngStyle object)
     */
    QuizMultipleChoiceComponent.prototype.calculateRadioStyle = function (answerNumber) {
        var answerTop = this.answerInitTop + (answerNumber - 1) * (this.answerHeight + this.answerGap);
        var radioTop = this.quizMultipleChoice.y
            + answerTop
            + (this.answerHeight - this.radioSize) / 2
            - (answerNumber - 1) * 2;
        var left = this.answerLeft + this.quizMultipleChoice.x;
        return this.getRadioButtonStyle(this.quizMultipleChoice, radioTop, left);
    };
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizAnswerStyleObject1", {
        /**
         * Creates a ngStyle object for quizMultipleChoice answer A (1)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerMetrix(1);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizAnswerStyleObject2", {
        /**
         * Creates a ngStyle object for quizMultipleChoice answer B (2)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerMetrix(2);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizAnswerStyleObject3", {
        /**
         * Creates a ngStyle object for quizMultipleChoice answer C (3)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerMetrix(3);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizAnswerStyleObject4", {
        /**
         * Creates a ngStyle object for quizMultipleChoice answer D (4)
         * @returns any (ngStyle object)
         */
        get: function () {
            return this.calculateAnswerMetrix(4);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a ngStyle object for quizMultipleChoice answer
     * @param - ranswer bumber (1-4)
     * @returns any (ngStyle object)
     */
    QuizMultipleChoiceComponent.prototype.calculateAnswerMetrix = function (answerNumber) {
        var top = this.quizMultipleChoice.y
            + this.answerInitTop
            + (answerNumber - 1) * (this.answerHeight + this.answerGap);
        var left = this.answerLeft + this.quizMultipleChoice.x + this.radioSize + this.gapLeft;
        var width = this.quizMultipleChoice.width
            - this.answerLeft - this.answerPaddingRight
            - this.answerPaddingLeft - this.answerPaddingRight
            - this.radioSize - this.gapLeft - this.answerRight;
        return this.getQuizBoxStyle(this.quizMultipleChoice, left, top, width, this.answerHeight, this.backColor, this.fontSize, 'normal'); // we need to prevent wrapping and handling of rc/lf in this control
    };
    Object.defineProperty(QuizMultipleChoiceComponent.prototype, "quizButtonStyleObject", {
        /**
         * Creates a ngStyle object for quizMultipleChoice submit buttom
         * @returns any (ngStyle object)
         */
        get: function () {
            var left = this.quizMultipleChoice.x + (this.quizMultipleChoice.width - this.submitButtonWidth) / 2;
            var top = this.quizMultipleChoice.y + this.quizMultipleChoice.height + 17;
            return this.getQuizButtonStyle(this.quizMultipleChoice, top, left);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * getQuizType
     *
     */
    QuizMultipleChoiceComponent.prototype.getQuizType = function () {
        return __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__["a" /* LMSConstant */].MULTIPLE_CHOICE;
    };
    /**
     * getLearnerResponse function
     *
     * @returns string
     */
    QuizMultipleChoiceComponent.prototype.getLearnerResponse = function () {
        return this.learnerResponse;
    };
    /**
     * getLearnerResponseText function
     *
     * @returns string
     */
    QuizMultipleChoiceComponent.prototype.getLearnerResponseText = function () {
        switch (this.learnerResponse) {
            case 'A':
                return this.quizMultipleChoice.aChoiceText;
            case 'B':
                return this.quizMultipleChoice.bChoiceText;
            case 'C':
                return this.quizMultipleChoice.cChoiceText;
            case 'D':
                return this.quizMultipleChoice.dChoiceText;
            default:
                return '';
        }
    };
    /**
     * getCorrectResponses function get correction response in array
     *
     * @returns string
     */
    QuizMultipleChoiceComponent.prototype.getCorrectResponses = function () {
        return this.quizMultipleChoice.correctChoice;
    };
    /**
     * getCorrectResponsesText function
     *
     * @returns string
     */
    QuizMultipleChoiceComponent.prototype.getCorrectResponsesText = function () {
        switch (this.quizMultipleChoice.correctChoice) {
            case 'A':
                return this.quizMultipleChoice.aChoiceText;
            case 'B':
                return this.quizMultipleChoice.bChoiceText;
            case 'C':
                return this.quizMultipleChoice.cChoiceText;
            case 'D':
                return this.quizMultipleChoice.dChoiceText;
            default:
                return '';
        }
    };
    /**
     * getDescription question/description
     *
     * @returns string
     */
    QuizMultipleChoiceComponent.prototype.getDescription = function () {
        return this.quizMultipleChoice.question;
    };
    /**
     * validateAnswer function validate learner's response
     *
     * @returns boolean true if
     *          1) learner select correct option or
     *          2) learner select incorrect option AND multipleAttemptFlag false
     *          3) learner select incorrect option AND learnerAttempt is no less than allowedoption
     *
     */
    QuizMultipleChoiceComponent.prototype.validateAnswer = function (displayAlert) {
        if (displayAlert === void 0) { displayAlert = true; }
        var validate = true;
        var feedbackMessage = '';
        switch (this.getLearnerResponse()) {
            case 'A':
                feedbackMessage = this.quizMultipleChoice.feedbackAMessage;
                break;
            case 'B':
                feedbackMessage = this.quizMultipleChoice.feedbackBMessage;
                break;
            case 'C':
                feedbackMessage = this.quizMultipleChoice.feedbackCMessage;
                break;
            case 'D':
                feedbackMessage = this.quizMultipleChoice.feedbackDMessage;
                break;
            default:
                break;
        }
        // console.log('---validateAnswer feedbackMessage=' + feedbackMessage);
        if (this.learnerResponse === '') {
            validate = false;
            this.displayMessage('You must select an answer to continue.');
        }
        else {
            // Leaner response is correct
            if (this.quizMultipleChoice.correctChoice === this.getLearnerResponse()) {
                // if feedbackFlag is true and feedbackMessage is not empty
                if (this.quizMultipleChoice.feedBackFlag && feedbackMessage !== '') {
                    this.displayMessage(feedbackMessage);
                }
                this.gotoNextPage = true;
            }
            else { // Leaner response is incorrect
                this.learnerAttempt = this.learnerAttempt + 1;
                // if multipleAttemptFlag is true and learnerAttempt is less than allowed
                if (this.quizMultipleChoice.multipleAttemptFlag &&
                    this.quizMultipleChoice.numberOfAttempts > this.learnerAttempt) {
                    this.displayMessage(this.quizMultipleChoice.feedbackIncorrectAttempt);
                }
                else {
                    // if feedbackFlag is true and feedbackMessage is not empty
                    if (this.quizMultipleChoice.feedBackFlag && feedbackMessage !== '') {
                        this.displayMessage(feedbackMessage);
                    }
                    this.gotoNextPage = true;
                }
            }
        }
        console.log('---validateAnswer validate=' + validate);
        return validate;
    };
    var _a;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_multiple_choice_data_object__["a" /* QuizMultipleChoiceDataObject */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_multiple_choice_data_object__["a" /* QuizMultipleChoiceDataObject */]) === "function" && _a || Object)
    ], QuizMultipleChoiceComponent.prototype, "quizMultipleChoice", void 0);
    QuizMultipleChoiceComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-quiz-multiple-choice',
            template: __webpack_require__("./src/app/player/view/quiz-multiple-choice.component.html"),
        })
        /**
         * Component for DIF quiz Multiple Choice
         */
    ], QuizMultipleChoiceComponent);
    return QuizMultipleChoiceComponent;
}(__WEBPACK_IMPORTED_MODULE_2__quiz_component__["a" /* QuizComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/quiz-multiple-choice.component.js.map

/***/ }),

/***/ "./src/app/player/view/quiz-result.component.html":
/***/ (function(module, exports) {

module.exports = "<div [ngStyle]='quizTagStyleObject'></div>\r\n<div [ngStyle]='quizHeaderStyleObject'></div>\r\n<div [ngStyle]='quizNameLabelStyleObject'>{{quizResult.resultsHeaderText}}</div>\r\n<div [ngStyle]='quizScoreLabelStyleObject'>{{quizResult.quizScore}}</div>\r\n<div [ngStyle]='quizFooterStyleObject' [innerHTML]='resultText'></div>\r\n"

/***/ }),

/***/ "./src/app/player/view/quiz-result.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuizResultComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_result_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/quiz-result.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__quiz_component__ = __webpack_require__("./src/app/player/view/quiz.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__ = __webpack_require__("./src/app/model/services/scorm/lms.constant.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
///<reference path="../../model/services/scorm/lms.constant.ts"/>
/**
 * Created by vpozharov on 3/29/2017.
 */




var QuizResultComponent = /** @class */ (function (_super) {
    __extends(QuizResultComponent, _super);
    /**
     * This is constructor for QuizResultComponent.
     *
     */
    function QuizResultComponent() {
        var _this = _super.call(this) || this;
        // Main Margins:
        _this.marginLeft = 16;
        _this.marginRight = 16;
        _this.marginTop = 16;
        _this.marginBottom = 16;
        // Header:
        _this.headerHeight = 100;
        _this.headerY = 30;
        // Space between the top and bottom containers
        _this.verticalSpace = 16;
        // Quiz Name label
        _this.quizNameTop = 6; // top 'margin' (relative position)
        _this.quizNameMargin = 30; // left and right margins
        _this.quizNameFontSize = 20;
        // Quiz Result label
        _this.quizResutTop = 37; // top 'margin' (relative position)
        _this.quizResultMargin = 20; // left and right margins
        _this.quizResultFontSize = 26;
        _this.quizResultFontWeight = 'bold';
        // Quiz result text
        _this.quizResultTextFontSize = 16;
        _this.finalScore = 0;
        return _this;
        // this.createResultData();
    }
    /**
     * ngOnInit() create objective dataobject and save to LMS if scormService is isInitialized
     *
     */
    QuizResultComponent.prototype.ngOnInit = function () {
        this.caculateFinalScore();
        if (this.scormService.isInitialized()) {
            var objective = this.scormService.getObjective(this.quizResult.quizName);
            // scoreRaw set _score_raw and _score_scaled
            objective.scoreRaw = this.finalScore;
            objective.completionStatus = __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__["a" /* LMSConstant */].COMPLETED;
            this.scormService.writeObjective(objective);
        }
    };
    Object.defineProperty(QuizResultComponent.prototype, "quizTagStyleObject", {
        /**
         * Creates a ngStyle object for quiz result frame
         * @returns any (ngStyle object)
         */
        get: function () {
            this.createResultData();
            return _super.prototype.getQuizOuterBoxStyle.call(this, this.quizResult);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultComponent.prototype, "quizHeaderStyleObject", {
        /**
         * Creates a ngStyle object for quiz result question
         * @returns any (ngStyle object)
         */
        get: function () {
            var left = this.quizResult.x + this.marginLeft;
            var top = this.quizResult.y + this.marginTop;
            var width = this.quizResult.width
                - this.marginLeft - this.marginRight - this.paddingLeft - this.paddingRight;
            return this.getQuizBoxStyle(this.quizResult, left, top, width, this.headerHeight);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultComponent.prototype, "quizNameLabelStyleObject", {
        /**
         * Creates a ngStyle object for quiz name label
         * @returns {any} - Quiz Name Label Style
         */
        get: function () {
            var left = this.quizResult.x + this.quizNameMargin;
            var top = this.quizResult.y + this.headerY + this.quizNameTop;
            var width = this.quizResult.width - this.quizNameMargin * 2;
            return this.getQuizLabelStyle(this.quizResult, left, top, width, this.quizNameFontSize);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultComponent.prototype, "quizScoreLabelStyleObject", {
        /**
         * Creates a ngStyle object for quiz score label
         * @returns {any} - Quiz Score Label Style
         */
        get: function () {
            var left = this.quizResult.x + this.quizResultMargin;
            var top = this.quizResult.y + this.headerY + this.quizResutTop;
            var width = this.quizResult.width - this.quizResultMargin * 2;
            return this.getQuizLabelStyle(this.quizResult, left, top, width, this.quizResultFontSize, this.quizResultFontWeight);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultComponent.prototype, "quizFooterStyleObject", {
        /**
         * Creates a ngStyle object for quiz bottom container
         * @returns any (ngStyle object)
         */
        get: function () {
            var left = this.quizResult.x + this.marginLeft;
            var top = this.quizResult.y + this.marginTop + this.headerHeight + this.verticalSpace;
            var width = this.quizResult.width
                - this.marginLeft - this.marginRight
                - this.paddingLeft - this.paddingRight;
            var height = this.quizResult.height - this.marginTop
                - this.headerHeight - this.verticalSpace - this.marginBottom;
            return this.getQuizBoxStyle(this.quizResult, left, top, width, height, this.backColor, this.quizResultTextFontSize);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultComponent.prototype, "resultText", {
        /**
         * Text in the bottom box of the quiz
         * @returns {string} - html with details of quizes with the same name as this one
         */
        get: function () {
            return this.quizResult.resultText; // for now
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Private functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Prepare test result data
     * TODO:    We need to strip out the code to caculate the finalScore in a seperate function
     *          since we need it for SCORM too
     */
    QuizResultComponent.prototype.createResultData = function () {
        // This procedure will be called twice from the template
        // Prevent re-calculating the data
        if (this.quizResult.quizScore !== '') {
            return;
        }
        var totalScore = 0;
        var html = '';
        var currentName = this.quizResult.quizName;
        var name = '';
        for (var i = 0; i < this.scormService.interactions.length; i++) {
            // check whether quizzes belong to the same group
            name = this.scormService.interactions[i].objectives[0];
            if (name === currentName) {
                totalScore += 1;
                // Create a header of the quiz result
                html += '<b>' + totalScore + '.&nbsp';
                if (this.scormService.interactions[i].result === 'correct') {
                    html += '<font color="#00ff00">Correct';
                }
                else {
                    html += '<font color="#ff0000">Incorrect';
                }
                html += '</b></font><br>';
                switch (this.scormService.interactions[i].type) {
                    case __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__["a" /* LMSConstant */].FILL_IN:
                        html += this.getQuizFillInResult(this.scormService.interactions[i]);
                        break;
                    case __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__["a" /* LMSConstant */].MATCHING:
                        html += this.getMatchResult(this.scormService.interactions[i]);
                        break;
                    case __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_lms_constant__["a" /* LMSConstant */].MULTIPLE_CHOICE:
                        html += this.getQuizMultipleChoiceResult(this.scormService.interactions[i]);
                        break;
                }
            }
        }
        // set data
        this.quizResult.quizScore = 'Total Score: ' + this.finalScore + '%';
        this.quizResult.resultText = html;
    };
    /**
     * Generate HTML for Fill quiz result
     * @param interaction - data of the quiz
     * @returns {string} -  html with quiz result description to be displayed in the bottom window
     */
    QuizResultComponent.prototype.getQuizFillInResult = function (interaction) {
        var html = '';
        // Question
        html += this.getQuizQuestionHtml(interaction);
        // Your answer
        if (this.quizResult.selectedAnswerFlag) {
            html += '<b>Your answer:&nbsp</b>' + interaction.learnerResponse + '<br>';
        }
        // Right answer
        if (this.quizResult.correctAnswerFlag) {
            html += '<b>Right answer:&nbsp</b>' + interaction.correctResponses + '<br>';
        }
        html += '<p>';
        return html;
    };
    /**
     * Generate HTML for FMultiple Choice quiz result
     * @param interaction - data of the quiz
     * @returns {string} -  html with quiz result description to be displayed in the bottom window
     */
    QuizResultComponent.prototype.getQuizMultipleChoiceResult = function (interaction) {
        var html = '';
        // Question
        html += this.getQuizQuestionHtml(interaction);
        // Your answer
        if (this.quizResult.selectedAnswerFlag) {
            if (interaction.learnerResponseText !== undefined) {
                html += '<b>Your answer:&nbsp</b>' + interaction.learnerResponseText + '<br>';
            }
            else {
                html += '<b>Your answer:&nbsp</b>' + interaction.learnerResponse + '<br>';
            }
        }
        // Right answer
        if (this.quizResult.correctAnswerFlag) {
            if (interaction.correctResponsesText !== undefined) {
                html += '<b>Right answer:&nbsp</b>' + interaction.correctResponsesText + '<br>';
            }
            else {
                html += '<b>Right answer:&nbsp</b>' + interaction.correctResponses + '<br>';
            }
        }
        html += '<p>';
        return html;
    };
    /**
     * Generate HTML for Match quiz result
     * @param interaction - data of the quiz
     * @returns {string} -  html with quiz result description to be displayed in the bottom window
     */
    QuizResultComponent.prototype.getMatchResult = function (interaction) {
        var html = '';
        // Question
        html += this.getQuizQuestionHtml(interaction);
        // Your answer
        if (this.quizResult.selectedAnswerFlag) {
            if (interaction.learnerResponseText !== undefined) {
                html += '<b>Your answer:&nbsp</b>' + this.splitResponceText(interaction.learnerResponseText) + '<br>';
            }
            else {
                html += '<b>Your answer:&nbsp</b>' + this.splitResponceText(interaction.learnerResponse) + '<br>';
            }
        }
        // Right answer
        if (this.quizResult.correctAnswerFlag) {
            if (interaction.correctResponsesText !== undefined) {
                html += '<b>Right answer:&nbsp</b>' + this.splitResponceText(interaction.correctResponsesText) + '<br>';
            }
            else {
                html += '<b>Right answer:&nbsp</b>' + this.splitResponceText(interaction.correctResponses) + '<br>';
            }
        }
        html += '<p>';
        return html;
    };
    /**
     * Generate html code for the quiz question
     * @param interaction - data of the quiz
     */
    QuizResultComponent.prototype.getQuizQuestionHtml = function (interaction) {
        var html = '';
        // Question
        if (this.quizResult.questionTextFlag) {
            html += '<b>Question:&nbsp</b>' + interaction.description + '<br>';
        }
        return html;
    };
    /**
     * Split answer text and return html
     * @param text - data of the quiz answer
     */
    QuizResultComponent.prototype.splitResponceText = function (text) {
        // Answer B[.]Choice B[,]Answer C[.]Choice C[,]Answer D[.]Choice D[,]Answer A[.]Choice A
        var html = '';
        var array = text.split('[,]');
        for (var i = 0; i < array.length; i++) {
            var members = array[i].split('[.]');
            html += '<br>' + members[0] + '<br>&emsp;&emsp;&emsp;matches<br>' + members[1] + '<br>';
            html += '----------------';
        }
        return html;
    };
    /**
     * caculateFinalScore
     *
     */
    QuizResultComponent.prototype.caculateFinalScore = function () {
        var score = 0;
        var totalScore = 0;
        var currentName = this.quizResult.quizName;
        for (var i = 0; i < this.scormService.interactions.length; i++) {
            if (this.quizResult.quizName === this.scormService.interactions[i].objectives[0]) {
                totalScore += 1;
                if (this.scormService.interactions[i].result === 'correct') {
                    score += 1;
                }
            }
        }
        if (totalScore > 0) {
            this.finalScore = Math.round(100 * score / totalScore);
        }
    };
    var _a;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_result_data_object__["a" /* QuizResultDataObject */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_components_quiz_result_data_object__["a" /* QuizResultDataObject */]) === "function" && _a || Object)
    ], QuizResultComponent.prototype, "quizResult", void 0);
    QuizResultComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-quiz-result',
            template: __webpack_require__("./src/app/player/view/quiz-result.component.html")
        })
        /**
         * Component for DIF quiz result
         */
        ,
        __metadata("design:paramtypes", [])
    ], QuizResultComponent);
    return QuizResultComponent;
}(__WEBPACK_IMPORTED_MODULE_2__quiz_component__["a" /* QuizComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/quiz-result.component.js.map

/***/ }),

/***/ "./src/app/player/view/quiz.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuizComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_services_scorm_service__ = __webpack_require__("./src/app/model/services/scorm-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_interaction__ = __webpack_require__("./src/app/model/services/scorm/interaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_services_scorm_lms_constant__ = __webpack_require__("./src/app/model/services/scorm/lms.constant.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");






/**
 * Base component for all quiz components
 */
var QuizComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * This is an empty constructor.
     *
     */
    function QuizComponent() {
        this.learnerResponse = '';
        this.learnerAttempt = 0;
        this.gotoNextPage = false;
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Common protected constants
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        this.quizBorderStyle = 'solid 1px black';
        this.borderRadius = 10;
        this.borderWidth = 2;
        this.borderColor = 'Black';
        this.backColor = 'white';
        this.fontName = 'Verdana'; // default font name
        this.fontColor = 'Black'; // default font color
        this.fontSize = 20;
        this.paddingRight = 5;
        this.paddingLeft = 5;
        // protected paddingTop: number = 5;
        // protected paddingBottom: number = 5;
        this.submitButtonWidth = 172;
        this.submitButtonHeoght = 35;
        this.submitButtonFontSize = 18;
        this.submitButtonFontBold = 'Bold';
        this.submitButtonFontColor = 'Black';
        this.radioSize = 25;
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        // protected _quizNameElement: ElementDataObject;
        // protected _questionElement: ElementDataObject;
        /**
         * A reference to the ScormService and PageService
         */
        this.scormService = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_2__model_services_scorm_service__["a" /* ScormService */]);
        this.pageService = __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */]);
    }
    /**
     * initQuizComponent
     *
     * @param  quizName
     *
     */
    QuizComponent.prototype.initQuizComponent = function (quizName) {
        this.interaction = this.scormService.GetInteractionByID(this.pageService.page.pageID);
        // if interaction is not available, create a new one
        if (this.interaction === undefined) {
            this.interaction = new __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_interaction__["a" /* Interaction */](this.pageService.page.pageID, this.getQuizType(), [quizName]);
        }
        else if (this.interaction.learnerResponse !== undefined) {
            this.learnerResponse = this.interaction.learnerResponse;
        }
    };
    /**
     * submitPressed function validate the answer first then set and save the interaction
     *
     *
     */
    QuizComponent.prototype.submitPressed = function () {
        // console.log('###QuizComponent.submitPressed this.getCorrectResponses()###' + this.getCorrectResponses());
        if (this.validateAnswer()) {
            this.interaction.addCorrectResponse(this.getCorrectResponses());
            // Added to save the actual text and not just the choice for Matching
            this.interaction.addCorrectResponseText(this.getCorrectResponsesText());
            this.interaction.setLearnerResponse(this.getLearnerResponse());
            this.interaction.setLearnerResponseText(this.getLearnerResponseText());
            this.interaction.description = this.getDescription();
            console.log('###QuizComponent.submitPressed() interaction = ' + this.interaction.serializeToString());
            this.scormService.saveInteraction(this.interaction);
            console.log('###QuizComponent.submitPressed loadNextPage###');
            if (this.gotoNextPage) {
                this.pageService.loadNextPage();
            }
        }
    };
    /**
     * getCorrectResponses function need to be overriden in its derived class
     *
     * @returns string
     */
    QuizComponent.prototype.getCorrectResponses = function () {
        return '';
    };
    /**
     * getCorrectResponsesText function need to be overriden in its derived class
     *
     * @returns string
     */
    QuizComponent.prototype.getCorrectResponsesText = function () {
        return '';
    };
    /**
     * getLearnerResponse function need to be overriden in its derived class
     *
     * @returns string
     */
    QuizComponent.prototype.getLearnerResponse = function () {
        return '';
    };
    /**
     * getLearnerResponseText function need to be overriden in its derived class
     *
     * @returns string
     */
    QuizComponent.prototype.getLearnerResponseText = function () {
        return '';
    };
    /**
     * getDescription function need to be overriden in its derived class
     *
     * @returns string
     */
    QuizComponent.prototype.getDescription = function () {
        return '';
    };
    /**
     * getQuizType function need to be overriden in its derived class
     *
     * @returns string
     */
    QuizComponent.prototype.getQuizType = function () {
        return __WEBPACK_IMPORTED_MODULE_4__model_services_scorm_lms_constant__["a" /* LMSConstant */].OTHER;
    };
    /**
     * validateAnswer function need to be overriden in its derived class
     *
     * @returns boolean
     */
    QuizComponent.prototype.validateAnswer = function (displayAlert) {
        if (displayAlert === void 0) { displayAlert = true; }
        return true;
    };
    /**
     * displayMessage function, will be replaced by DIF displayMessage
     *
     */
    QuizComponent.prototype.displayMessage = function (message) {
        __WEBPACK_IMPORTED_MODULE_0__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_5__model_services_pop_up_service__["a" /* PopUpService */]).openSystemMessage(message);
    };
    /**
     * Create quiz outer box style
     * @param component - child quiz component
     * @returns any - (ngStyle object)
     */
    QuizComponent.prototype.getQuizOuterBoxStyle = function (component) {
        return {
            'top.px': component.y,
            'left.px': component.x,
            'width.px': component.width,
            'height.px': component.height,
            'position': 'absolute',
            'z-index': component.z,
            'border': this.quizBorderStyle,
        };
    };
    /**
     * Create a quiz rounded box style used for "text boxes" (question, answer, etc.)
     * @param component - child quiz component
     * @param left - absolute x position of the box
     * @param top - absolute y position of the box
     * @param width - width of the box
     * @param height - height of the box
     * @returns any - ng style object
     */
    QuizComponent.prototype.getQuizBoxStyle = function (component, left, top, width, height, background, fontSize, whiteSpace) {
        if (background === void 0) { background = this.backColor; }
        if (fontSize === void 0) { fontSize = this.fontSize; }
        if (whiteSpace === void 0) { whiteSpace = 'pre-wrap'; }
        return {
            'left.px': left,
            'top.px': top,
            'width.px': width,
            'height.px': height,
            'z-index': component.z,
            'position': 'absolute',
            'border-radius': this.borderRadius + 'px',
            'border-style': 'solid',
            'border-width': this.borderWidth,
            'border-color': this.borderColor,
            'background-color': background,
            'white-space': whiteSpace,
            'overflow-y': 'auto',
            'font-family': this.fontName,
            'vertical-align': 'top',
            'font-size': fontSize + 'pt',
            'display': 'inline-block',
            'padding-left': this.paddingLeft + 'px',
            'padding-right': this.paddingRight + 'px',
        };
    };
    /**
     * Create a label style object
     * @param component
     * @param left
     * @param top
     * @param width
     * @param fontSize
     * @param fontWeight
     * @returns any - ng style object
     */
    QuizComponent.prototype.getQuizLabelStyle = function (component, left, top, width, fontSize, fontWeight, textAlign) {
        if (fontWeight === void 0) { fontWeight = 'normal'; }
        if (textAlign === void 0) { textAlign = 'center'; }
        return {
            'left.px': left,
            'top.px': top,
            'width.px': width,
            'z-index': component.z,
            'position': 'absolute',
            'font-family': this.fontName,
            'font-size': fontSize + 'pt',
            'font-weight': fontWeight,
            'text-align': textAlign,
            'display': 'inline-block',
        };
    };
    /**
     * Create a quiz button style
     * @param component
     * @param top
     * @param left
     * @returns any - ng style object
     */
    QuizComponent.prototype.getQuizButtonStyle = function (component, top, left) {
        return {
            'width.px': this.submitButtonWidth,
            'left.px': left,
            'top.px': top,
            'height.px': this.submitButtonHeoght,
            'position': 'absolute',
            'font-size': this.submitButtonFontSize + 'pt',
            'font-color': this.submitButtonFontColor,
            'fontWeight': this.submitButtonFontBold,
            'z-index': component.z,
            'font-family': this.fontName,
        };
    };
    /**
     * Create a quiz radio button style
     * @param component
     * @param top
     * @param left
     * @returns - ng style object
     */
    QuizComponent.prototype.getRadioButtonStyle = function (component, top, left) {
        return {
            'width.px': this.radioSize,
            'height.px': this.radioSize,
            'left.px': left,
            'top.px': top,
            'position': 'absolute',
            'enabled': 'true',
            'z-index': component.z,
        };
    };
    /**
     * Create a quiz answer tile style (letters A, B,...)
     * @param component
     * @param top
     * @param left
     * @param width
     * @param height
     * @returns - ng style object
     */
    QuizComponent.prototype.getQuizAnswerTitleStyle = function (component, top, left, width, height, fontSize) {
        if (fontSize === void 0) { fontSize = this.fontSize; }
        return {
            'width.px': width,
            'z-index': component.z,
            'position': 'absolute',
            'left.px': left,
            'top.px': top,
            'height.px': height,
            'font-size': this.fontSize + 'pt',
            'font-color': this.fontColor,
            'font-family': this.fontName,
            'display': 'flex',
            'align-items': 'center',
            'justify-content': 'center',
        };
    };
    return QuizComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/quiz.component.js.map

/***/ }),

/***/ "./src/app/player/view/radio-button.component.html":
/***/ (function(module, exports) {

module.exports = "<input #elementRef playerRadioButtonEventHandler [dataSource]=\"dataSource\" type='radio' [name]=\"radioButton.groupName\"\r\n[ngStyle]=\"inputTagStyle\" [checked]=\"radioButton.selected\" >\r\n"

/***/ }),

/***/ "./src/app/player/view/radio-button.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RadioButtonComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__abstract_component__ = __webpack_require__("./src/app/player/view/abstract.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var RadioButtonComponent = /** @class */ (function (_super) {
    __extends(RadioButtonComponent, _super);
    /**
     * The view model of the application's Angular radio button component.
     */
    function RadioButtonComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RadioButtonComponent.prototype, "inputTagStyle", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the input tag used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for this component's input tag.
         */
        get: function () {
            return this.commonStyleProperties;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    RadioButtonComponent.prototype.ngOnInit = function () {
        _super.prototype.ngOnInit.call(this);
        this.radioButton = this.dataSource;
    };
    RadioButtonComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-radio-button',
            template: __webpack_require__("./src/app/player/view/radio-button.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * The view model of the application's Angular radio button component.
         */
    ], RadioButtonComponent);
    return RadioButtonComponent;
}(__WEBPACK_IMPORTED_MODULE_1__abstract_component__["a" /* AbstractComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/radio-button.component.js.map

/***/ }),

/***/ "./src/app/player/view/text-display.component.html":
/***/ (function(module, exports) {

module.exports = "<div #elementRef playerTextEventHandler\r\n    [dataSource]=\"dataSource\"\r\n    [ngStyle]=\"divTagStyle\">\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/player/view/text-display.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextDisplayComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__text_component__ = __webpack_require__("./src/app/player/view/text.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TextDisplayComponent = /** @class */ (function (_super) {
    __extends(TextDisplayComponent, _super);
    /**
     * TODO:    Write description.
     */
    function TextDisplayComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(TextDisplayComponent.prototype, "divTagStyle", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the div tag used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for this component's div tag.
         */
        get: function () {
            return this.textStyleProperties;
        },
        enumerable: true,
        configurable: true
    });
    TextDisplayComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-text-display',
            template: __webpack_require__("./src/app/player/view/text-display.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * TODO:    Write description.
         */
    ], TextDisplayComponent);
    return TextDisplayComponent;
}(__WEBPACK_IMPORTED_MODULE_1__text_component__["a" /* TextComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/text-display.component.js.map

/***/ }),

/***/ "./src/app/player/view/text-input-area.component.html":
/***/ (function(module, exports) {

module.exports = "<textarea #elementRef playerTextEventHandler\r\n          [dataSource]=\"dataSource\"\r\n          [(ngModel)]=\"textDataSource.text\"\r\n          [ngStyle]=\"textareaTagStyle\"\r\n          [readonly]=\"textDataSource.isReadOnly\">\r\n</textarea>\r\n"

/***/ }),

/***/ "./src/app/player/view/text-input-area.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextInputAreaComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__text_component__ = __webpack_require__("./src/app/player/view/text.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TextInputAreaComponent = /** @class */ (function (_super) {
    __extends(TextInputAreaComponent, _super);
    /**
     * TODO:    Write description.
     */
    function TextInputAreaComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(TextInputAreaComponent.prototype, "textareaTagStyle", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the textarea tag used
         * in this component's template.
         *
         * @default A style Object containing the CSS properties for this component's textarea tag.
         */
        get: function () {
            return this.textStyleProperties;
        },
        enumerable: true,
        configurable: true
    });
    TextInputAreaComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-text-input-area',
            template: __webpack_require__("./src/app/player/view/text-input-area.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * TODO:    Write description.
         */
    ], TextInputAreaComponent);
    return TextInputAreaComponent;
}(__WEBPACK_IMPORTED_MODULE_1__text_component__["a" /* TextComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/text-input-area.component.js.map

/***/ }),

/***/ "./src/app/player/view/text-input.component.html":
/***/ (function(module, exports) {

module.exports = "<input type=\"text\"\r\n    #elementRef playerTextEventHandler\r\n    [dataSource]=\"dataSource\"\r\n    [(ngModel)]=\"textDataSource.text\"\r\n    [ngStyle]=\"inputTagStyle\"\r\n    [readonly]= \"textDataSource.isReadOnly\">\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/player/view/text-input.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextInputComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__text_component__ = __webpack_require__("./src/app/player/view/text.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TextInputComponent = /** @class */ (function (_super) {
    __extends(TextInputComponent, _super);
    /**
     * TODO:    Write description.
     */
    function TextInputComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(TextInputComponent.prototype, "inputTagStyle", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the input tag used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for this component's input tag.
         */
        get: function () {
            return this.textStyleProperties;
        },
        enumerable: true,
        configurable: true
    });
    TextInputComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-text-input',
            template: __webpack_require__("./src/app/player/view/text-input.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * TODO:    Write description.
         */
    ], TextInputComponent);
    return TextInputComponent;
}(__WEBPACK_IMPORTED_MODULE_1__text_component__["a" /* TextComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/text-input.component.js.map

/***/ }),

/***/ "./src/app/player/view/text.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__abstract_component__ = __webpack_require__("./src/app/player/view/abstract.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/**
 * TODO:    Write description.
 */
var TextComponent = /** @class */ (function (_super) {
    __extends(TextComponent, _super);
    function TextComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(TextComponent.prototype, "textStyleProperties", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * An Object containing style properties common to all of the application's text-related Angular view components in
         * addition to all the style properties common to all Angular view components.
         *
         * @default An Object containing all style properties common to both text-related, and general application view
         *          components.
         */
        get: function () {
            var tagStyle = this.commonStyleProperties;
            // These CSS properties have no data object source and are not user configurable.
            tagStyle['overflow'] = 'auto';
            tagStyle['padding-left'] = '3px';
            tagStyle['padding-right'] = '3px';
            tagStyle['text-align'] = this.textDataSource.alignment;
            tagStyle['background'] = this.textDataSource.hasBackground ?
                this.textDataSource.backgroundColor : 'transparent';
            tagStyle['font-family'] = this.textDataSource.font;
            tagStyle['font-size.px'] = this.textDataSource.fontSize;
            tagStyle['color'] = this.textDataSource.fontColor;
            tagStyle['font-style'] = this.textDataSource.isItalic ? 'italic' : 'normal';
            tagStyle['text-decoration'] = this.textDataSource.isUnderline ? 'underline' : 'none';
            tagStyle['font-weight'] = this.textDataSource.isBold ? 'bold' : 'normal';
            if (this.textDataSource.hasBorder) {
                tagStyle['border'] = '1px solid ' + this.textDataSource.borderColor;
                tagStyle['width.px'] = this.dataSource.width - (3 * 2) - 2;
                tagStyle['height.px'] = this.dataSource.height - 2;
            }
            else {
                tagStyle['border'] = 'none';
                tagStyle['width.px'] = this.dataSource.width;
                tagStyle['height.px'] = this.dataSource.height;
            }
            // if the user is allowed to select the text, enable all the various browser specific CSS properties, otherwise
            // disable them.  (I know right?)
            if (this.textDataSource.isSelectable) {
                tagStyle['user-select'] = 'text'; /* Standard syntax, currently supported by Chrome and Opera */
                tagStyle['-ms-user-select'] = 'text'; /* Internet Explorer 10+ / Edge */
                tagStyle['-moz-user-select'] = 'text'; /* Firefox 2+ */
                tagStyle['-khtml-user-select'] = 'text'; /* Konqueror HTML */
                tagStyle['-webkit-user-select'] = 'text'; /* Chrome, Opera, Safari */
                tagStyle['-webkit-touch-callout'] = 'text'; /* iOS Safari */
            }
            else {
                tagStyle['user-select'] = 'none'; /* Standard syntax, currently supported by Chrome and Opera */
                tagStyle['-ms-user-select'] = 'none'; /* Internet Explorer 10+ / Edge */
                tagStyle['-moz-user-select'] = 'none'; /* Firefox 2+ */
                tagStyle['-khtml-user-select'] = 'none'; /* Konqueror HTML */
                tagStyle['-webkit-user-select'] = 'none'; /* Chrome, Opera, Safari */
                tagStyle['-webkit-touch-callout'] = 'none'; /* iOS Safari */
            }
            /*
                TODO: Might need to handle these as well.  If so should probably go in the input versions.
                ['_maxChars',           'maxChars',         'MaxChars',         'element'],
                ['_maxValue',           'maxValue',         'MaxValue',         'element'],
            */
            return tagStyle;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    TextComponent.prototype.ngOnInit = function () {
        var _this = this;
        _super.prototype.ngOnInit.call(this);
        this.textDataSource = this.dataSource;
        if (this.textDataSource.isDisplayComponent) {
            this.textDataSource.shouldSubscribeToVariableChanges = true;
            this.textDataSource.subscribeToDisplayTextChanges(function (displayText) {
                _this.elementRef.nativeElement.innerHTML = displayText;
            });
        }
    };
    /**
     * @inheritDoc
     */
    TextComponent.prototype.ngOnDestroy = function () {
        if (this.textDataSource) {
            this.textDataSource.onDestroy();
        }
    };
    return TextComponent;
}(__WEBPACK_IMPORTED_MODULE_0__abstract_component__["a" /* AbstractComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/text.component.js.map

/***/ }),

/***/ "./src/app/player/view/video.component.html":
/***/ (function(module, exports) {

module.exports = "<video #elementRef playerVideoEventHandler [dataSource]=\"dataSource\" [ngStyle]=\"videoTagStyle\"\r\n       [controls] = \"video.displayControls\" [autoplay] = \"video.playOnLoad\" (error) = \"errorHandle($event)\" title={{video.description}}>\r\n    <source *ngIf=\"defaultVideoType\" src={{video.URL}} type=\"{{defaultVideoType}}\">\r\n    <source *ngIf=\"video.URLmp4\" src={{video.URLmp4}} type=\"video/mp4\">\r\n    <source *ngIf=\"video.URLwebm\" src={{video.URLwebm}} type=\"video/webm\">\r\n    <source *ngIf=\"video.URLogv\" src={{video.URLogv}} type=\"video/ogg\">\r\n    <source *ngIf=\"video.URLflv\" src={{video.URLwebm}} type=\"video/x-flv\">\r\n    <source *ngIf=\"video.URLf4v\" src={{video.URLogv}} type=\"video/x-f4v\">\r\n\r\n    Your browser does not support the video.\r\n</video>\r\n\r\n<div *ngIf=\"videoErrorMessage\" [ngStyle]=\"errorMessageTagStyle\" >{{videoErrorMessage}}</div>\r\n\r\n<input *ngIf=\"createBlackBox\" type=\"text\" [ngStyle]=\"blackboxTagStyle\" (click)=\"hideBlackBox()\">\r\n"

/***/ }),

/***/ "./src/app/player/view/video.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VideoComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__abstract_component__ = __webpack_require__("./src/app/player/view/abstract.component.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var VideoComponent = /** @class */ (function (_super) {
    __extends(VideoComponent, _super);
    function VideoComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * TODO: Add description.
         *
         * @default false
         */
        _this.isVideoComplete = false;
        return _this;
    }
    Object.defineProperty(VideoComponent.prototype, "videoTagStyle", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of the video tag used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for this component's video tag.
         */
        get: function () {
            return this.commonStyleProperties;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoComponent.prototype, "blackboxTagStyle", {
        //////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of blackbox used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for blackbox.
         */
        get: function () {
            return {
                'top.px': +this.dataSource.y + 0,
                'left.px': this.dataSource.x + 0,
                'width.px': this.dataSource.width,
                'height.px': this.dataSource.height,
                'position': 'absolute',
                'z-index': this.dataSource.z + 1,
                'visibility': this.dataSource.visible ? 'visible' : 'hidden',
                'opacity': 1,
                'display': (this.isVideoComplete) ? 'block' : 'none',
                'background-color': 'black'
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoComponent.prototype, "errorMessageTagStyle", {
        //////////////////////////////////////////////////////////
        /**
         * The style Object used by the ngStyle directive that updates the inline style attribute of errorMessage used in
         * this component's template.
         *
         * @default A style Object containing the CSS properties for errorMessage.
         */
        get: function () {
            return {
                'top.px': +this.dataSource.y,
                'left.px': this.dataSource.x,
                'width.px': this.dataSource.width,
                'height.px': this.dataSource.height,
                'position': 'absolute',
                'z-index': this.dataSource.z + 2,
                'font-family': 'Serif',
                'font-size.px': 20,
                'visibility': this.dataSource.visible ? 'visible' : 'hidden',
                'display': 'block',
                'background-color': 'black',
                'color': 'white',
                'text-align': 'center',
                'vertical-align': 'middle'
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoComponent.prototype, "createBlackBox", {
        //////////////////////////////////////////////////////////
        /**
         * createBlackBox indicator video is complete
         * TODO: ummm...what?
         */
        get: function () {
            return this.video.goToBlack;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Sets the default video type, hides the video container if there is no URL, and
     * subscribes to the onComplete event.
     *
     * @inheritDoc
     */
    VideoComponent.prototype.ngOnInit = function () {
        var _this = this;
        _super.prototype.ngOnInit.call(this);
        this.video = this.dataSource;
        if (this.video.URL) {
            if (this.checkFileExtension(this.video.URL, '.mp4')) {
                this.defaultVideoType = 'video/mp4';
            }
            else if (this.checkFileExtension(this.video.URL, '.webm')) {
                this.defaultVideoType = 'video/webm';
            }
            else if (this.checkFileExtension(this.video.URL, '.ogv')) {
                this.defaultVideoType = 'video/ogg';
            }
            else if (this.checkFileExtension(this.video.URL, '.flv')) {
                this.defaultVideoType = 'video/x-flv';
            }
            else if (this.checkFileExtension(this.video.URL, '.f4v')) {
                this.defaultVideoType = 'video/x-f4v';
            }
        }
        // if no video URL, hide the video container per DIF-10277
        if (!this.video.URL) {
            this.video.visible = false;
        }
        // onComplete event is available from ComponentDataObject.
        // VideoEventHandlerDirective.processEvent emits it
        this.video.onComplete.subscribe(function () {
            _this.isVideoComplete = true;
        });
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods / Functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * hideBlackBox when
     * TODO: ummm...what?
     */
    VideoComponent.prototype.hideBlackBox = function () {
        this.isVideoComplete = false;
    };
    /**
     * TODO: Add description.
     *
     * @param {string} filename
     * @param {string} fileExtension
     *
     * @returns {boolean}
     */
    VideoComponent.prototype.checkFileExtension = function (filename, fileExtension) {
        return (filename.lastIndexOf(fileExtension) === (filename.length - fileExtension.length));
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * TODO: Add description.
     *
     * @param {Event} event
     */
    VideoComponent.prototype.errorHandle = function (event) {
        this.videoErrorMessage = 'None of the provided video file(s) are supported by the browser!';
    };
    VideoComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-video',
            template: __webpack_require__("./src/app/player/view/video.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")]
        })
        /**
         * The view model of the application's Angular video component.
         */
    ], VideoComponent);
    return VideoComponent;
}(__WEBPACK_IMPORTED_MODULE_1__abstract_component__["a" /* AbstractComponent */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/video.component.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/log.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Log; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_typescript_logging__ = __webpack_require__("./node_modules/typescript-logging/dist/commonjs/typescript-logging.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_typescript_logging___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_typescript_logging__);
/* unused harmony reexport Logger */

/*
 * There are two ways of logging things.
 *
 * The normal way using:
 * trace, debug, info, warn, error, fatal, all of these methods
 * expect at least an error message, optionally an Error.
 *
 * Sample: logger.debug("Hello world");
 *         logger.error("This is an error", new Error("fail"));
 *
 * Using closures:
 * tracec, debugc, infoc, warnc, errorc, fatalc(note the c for closure).
 * These methods expect a closure for the message, and optionally one for the Error.
 * The latter can be very useful if you have something expensive to log, and
 * only really want to log it when the logger framework * will * log it.In addition
 * you can use the closure one to do special things.
 *
 * Sample: logger.debugc(() => "Hello world");
 *         logger.errorc(() => "Very expensive " + obj.toDoThis(), () => new Error("Oops"));
 *         logger.fatalc(() => {
 *           // Do something amazingly custom here
 *           return "My Error Message";
 *         });
 */
/**
 * Singleton class to configure and provide support for typescript logging
 * Requires typescript-logging.
 * Installation: npm install --save typescript-logging (already included in package.json)
 */
var Log = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    function Log() {
        /**
         * LoggerFactory
         * NOTE: initialized without specific configuration options which will log at INFO level to the console for
         *          scenarios where code is attempting to use the logger before specific configuration options (typically
         *          specified in the external config.xml file) have been set via configureLoggerFactory.
         *
         * @type {LoggerFactory}
         * @private
         */
        this._factory = __WEBPACK_IMPORTED_MODULE_0_typescript_logging__["LFService"].createLoggerFactory();
        if (Log._instance) {
            throw new Error('The Logger is a singleton class and cannot be created!');
        }
        Log._instance = this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Static Functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Get instance of Log singleton
     *
     * @returns {Log}
     */
    Log.getInstance = function () {
        return Log._instance;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Configure LoggerFactory.
     * NOTE: Currently only configures level, but can configure other settings like group rules in the future.
     *
     * @param level - level at which loggers generated from this factory should be configured to write at (will write
     *                  at the level specified by this parameter or higher - defined by LogLevel enumeration e.g.
     *                  LogLevel.Error)
     */
    Log.prototype.configureLoggerFactory = function (level) {
        // All loggers with the name like DIF.* will have the same logging level
        this._factory.configure(new __WEBPACK_IMPORTED_MODULE_0_typescript_logging__["LoggerFactoryOptions"]()
            .addLogGroupRule(new __WEBPACK_IMPORTED_MODULE_0_typescript_logging__["LogGroupRule"](new RegExp('DIF\\..+'), level)));
    };
    /**
     * Get logger object.
     *
     * @param name - logger name. The actual name will be DIF.name.
     * @returns {Logger}
     */
    Log.prototype.getLogger = function (name) {
        return this._factory.getLogger('DIF.' + name);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Properties / Instance Variables
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Reference to singleton instance
     * @type {Log}
     * @private
     */
    Log._instance = new Log();
    return Log;
}());

// Re-export Logger as convenience so that classes using logging can import everything needed from this one file

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/log.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/content-window.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContentWindow; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__data_objects_components_component_container_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component-container.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// import { Component }            from './component';


/*
 *
 * Data object for DIF content window component
 *
 * */
var ContentWindow = /** @class */ (function (_super) {
    __extends(ContentWindow, _super);
    function ContentWindow(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        /**
         *
         */
        _this.type = 'ContentWindow';
        // this.backgroundColor = jsonData.backgroundColor;
        // this.parseElementChildren();
        // console.log('ContentWindow:');
        // console.log('x = ' + this.x + ' y = ' + this.y);
        _this.contentWindowDataObjectLogger.debug(_this.serializeToString());
        return _this;
    }
    /**
     * Parse all button specific properties
     * Overrides parent method
     *
     * @param   child: ElementDataObject
     */
    ContentWindow.prototype.parseElement = function (child) {
        // NOTE: We cannot call ComponentDataObject parseElement method from here directly (super.super)
        //       Therefore, we created parseProperties method on ComponentDataObject to substitute its parseElement method
        //       which has the same name in all component data objects
        // TODO: If it can be done in a more elegant name - just do it!
        this.contentWindowDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('ContentWindow');
        switch (child.name) {
            case 'BackgroundColor':
                this.backgroundColor = child.value.replace('0x', '#');
                break;
            case 'BorderColor':
                this.borderColor = child.value.replace('0x', '#');
                break;
            case 'BackgroundAlpha':
                // if (child.value === '1') {
                //     this.backgroundVisible = true;
                // }
                this.backgroundAlpa = child.value;
                break;
            case 'BorderAlpha':
                // if (child.value === '1') {
                //     this.borderVisible = true;
                // }
                this.borderAlpha = child.value;
                break;
            // case 'Alpha':
            //     this.alpha = child.value;
            //     break;
        }
        _super.prototype.parseProperties.call(this, child); // parse standard component properties
        _super.prototype.parseElement.call(this, child); // parse components
    };
    ContentWindow.prototype.serializeToString = function () {
        var outString = 'Content Window Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'backgroundColor = ' + this.backgroundColor + '\n';
        outString += 'borderColor = ' + this.borderColor + '\n';
        // outString += 'alpha = ' + this.alpha + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'backgroundAlpa = ' + this.backgroundAlpa + '\n';
        outString += 'borderAlpha = ' + this.borderAlpha + '\n';
        return outString;
    };
    return ContentWindow;
}(__WEBPACK_IMPORTED_MODULE_0__data_objects_components_component_container_data_object__["a" /* ComponentContainerDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/content-window.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/action-system/framework-action.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FrameworkActionDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__framework_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/action-system/framework-event.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Old Action System Data Object for holding FrameworkAction related data
 */
var FrameworkActionDataObject = /** @class */ (function (_super) {
    __extends(FrameworkActionDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    function FrameworkActionDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FrameworkActionDataObject.prototype.constructorPreprocessing = function () {
        this.frameworkActionLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('FrameworkActionDataObject');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    /**
     * Overrides base version.
     * Performs FrameworkAction specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be parsed (typically by checking it's name property)
     */
    FrameworkActionDataObject.prototype.parseElement = function (element) {
        switch (element.name) {
            case __WEBPACK_IMPORTED_MODULE_2__framework_event_data_object__["a" /* FrameworkEventDataObject */].FRAMEWORK_EVENT_ELEMENT_NAME:
                this.frameworkActionLogger.debug('parseElement(): FrameworkEvent');
                // Create FrameworkEvent
                this._frameworkEvent = this.createFrameworkEvent(element);
                this._frameworkEvent.parent = this;
                break;
        }
    };
    Object.defineProperty(FrameworkActionDataObject.prototype, "frameworkEvent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        get: function () {
            return this._frameworkEvent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FrameworkActionDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////
        get: function () {
            return this._parent;
        },
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version of
     * FrameworkEventDataObject
     *
     * @param element -> root level Element to construct FrameworkEvent from
     * @returns {FrameworkEventDataObject}
     */
    FrameworkActionDataObject.prototype.createFrameworkEvent = function (element) {
        /*
         TODO: Since this class is abstract, this version of createEvent should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify an Element associated with a FrameworkAction
     * @type {string}
     */
    FrameworkActionDataObject.FRAMEWORK_ACTION_ELEMENT_NAME = 'Actions';
    return FrameworkActionDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/framework-action.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/action-system/framework-event.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FrameworkEventDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__framework_function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/action-system/framework-function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Old Action System data object for holding FrameworkEvent related data
 */
var FrameworkEventDataObject = /** @class */ (function (_super) {
    __extends(FrameworkEventDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    function FrameworkEventDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FrameworkEventDataObject.prototype.constructorPreprocessing = function () {
        this.frameworkEventLogger = __WEBPACK_IMPORTED_MODULE_2__log__["a" /* Log */].getInstance().getLogger('FrameworkEventDataObject');
        _super.prototype.constructorPreprocessing.call(this);
        this._eventName = this._localRoot.value;
        this.frameworkEventLogger.debug('constructorPreprocessing(): FrameworkEvent name = ' + this._eventName);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    /**
     * Overrides base version.
     * Performs FrameworkEvent specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be parsed (typically by checking it's name property)
     */
    FrameworkEventDataObject.prototype.parseElement = function (element) {
        this.frameworkEventLogger.debug('parseElement(): element.name = ' + element.name);
        switch (element.name) {
            case __WEBPACK_IMPORTED_MODULE_1__framework_function_data_object__["a" /* FrameworkFunctionDataObject */].FRAMEWORK_FUNCTION_ELEMENT_NAME:
                // Create FrameworkFunction
                this.frameworkEventLogger.debug('parseElement(): FrameworkFunction');
                this.frameworkFunction = this.createFrameworkFunction(element);
                this.frameworkFunction.parent = this;
                break;
        }
    };
    Object.defineProperty(FrameworkEventDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        get: function () {
            return this._parent;
        },
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FrameworkEventDataObject.prototype, "eventName", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Functions / Methods
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        get: function () {
            return this._eventName;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version of
     * FrameworkFunctionDataObject
     *
     * @param element -> root level Element to construct FrameworkFunction from
     * @returns {FrameworkFunctionDataObject}
     */
    FrameworkEventDataObject.prototype.createFrameworkFunction = function (element) {
        /*
         TODO: Since this class is abstract, this version of createEvent should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify Element associated with a FrameworkEvent
     * @type {string}
     */
    FrameworkEventDataObject.FRAMEWORK_EVENT_ELEMENT_NAME = 'FrameworkEvent';
    return FrameworkEventDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/framework-event.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/action-system/framework-function.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FrameworkFunctionDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * Old Action System Data Object for holding FrameworkFunction related data
 *
 * @internal: Slightly unusual ElementDataObject structure.  Root is an ElementDataObject, but it has no properties /
 *              child ElementDataObjects, so might not really need to inherit from ElementBasedDataObject, but will do
 *              anyway to get built in constructor processing.  The root ElementDataObject value itself tells us what
 *              function it's supposed to run, so it's the only data we need to extract.  No override of the parent's
 *              parseElement method is necessary.
 */
var FrameworkFunctionDataObject = /** @class */ (function (_super) {
    __extends(FrameworkFunctionDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    function FrameworkFunctionDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        /**
         * Logger instance for logging
         */
        _this.frameworkFunctionLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('FrameworkFunctionDataObject');
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FrameworkFunctionDataObject.prototype.constructorPreprocessing = function () {
        this.frameworkFunctionLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('FrameworkFunctionDataObject');
        _super.prototype.constructorPreprocessing.call(this);
        this.functionName = this._localRoot.value;
        this.frameworkFunctionLogger.debug('constructorPreprocessing(): FrameworkFunction name = ' + this.functionName);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    Object.defineProperty(FrameworkFunctionDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify an Element associated with a FrameworkFunction
     * @type {string}
     */
    FrameworkFunctionDataObject.FRAMEWORK_FUNCTION_ELEMENT_NAME = 'FrameworkFunction';
    /**
     * Strings used to identify Action System Functions
     */
    FrameworkFunctionDataObject.GOTO_PAGE_FUNCTION = 'GotoPage';
    FrameworkFunctionDataObject.NEXT_PAGE_FUNCTION = 'NextPage';
    FrameworkFunctionDataObject.PREV_PAGE_FUNCTION = 'PrevPage';
    FrameworkFunctionDataObject.MESSAGE_FUNCTION = 'Message';
    FrameworkFunctionDataObject.VALIDATE_FUNCTION = 'Validate';
    return FrameworkFunctionDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/framework-function.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/audio.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AudioDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/*
*
* Data object for DIF audio component
*
* */
var AudioDataObject = /** @class */ (function (_super) {
    __extends(AudioDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Data object for DIF audio component - constructor
     */
    function AudioDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        /**
         * The property used to emit stop playing event when set to 0
         */
        _this._playhead = -1;
        /**
        * When property _playing set to true, emit this event
        * so audio component subscribe to it can start to play
        */
        _this.onPlay = new __WEBPACK_IMPORTED_MODULE_2__angular_core__["EventEmitter"]();
        /**
        * When property _playing set to false, emit this event
        * so audio component subscribe to it can pause playing
        */
        _this.onPause = new __WEBPACK_IMPORTED_MODULE_2__angular_core__["EventEmitter"]();
        /**
        * When property _playhead set to 0, emit this event
        * so audio component subscribe to it can stop playing
        */
        _this.onStop = new __WEBPACK_IMPORTED_MODULE_2__angular_core__["EventEmitter"]();
        _this.audioDataObjectLogger.debug('AudioDataObject constructor');
        // Properties should have been assigned at this point.  Extract file extension from primary url to help with
        // processing later.
        _this.urlFileExtension = _this.URL.substr(_this.URL.lastIndexOf('.') + 1, _this.URL.length).toLowerCase();
        return _this;
    }
    /**
     * This method is called from the base constructor.
     * It is used for initializations (logger only for now).
     */
    AudioDataObject.prototype.constructorPreprocessing = function () {
        this.audioDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('AudioDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * overrides base version to add specific properties
     */
    AudioDataObject.prototype.initializePropertyNames = function () {
        _super.prototype.initializePropertyNames.call(this);
        this.initPropertyMapArray = this.initPropertyMapArray.concat([
            ['_autoPlay', 'autoPlay', 'AutoPlay', 'boolean'],
            ['clickToPlayElement', 'clickToPlay', 'ClickToPlay', 'element'],
            ['_displayControls', 'displayControls', 'DisplayControls', 'boolean'],
            ['displayIconElement', 'displayIcon', 'DisplayIcon', 'element'],
            ['_playing', 'playing', 'Playing', 'boolean'],
            ['_playhead', 'playhead', 'Playhead', 'number'],
            ['transcriptElement', 'transcript', 'Transcript', 'element'],
            ['_url', 'URL', '_URL', 'element'],
            ['urlMp3Element', 'urlMp3', '_URLmp3', 'element'],
            ['urlOggElement', 'urlOgg', '_URLogg', 'element'],
            ['urlWavElement', 'urlWav', '_URLwav', 'element']
        ]);
    };
    Object.defineProperty(AudioDataObject.prototype, "URL", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The URL for the audio file
         */
        get: function () {
            return this._url.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioDataObject.prototype, "urlOgg", {
        /**
         * URL for the ogg formatted audio file.
         * Supported by Chrome, Firefox, and Opera
         * @returns {string}
         */
        get: function () {
            // If the primary url is to an ogg file return that one, otherwise return the ogg url
            if (this.urlFileExtension === 'ogg') {
                return this.URL;
            }
            else {
                return this.urlOggElement.value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioDataObject.prototype, "urlMp3", {
        /**
         * URL for the mp3 formatted audio file
         * Supported by IE, Chrome, Firefox, and Safari
         * @returns {string}
         */
        get: function () {
            // If the primary url is to an mp3 file return that one, otherwise return the mp3 url
            if (this.urlFileExtension === 'mp3') {
                return this.URL;
            }
            else {
                return this.urlMp3Element.value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioDataObject.prototype, "urlWav", {
        /**
         * URL for the wav formatted audio file
         * Supported by Chrome, Firefox, Safari, and Opera
         * @returns {string}
         */
        get: function () {
            // If the primary wav is to an ogg file return that one, otherwise return the wav url
            if (this.urlFileExtension === 'wav') {
                return this.URL;
            }
            else {
                return this.urlWavElement.value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioDataObject.prototype, "playing", {
        get: function () {
            return this._playing;
        },
        set: function (value) {
            this._playing = value;
            if (this._playing) {
                this.onPlay.emit();
            }
            else {
                this.onPause.emit();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioDataObject.prototype, "playhead", {
        get: function () {
            return this._playhead;
        },
        set: function (value) {
            this._playhead = value;
            if (this._playhead === 0) {
                this.onStop.emit();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioDataObject.prototype, "autoPlay", {
        /**
         * The property used to decide auto playing when loaded
         */
        get: function () {
            return this._autoPlay;
        },
        set: function (value) {
            this._autoPlay = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioDataObject.prototype, "clickToPlay", {
        /**
         * Indicates whether or not the play state of the Audio component can be toggled by clicking on it
         * @returns {boolean}
         */
        get: function () {
            return (this.clickToPlayElement.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioDataObject.prototype, "displayControls", {
        /**
         * The property used to decide to show video controls when loaded
         */
        get: function () {
            return this._displayControls;
        },
        set: function (value) {
            this._displayControls = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioDataObject.prototype, "displayIcon", {
        /**
         * Indicates whether or not the Audio component icon should be displayed
         * @returns {boolean}
         */
        get: function () {
            return (this.displayIconElement.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AudioDataObject.prototype, "transcript", {
        /**
         * Contains transcript text
         * @returns {string}
         */
        get: function () {
            return this.transcriptElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     */
    AudioDataObject.prototype.serializeToString = function () {
        var outString = 'Audio Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'URL = ' + this.URL + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name;
        return outString;
    };
    return AudioDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/audio.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/button.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ButtonDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/*
*
* Data object for DIF button component
*
* TODO: add the other properties for the button class... this class is incomplete!
*
* */
var ButtonDataObject = /** @class */ (function (_super) {
    __extends(ButtonDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new CheckboxDataObject instance.
     *
     * @param   rootElement ElementDataObject that contains he element data which is used to build
     *                      this ButtonDataObject.
     */
    function ButtonDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The Type of the component TODO: Do i want to use this?
         */
        _this.type = 'Button';
        return _this;
    }
    /**
     * This method is called from the base constructor.
     * It is used for initializations (logger only for now).
     */
    ButtonDataObject.prototype.constructorPreprocessing = function () {
        this.buttonDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('ButtonDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Initialize properties by adding all common properties in component base class
     * overridden and extended by derived class to add each specific properties
     */
    ButtonDataObject.prototype.initializePropertyNames = function () {
        _super.prototype.initializePropertyNames.call(this);
        this.initPropertyMapArray = this.initPropertyMapArray.concat([
            ['_text', 'text', 'Text', 'element'],
            ['_bold', 'bold', 'Bold', 'element'],
            ['_italic', 'italic', 'Italic', 'element'],
            ['_underline', 'underline', 'Underline', 'element'],
            ['_font', 'font', 'Font', 'element'],
            ['_fontColor', 'fontColor', 'FontColor', 'element'],
            ['_fontSize', 'fontSize', 'FontSize', 'element'],
            ['_autoSize', 'autoSize', 'AutoSize', 'element'],
            ['_urlUpStateImage', 'urlUpStateImage', '_URLUpStateImage', 'element'],
            ['_urlOverStateImage', 'urlOverStateImage', '_URLOverStateImage', 'element'],
            ['_urlDownStateImage', 'urlDownStateImage', '_URLDownStateImage', 'element'],
            ['_useDefaultImages', 'useDefaultImages', 'UseDefaultImages', 'element'],
        ]);
    };
    Object.defineProperty(ButtonDataObject.prototype, "text", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The text contained in the button
         *
         * @returns     string
         */
        get: function () {
            return this._text.value;
        },
        set: function (value) {
            this._text.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "font", {
        /**
         * The Font family name of the font used by this component.
         */
        get: function () {
            return this._font.value;
        },
        set: function (value) {
            this._font.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "fontColor", {
        /**
         * The Color of the font used by this component.
         */
        get: function () {
            return this._fontColor.value;
        },
        set: function (value) {
            this._fontColor.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "fontSize", {
        /**
         * The Size of the font.
         */
        get: function () {
            return +this._fontSize.value;
        },
        set: function (value) {
            this._fontSize.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "bold", {
        /**
         * Boolean value representing whether or not the text in this component is bold.
         */
        get: function () {
            return (this._bold.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._bold.value = 'true';
            }
            else {
                this._bold.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "italic", {
        /**
         * Boolean value representing whether or not the text in this component is italic.
         */
        get: function () {
            return (this._italic.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._italic.value = 'true';
            }
            else {
                this._italic.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "underline", {
        /**
         * Boolean value representing whether or not the text in this component is underline.
         */
        get: function () {
            return (this._underline.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._underline.value = 'true';
            }
            else {
                this._underline.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "autoSize", {
        /**
         * Boolean value representing whether or not the text in this component is autoSize.
         */
        get: function () {
            return (this._autoSize.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._autoSize.value = 'true';
            }
            else {
                this._autoSize.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "urlUpStateImage", {
        /**
         * URL to a default image of the button (Up)
         */
        get: function () {
            return this._urlUpStateImage.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "urlOverStateImage", {
        /**
         * URL to a mouse over image of the button
         */
        get: function () {
            return this._urlOverStateImage.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "urlDownStateImage", {
        /**
         * URL to a mouse over image of the button
         */
        get: function () {
            return this._urlDownStateImage.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonDataObject.prototype, "useDefaultImages", {
        /**
         * Display button control or image
         * TODO: Should consider renaming this since standard button doesn't use images
         * @returns {boolean}: true - use button; false - use image control
         */
        get: function () {
            return (this._useDefaultImages.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     */
    ButtonDataObject.prototype.serializeToString = function () {
        var outString = 'Button Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name + '\n';
        outString += 'Text = ' + this.text + '\n';
        outString += 'urlDownStateImage = ' + this.urlDownStateImage + '\n';
        outString += 'urlOverStateImage = ' + this.urlOverStateImage + '\n';
        outString += 'urlUpStateImage = ' + this.urlUpStateImage + '\n';
        outString += 'useDefaultImages = ' + this.useDefaultImages + '\n';
        return outString;
    };
    return ButtonDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/button.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/checkbox.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CheckboxDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/*
*
* Data object for DIF checkbox component
*
* TODO: Comment this class and turn public properties into getters / setters
*
* */
var CheckboxDataObject = /** @class */ (function (_super) {
    __extends(CheckboxDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new CheckboxDataObject instance.
     *
     * @param   rootElement ElementDataObject that contains he element data
     * which is used to build this CheckboxDataObject.
     */
    function CheckboxDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * TODO: Decide if we want to use Type
         */
        _this.type = 'Checkbox';
        _this._selected = _this._defaultValue;
        return _this;
    }
    /**
     * Overrides base constructorPreprocessing method.
     */
    CheckboxDataObject.prototype.constructorPreprocessing = function () {
        this.checkboxDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('CheckboxDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * overrides base version to add specific properties
     */
    CheckboxDataObject.prototype.initializePropertyNames = function () {
        _super.prototype.initializePropertyNames.call(this);
        this.initPropertyMapArray = this.initPropertyMapArray.concat([
            ['_correctValueElement', 'correctValue', 'CorrectValue', 'element'],
            ['_defaultValue', 'defaultValue', 'DefaultValue', 'element'],
            ['_groupName', 'groupName', 'GroupName', 'element'],
            ['_selected', 'checked', 'Selected', 'element']
        ]);
    };
    Object.defineProperty(CheckboxDataObject.prototype, "defaultValue", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The original value of the check box. Determines weather or not its checked from the start.
         *
         * @returns {boolean}
         */
        get: function () {
            return (this._defaultValue.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CheckboxDataObject.prototype, "groupName", {
        /**
         * TODO: Currently not being used do we need this?
         *
         * @returns {string}
         */
        get: function () {
            return this._groupName.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CheckboxDataObject.prototype, "correctValue", {
        /**
         * String from correctValueElement indicating "correct" state
         * @internal: valid values: selectedIsCorrect, unselectedIsCorrect, eitherIsCorrect
         * @returns {string}
         */
        get: function () {
            return this._correctValueElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CheckboxDataObject.prototype, "checked", {
        /**
         * Boolean value representing whether or not this checkbox is checked.
         */
        get: function () {
            return (this._selected.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._selected.value = 'true';
                this.eventCollection.processEvent(__WEBPACK_IMPORTED_MODULE_2__event_system_event_data_object__["a" /* EventDataObject */].ON_CHECKED);
            }
            else {
                this._selected.value = 'false';
                this.eventCollection.processEvent(__WEBPACK_IMPORTED_MODULE_2__event_system_event_data_object__["a" /* EventDataObject */].ON_UNCHECKED);
            }
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Override base.
     * @internal: This is only really needed by the Player (should we have player versions of component data objects?)
     * @returns {boolean}
     */
    CheckboxDataObject.prototype.validate = function () {
        // TODO: Valid values for correctValue should be put in constants or enum.  Will be needed in designers as well.
        if (this.correctValue === 'selectedIsCorrect' && this.checked === true) {
            return true;
        }
        else if (this.correctValue === 'unselectedIsCorrect' && this.checked === false) {
            return true;
        }
        else if (this.correctValue === 'eitherIsCorrect') {
            return true;
        }
        else {
            return false;
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     * TODO: Should rename to toString
     */
    CheckboxDataObject.prototype.serializeToString = function () {
        var outString = 'Checkbox Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name + '\n';
        outString += 'defaultValue = ' + this.defaultValue + '\n';
        outString += 'correctValue = ' + this.correctValue + '\n';
        outString += 'groupName = ' + this.groupName + '\n';
        outString += 'selected = ' + this.checked + '\n';
        return outString;
    };
    return CheckboxDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/checkbox.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/component-container.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ComponentContainerDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__audio_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/audio.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__button_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/button.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__checkbox_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/checkbox.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dropdown_list_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/dropdown-list.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__html_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/html.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__image_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/image.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__video_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/video.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__quiz_multiple_choice_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/quiz-multiple-choice.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__quiz_fill_in_blank_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/quiz-fill-in-blank.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__quiz_match_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/quiz-match.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__quiz_result_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/quiz-result.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__radio_button_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/radio-button.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__text_display_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/text-display.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__text_input_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/text-input.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__text_input_area_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/text-input-area.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

















/**
 * This is the base class for any data objects that drive view components which are designed to contain other view
 * components (e.g. ContentWindowComponent, PageComponent, etc.).
 */
var ComponentContainerDataObject = /** @class */ (function (_super) {
    __extends(ComponentContainerDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Abstract Constructor - provides implementation common to all component container data objects.
     *
     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be
     *                          constructed from.
     */
    function ComponentContainerDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        /**
         * An instance of the logger class for outputting log messages.
         *
         * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before
         * each log statement that is output.
         *
         * @default undefined
         */
        _this.componentContainerDataObjectLogger = __WEBPACK_IMPORTED_MODULE_16__log__["a" /* Log */].getInstance().getLogger('ComponentContainerDataObject');
        return _this;
    }
    /**
     * TODO: Comment me
     *
     * @param child
     */
    ComponentContainerDataObject.prototype.parseElement = function (child) {
        this.componentContainerDataObjectLogger = __WEBPACK_IMPORTED_MODULE_16__log__["a" /* Log */].getInstance().getLogger('ComponentContainerDataObject');
        switch (child.name) {
            case 'Audio':
                var audio = new __WEBPACK_IMPORTED_MODULE_0__audio_data_object__["a" /* AudioDataObject */](child);
                this.components.push(audio);
                this.componentContainerDataObjectLogger.debug(audio.serializeToString());
                break;
            case 'CheckBox':
                var checkBox = new __WEBPACK_IMPORTED_MODULE_2__checkbox_data_object__["a" /* CheckboxDataObject */](child);
                this.components.push(checkBox);
                this.componentContainerDataObjectLogger.debug(checkBox.serializeToString());
                break;
            case 'DropDown':
                var dropDown = new __WEBPACK_IMPORTED_MODULE_4__dropdown_list_data_object__["a" /* DropdownListDataObject */](child);
                this.components.push(new __WEBPACK_IMPORTED_MODULE_4__dropdown_list_data_object__["a" /* DropdownListDataObject */](child));
                this.componentContainerDataObjectLogger.debug(dropDown.serializeToString());
                break;
            case 'FunctionButton':
                var button = new __WEBPACK_IMPORTED_MODULE_1__button_data_object__["a" /* ButtonDataObject */](child);
                this.components.push(button);
                this.componentContainerDataObjectLogger.debug(button.serializeToString());
                break;
            case 'Html':
                var html = new __WEBPACK_IMPORTED_MODULE_5__html_data_object__["a" /* HtmlDataObject */](child);
                this.components.push(html);
                this.componentContainerDataObjectLogger.debug(html.serializeToString());
                break;
            case 'Image':
                var image = new __WEBPACK_IMPORTED_MODULE_6__image_data_object__["a" /* ImageDataObject */](child);
                this.components.push(image);
                this.componentContainerDataObjectLogger.debug(image.serializeToString());
                break;
            case 'Movie':
                var video = new __WEBPACK_IMPORTED_MODULE_7__video_data_object__["a" /* VideoDataObject */](child);
                this.components.push(video);
                this.componentContainerDataObjectLogger.debug(video.serializeToString());
                break;
            case 'QuizWindowMC':
                var quizMC = new __WEBPACK_IMPORTED_MODULE_8__quiz_multiple_choice_data_object__["a" /* QuizMultipleChoiceDataObject */](child);
                this.components.push(quizMC);
                this.componentContainerDataObjectLogger.debug(quizMC.serializeToString());
                break;
            case 'QuizWindowBlank':
                var quizBlank = new __WEBPACK_IMPORTED_MODULE_9__quiz_fill_in_blank_data_object__["a" /* QuizFillInBlankDataObject */](child);
                this.components.push(quizBlank);
                this.componentContainerDataObjectLogger.debug(quizBlank.serializeToString());
                break;
            case 'QuizWindowMatch':
                var quizMatch = new __WEBPACK_IMPORTED_MODULE_10__quiz_match_data_object__["a" /* QuizMatchDataObject */](child);
                this.components.push(quizMatch);
                this.componentContainerDataObjectLogger.debug(quizMatch.serializeToString());
                break;
            case 'RadioButton':
                var radioButton = new __WEBPACK_IMPORTED_MODULE_12__radio_button_data_object__["a" /* RadioButtonDataObject */](child);
                this.components.push(radioButton);
                radioButton.parent = this;
                this.componentContainerDataObjectLogger.debug(radioButton.serializeToString());
                break;
            case 'ResultsWindow':
                var quizResult = new __WEBPACK_IMPORTED_MODULE_11__quiz_result_data_object__["a" /* QuizResultDataObject */](child);
                this.components.push(quizResult);
                this.componentContainerDataObjectLogger.debug(quizResult.serializeToString());
                break;
            case 'TextBox':
                this.addNewTextDataObject(child);
                break;
            case 'TextWindow':
                this.addNewTextDataObject(child);
                break;
        }
    };
    Object.defineProperty(ComponentContainerDataObject.prototype, "components", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * TODO: Comment me
         */
        get: function () {
            if (!this._components) {
                this._components = [];
            }
            return this._components;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Component Management
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * TODO: Add description.
     *
     * @param   sourceElement  The root of the ElementDataObject hierarchy which contains the source data to parse.
     */
    ComponentContainerDataObject.prototype.addNewTextDataObject = function (sourceElement) {
        var isEditable = false;
        var isMultiline = false;
        for (var _i = 0, _a = sourceElement.children; _i < _a.length; _i++) {
            var element = _a[_i];
            switch (element.name) {
                case 'Editable':
                    if (element.value.toLowerCase() === 'true') {
                        isEditable = true;
                    }
                    break;
                case 'Multiline':
                    if (element.value.toLowerCase() === 'true') {
                        isMultiline = true;
                    }
                    break;
            }
        }
        if (isEditable) {
            if (isMultiline) {
                this.components.push(new __WEBPACK_IMPORTED_MODULE_15__text_input_area_data_object__["a" /* TextInputAreaDataObject */](sourceElement));
            }
            else {
                this.components.push(new __WEBPACK_IMPORTED_MODULE_14__text_input_data_object__["a" /* TextInputDataObject */](sourceElement));
            }
        }
        else {
            this.components.push(new __WEBPACK_IMPORTED_MODULE_13__text_display_data_object__["a" /* TextDisplayDataObject */](sourceElement));
        }
    };
    /**
     * TODO: Rename this to findDescendantComponent.
     *
     * Recursively search the descendants of this ComponentContainerDataObject to find the ComponentDataObject that has
     * the given element ID.
     *
     * NOTE:
     *          When we check a descendant that is also a ComponentContainerDataObject we must also check its
     *          descendants and so on.
     *
     * @param   componentElementID  The elementID of the ComponentDataObject we are trying to find.
     *
     * @returns The ComponentDataObject with the given elementID, otherwise undefined.
     */
    ComponentContainerDataObject.prototype.findChildComponent = function (componentElementID) {
        var returnComponent;
        for (var _i = 0, _a = this.components; _i < _a.length; _i++) {
            var component = _a[_i];
            if (component.id === componentElementID) {
                return component;
            }
            else if (component instanceof ComponentContainerDataObject) {
                returnComponent = component.findChildComponent(componentElementID);
                if (returnComponent) {
                    return returnComponent;
                }
            }
        }
        return returnComponent;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     */
    ComponentContainerDataObject.prototype.serializeToString = function () {
        var outString = 'Component Container Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'localRoot = ' + this.localRoot.name;
        return outString;
    };
    return ComponentContainerDataObject;
}(__WEBPACK_IMPORTED_MODULE_3__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/component-container.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ComponentDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__data_types_color_data_type__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/data-types/color.data-type.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_types_markup_text_data_type__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/data-types/markup-text.data-type.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__event_system_event_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__player_model_data_objects_event_system_event_playable_data_object_collection__ = __webpack_require__("./src/app/player/model/data-objects/event-system/event.playable.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__action_system_framework_action_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/action-system/framework-action.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__player_model_data_objects_action_system_framework_action_playable_data_object__ = __webpack_require__("./src/app/player/model/data-objects/action-system/framework-action.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* tslint:disable:max-line-length */









/* tslint:enable:max-line-length */
/*
 *
 *  Base class for all DIF components (Page, ContentWindow, Button, Image, etc)
 *
 * TODO: re-comment this class
 *
 * TODO: change the private instance properties to be ElementDataObjects
 */
var ComponentDataObject = /** @class */ (function (_super) {
    __extends(ComponentDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Abstract Constructor - provides implementation common to all component data objects.
     *
     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be
     *                          constructed from.
     */
    function ComponentDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        /**
         * The focus property(state) of this component
         */
        _this._focus = false;
        /**
         * The mouse over property(state) of this component
         */
        _this._mouseOver = false;
        /**
         * When a component(like audio,video) completed playing, emit this onComplete event
         */
        _this.onComplete = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"](); // TODO: might not want to init this here.
        _this.id = _this.localRoot.id;
        return _this;
    }
    /**
     * This method is called from the base constructor.
     * It is used for initializations (logger only for now).
     */
    ComponentDataObject.prototype.constructorPreprocessing = function () {
        this.componentDataObjectLogger = __WEBPACK_IMPORTED_MODULE_8__log__["a" /* Log */].getInstance().getLogger('ComponentDataObject');
        _super.prototype.constructorPreprocessing.call(this);
        this.initializePropertyNames();
        this.propertyMaps = [];
        this.constructPropertyMaps();
    };
    /**
     * Initialize properties by adding all common properties to initPropertyMapArray
     * overridden and extended by derived class to add component's specific properties
     */
    ComponentDataObject.prototype.initializePropertyNames = function () {
        this.initPropertyMapArray = [
            ['_x', 'x', 'X', 'number'],
            ['_y', 'y', 'Y', 'number'],
            ['_z', 'z', 'Z', 'number'],
            ['_width', 'width', 'Width', 'number'],
            ['_height', 'height', 'Height', 'number'],
            ['_name', 'name', 'Name', 'string'],
            ['_visible', 'visible', 'Visible', 'boolean'],
            ['_focusElement', 'focus', 'Focus', 'element'],
            ['_mouseOverElement', 'mouseOver', 'MouseOver', 'element'],
            ['_alphaElement', 'alpha', 'Alpha', 'element'],
            ['_alphaElement', 'alpha', 'alpha', 'element'] // added to address Designer setting "alpha" in event data
        ];
    };
    /**
     * Create and add new property map to propertyMaps from initPropertyMapArray.
     */
    ComponentDataObject.prototype.constructPropertyMaps = function () {
        for (var _i = 0, _a = this.initPropertyMapArray; _i < _a.length; _i++) {
            var p = _a[_i];
            var map = new PropertyMap();
            map.privateName = p[0];
            map.publicName = p[1];
            map.dBName = p[2];
            map.type = p[3];
            this.propertyMaps.push(map);
        }
    };
    /**
     * Set property initial value.
     *
     * @param child
     */
    ComponentDataObject.prototype.setPropertyInitValue = function (child) {
        var propertyMap = this.getPropertyMap(child.name);
        if (!propertyMap) {
            return;
        }
        var type = propertyMap.type;
        var privateName = propertyMap.privateName;
        switch (type) {
            case 'element':
                this[privateName] = child;
                break;
            case 'string':
                this[privateName] = child.value;
                break;
            case 'number':
                this[privateName] = +child.value;
                break;
            case 'boolean':
                this[privateName] = (child.value === 'true');
                break;
            case 'color':
                this[privateName] = new __WEBPACK_IMPORTED_MODULE_1__data_types_color_data_type__["a" /* ColorDataType */](child);
                break;
            case 'text':
                this[privateName] = new __WEBPACK_IMPORTED_MODULE_2__data_types_markup_text_data_type__["a" /* MarkupTextDataType */](child);
                break;
        }
    };
    /**
     * Parse base component properties.
     * @param child
     */
    ComponentDataObject.prototype.parseElement = function (child) {
        this.parseProperties(child);
    };
    /**
     * Properties parser.
     */
    ComponentDataObject.prototype.parseProperties = function (element) {
        if (element.name === __WEBPACK_IMPORTED_MODULE_4__event_system_event_data_object_collection__["a" /* EventDataObjectCollection */].EVENT_COLLECTION_ELEMENT_NAME) {
            this.eventCollection = this.createEventCollection(element);
            this.eventCollection.parent = this;
        }
        else if (element.name === __WEBPACK_IMPORTED_MODULE_6__action_system_framework_action_data_object__["a" /* FrameworkActionDataObject */].FRAMEWORK_ACTION_ELEMENT_NAME) {
            this.componentDataObjectLogger.debug('parseProperties(): FrameworkAction');
            this._frameworkAction = this.createFrameworkAction(element);
            // TODO: do we need to create a parent reference in FrameworkAction?
        }
        else {
            this.setPropertyInitValue(element);
        }
    };
    Object.defineProperty(ComponentDataObject.prototype, "x", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        get: function () {
            return this._x;
        },
        set: function (value) {
            this._x = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "y", {
        ////////////////////////////////////////////////////////////////
        get: function () {
            return this._y;
        },
        set: function (value) {
            this._y = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "z", {
        ////////////////////////////////////////////////////////////////
        get: function () {
            return this._z;
        },
        set: function (value) {
            this._z = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "width", {
        ////////////////////////////////////////////////////////////////
        get: function () {
            return this._width;
        },
        set: function (value) {
            this._width = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "height", {
        ////////////////////////////////////////////////////////////////
        get: function () {
            return this._height;
        },
        set: function (value) {
            this._height = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "name", {
        ////////////////////////////////////////////////////////////////
        get: function () {
            return this._name;
        },
        set: function (value) {
            this._name = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "visible", {
        ////////////////////////////////////////////////////////////////
        get: function () {
            return this._visible;
        },
        set: function (value) {
            this._visible = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "alpha", {
        ////////////////////////////////////////////////////////////////
        /**
         * The alpha property of this component
         */
        get: function () {
            return this._alphaElement.value;
        },
        set: function (value) {
            this._alphaElement.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "focus", {
        /**
         * The focus property of this component
         */
        get: function () {
            return (this._focus);
        },
        set: function (value) {
            this._focus = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "mouseOver", {
        /**
         * The mouse over property of this component
         */
        get: function () {
            return (this._mouseOver);
        },
        set: function (value) {
            this._mouseOver = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "viewComponent", {
        ////////////////////////////////////////////////////////////////
        /**
         * Reference to component's display object
         *
         * @internal: Player view components at this point, may eventually need class factory to return version for
         *              Designers
         */
        get: function () {
            return this._viewComponent;
        },
        set: function (value) {
            this._viewComponent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "eventCollection", {
        ////////////////////////////////////////////////////////////////
        /**
         * Reference to EventDataObjectCollection that holds all Event System data for the component
         */
        get: function () {
            return this._eventCollection;
        },
        set: function (value) {
            this._eventCollection = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "frameworkAction", {
        ////////////////////////////////////////////////////////////////
        /**
         * Reference to FrameworkActionDataObject that holds data structure for old Action system
         */
        get: function () {
            return this._frameworkAction;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ComponentDataObject.prototype, "correctValue", {
        /**
         * Get correct value in checkbox/radio button/text box/dropdown and it will pass to Framework Action
         * To be overridden by derived component
         */
        get: function () {
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Creates and returns an EventDataObjectCollection
     * Should be overridden in editable versions of this class to return the editable version.
     *
     * @param element -> root level Element to construct EventDataObjectCollection from.
     * @returns {EventDataObjectCollection}
     */
    ComponentDataObject.prototype.createEventCollection = function (element) {
        // TODO: Should return playable version once created - there will be no playable version ComponentDataObject
        // TODO: Can't reference playable (Player class) from shared ... need to find approach to fix this
        // return new EventDataObjectCollection(element);
        return new __WEBPACK_IMPORTED_MODULE_5__player_model_data_objects_event_system_event_playable_data_object_collection__["a" /* EventPlayableDataObjectCollection */](element);
    };
    /**
     * Creates and returns FrameworkActionDataObject
     *
     * @param element -> root level Element to construct FrameworkAction from
     * @returns {FrameworkActionDataObject}
     */
    ComponentDataObject.prototype.createFrameworkAction = function (element) {
        // TODO: Should return playable version once created - which should be done via a class factory once implemented
        var action = new __WEBPACK_IMPORTED_MODULE_7__player_model_data_objects_action_system_framework_action_playable_data_object__["a" /* FrameworkActionPlayableDataObject */](element);
        action.parent = this;
        return action;
    };
    /**
     * To be overridden in derived classes
     */
    ComponentDataObject.prototype.validate = function () {
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     */
    ComponentDataObject.prototype.serializeToString = function () {
        var outString = 'Component Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'localRoot = ' + this.localRoot.name;
        return outString;
    };
    /**
     * Get PropertyMap of a component's property by DB name.
     *
     * @param   name    Property DB name.
     *
     * @returns If found, the property map with the given DB name, otherwise undefined.
     */
    ComponentDataObject.prototype.getPropertyMap = function (name) {
        if (!this.propertyMaps) {
            return undefined;
        }
        else {
            return this.propertyMaps.find(function (p) { return p.dBName === name; });
        }
    };
    return ComponentDataObject;
}(__WEBPACK_IMPORTED_MODULE_3__element_based_data_object__["a" /* ElementBasedDataObject */]));

/**
 * A helper Class to contain the mapping of component property's private name, public name(getter/setter) and DB name
 */
var PropertyMap = /** @class */ (function () {
    /**
     * A helper Class to contain the mapping of component property's private name,
     * public name(getter/setter) and DB name
     */
    function PropertyMap() {
    }
    return PropertyMap;
}());
//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/component.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/dropdown-list.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DropdownListDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/*
*
* Data object for DIF Dropdown List component
*
* */
var DropdownListDataObject = /** @class */ (function (_super) {
    __extends(DropdownListDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new DropdownListDataObject instance.
     * @param   rootElement ElementDataObject that contains he element data
     *                      which is used to build this DropdownListDataObject.
     *
     * @param   parentContainer     A reference to this Objects Parent ComponentDataObject. TODO: Not sure we need this?
     */
    function DropdownListDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The Type of the component TODO: Do i want to use this?
         */
        _this.type = 'DropdownList';
        return _this;
        // this.parseElementChildren();
        // this.dropdownListDataObjectLogger.debug(this.serializeToString());
    }
    /**
     * Overrides base constructorPreprocessing method.
     */
    DropdownListDataObject.prototype.constructorPreprocessing = function () {
        // Instantiate logger and optionList here: the method will be called from the base constructor
        this.dropdownListDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('DropdownListDataObject');
        this.optionList = new Array();
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Initialize properties by adding all common properties in component base class
     * overriden and extended by derived class to add each specific properties
     */
    DropdownListDataObject.prototype.initializePropertyNames = function () {
        _super.prototype.initializePropertyNames.call(this);
        this.initPropertyMapArray = this.initPropertyMapArray.concat([
            ['_text', 'text', 'Text', 'element'],
            ['_bold', 'bold', 'Bold', 'element'],
            ['_italic', 'italic', 'Italic', 'element'],
            ['_underline', 'underline', 'Underline', 'element'],
            ['_font', 'font', 'Font', 'element'],
            ['_fontColor', 'fontColor', 'FontColor', 'element'],
            ['_fontSize', 'fontSize', 'FontSize', 'element'],
            ['_align', 'align', 'Align', 'element'],
            ['_selection', 'selection', 'Selection', 'element'],
            ['_autoSize', 'autoSize', 'AutoSize', 'element']
        ]);
    };
    /**
     * Parse all dropdown specific properties
     * Overrides parent method
     *
     * @param   child: ElementDataObject
     */
    DropdownListDataObject.prototype.parseElement = function (child) {
        switch (child.name) {
            case 'OptionList':
                // this.dropdownListDataObjectLogger.debug('OptionList:');
                // console.log(child);
                this.parseOptionList(child);
                this.dropdownListDataObjectLogger.debug('OptionList.length = ' + this.optionList.length);
                break;
        }
        _super.prototype.parseElement.call(this, child); // parse standard component properties
    };
    /**
     * Loops through the children of the OptionList ElementDataObject and populates the defaultOption as well as the
     * optionList by creating DropdownListOptions for each.
     * The defaultOption is always the first ElementDataObject in the list of children.
     * This method then sorts the new option list so that the Option are in the proper order.
     *
     * @param   optionListElement   The ElementDataObject that contains the Option Elements
     */
    DropdownListDataObject.prototype.parseOptionList = function (optionListElement) {
        // we need to special case the first option because it is the default not an actual option
        this.defaultOption = new DropdownListOption(optionListElement.children[0]);
        // this.dropdownListDataObjectLogger.debug('Option List Length = ' + optionListElement.children.length);
        for (var i = 1; i < optionListElement.children.length; i++) {
            // this.dropdownListDataObjectLogger.debug('i = ' + i);
            // I want to create an option class
            var newOption = new DropdownListOption(optionListElement.children[i]);
            this.optionList.push(newOption);
            // this.dropdownListDataObjectLogger.debug('optionList.length = ' + this.optionList.length);
        }
        this.optionList.sort(this.sortOptionList);
    };
    /**
     * Sort function for sorting OptionList based off of option.order. We do this because the data might not give the
     * options to us in order.
     */
    DropdownListDataObject.prototype.sortOptionList = function (optionA, optionB) {
        return optionA.order - optionB.order;
    };
    Object.defineProperty(DropdownListDataObject.prototype, "font", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The Font family name of the font used by this component.
         */
        get: function () {
            return this._font.value;
        },
        set: function (value) {
            this._font.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListDataObject.prototype, "fontColor", {
        /**
         * The Color of the font used by this component.
         */
        get: function () {
            return this._fontColor.value;
        },
        set: function (value) {
            this._fontColor.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListDataObject.prototype, "fontSize", {
        /**
         * The Size of the font.
         */
        get: function () {
            return +this._fontSize.value;
        },
        set: function (value) {
            this._fontSize.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListDataObject.prototype, "bold", {
        /**
         * Boolean value representing whether or not the text in this component is bold.
         */
        get: function () {
            return (this._bold.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._bold.value = 'true';
            }
            else {
                this._bold.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListDataObject.prototype, "italic", {
        /**
         * Boolean value representing whether or not the text in this component is italic.
         */
        get: function () {
            return (this._italic.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._italic.value = 'true';
            }
            else {
                this._italic.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListDataObject.prototype, "underline", {
        /**
         * Boolean value representing whether or not the text in this component is underline.
         */
        get: function () {
            return (this._underline.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._underline.value = 'true';
            }
            else {
                this._underline.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListDataObject.prototype, "autoSize", {
        /**
         * Boolean value representing whether or not the text in this component is autoSize.
         */
        get: function () {
            return (this._autoSize.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListDataObject.prototype, "align", {
        /**
         * The align property of this component
         */
        get: function () {
            return this._align.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListDataObject.prototype, "selection", {
        /**
         * The selection property of this component.  Holds the value of the selected option.
         */
        get: function () {
            // If selection has no value yet, set it to the default option
            if (!this._selection.value) {
                this._selection.value = this.defaultOption.text;
            }
            return this._selection.value;
        },
        set: function (value) {
            this._selection.value = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Override base.
     * @internal: Only really needed by Player.  May want to consider creating playable version for this class?
     * @returns {boolean}
     */
    DropdownListDataObject.prototype.validate = function () {
        // Get correct option
        var correctOption = this.optionList.find(function (option) {
            return option.isCorrect === true;
        });
        console.log('!!! dropdownList validate !!! selected = ' + this.selection + '  correct = ' + correctOption.text);
        // Compare selected value with correct option and return result
        if (this.selection === correctOption.text) {
            return true;
        }
        else {
            return false;
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     * TODO: Should rename to toString
     */
    DropdownListDataObject.prototype.serializeToString = function () {
        var outString = 'Drop Down Data Object:\n';
        outString += 'align = ' + this.align + '\n';
        outString += 'autoSize = ' + this.autoSize + '\n';
        outString += 'bold = ' + this.bold + '\n';
        outString += 'defaultOptionText = ' + this.defaultOption.text + '\n';
        outString += 'font = ' + this.font + '\n';
        outString += 'fontColor = ' + this.fontColor + '\n';
        outString += 'fontSize = ' + this.fontSize + '\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'italic = ' + this.italic + '\n';
        outString += 'localRoot = ' + this.localRoot.name + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'selection = ' + this.selection + '\n';
        outString += 'type = ' + this.type + '\n';
        outString += 'underline = ' + this.underline + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'optionList.length = ' + this.optionList.length + '\n';
        for (var i = 0; i < this.optionList.length; i++) {
            outString += 'z = ' + this.optionList[i].text + '\n';
        }
        return outString;
    };
    return DropdownListDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

/**
 * A helper Class to contain the Options for the DropdownList Class.
 */
var DropdownListOption = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * creates new DropdownListDataObject of of the Option root element.
     */
    function DropdownListOption(rootElement) {
        this.rootElement = rootElement;
        this.parseOptionProperties();
    }
    /**
     * Populate the DropdownListDataObjects properties with values from the rootElement's children
     */
    DropdownListOption.prototype.parseOptionProperties = function () {
        this._text = this.rootElement;
        for (var i = 0; i < this.rootElement.children.length; i++) {
            switch (this.rootElement.children[i].name) {
                case 'OrderID':
                    this._order = this.rootElement.children[i];
                    break;
                case 'IsCorrect':
                    this._isCorrect = this.rootElement.children[i];
                    break;
            }
        }
    };
    Object.defineProperty(DropdownListOption.prototype, "order", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The order property of an Option
         */
        get: function () {
            return parseInt(this._order.value, 10);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListOption.prototype, "isCorrect", {
        /**
         * the isCorrect property of an Option
         *
         * TODO: I don't know what this is used for? If not needed then remove me!
         */
        get: function () {
            return (this._isCorrect.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownListOption.prototype, "text", {
        get: function () {
            return this._text.value;
        },
        enumerable: true,
        configurable: true
    });
    return DropdownListOption;
}());
//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/dropdown-list.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/html.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HtmlDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/*
*
* Data object for DIF audio component
*
* */
var HtmlDataObject = /** @class */ (function (_super) {
    __extends(HtmlDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Data object for DIF html component - constructor
     */
    function HtmlDataObject(rootElement) {
        return _super.call(this, rootElement) || this;
    }
    /**
     * Overrides base constructorPreprocessing method.
     */
    HtmlDataObject.prototype.constructorPreprocessing = function () {
        this.htmlDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('HtmlDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * overrides base version to add specific properties
     */
    HtmlDataObject.prototype.initializePropertyNames = function () {
        _super.prototype.initializePropertyNames.call(this);
        this.initPropertyMapArray = this.initPropertyMapArray.concat([
            ['_url', 'URL', '_URL', 'element'],
            ['_description', 'description', 'Description', 'element']
        ]);
    };
    Object.defineProperty(HtmlDataObject.prototype, "URL", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The _URL contained in the html
         */
        get: function () {
            return this._url.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HtmlDataObject.prototype, "description", {
        /**
         * The Description value. An Accessor for the Description element
         */
        get: function () {
            return this._description.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     */
    HtmlDataObject.prototype.serializeToString = function () {
        var outString = 'HTML Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'URL = ' + this.URL + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name;
        return outString;
    };
    return HtmlDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/html.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/image.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/*
*
* Data object for DIF image component
*
* */
var ImageDataObject = /** @class */ (function (_super) {
    __extends(ImageDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates an instance of the ImageDataObject
     *
     * @param rootElement
     */
    function ImageDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The Type of the component TODO: Do i want to use this?
         */
        _this.type = 'Image';
        return _this;
    }
    /**
     * Overrides base constructorPreprocessing method.
     */
    ImageDataObject.prototype.constructorPreprocessing = function () {
        this.imageDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('ImageDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * overrides base version to add specific properties
     */
    ImageDataObject.prototype.initializePropertyNames = function () {
        _super.prototype.initializePropertyNames.call(this);
        this.initPropertyMapArray = this.initPropertyMapArray.concat([
            ['_url', 'URL', '_URL', 'element'],
            ['_description', 'description', 'Description', 'element']
        ]);
    };
    Object.defineProperty(ImageDataObject.prototype, "url", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The source (url) for this image
         *
         * @returns {string}
         */
        get: function () {
            return this._url.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDataObject.prototype, "description", {
        /**
         * The Description value. An Accessor for the Description element
         */
        get: function () {
            return this._description.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     */
    ImageDataObject.prototype.serializeToString = function () {
        var outString = 'Image Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name + '\n';
        outString += 'url = ' + this.url + '\n';
        outString += 'type = ' + this.type;
        return outString;
    };
    return ImageDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/image.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/quiz-fill-in-blank.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuizFillInBlankDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/*
 *
 * Base data object for Quiz Multiple Choice component
 *
 * */
var QuizFillInBlankDataObject = /** @class */ (function (_super) {
    __extends(QuizFillInBlankDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Data object for DIF quizMultipleChoice component - constructor
     */
    function QuizFillInBlankDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        _this._quizAnswerTitle = 'Fill in the Blank:';
        _this.quizFillInBlankDataObjectLogger.debug('QuizFillInBlankDataObject constructor');
        return _this;
        // this.parseElementChildren();
        // this.quizMultipleChoiceDataObjectLogger.debug(this.serializeToString());
    }
    /**
     * Overrides base constructorPreprocessing method.
     */
    QuizFillInBlankDataObject.prototype.constructorPreprocessing = function () {
        this.quizFillInBlankDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('QuizMultipleChoiceDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Parse all quizMultipleChoice multiple choice specific properties
     * Overrides parent method
     *
     * @param   child: ElementDataObject
     */
    QuizFillInBlankDataObject.prototype.parseElement = function (child) {
        switch (child.name) {
            case 'QuizName':
                this._quizNameElement = child;
                break;
            case 'Question':
                this._questionElement = child;
                break;
            case 'Answers':
                for (var i = 0; i < child.children.length; i++) {
                    var element = child.children[i];
                    switch (element.name) {
                        case 'Choice':
                            // this._choiceElement = element;
                            this._correctAnswer = element.value; // the choice conteins a correct answer for the blank
                            break;
                        case 'FeedbackFlag':
                            this._feedBackFlagElement = element;
                            break;
                        case 'FeedbackCorrectMessage':
                            this._feedbackCorrectMessageElement = element;
                            break;
                        case 'FeedbackIncorrectMessage':
                            this._feedbackIncorrectMessageElement = element;
                            break;
                        case 'MultipleAttemptFlag':
                            this._multipleAttemptFlagElement = element;
                            break;
                        case 'NumberOfAttempts':
                            this._numberOfAttemptsElement = element;
                            break;
                        case 'FeedbackIncorrectAttempt':
                            this._feedbackIncorrectAttemptElement = element;
                            break;
                    }
                }
        }
        _super.prototype.parseElement.call(this, child); // parse standard component properties
    };
    Object.defineProperty(QuizFillInBlankDataObject.prototype, "quizName", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Quiz name
         */
        get: function () {
            return this._quizNameElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankDataObject.prototype, "question", {
        /**
         * Quiz question
         */
        get: function () {
            return this._questionElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankDataObject.prototype, "correctAnswer", {
        /**
         * Correct answer for the blank
         */
        get: function () {
            return this._correctAnswer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankDataObject.prototype, "feedBackFlag", {
        /**
         * Feedback Flag value
         */
        get: function () {
            var retValue = false;
            if (this._feedBackFlagElement !== undefined &&
                this._feedBackFlagElement.value.toLowerCase() === 'true') {
                retValue = true;
            }
            return retValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankDataObject.prototype, "feedbackCorrectMessage", {
        /**
         * Feedback Correct Message
         */
        get: function () {
            return this._feedbackCorrectMessageElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankDataObject.prototype, "feedbackIncorrectMessage", {
        /**
         * Feedback Incorrect Message
         */
        get: function () {
            return this._feedbackIncorrectMessageElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankDataObject.prototype, "multipleAttemptFlag", {
        /**
         * Multiple Attempt Flag value
         */
        get: function () {
            var retValue = false;
            if (this._multipleAttemptFlagElement !== undefined &&
                this._multipleAttemptFlagElement.value.toLowerCase() === 'true') {
                retValue = true;
            }
            return retValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankDataObject.prototype, "numberOfAttempts", {
        /**
         * Number Of Attempts value
         */
        get: function () {
            return parseInt(this._numberOfAttemptsElement.value, 10);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankDataObject.prototype, "feedbackIncorrectAttempt", {
        /**
         * Feedback Incorrect Attempt
         */
        get: function () {
            return this._feedbackIncorrectAttemptElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizFillInBlankDataObject.prototype, "quizAnswerTitle", {
        /**
         * Quiz Answer Title
         */
        get: function () {
            return this._quizAnswerTitle;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Private functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     */
    QuizFillInBlankDataObject.prototype.serializeToString = function () {
        var outString = 'Quiz Fill In Blank Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name + '\n';
        outString += 'QuizName = ' + this.quizName + '\n';
        outString += 'Question = ' + this.question + '\n';
        outString += 'CorrectAnswer = ' + this.correctAnswer + '\n';
        outString += 'Feedback Flag = ' + this.feedBackFlag + '\n';
        outString += 'Feedback Correct Message = ' + this.feedbackCorrectMessage + '\n';
        outString += 'Feedback Incorrect Message = ' + this.feedbackIncorrectMessage + '\n';
        outString += 'Multiple Attempt Flag = ' + this.multipleAttemptFlag + '\n';
        outString += 'Number Of Attempts = ' + this.numberOfAttempts + '\n';
        outString += 'Feedback Incorrect Attempt = ' + this.feedbackIncorrectAttempt + '\n';
        return outString;
    };
    return QuizFillInBlankDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/quiz-fill-in-blank.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/quiz-match.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuizMatchDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/*
 *
 * Base data object for Quiz Match component
 *
 * */
var QuizMatchDataObject = /** @class */ (function (_super) {
    __extends(QuizMatchDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Data object for DIF quiz match component - constructor
     */
    function QuizMatchDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        // hold the available answers order
        _this._availableAnswersOrder = [];
        return _this;
    }
    /**
     * Overrides base constructor Preprocessing method.
     */
    QuizMatchDataObject.prototype.constructorPreprocessing = function () {
        _super.prototype.constructorPreprocessing.call(this);
        // set initial values of instance variables or instantiate them
        this.quizMatchDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('QuizMatchDataObjectLogger');
        this._availableChoices = [];
        this._optionChoices = ['?']; // add ? into option list
        this._correctAnswers = [];
        this._availableAnswers = [];
        this.answerDictionary = new Map();
        this.letters = ['A', 'B', 'C', 'D'];
    };
    /**
     * Parse all quiz match specific properties
     * Overrides parent method
     *
     * @param   child: ElementDataObject
     */
    QuizMatchDataObject.prototype.parseElement = function (child) {
        switch (child.name) {
            case 'QuizName':
                this._quizNameElement = child;
                break;
            case 'Question':
                this._questionElement = child;
                break;
            case 'Answers':
                for (var i = 0; i < child.children.length; i++) {
                    var element = child.children[i];
                    switch (element.name) {
                        case 'FeedbackFlag':
                            this._feedBackFlagElement = element;
                            break;
                        case 'FeedbackCorrectMessage':
                            this._feedBackCorrectMessage = element;
                            break;
                        case 'FeedbackIncorrectMessage':
                            this._feedBackIncorrectMessage = element;
                            break;
                        case 'MultipleAttemptFlag':
                            this._multipleAttemptFlagElement = element;
                            break;
                        case 'NumberOfAttempts':
                            this._numberOfAttemptsElement = element;
                            break;
                        case 'FeedbackIncorrectAttempt':
                            this._feedBackIncorrectAttemptElement = element;
                            break;
                        case 'Option':
                            // Option has two child elements: Answer and Choice
                            for (var j = 0; j < element.children.length; j++) {
                                var el = element.children[j];
                                switch (el.name) {
                                    case 'Answer':
                                        this.assignAnswer(element, el); // left part of the quiz interface
                                        break;
                                    case 'Choice':
                                        this.assignChoice(element, el); // right part of the quiz interface
                                        break;
                                }
                            }
                    }
                }
        }
        _super.prototype.parseElement.call(this, child); // parse standard component properties
    };
    Object.defineProperty(QuizMatchDataObject.prototype, "quizName", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Quiz name
         */
        get: function () {
            return this._quizNameElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "question", {
        /**
         * Quiz question (the top text box in the quiz interface
         */
        get: function () {
            return this._questionElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "aAnswerText", {
        /**
         * Answer A text (left part of the quiz interface in the A position)
        */
        get: function () {
            if (this._availableAnswers[0]) {
                return this._availableAnswers[0];
            }
            else {
                return '';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "bAnswerText", {
        /**
         * Answer B text (left part of the quiz interface in the B position)
         */
        get: function () {
            if (this._availableAnswers[1]) {
                return this._availableAnswers[1];
            }
            else {
                return '';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "cAnswerText", {
        /**
         * Answer C text (left part of the quiz interface in the C position)
         */
        get: function () {
            if (this._availableAnswers[2]) {
                return this._availableAnswers[2];
            }
            else {
                return '';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "dAnswerText", {
        /**
         * Answer D text (left part of the quiz interface in the D position)
         */
        get: function () {
            if (this._availableAnswers[3]) {
                return this._availableAnswers[3];
            }
            else {
                return '';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "aDisplayText", {
        /**
         * Text that will be randomly displayed in the first choice text box
         * (right part of the interface)
         */
        get: function () {
            // return this._aDisplayElement.value;
            if (this._availableChoices[0]) {
                return this._availableChoices[0];
            }
            else {
                return '';
            }
            ;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "bDisplayText", {
        /**
         * Text that will be randomly displayed in the second choice text box
         * (right part of the interface)
         */
        get: function () {
            // return this._bDisplayElement.value;
            if (this._availableChoices[1]) {
                return this._availableChoices[1];
            }
            else {
                return '';
            }
            ;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "cDisplayText", {
        /**
         * Text that will be randomly displayed in the third choice text box
         * (right part of the interface)
         */
        get: function () {
            // return this._cDisplayElement.value;
            if (this._availableChoices[2]) {
                return this._availableChoices[2];
            }
            else {
                return '';
            }
            ;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "dDisplayText", {
        /**
         * Text that will be randomly displayed in the fourth choice text box
         * (right part of the interface)
         */
        get: function () {
            // return this._dDisplayElement.value;
            if (this._availableChoices[3]) {
                return this._availableChoices[3];
            }
            else {
                return '';
            }
            ;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "feedBackFlag", {
        /**
         * Feedback Flag value
         */
        get: function () {
            var retValue = false;
            if (this._feedBackFlagElement !== undefined && this._feedBackFlagElement.value.toLowerCase() === 'true') {
                retValue = true;
            }
            return retValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "feedbackCorrectMessage", {
        /**
         * Feedback Correct Message value
         */
        get: function () {
            return this._feedBackCorrectMessage.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "feedbackIncorrectMessage", {
        /**
         * Feedback incorrect Message value
         */
        get: function () {
            return this._feedBackIncorrectMessage.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "multipleAttemptFlag", {
        /**
         * Multiple Attempt Flag value
         */
        get: function () {
            var retValue = false;
            if (this._multipleAttemptFlagElement !== undefined &&
                this._multipleAttemptFlagElement.value.toLowerCase() === 'true') {
                retValue = true;
            }
            return retValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "numberOfAttempts", {
        /**
         * Number Of Attempts value
         */
        get: function () {
            return parseInt(this._numberOfAttemptsElement.value, 10);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "feedbackIncorrectAttempt", {
        /**
         * Feedback Incorrect Attempt
         */
        get: function () {
            return this._feedBackIncorrectAttemptElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "aTitle", {
        /**
         * Title of the answer A
         */
        get: function () {
            return 'A:';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "bTitle", {
        /**
         * Title of the answer B
         */
        get: function () {
            return 'B:';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "cTitle", {
        /**
         * Title of the answer C
         */
        get: function () {
            return 'C:';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "dTitle", {
        /**
         * Title of the answer D
         */
        get: function () {
            return 'D:';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "optionChoices", {
        /**
         * Available options for comboboxes
         * @returns {string[]}
         */
        get: function () {
            return this._optionChoices;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "correctAnswers", {
        /**
         * Correct choices array (correct combo select)
         * @returns {string[]}
         */
        get: function () {
            return this._correctAnswers;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "availableChoices", {
        /**
         * Available choices array (right side) - randomized
         * @returns {string[]}
         */
        get: function () {
            return this._availableChoices;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "availableAnswers", {
        /**
         * Available answers array (left side) - randomized
         * @returns {string[]}
         */
        get: function () {
            return this._availableAnswers;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMatchDataObject.prototype, "availableAnswersOrder", {
        /**
         * get available answers order array (left side) after shuffled
    
         *
         * @returns
         */
        get: function () {
            return this._availableAnswersOrder;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Private functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Assign A-D answer elements based on the element value
     * @param element - Option element
     * @param child - Answer element
     */
    QuizMatchDataObject.prototype.assignAnswer = function (element, child) {
        if (child.value !== '') {
            this._availableAnswers.push(child.value);
        }
    };
    /**
     * Assign A-D choice elements based on the element value
     * @param element - Option element
     * @param child - Choice element
     */
    QuizMatchDataObject.prototype.assignChoice = function (element, child) {
        if (child.value !== '') {
            this._availableChoices.push(child.value);
            this._optionChoices.push(element.value);
        }
    };
    /**
     * Populate the map of correct answer texts (value) for each possible choice text (key)
     * this map 9dictionary) will be used to find correct answers
     * after randomization
     */
    QuizMatchDataObject.prototype.populateAnswerDictionary = function () {
        // Populate the dictionary with choice (key) and answer (value)
        // This dictionary will be used later to find a correct answer for each choice
        // If there are duplicates in choices, then the first match will be displayed
        // multiple times - no correct answer ever possible
        // NOTE: There is no check in design time and the same text can be
        // put in several answers/choices
        for (var i = 0; i < this._availableAnswers.length; i++) {
            this.answerDictionary.set(this._availableChoices[i], this._availableAnswers[i]);
        }
    };
    /**
     * Randomise the array of available choices for display
     */
    QuizMatchDataObject.prototype.randomizeChoices = function () {
        var j;
        var choice;
        // let correct: string;
        // let answer: string;
        // console.log('Correct answers count in randomizeChoices = ' + this._correctAnswers.length);
        for (var i = this._availableChoices.length; i; i--) {
            j = Math.floor(Math.random() * i);
            choice = this._availableChoices[i - 1];
            this._availableChoices[i - 1] = this._availableChoices[j];
            this._availableChoices[j] = choice;
        }
    };
    /**
     * Randomise the array of available answers for display
     * Initialize and randomise answers order and convert to alphabetical order
     */
    QuizMatchDataObject.prototype.randomizeAnswers = function () {
        var j;
        var str;
        // let correct: string;
        var strOrderj;
        // Initialize _availableAnswersOrder
        for (var k = 0; k < this._availableAnswers.length; k++) {
            this._availableAnswersOrder.push(k);
        }
        for (var i = this._availableAnswers.length; i; i--) {
            j = Math.floor(Math.random() * i);
            str = this._availableAnswers[i - 1];
            this._availableAnswers[i - 1] = this._availableAnswers[j];
            this._availableAnswers[j] = str;
            // set available answers order
            strOrderj = this._availableAnswersOrder[i - 1];
            this._availableAnswersOrder[i - 1] = this._availableAnswersOrder[j];
            this._availableAnswersOrder[j] = strOrderj;
        }
        // convert _availableAnswersOrder array from 0,1,2,3 to A,B,C,D
        for (var i = 0; i < this._availableAnswersOrder.length; i++) {
            this._availableAnswersOrder[i] = (this._availableAnswersOrder[i] === 0) ? 'A' :
                (this._availableAnswersOrder[i] === 1) ? 'B' :
                    (this._availableAnswersOrder[i] === 2) ? 'C' :
                        (this._availableAnswersOrder[i] === 3) ? 'D' : this._availableAnswersOrder[i];
        }
    };
    /**
     * Sort combo option array
     */
    QuizMatchDataObject.prototype.sortOptionCoices = function () {
        this._optionChoices.sort();
    };
    /**
     * Array of correct answers (e.g. C,B,A ...)
     */
    QuizMatchDataObject.prototype.setCorrectAnswers = function () {
        // Based on the map of correct choice/answer pair (always ABCD)
        // Search _availableAnswers for a correct answer
        // based on the each choice text (key in the dictionary)
        for (var i = 0; i < this._availableChoices.length; i++) {
            var answer = this.answerDictionary.get(this._availableChoices[i]);
            // find is not supported by IE, so loop and stop when found
            for (var j = 0; j < this._availableAnswers.length; j++) {
                if (this._availableAnswers[j] === answer) {
                    this._correctAnswers.push(this.letters[j]);
                    break;
                }
            }
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     */
    QuizMatchDataObject.prototype.serializeToString = function () {
        var outString = 'Quiz Match Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name + '\n';
        outString += 'QuizName = ' + this.quizName + '\n';
        outString += 'Question = ' + this.question + '\n';
        outString += 'A Title = ' + this.aTitle + '\n';
        outString += 'B Title = ' + this.bTitle + '\n';
        outString += 'C Title = ' + this.cTitle + '\n';
        outString += 'D Title = ' + this.dTitle + '\n';
        outString += 'A Answer = ' + this.aAnswerText + '\n';
        outString += 'B Answer = ' + this.bAnswerText + '\n';
        outString += 'C Answer = ' + this.cAnswerText + '\n';
        outString += 'D Answer = ' + this.dAnswerText + '\n';
        outString += 'A Display Choice = ' + this.aDisplayText + '\n';
        outString += 'B Display Choice = ' + this.bDisplayText + '\n';
        outString += 'C Display Choice = ' + this.cDisplayText + '\n';
        outString += 'D Display Choice = ' + this.dDisplayText + '\n';
        outString += 'Feedback Correct Message = ' + this.feedbackCorrectMessage + '\n';
        outString += 'Feedback Incorrect Message = ' + this.feedbackIncorrectMessage + '\n';
        outString += 'Feedback Flag = ' + this.feedBackFlag + '\n';
        outString += 'Multiple Attempt Flag = ' + this.multipleAttemptFlag + '\n';
        outString += 'Number Of Attempts = ' + this.numberOfAttempts + '\n';
        outString += 'Feedback Incorrect Attempt = ' + this.feedbackIncorrectAttempt + '\n';
        outString += 'Combo choices property array:' + '\n';
        for (var i = 0; i < this.optionChoices.length; i++) {
            outString += this.optionChoices[i] + '\n';
        }
        outString += 'Correct answers property array:' + '\n';
        for (var i = 0; i < this.correctAnswers.length; i++) {
            outString += this.correctAnswers[i] + '\n';
        }
        outString += 'Available choices property array:' + '\n';
        for (var i = 0; i < this.availableChoices.length; i++) {
            outString += this.availableChoices[i] + '\n';
        }
        outString += 'Available answers property array:' + '\n';
        for (var i = 0; i < this.availableAnswers.length; i++) {
            outString += this.availableAnswers[i] + '\n';
        }
        return outString;
    };
    /**
     * Shuffle choice column and answers column; set correct answer array
     */
    QuizMatchDataObject.prototype.shuffle = function () {
        this.populateAnswerDictionary(); // key = choice text (right part); value - correct answer text
        this.randomizeChoices();
        this.randomizeAnswers();
        this.sortOptionCoices(); // normally they already will be sorted, just in case
        this.setCorrectAnswers();
    };
    /**
     * Set choice column and answer column; set _availableAnswersOrder correct answer
     */
    QuizMatchDataObject.prototype.setQuizColumn = function (correctResponse) {
        var cResponse = correctResponse.split('[,]');
        // console.log('###QuizMatchDataObject.setQuizColumn correctResponse=' + correctResponse);
        // set available answer
        var tempAnswer = [];
        for (var i = 0; i < cResponse.length; i++) {
            // Set _availableAnswersOrder and correct answer
            this._correctAnswers[i] = cResponse[i].charAt(4);
            this._availableAnswersOrder[i] = cResponse[i].charAt(0);
            tempAnswer[i] = this._availableAnswers[this.convertABCDto0123(cResponse[i].charAt(0))];
        }
        for (var i = 0; i < cResponse.length; i++) {
            this._availableAnswers[i] = tempAnswer[i];
        }
        // console.log('###QuizMatchDataObject.setQuizColumn _correctAnswers=' + this._correctAnswers.join('||'));
        // console.log('###QuizMatchDataObject.setQuizColumn _availableAnswersOrder=' + this._availableAnswersOrder.join('||'));
        // console.log('###QuizMatchDataObject.setQuizColumn _availableAnswers=' + this._availableAnswers.join('||'));
        // set available choice
        for (var i = 0; i < this._correctAnswers.length; i++) {
            tempAnswer[i] = this._availableChoices[this.convertABCDto0123(cResponse[this.convertABCDto0123(this._correctAnswers[i])].charAt(0))];
        }
        for (var i = 0; i < cResponse.length; i++) {
            this._availableChoices[i] = tempAnswer[i];
        }
        // console.log('###QuizMatchDataObject.setQuizColumn _availableChoices=' + this._availableChoices.join(';;'));
    };
    QuizMatchDataObject.prototype.convertABCDto0123 = function (inputChar) {
        switch (inputChar) {
            case 'A':
                return 0;
            case 'B':
                return 1;
            case 'C':
                return 2;
            case 'D':
                return 3;
            default:
                return 0;
        }
    };
    return QuizMatchDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/quiz-match.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/quiz-multiple-choice.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuizMultipleChoiceDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/*
*
* Base data object for Quiz Multiple Choice component
*
* */
var QuizMultipleChoiceDataObject = /** @class */ (function (_super) {
    __extends(QuizMultipleChoiceDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Data object for DIF quizMultipleChoice component - constructor
     */
    function QuizMultipleChoiceDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        _this.quizMultipleChoiceDataObjectLogger.debug('QuizMcDataObject constructor');
        return _this;
        // this.parseElementChildren();
        // this.quizMultipleChoiceDataObjectLogger.debug(this.serializeToString());
    }
    /**
     * Overrides base constructorPreprocessing method.
     */
    QuizMultipleChoiceDataObject.prototype.constructorPreprocessing = function () {
        this.quizMultipleChoiceDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('QuizMultipleChoiceDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
      * Parse all quizMultipleChoice multiple choice specific properties
      * Overrides parent method
      *
      * @param   child: ElementDataObject
      */
    QuizMultipleChoiceDataObject.prototype.parseElement = function (child) {
        switch (child.name) {
            case 'QuizName':
                this._quizNameElement = child;
                break;
            case 'Question':
                this._questionElement = child;
                break;
            case 'Answers':
                for (var i = 0; i < child.children.length; i++) {
                    var element = child.children[i];
                    switch (element.name) {
                        case 'Choice':
                            this.assignChoice(element);
                            break;
                        case 'CorrectChoice':
                            this._correctChoiceElement = element;
                            break;
                        case 'FeedbackFlag':
                            this._feedBackFlagElement = element;
                            break;
                        case 'FeedbackAMessage':
                            this._feedBackAMessageElement = element;
                            break;
                        case 'FeedbackBMessage':
                            this._feedBackBMessageElement = element;
                            break;
                        case 'FeedbackCMessage':
                            this._feedBackCMessageElement = element;
                            break;
                        case 'FeedbackDMessage':
                            this._feedBackDMessageElement = element;
                            break;
                        case 'MultipleAttemptFlag':
                            this._multipleAttemptFlagElement = element;
                            break;
                        case 'NumberOfAttempts':
                            this._numberOfAttemptsElement = element;
                            break;
                        case 'FeedbackIncorrectAttempt':
                            this._feedbackIncorrectAttemptElement = element;
                            break;
                    }
                }
        }
        _super.prototype.parseElement.call(this, child); // parse standard component properties
    };
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "quizName", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Quiz name
         */
        get: function () {
            return this._quizNameElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "question", {
        /**
         * Quiz question
         */
        get: function () {
            return this._questionElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "aChoiceText", {
        /**
         * Choice A text
         */
        get: function () {
            return this._aChoiceElement.children[0].value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "bChoiceText", {
        /**
         * Choice B text
         */
        get: function () {
            return this._bchoiceElement.children[0].value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "cChoiceText", {
        /**
         * Choice C text
         */
        get: function () {
            return this._cChoiceElement.children[0].value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "dChoiceText", {
        /**
         * Choice D text
         */
        get: function () {
            return this._dChoiceElement.children[0].value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "correctChoice", {
        /**
         * Correct Choice value
         */
        get: function () {
            return this._correctChoiceElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "feedBackFlag", {
        /**
         * Feedback Flag value
         */
        get: function () {
            var retValue = false;
            if (this._feedBackFlagElement !== undefined &&
                this._feedBackFlagElement.value.toLowerCase() === 'true') {
                retValue = true;
            }
            return retValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "feedbackAMessage", {
        /**
         * Feedback A Message
         */
        get: function () {
            return this._feedBackAMessageElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "feedbackBMessage", {
        /**
         * Feedback B Message
         */
        get: function () {
            return this._feedBackBMessageElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "feedbackCMessage", {
        /**
         * Feedback C Message
         */
        get: function () {
            return this._feedBackCMessageElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "feedbackDMessage", {
        /**
         * Feedback C Message
         */
        get: function () {
            return this._feedBackDMessageElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "multipleAttemptFlag", {
        /**
         * Multiple Attempt Flag value
         */
        get: function () {
            var retValue = false;
            if (this._multipleAttemptFlagElement !== undefined &&
                this._multipleAttemptFlagElement.value.toLowerCase() === 'true') {
                retValue = true;
            }
            return retValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "numberOfAttempts", {
        /**
         * Number Of Attempts value
         */
        get: function () {
            return parseInt(this._numberOfAttemptsElement.value, 10);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizMultipleChoiceDataObject.prototype, "feedbackIncorrectAttempt", {
        /**
         * Feedback Incorrect Attempt
         */
        get: function () {
            return this._feedbackIncorrectAttemptElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Private functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Assign A-D choise elements based on the element value
     * @param element
     */
    QuizMultipleChoiceDataObject.prototype.assignChoice = function (element) {
        if (element.value === 'A') {
            this._aChoiceElement = element;
        }
        else if (element.value === 'B') {
            this._bchoiceElement = element;
        }
        else if (element.value === 'C') {
            this._cChoiceElement = element;
        }
        else if (element.value === 'D') {
            this._dChoiceElement = element;
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     */
    QuizMultipleChoiceDataObject.prototype.serializeToString = function () {
        var outString = 'Quiz MC Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name + '\n';
        outString += 'QuizName = ' + this.quizName + '\n';
        outString += 'Question = ' + this.question + '\n';
        outString += 'A Choice = ' + this.aChoiceText + '\n';
        outString += 'B Choice = ' + this.bChoiceText + '\n';
        outString += 'C Choice = ' + this.cChoiceText + '\n';
        outString += 'D Choice = ' + this.dChoiceText + '\n';
        outString += 'Correct Choice = ' + this.correctChoice + '\n';
        outString += 'Feedback Flag = ' + this.feedBackFlag + '\n';
        outString += 'Feedback A Message = ' + this.feedbackAMessage + '\n';
        outString += 'Feedback B Message = ' + this.feedbackBMessage + '\n';
        outString += 'Feedback C Message = ' + this.feedbackCMessage + '\n';
        outString += 'Feedback D Message = ' + this.feedbackDMessage + '\n';
        outString += 'Multiple Attempt Flag = ' + this.multipleAttemptFlag + '\n';
        outString += 'Number Of Attempts = ' + this.numberOfAttempts + '\n';
        outString += 'Feedback Incorrect Attempt = ' + this.feedbackIncorrectAttempt + '\n';
        return outString;
    };
    return QuizMultipleChoiceDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/quiz-multiple-choice.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/quiz-result.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QuizResultDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/*
 *
 * Base data object for Quiz Multiple Choice component
 *
 * */
var QuizResultDataObject = /** @class */ (function (_super) {
    __extends(QuizResultDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Data object for DIF quizMultipleChoice component - constructor
     */
    function QuizResultDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        // Properties that are not included into the XML
        // protected _correctAnswerText: string = '';
        // protected _selectedAnswerText: string = '';
        // protected _questionText: string = '';
        _this._quizScore = '';
        return _this;
        // this.quizQuizResultDataObjectLogger.debug('QuizResultDataObject constructor');
        // this.parseElementChildren();
        // this.quizMultipleChoiceDataObjectLogger.debug(this.serializeToString());
    }
    /**
     * Overrides base constructorPreprocessing method.
     */
    QuizResultDataObject.prototype.constructorPreprocessing = function () {
        this.quizQuizResultDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('QuizResultDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Parse all quizMultipleChoice multiple choice specific properties
     * Overrides parent method
     *
     * @param   child: ElementDataObject
     */
    QuizResultDataObject.prototype.parseElement = function (child) {
        switch (child.name) {
            case 'QuizName':
                this._quizNameElement = child;
                break;
            case 'ResultsHeaderText':
                this._resultsHeaderTextElement = child;
                break;
            case 'CorrectAnswerFlag':
                this._correctAnswerFlagElement = child;
                break;
            case 'SelectedAnswerFlag':
                this._selectedAnswerFlagElement = child;
                break;
            case 'QuestionTextFlag':
                this._questionTextFlagElement = child;
                break;
        }
        _super.prototype.parseElement.call(this, child); // parse standard component properties
    };
    Object.defineProperty(QuizResultDataObject.prototype, "quizName", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Quiz name
         */
        get: function () {
            return this._quizNameElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultDataObject.prototype, "resultsHeaderText", {
        /**
         * ResultsHeaderText
         */
        get: function () {
            return this._resultsHeaderTextElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultDataObject.prototype, "correctAnswerFlag", {
        /**
         * CorrectAnswerFlag
         */
        get: function () {
            var retValue = false;
            if (this._correctAnswerFlagElement !== undefined &&
                this._correctAnswerFlagElement.value.toLowerCase() === 'true') {
                retValue = true;
            }
            return retValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultDataObject.prototype, "selectedAnswerFlag", {
        /**
         * SelectedAnswerFlag
         */
        get: function () {
            var retValue = false;
            if (this._selectedAnswerFlagElement !== undefined &&
                this._selectedAnswerFlagElement.value.toLowerCase() === 'true') {
                retValue = true;
            }
            return retValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultDataObject.prototype, "questionTextFlag", {
        /**
         * QuestionTextFlag
         */
        get: function () {
            var retValue = false;
            if (this._questionTextFlagElement !== undefined &&
                this._questionTextFlagElement.value.toLowerCase() === 'true') {
                retValue = true;
            }
            return retValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultDataObject.prototype, "quizScore", {
        /**
         * Get correct answer
         * @returns {string}
         */
        // public get correctAnswerText(): string {
        //     return this._correctAnswerText;
        // }
        /**
         * Set correct answer
         * @param value
         */
        // public set correctAnswerText(value: string) {
        //     this._correctAnswerText = value;
        // }
        /**
         * Get selected answer
         * @returns {string}
         */
        // public get selectedAnswerText(): string {
        //     return this._selectedAnswerText;
        // }
        /**
         * Set selected answer
         * @param value
         */
        // public set selectedAnswerText(value: string) {
        //     this._selectedAnswerText = value;
        // }
        /**
         * Get question text
         * @returns {string}
         */
        // public get questionText(): string {
        //     return this._questionText;
        // }
        /**
         * Set question text
         * @param value
         */
        // public set questionText(value: string) {
        //     this._questionText = value;
        // }
        /**
         * Get quiz score
         * @returns {string}
         */
        get: function () {
            return this._quizScore;
        },
        /**
         * Set quiz score
         * @returns {string}
         */
        set: function (value) {
            this._quizScore = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuizResultDataObject.prototype, "resultText", {
        /**
         * Get html string to be displayed at the bottom window of teh component
         * @returns {string}
         */
        get: function () {
            return this._resultText;
        },
        /**
         * Set html string to be displayed at the bottom window of teh component
         * @param value
         */
        set: function (value) {
            this._resultText = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Private functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     */
    QuizResultDataObject.prototype.serializeToString = function () {
        var outString = 'Quiz MC Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name + '\n';
        outString += 'QuizName = ' + this.quizName + '\n';
        outString += 'Correct Answer Flag = ' + this.correctAnswerFlag + '\n';
        outString += 'Question Text Flag = ' + this.questionTextFlag + '\n';
        outString += 'Selected Answer Flag = ' + this.selectedAnswerFlag + '\n';
        outString += 'Results Header Text = ' + this.resultsHeaderText + '\n';
        // set test data
        // this.correctAnswerText = 'This is a correct answer text';
        // this.selectedAnswerText = 'This is a selected answer text';
        // this.questionText = 'This is a question text';
        // TODO: Probably we do not need those properties
        // outString += 'Correct Answer Text = ' + this.correctAnswerText + '\n';
        // outString += 'Selected Answer Text = ' + this.selectedAnswerText + '\n';
        // outString += 'Question Answer Text = ' + this.questionText + '\n';
        // set result html
        // this.resultText = '<b>Quiz Result text</b><p>Test</p>'
        // for (let i: number = 1; i < 20; i++) {
        //     this.resultText += '<p>' + i + '. result: #####################################################################################################</p>';
        // }
        outString += 'Result Text = ' + this.resultText + '\n';
        return outString;
    };
    return QuizResultDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/quiz-result.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/radio-button.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RadioButtonDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/*
*
* Data object for DIF RadioButton component
*
*/
var RadioButtonDataObject = /** @class */ (function (_super) {
    __extends(RadioButtonDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new ElementDataObject instance.
     *
     * @param rootElement ElementDataObject that contains he element data
     * which is used to build this RadioButtonDataObject.
     */
    function RadioButtonDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The Type of the component TODO: Do i want to use this?
         */
        _this.type = 'RadioButton';
        _this._selected = _this._defaultValue;
        return _this;
    }
    /**
     * Overrides base constructorPreprocessing method.
     */
    RadioButtonDataObject.prototype.constructorPreprocessing = function () {
        this.radioButtonDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('RadioButtonDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * overrides base version to add specific properties
     */
    RadioButtonDataObject.prototype.initializePropertyNames = function () {
        _super.prototype.initializePropertyNames.call(this);
        this.initPropertyMapArray = this.initPropertyMapArray.concat([
            ['_correctValueElement', 'correctValue', 'CorrectValue', 'element'],
            ['_defaultValue', 'defaultValue', 'DefaultValue', 'element'],
            ['_groupName', 'groupName', 'GroupName', 'element'],
            ['_selected', 'selected', 'Selected', 'element']
        ]);
    };
    Object.defineProperty(RadioButtonDataObject.prototype, "defaultValue", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         *  The original value of the check box. Determines weather or not its checked from the start.
         *
         * @returns {boolean}
         */
        get: function () {
            return (this._defaultValue.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadioButtonDataObject.prototype, "groupName", {
        /**
         * The name of the group this component is associated with.
         * Radio buttons with the same groupName will work together selecting and deselecting as a group.
         *
         * @returns {string}
         */
        get: function () {
            return this._groupName.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadioButtonDataObject.prototype, "correctValue", {
        /**
         *
         * @returns {string}
         */
        get: function () {
            // return this._correctValueElement.value === 'selectedIsCorrect' ? 'true' : 'false';
            return this._correctValueElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadioButtonDataObject.prototype, "selected", {
        /**
         * Boolean value representing whether or not this radio button is selected.
         */
        get: function () {
            return (this._selected.value === 'true');
        },
        set: function (value) {
            // console.log(this.name);
            if (this._selected.value === (value ? 'true' : 'false')) {
                return; // value not changed
            }
            if (value) {
                this.radioButtonDataObjectLogger.debug('setter SELECTED...');
                this._selected.value = 'true';
                this.eventCollection.processEvent(__WEBPACK_IMPORTED_MODULE_2__event_system_event_data_object__["a" /* EventDataObject */].ON_SELECTED);
                // Unselect all other radio buttons within the same group
                for (var _i = 0, _a = this.findGroupRadioButtons(); _i < _a.length; _i++) {
                    var radioButton = _a[_i];
                    if (radioButton !== this && radioButton.selected) {
                        radioButton.selected = false;
                    }
                }
            }
            else {
                this.radioButtonDataObjectLogger.debug('setter UNSELECTED...');
                this._selected.value = 'false';
                // Process Event system event
                this.eventCollection.processEvent(__WEBPACK_IMPORTED_MODULE_2__event_system_event_data_object__["a" /* EventDataObject */].ON_UNSELECTED);
                // Process Action system action
                if (this.frameworkAction.frameworkEvent) {
                    this.frameworkAction.processFrameworkAction();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Find all radio buttons within the same group name from parent container
     */
    RadioButtonDataObject.prototype.findGroupRadioButtons = function () {
        var _this = this;
        var radioButtons = this.parent.components.filter(function (component) { return component instanceof RadioButtonDataObject; });
        return radioButtons.filter(function (r) { return r.groupName === _this.groupName; });
    };
    /**
     * Override base.
     * @internal: Only used by Player.  Should consider creating playable version of this class?
     * @returns {boolean}
     */
    RadioButtonDataObject.prototype.validate = function () {
        if (this.correctValue === 'selectedIsCorrect' && this.selected === true) {
            return true;
        }
        else if (this.correctValue === 'unselectedIsCorrect' && this.selected === false) {
            return true;
        }
        else if (this.correctValue === 'eitherIsCorrect') {
            return true;
        }
        else {
            return false;
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties into a string
     * TODO: Should rename to toString
     */
    RadioButtonDataObject.prototype.serializeToString = function () {
        var outString = 'Radio Button Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name + '\n';
        outString += 'correctValue = ' + this.correctValue + '\n';
        outString += 'defaultValue = ' + this.defaultValue + '\n';
        outString += 'groupName = ' + this.groupName + '\n';
        outString += 'selected = ' + this.selected + '\n';
        outString += 'type = ' + this.type;
        return outString;
    };
    return RadioButtonDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/radio-button.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/text-display.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextDisplayDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__text_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/text.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * TODO:    Write description.
 * TODO:    Remove unused headers.
 */
var TextDisplayDataObject = /** @class */ (function (_super) {
    __extends(TextDisplayDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new TextDisplayDataObject instance.
     *
     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be
     *                          constructed from.
     */
    function TextDisplayDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * @inheritDoc
     */
    TextDisplayDataObject.prototype.constructorPreprocessing = function () {
        this.textDisplayDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('TextDisplayDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    return TextDisplayDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__text_data_object__["a" /* TextDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/text-display.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/text-input-area.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextInputAreaDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__text_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/text.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * TODO:    Write description.
 * TODO:    Remove unused headers.
 */
var TextInputAreaDataObject = /** @class */ (function (_super) {
    __extends(TextInputAreaDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new TextInputAreaDataObject instance.
     *
     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be
     *                          constructed from.
     */
    function TextInputAreaDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * @inheritDoc
     */
    TextInputAreaDataObject.prototype.constructorPreprocessing = function () {
        this.textInputAreaDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('TextInputAreaDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    return TextInputAreaDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__text_data_object__["a" /* TextDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/text-input-area.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/text-input.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextInputDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__text_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/text.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * TODO:    Write description.
 * TODO:    Remove unused headers.
 */
var TextInputDataObject = /** @class */ (function (_super) {
    __extends(TextInputDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new TextInputDataObject instance.
     *
     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be
     *                          constructed from.
     */
    function TextInputDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * @inheritDoc
     */
    TextInputDataObject.prototype.constructorPreprocessing = function () {
        this.textInputDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('TextInputDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    return TextInputDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__text_data_object__["a" /* TextDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/text-input.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/text.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TextDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * TODO:    Write description.
 *
 * NOTE:
 *
 *          The following properties are parsed and used in AssetBase
 *
 *              AssetID
 *              AssetRevisionID
 *
 *          The following properties are parsed and used in AssetEdit
 *
 *              Actions
 *              _URL
 *              _URLThumbnail
 *
 *          The following properties are parsed and used in AssetDisplay
 *
 *              Actions
 *              _URL
 *
 *
 *          The following is a list of properties that are found in the XML data, but don't seem to be parsed in the
 *          ActionScript code:
 *
 *              Size
 *              Color
 *              Justify
 *              Margin
 *              Focus
 *              MouseOver
 *
 *          TODO: Figure out what to do with these properties.
 */
var TextDataObject = /** @class */ (function (_super) {
    __extends(TextDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new TextDataObject instance.
     *
     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be
     *                          constructed from.
     */
    function TextDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        _this._isDisplayComponent = !_this.isEditable;
        return _this;
    }
    /**
     * @inheritDoc
     */
    TextDataObject.prototype.constructorPreprocessing = function () {
        this.textDataObjectLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('TextDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Initialize properties by adding all common properties in component base class
     * overridden and extended by derived class to add each specific properties
     */
    TextDataObject.prototype.initializePropertyNames = function () {
        _super.prototype.initializePropertyNames.call(this);
        this.initPropertyMapArray = this.initPropertyMapArray.concat([
            ['_alignment', 'alignment', 'Alignment', 'element'],
            ['_background', 'hasBackground', 'Background', 'element'],
            ['_backgroundColor', 'backgroundColor', 'BackgroundColor', 'color'],
            ['_bold', 'isBold', 'Bold', 'element'],
            ['_border', 'hasBorder', 'Border', 'element'],
            ['_borderColor', 'borderColor', 'BorderColor', 'color'],
            ['_bullet', 'bullet', 'Bullet', 'element'],
            ['_checkCase', 'isValidationCaseSensitive', 'CheckCase', 'element'],
            ['_correctText', 'validationText', 'CorrectText', 'element'],
            ['_editable', 'isEditable', 'Editable', 'element'],
            ['_font', 'font', 'Font', 'element'],
            ['_fontColor', 'fontColor', 'FontColor', 'color'],
            ['_fontSize', 'fontSize', 'FontSize', 'element'],
            ['_italic', 'isItalic', 'Italic', 'element'],
            ['_maxChars', 'maximumAllowableCharacters', 'MaxChars', 'element'],
            ['_maxValue', 'maximumValue', 'MaxValue', 'element'],
            ['_multiline', 'isMultiline', 'Multiline', 'element'],
            ['_restrict', 'restrict', 'Restrict', 'element'],
            ['_selectable', 'isSelectable', 'Selectable', 'element'],
            ['_text', 'text', 'Text', 'text'],
            ['_underline', 'isUnderline', 'Underline', 'element'],
        ]);
    };
    Object.defineProperty(TextDataObject.prototype, "alignment", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            // TODO: Is this logic needed?  Also can any of these actually be undefined by not being in the data at all?
            /*
                 var returnVar:String = TextAlign.LEFT;
                 if (alignmentElement != null){
                 returnVar = String(alignmentElement.Value).toLowerCase();
                 }
                 return returnVar;
             */
            return this._alignment.value;
        },
        set: function (value) {
            this._alignment.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "hasBackground", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return (this._background.value.toLowerCase() === 'true');
        },
        set: function (value) {
            this._background.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "backgroundColor", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return this._backgroundColor.webColor;
        },
        set: function (value) {
            this._backgroundColor.setColorFromString(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "isBold", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return (this._bold.value.toLowerCase() === 'true');
        },
        set: function (value) {
            this._bold.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "hasBorder", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return (this._border.value.toLowerCase() === 'true');
        },
        set: function (value) {
            this._border.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "borderColor", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return this._borderColor.webColor;
        },
        set: function (value) {
            this._borderColor.setColorFromString(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "bullet", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            // TODO: Is this a string?  I don't even see this property being used in ActionScript.
            return this._bullet.value;
        },
        set: function (value) {
            this._bullet.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "validationText", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return this._correctText.value;
        },
        set: function (value) {
            this._correctText.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "isValidationCaseSensitive", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return (this._checkCase.value.toLowerCase() === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "isEditable", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         *
         * @default false
         */
        get: function () {
            return (this._editable.value.toLowerCase() === 'true');
        },
        set: function (value) {
            if (value) {
                this._editable.value = 'true';
            }
            else {
                this._editable.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "font", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return this._font.value;
        },
        set: function (value) {
            this._font.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "fontColor", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return this._fontColor.webColor;
        },
        set: function (value) {
            this._fontColor.setColorFromString(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "fontSize", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return +this._fontSize.value;
        },
        set: function (value) {
            this._fontSize.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "isItalic", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return (this._italic.value.toLowerCase() === 'true');
        },
        set: function (value) {
            this._italic.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "maximumAllowableCharacters", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            // TODO: Is this logic needed?  Also can any of these actually be undefined by not being in the data at all?
            /*
                 var returnVar:int = Math.round(0x7FFFFFFF); // maximum value allowed for string length ...
                 if (maxCharsElement != null){
                 returnVar = int(maxCharsElement.Value);
                 }
                 return returnVar;
             */
            return +this._maxChars.value;
        },
        set: function (value) {
            this._maxChars.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "maximumValue", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            // TODO: Is this a number?  I don't even see this property being used in ActionScript.
            return +this._maxValue.value;
        },
        set: function (value) {
            this._maxValue.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "isMultiline", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return (this._multiline.value.toLowerCase() === 'true');
        },
        set: function (value) {
            this._multiline.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "restrict", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return this._restrict.value;
        },
        set: function (value) {
            this._restrict.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "isSelectable", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return (this._selectable.value.toLowerCase() === 'true');
        },
        set: function (value) {
            this._selectable.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "text", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            // TODO: Document repercussions of not being able to get the MarkupTextDataType.xmlText property here.
            return this._text.editableText;
        },
        set: function (value) {
            this._text.xmlText = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "isUnderline", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            return (this._underline.value.toLowerCase() === 'true');
        },
        set: function (value) {
            this._underline.value = value.toString();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "isDisplayComponent", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         *
         * @default true
         */
        get: function () {
            return this._isDisplayComponent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "isReadOnly", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * @default
         */
        get: function () {
            // NOTE!!! Currently the event system can only modify our "editable" property, but to control the "read only"
            // attribute of the element in our template we need to bind it to a property that actually means read only.
            return !this.isEditable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextDataObject.prototype, "shouldSubscribeToVariableChanges", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         *
         * @default
         */
        set: function (value) {
            this._text.shouldSubscribeToVariableChanges = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Callback for handling cleanup when this object needs to be disposed of.
     */
    TextDataObject.prototype.onDestroy = function () {
        this._text.onDestroy();
    };
    TextDataObject.prototype.subscribeToDisplayTextChanges = function (next, error, complete) {
        this._text.subscribeToDisplayTextChanges(next, error, complete);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Validation
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     *
     * TODO: Only really needed by Player.  May want to consider creating playable version for this class?
     */
    TextDataObject.prototype.validate = function () {
        var userText = this.text;
        var correctText = this.validationText;
        if (!this.isValidationCaseSensitive) {
            userText = userText.toLowerCase();
            correctText = correctText.toLowerCase();
        }
        return (userText === correctText);
    };
    return TextDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/text.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/components/video.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VideoDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Data object for DIF video component.
 */
var VideoDataObject = /** @class */ (function (_super) {
    __extends(VideoDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new VideoDataObject instance.
     */
    function VideoDataObject(rootElement) {
        var _this = _super.call(this, rootElement) || this;
        /**
         * The property used to emit stop playing event when set to 0.
         */
        _this._playhead = -1;
        /**
         * When property _playing set to true, emit this event so video component subscribe to it can start to play.
         *
         * TODO: Change this to use Subject.
         *
         * @default An EventEmitter instance.
         */
        _this.onPlay = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * When property _playing set to false, emit this event so video component subscribe to it can pause playing.
         *
         * TODO: Change this to use Subject.
         *
         * @default An EventEmitter instance.
         */
        _this.onPause = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * When property _playhead set to 0, emit this event so video component subscribe to it can stop playing.
         *
         * TODO: Change this to use Subject.
         *
         * @default An EventEmitter instance.
         */
        _this.onStop = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        return _this;
    }
    /**
     * @inheritDoc
     */
    VideoDataObject.prototype.constructorPreprocessing = function () {
        this.movieDataObjectLogger = __WEBPACK_IMPORTED_MODULE_2__log__["a" /* Log */].getInstance().getLogger('VideoDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * @inheritDoc
     */
    VideoDataObject.prototype.initializePropertyNames = function () {
        _super.prototype.initializePropertyNames.call(this);
        this.initPropertyMapArray = this.initPropertyMapArray.concat([
            ['_playOnLoad', 'playOnLoad', 'PlayOnLoad', 'boolean'],
            ['_displayControls', 'displayControls', 'DisplayControls', 'boolean'],
            ['_playing', 'playing', 'Playing', 'boolean'],
            ['_playhead', 'playhead', 'Playhead', 'number'],
            ['_url', 'URL', '_URL', 'element'],
            ['_urlmp4', 'URLmp4', '_URLmp4', 'element'],
            ['_urlwebm', 'URLwebm', '_URLwebm', 'element'],
            ['_urlogv', 'URLogv', '_URLogv', 'element'],
            ['_urlflv', 'URLflv', '_URLflv', 'element'],
            ['_urlf4v', 'URLf4v', '_URLf4v', 'element'],
            ['_goToBlack', 'goToBlack', 'GoToBlack', 'boolean'],
            ['_description', 'description', 'Description', 'element']
        ]);
    };
    Object.defineProperty(VideoDataObject.prototype, "description", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The Description value. An Accessor for the Description element
         */
        get: function () {
            return this._description.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "URL", {
        /**
         * The _URL contained in the video
         *
         * TODO: Add better description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._url.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "URLmp4", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._urlmp4.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "URLwebm", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._urlwebm.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "URLogv", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._urlogv.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "URLflv", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._urlflv.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "URLf4v", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._urlf4v.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "playing", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._playing;
        },
        set: function (value) {
            this._playing = value;
            if (this._playing) {
                this.onPlay.emit();
            }
            else {
                this.onPause.emit();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "playhead", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._playhead;
        },
        set: function (value) {
            this._playhead = value;
            if (this._playhead === 0) {
                this.onStop.emit();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "playOnLoad", {
        //////////////////////////////////////////////////////////
        /**
         * The property used to decide auto playing when loaded
         *
         * TODO: Add better description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._playOnLoad;
        },
        set: function (value) {
            this._playOnLoad = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "displayControls", {
        //////////////////////////////////////////////////////////
        /**
         * The property used to decide to show video controls when loaded
         *
         * TODO: Add better description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._displayControls;
        },
        set: function (value) {
            this._displayControls = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VideoDataObject.prototype, "goToBlack", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         * TODO: Add default value.
         *
         * @default
         */
        get: function () {
            return this._goToBlack;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Helper functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Concatenate class properties in a string.
     */
    VideoDataObject.prototype.serializeToString = function () {
        var outString = 'Video Data Object:\n';
        outString += 'height = ' + this.height + '\n';
        outString += 'id = ' + this.id + '\n';
        outString += 'name = ' + this.name + '\n';
        outString += 'URL = ' + this.URL + '\n';
        outString += 'visible = ' + this.visible + '\n';
        outString += 'width = ' + this.width + '\n';
        outString += 'x = ' + this.x + '\n';
        outString += 'y = ' + this.y + '\n';
        outString += 'z = ' + this.z + '\n';
        outString += 'rootElement = ' + this.localRoot.name;
        return outString;
    };
    return VideoDataObject;
}(__WEBPACK_IMPORTED_MODULE_1__component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/video.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/config.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConfigDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_typescript_logging__ = __webpack_require__("./node_modules/typescript-logging/dist/commonjs/typescript-logging.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_typescript_logging___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_typescript_logging__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");


/**
 * data object represents data from online/offline assets/config.xml file
 *
 */
var ConfigDataObject = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new ConfigDataObject instance.
     *
     * @param   sourceXml
     */
    function ConfigDataObject(sourceXml) {
        if (sourceXml) {
            this.constructFromXml(sourceXml);
        }
        ;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Accessors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * constructFromXML method is used to populate the ConfigDataObject with source XML element
     *
     * @param   sourceXML               the source XML of config file.
     */
    ConfigDataObject.prototype.constructFromXml = function (sourceXml) {
        var children = __WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getChildElements(sourceXml);
        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
            var child = children_1[_i];
            switch (child.tagName) {
                case 'EnableBreadcrumb':
                    this.enableBreadcrumb = (__WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(child) === 'true');
                    break;
                case 'LockProgress':
                    this.lockProgress = (__WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(child) === 'true');
                    break;
                case 'filter':
                    this.filter = __WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(child);
                    break;
                case 'LogLevel':
                    this.logLevel = __WEBPACK_IMPORTED_MODULE_0_typescript_logging__["LogLevel"][__WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(child)];
                    break;
                case 'MaxCourseMapLevel':
                    this.maxCourseMapLevel = __WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(child);
                    break;
                case 'PageNumberLevel':
                    this.pageNumberLevel = __WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(child);
                    break;
                case 'PlayerWidth':
                    this.playerWidth = +__WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(child);
                    break;
                case 'PlayerHeight':
                    this.playerHeight = +__WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(child);
                    break;
                case 'PlayerCode':
                    this.playerCode = __WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(child);
                    break;
            }
        }
        ;
    };
    return ConfigDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/config.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/data-types/color.data-type.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ColorDataType; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__element_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * A data type to contain color information. This class handles the convertion of the different color formats.
 *
 *  TODO: Add more ways to construct this.
 */
var ColorDataType = /** @class */ (function (_super) {
    __extends(ColorDataType, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * The Constructor for the ColorDataType. Pass in a color string formatted with # or 0x to initialize the color.
     * @param color
     */
    function ColorDataType(source) {
        var _this = _super.call(this, (typeof source === 'string') ? undefined : source) || this;
        //eww comment me!
        if (typeof source === 'string') {
            _this.setColorFromString(source);
            _this.localRoot.value = _this.hexColor;
        }
        return _this;
    }
    ColorDataType.prototype.constructFromElement = function () {
        this.setColorFromString(this._localRoot.value);
    };
    ColorDataType.prototype.constructNew = function () {
        this._localRoot = new __WEBPACK_IMPORTED_MODULE_1__element_data_object__["a" /* ElementDataObject */]();
    };
    Object.defineProperty(ColorDataType.prototype, "webColor", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Gets color in the web color format. #000000
         * @returns {string}
         */
        get: function () {
            return '#' + this.rawColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColorDataType.prototype, "hexColor", {
        /**
         *
         * @returns {string}
         */
        get: function () {
            return '0x' + this.rawColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColorDataType.prototype, "rawColor", {
        /**
         *
         * @returns {string}
         */
        get: function () {
            var rawColor = '';
            rawColor += this.convertRgbValueToTwoDigitHex(this._red);
            rawColor += this.convertRgbValueToTwoDigitHex(this._green);
            rawColor += this.convertRgbValueToTwoDigitHex(this._blue);
            return rawColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColorDataType.prototype, "red", {
        //////////////////////////////////////////////////////////
        /**
         * Sets the red value. Range 0- 255
         * @param value
         */
        set: function (value) {
            if (this.isValidRGBValue(value)) {
                this._red = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColorDataType.prototype, "green", {
        //////////////////////////////////////////////////////////
        /**
         * Sets the green value. Range 0- 255
         * @param value
         */
        set: function (value) {
            if (this.isValidRGBValue(value)) {
                this._green = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColorDataType.prototype, "blue", {
        //////////////////////////////////////////////////////////
        /**
         * Sets the blue value. Range 0- 255
         * @param value
         */
        set: function (value) {
            if (this.isValidRGBValue(value)) {
                this._blue = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Sets the color to a color string formatted with # or 0x to initialize the color.
     * @param color
     */
    ColorDataType.prototype.setColorFromString = function (color) {
        this.setRGBFromColorString(color);
    };
    /**
     * Tests number to see if it in valid range of an RGB value.
     * @param value
     * @returns {boolean}
     */
    ColorDataType.prototype.isValidRGBValue = function (value) {
        if (!isNaN(value) && value < 256 && value > -1) {
            return true;
        }
        return false;
    };
    /**
     * Sets color from string to this classes red green blue properties.
     * @param color
     */
    ColorDataType.prototype.setRGBFromColorString = function (color) {
        if (color !== '') {
            var rawHex = void 0;
            if (color.substr(0, 2) === '0x' && color.length === 8) {
                rawHex = color.substr(2, 6);
            }
            else if (color.substr(0, 1) === '#') {
                if (color.length === 7) {
                    rawHex = color.substr(1, 6);
                }
                else if (color.length === 4) {
                    // double up the character to handle short hand because #f60 is #ff6600
                    rawHex = color.charAt(1) + color.charAt(1);
                    rawHex += color.charAt(2) + color.charAt(2);
                    rawHex += color.charAt(3) + color.charAt(3);
                }
            }
            else if (color.length === 6) {
                rawHex = color;
            }
            else {
                // This should throw an error! but just so i doesn't break lets default this to black!
                rawHex = '#000000';
            }
            this.red = parseInt(rawHex.substr(0, 2), 16);
            this.green = parseInt(rawHex.substr(2, 2), 16);
            this.blue = parseInt(rawHex.substr(4, 2), 16);
        }
    };
    /**
     * Converts a 0 - 255 number to a 2 digit hex string.
     * Example 1: 255 = ff
     * Example 2: 10 = 0a
     * @param rgbValue number 0 - 255
     * @returns {string}
     */
    ColorDataType.prototype.convertRgbValueToTwoDigitHex = function (rgbValue) {
        var hex = rgbValue.toString(16);
        if (hex.length === 1) {
            hex = '0' + hex;
        }
        return hex;
    };
    return ColorDataType;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/color.data-type.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/data-types/markup-text.data-type.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MarkupTextDataType; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_BehaviorSubject__ = __webpack_require__("./node_modules/rxjs/_esm5/BehaviorSubject.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_util__ = __webpack_require__("./node_modules/util/util.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_util___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_util__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_variable_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/variable.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__element_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__transactions_xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();








/**
 * TODO:    Write description.
 */
var MarkupTextDataType = /** @class */ (function (_super) {
    __extends(MarkupTextDataType, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new MarkupTextDataType instance.
     *
     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be
     *                          constructed from.
     */
    function MarkupTextDataType(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * @inheritDoc
     */
    MarkupTextDataType.prototype.constructorPreprocessing = function () {
        _super.prototype.constructorPreprocessing.call(this);
        this.markupTextDataTypeLogger = __WEBPACK_IMPORTED_MODULE_7__log__["a" /* Log */].getInstance().getLogger('MarkupTextDataType');
        // This needs to be defined first! shouldSubscribeToVariableChanges uses it.
        this.variableChangeSubscriptionMap = {};
        this.shouldSubscribeToVariableChanges = false;
    };
    /**
     * @inheritDoc
     */
    MarkupTextDataType.prototype.constructFromElement = function () {
        this.xmlText = this.tlfTextToXmlText(this._localRoot.value);
    };
    /**
     * @inheritDoc
     */
    MarkupTextDataType.prototype.constructNew = function () {
        this._localRoot = new __WEBPACK_IMPORTED_MODULE_4__element_data_object__["a" /* ElementDataObject */]();
    };
    Object.defineProperty(MarkupTextDataType.prototype, "xmlText", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         *
         * @default
         */
        set: function (value) {
            this._localRoot.value = value;
            // Stop listening to the current set of variable changes when the entire text is replaced.
            this.unsubscribeFromAllVariableChanges();
            this.updateDisplayText();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkupTextDataType.prototype, "displayText", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         *
         * @default
         */
        get: function () {
            return this._displayText;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkupTextDataType.prototype, "editableText", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Figure out what this is for and describe it.
         * TODO: Find out what the default value is in the interface if there is one.
         *
         * A string that contains our text property converted to plain text.
         *
         * When received from the server, the text property contains text marked up by Flash's TextFlow.  That markup gets
         * replaced with actual XML markup.  This property is for times when we don't want any markup at all, just regular
         * plain text.
         *
         * @default
         */
        get: function () {
            return this.markupTextToPlainText(this._displayText);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkupTextDataType.prototype, "shouldSubscribeToVariableChanges", {
        //////////////////////////////////////////////////////////
        /**
         * TODO: Add description.
         *
         * @default
         */
        get: function () {
            return this._shouldSubscribeToVariableChanges;
        },
        /**
         * TODO: Add description.
         *
         * @default
         */
        set: function (value) {
            this._shouldSubscribeToVariableChanges = value;
            this.unsubscribeFromAllVariableChanges();
            if (this._shouldSubscribeToVariableChanges) {
                this.updateDisplayText();
            }
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Callback for handling cleanup when this object needs to be disposed of.
     */
    MarkupTextDataType.prototype.onDestroy = function () {
        this.unsubscribeFromAllVariableChanges();
        this.unsubscribeFromDisplayTextChanges();
    };
    /**
     * TODO: Add description.
     *
     * @param next
     * @param error
     * @param complete
     */
    MarkupTextDataType.prototype.subscribeToDisplayTextChanges = function (next, error, complete) {
        this.unsubscribeFromDisplayTextChanges();
        this.onDisplayTextChanged = new __WEBPACK_IMPORTED_MODULE_0_rxjs_BehaviorSubject__["a" /* BehaviorSubject */](this._displayText);
        this.displayTextSubscription = this.onDisplayTextChanged.subscribe(next, error, complete);
    };
    /**
     * TODO: Add description.
     */
    MarkupTextDataType.prototype.unsubscribeFromDisplayTextChanges = function () {
        if (this.displayTextSubscription && !this.displayTextSubscription.closed) {
            this.displayTextSubscription.unsubscribe();
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Variable Reference Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * TODO: Add description.
     */
    MarkupTextDataType.prototype.updateDisplayText = function () {
        this._displayText = this.xmlTextToDisplayText(this._localRoot.value);
        if (this.onDisplayTextChanged) {
            this.onDisplayTextChanged.next(this._displayText);
        }
    };
    /**
     * TODO: Expand description.
     *
     * Replaces variable references with their current values and subscribes to any future changes if our
     * subscribeToVariableChanges property is true.
     *
     * @param xmlText
     * @returns {string}
     */
    MarkupTextDataType.prototype.xmlTextToDisplayText = function (xmlText) {
        var _this = this;
        return String(xmlText).replace(/{{([\s\S]*?)}}/gm, function (match, substring1) {
            var variable = __WEBPACK_IMPORTED_MODULE_2__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_3__services_variable_service__["a" /* VariableService */]).findVariable(substring1);
            if (variable && !Object(__WEBPACK_IMPORTED_MODULE_1_util__["isNullOrUndefined"])(variable.value)) {
                _this.subscribeToVariableChanges(variable);
                return variable.value;
            }
            return 'variable unavailable';
        });
    };
    /**
     * TODO: Add description.
     *
     * @param variableID
     * @returns {any}
     */
    MarkupTextDataType.prototype.isSubscribedToVariableChanges = function (variableID) {
        return this.variableChangeSubscriptionMap[variableID];
    };
    /**
     * TODO: Add description.
     *
     * @param variable
     */
    MarkupTextDataType.prototype.subscribeToVariableChanges = function (variable) {
        var _this = this;
        if (this.shouldSubscribeToVariableChanges && !this.isSubscribedToVariableChanges(variable.variableID)) {
            this.variableChangeSubscriptionMap[variable.variableID] = variable.onValueChanged.subscribe(function () { _this.updateDisplayText(); });
        }
    };
    /**
     * TODO: Add description.
     */
    MarkupTextDataType.prototype.unsubscribeFromAllVariableChanges = function () {
        for (var _i = 0, _a = Object.keys(this.variableChangeSubscriptionMap); _i < _a.length; _i++) {
            var subscription = _a[_i];
            this.variableChangeSubscriptionMap[subscription].unsubscribe();
        }
        this.variableChangeSubscriptionMap = {};
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Conversion
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * NOTE: This is not the most robust way to do this; it will fail in certain cases.  However the TLF data coming
     * from Flash has already converted "<", and ">" to their respective HTML codes which takes care of the main failure
     * point.
     *
     * @param markupString
     *
     * @returns {string}
     */
    MarkupTextDataType.prototype.markupTextToPlainText = function (markupString) {
        return markupString ? String(markupString).replace(/<[^>]+>/gm, '') : '';
    };
    /**
     * Converts a string containing Flash Text Layout Framework markup into a string containing HTML 5 compliant, XML
     * markup.
     *
     * @param   tlfText  The string containing the TLF markup to convert.
     */
    MarkupTextDataType.prototype.tlfTextToXmlText = function (tlfText) {
        if (!tlfText) {
            return '';
        }
        // The root element of the TLF hierarchy.
        var tlfRoot = __WEBPACK_IMPORTED_MODULE_6__transactions_xml_parser__["a" /* XmlParser */].xmlStringToElement(tlfText);
        // Convert the TLF markup to proper XML.
        this.tlfNodesToXmlNodes(tlfRoot);
        // Skip past the <HTML> Element that is the root of the input so it does't cause problems when we insert the
        // final markup into the component.
        // NOTE: I tried converting the <HTML> Element in the converter as well but it caused problems.
        var xmlRoot = __WEBPACK_IMPORTED_MODULE_6__transactions_xml_parser__["a" /* XmlParser */].findFirstDescendantByName(tlfRoot, 'div');
        // Convert the sanitized markup back into a string and return it for use by the component.
        return __WEBPACK_IMPORTED_MODULE_6__transactions_xml_parser__["a" /* XmlParser */].xmlToString(xmlRoot);
    };
    /**
     * Recursively traverses all Flash TLF nodes converting as necessary those that are elements (and/or their
     * attributes) to HTML 5 compliant XML.
     *
     * @param   tlfNode  The Node in the TLF hierarchy currently being sanitized.
     */
    MarkupTextDataType.prototype.tlfNodesToXmlNodes = function (tlfNode) {
        var currentNode = tlfNode;
        if (tlfNode.nodeType === 1) {
            var currentElement = tlfNode;
            switch (currentElement.tagName) {
                case 'P':
                    if (currentElement.hasAttribute('ALIGN')) {
                        var alignValue = currentElement.getAttribute('ALIGN');
                        currentElement.removeAttribute('ALIGN');
                        switch (alignValue) {
                            case 'left':
                                currentElement.setAttribute('style', 'text-align:left; margin: 0px');
                                break;
                            case 'right':
                                currentElement.setAttribute('style', 'text-align:right; margin: 0px');
                                break;
                            case 'center':
                                currentElement.setAttribute('style', 'text-align:center; margin: 0px');
                                break;
                            case 'justify':
                                currentElement.setAttribute('style', 'text-align:justify; margin: 0px');
                                break;
                        }
                    }
                    break;
                // TODO: make sure we don't need letterspacing or kerning
                case 'FONT':
                    var fontFamily = '';
                    var fontSize = '';
                    var fontColor = '';
                    if (currentElement.hasAttribute('FACE')) {
                        fontFamily = 'font-family: ' + currentElement.getAttribute('FACE') + '; ';
                    }
                    if (currentElement.hasAttribute('SIZE')) {
                        fontSize = 'font-size: ' + currentElement.getAttribute('SIZE') + 'px; ';
                    }
                    if (currentElement.hasAttribute('COLOR')) {
                        fontColor = 'color: ' + currentElement.getAttribute('COLOR') + ';';
                    }
                    currentElement = this.replaceElement(currentElement, 'span');
                    this.addLineBreak(currentElement);
                    currentElement.setAttribute('style', fontFamily + fontSize + fontColor);
                    currentNode = currentElement;
                    break;
                case 'B':
                    currentElement = this.replaceElement(currentElement, 'span');
                    currentElement.setAttribute('style', 'font-weight: bold;');
                    this.addLineBreak(currentElement);
                    currentNode = currentElement;
                    break;
                case 'U':
                    currentElement = this.replaceElement(currentElement, 'span');
                    currentElement.setAttribute('style', 'text-decoration: underline;');
                    this.addLineBreak(currentElement);
                    currentNode = currentElement;
                    break;
                case 'I':
                    currentElement = this.replaceElement(currentElement, 'span');
                    currentElement.setAttribute('style', 'font-style: italic;');
                    this.addLineBreak(currentElement);
                    currentNode = currentElement;
                    break;
                case 'UL':
                    currentElement.setAttribute('style', 'margin: 0px');
                    break;
                case 'TEXTFORMAT':
                    var leftMargin = '';
                    if (currentElement.hasAttribute('LEFTMARGIN')) {
                        leftMargin = currentElement.getAttribute('LEFTMARGIN');
                    }
                    currentElement = this.replaceElement(currentElement, 'div');
                    if (leftMargin) {
                        currentElement.setAttribute('style', 'padding-left: ' + leftMargin + 'px;');
                    }
                    currentNode = currentElement;
                    break;
                case 'BODY':
                    currentNode = this.replaceElement(currentElement, 'div');
                    break;
            }
        }
        for (var i = 0; i < currentNode.childNodes.length; i++) {
            this.tlfNodesToXmlNodes(currentNode.childNodes[i]);
        }
    };
    /**
     * TODO: Add description.
     *
     * @param oldElement
     * @param newTagName
     *
     * @returns
     */
    MarkupTextDataType.prototype.replaceElement = function (oldElement, newTagName) {
        var newElement = document.createElement(newTagName);
        while (oldElement.firstChild) {
            newElement.appendChild(oldElement.firstChild);
        }
        oldElement.parentNode.replaceChild(newElement, oldElement);
        return newElement;
    };
    /**
     * TODO: Add description.
     *
     * @param parent
     */
    MarkupTextDataType.prototype.addLineBreak = function (parent) {
        if (parent.innerHTML.replace(/\s/g, '').length === 0) {
            parent.appendChild(document.createElement('br'));
        }
    };
    return MarkupTextDataType;
}(__WEBPACK_IMPORTED_MODULE_5__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/markup-text.data-type.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ElementBasedDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");

/**
 * This is the root class for all data objects that are built on top of our element data objects.
 *
 * Element data objects are the client-side's representation of data from the server-side database.  Thus, the data
 * objects deriving from this class and constructed using that element data are understood to be element-based.  The
 * client-side uses these data structures, along with various view components, to provide a user interface for the
 * manipulation of the application model.
 */
var ElementBasedDataObject = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Abstract Constructor - provides implementation common to all element based data objects.
     *
     * Element based data objects can be constructed in one of two ways:
     *
     *  1.  A brand new data object is needed and is created without any source element using defaults appropriate to
     *      the data object's functionality.
     *
     *  2.  A new instance of the data object based on existing element objects is needed and is built using the
     *      supplied source element.
     *
     * This constructor determines which method to use by checking whether or not a source element was supplied.
     *
     * @param   sourceElement   The root of the ElementDataObject hierarchy which contains the source data we will be
     *                          constructed from.
     */
    function ElementBasedDataObject(sourceElement) {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Variables / Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * This is the element data object (from within the model's primary data hierarchy) that contains the element data
         * which is used to build this element-based data object.
         *
         * It is designated the local root since it is the root element from the perspective of this data object.  The
         * actual root of the element hierarchy may be (and likely is) much further up the hierarchy.
         *
         * @default null
         */
        this._localRoot = undefined;
        this._localRoot = sourceElement;
        // Run preprocessing (primarily to apply logic for derived classes prior to the rest of the constructor)
        this.constructorPreprocessing();
        if (sourceElement) {
            this.constructFromElement(sourceElement);
        }
        else {
            this.constructNew();
        }
    }
    /**
     * Runs any common processing needed prior to the constructFromElement or constructNew methods.  It can contain
     * logic that is permitted to be overridden in derived classes which would use this method to apply logic specific
     * to the derived class.  Any preprocessing pertaining to this base class that should not be overridden by derived
     * classes should be put directly in the constructor.
     */
    ElementBasedDataObject.prototype.constructorPreprocessing = function () {
        this.elementBasedDataObjectLogger = __WEBPACK_IMPORTED_MODULE_0__log__["a" /* Log */].getInstance().getLogger('ElementBasedDataObject');
    };
    /**
     * Constructs this data object from an existing ElementDataObject hierarchy by parsing the supplied source element.
     *
     * This method needs to be overridden in derived classes that require this functionality, but the override should
     * always call up to this method to ensure that the local root is set.
     *
     * @param   sourceElement  The root of the ElementDataObject hierarchy which contains the source data to parse.
     */
    ElementBasedDataObject.prototype.constructFromElement = function (sourceElement) {
        for (var _i = 0, _a = sourceElement.children; _i < _a.length; _i++) {
            var element = _a[_i];
            this.parseElement(element);
        }
    };
    /**
     * Helper method to constructFromElement.
     *
     * Intended to perform class specific condition testing on the child Element structure being looped through in
     * constructFromElement.  This was separated from constructFromElement to facilitate easy extending. To add
     * handling for specific Elements to this parser in derived classes, override this function and create your own
     * switch calling super for its Element processing if applicable.
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    ElementBasedDataObject.prototype.parseElement = function (element) { };
    /**
     * Constructs a brand new data object using defaults appropriate to the data object's functionality.
     *
     * This method needs to be overridden in derived classes that require this functionality.
     */
    ElementBasedDataObject.prototype.constructNew = function () {
    };
    Object.defineProperty(ElementBasedDataObject.prototype, "localRoot", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * This is the element data object (from within the model's primary data hierarchy) that contains the element data
         * which is used to build this element-based data object.
         *
         * It is designated the local root since it is the root element from the perspective of this data object.  The
         * actual root of the element hierarchy may be (and likely is) much further up the hierarchy.
         *
         * @default null
         */
        get: function () {
            return this._localRoot;
        },
        enumerable: true,
        configurable: true
    });
    return ElementBasedDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/element-based.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/element.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ElementDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");


/**
 * ElementDataObject is the backbone of all of the application's data. It acts as an object equivalent to a single Node
 * or Element found in the various XML structures the application uses. This class is used to deliver data to
 * DataObjects that give the data context.
 */
var ElementDataObject = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new ElementDataObject instance.
     *
     * To construct an empty ElementDataObject, simply don't pass in a source XML Element.
     *
     * @param   sourceXml   The root Element of the XML that contains the data to build this ElementDataObject from.
     */
    function ElementDataObject(sourceXml) {
        if (sourceXml === void 0) { sourceXml = undefined; }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * An instance of the logger class for outputting log messages.
         *
         * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before
         * each log statement that is output.
         *
         * @default A logger object named after the containing class.
         */
        this.logger = __WEBPACK_IMPORTED_MODULE_0__log__["a" /* Log */].getInstance().getLogger('ElementDataObject');
        /**
         * See accessor method(s).
         */
        this._children = [];
        if (sourceXml) {
            this.constructFromXml(sourceXml);
        }
    }
    /**
     * This method populates the ElementDataObject with data retrieved from XML.  It then calls the parseElement helper
     * method on each of its children.  Together these methods recursively create and populate this data object and all
     * of its descendants, building an entire hierarchy of ElementDataObjects.
     *
     * @param   sourceXml   The root Element of the XML that contains the data to build this ElementDataObject from.
     */
    ElementDataObject.prototype.constructFromXml = function (sourceXml) {
        this._id = parseInt(__WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getAttribute(sourceXml, 'ElementID'), 10);
        if (isNaN(this._id)) {
            this._id = undefined;
        }
        this._name = sourceXml.tagName;
        var sourceElements = __WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getChildElements(sourceXml);
        for (var i = 0; i < sourceElements.length; i++) {
            this.parseElement(sourceElements[i]);
        }
    };
    /**
     * This method is a helper of constructFromXml.  It determines if the given XML Element contains a property of this
     * ElementDataObject or one of its children.  Together these methods recursively create and populate this data
     * object and all of its descendants, building an entire hierarchy of ElementDataObjects.
     *
     * NOTES:
     *         Unfortunately, with our current data structure SOME of our properties are SOMETIMES mixed in with our
     *         child elements.  Other times, in a half-measure attempt to change this paradigm, our properties are
     *         actually attributes.  “Half measures will avail you nothing.” -every 12-step program ever.
     *
     *         This method was separated from constructFromXml to facilitate easy extension. To add properties to this
     *         parser:
     *             1.  In derived classes, override this method and create a switch statement to handle custom
     *                 properties.
     *             2.  Fallback to calling the super version (this method) if none of the custom properties are found.
     *
     * @param  sourceElement   The XML Element we are determining to be either a property of this ElementDataObject, or
     *                         an actual child.
     */
    ElementDataObject.prototype.parseElement = function (sourceElement) {
        switch (sourceElement.tagName) {
            case 'Value':
                this._value = __WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'ElementID':
                this._id = +__WEBPACK_IMPORTED_MODULE_1__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'IsTemplate':
            case 'IsProperty':
                // This fallthrough is needed so we can ignore Elements that contain properties we don't need.
                break;
            default:
                // This Element actually contains a child ElementDataObject... I'm a real boy!
                var newChild = new ElementDataObject();
                newChild.constructFromXml(sourceElement);
                newChild.parent = this;
                this._children.push(newChild);
                break;
        }
    };
    Object.defineProperty(ElementDataObject.prototype, "id", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The unique ID number of this ElementDataObject.
         *
         * @default undefined
         */
        get: function () {
            return this._id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElementDataObject.prototype, "name", {
        //////////////////////////////////////////////////////////
        /**
         * The name of this ElementDataObject.
         *
         * @default undefined
         */
        get: function () {
            return this._name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElementDataObject.prototype, "value", {
        //////////////////////////////////////////////////////////
        /**
         * The value of this ElementDataObject.
         *
         * @default undefined
         */
        get: function () {
            return this._value;
        },
        set: function (value) {
            this._value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElementDataObject.prototype, "parent", {
        //////////////////////////////////////////////////////////
        /**
         * A reference to this ElementDataObject's parent ElementDataObject.
         *
         * @default undefined
         */
        get: function () {
            return this._parent;
        },
        set: function (element) {
            this._parent = element;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElementDataObject.prototype, "parentId", {
        //////////////////////////////////////////////////////////
        /**
         * The ID of this ElementDataObject's parent.
         *
         * @default undefined
         */
        get: function () {
            return (this._parent ? this._parent.id : undefined);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ElementDataObject.prototype, "children", {
        //////////////////////////////////////////////////////////
        /**
         * An array that contains this ElementDataObject's children ElementDataObjects.
         *
         * @default An empty array of ElementDataObject.
         */
        get: function () {
            return this._children;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Utility method to find first child Element of this Element based on its name property
     * @param name
     * @returns ElementDataObject
     */
    ElementDataObject.prototype.getFirstChildElementByName = function (name) {
        return this.children.find(function (element) {
            return element.name === name;
        });
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Debugging
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Builds a string representation of this ElementDataObject.
     *
     * @returns  A string representation of this ElementDataObject.
     */
    ElementDataObject.prototype.toString = function () {
        var output;
        output = 'ID = ' + this._id;
        output += '   name = ' + this._name;
        output += '   value = ' + this._value;
        output += '   parent ID = ' + this.parentId;
        return output;
    };
    /**
     * Uses toString to recursively log a text representation of this ElementDataObject and all its descendants.
     */
    ElementDataObject.prototype.logHierarchy = function () {
        this.logHierarchyLevels();
    };
    /**
     * Uses toString to recursively log a text representation of the entire ElementDataObject hierarchy level by level
     * starting at this ElementDataObject.  Each object's string is indented by a number of tabs equal to the depth of
     * its level in the hierarchy.
     *
     * NOTE:
     *          This method exists because we don't want to expose the currentLevel property to the outside, but we
     *          need it in order to keep track of our current depth in the hierarchy.
     *
     * @param   currentLevel   How far down the hierarchy the level we are currently logging is.
     */
    ElementDataObject.prototype.logHierarchyLevels = function (currentLevel) {
        if (currentLevel === void 0) { currentLevel = 0; }
        var output = '';
        // Add the proper amount of indenting for the depth of the level we are currently on.
        for (var i = 0; i < currentLevel; i++) {
            output = output + '\t';
        }
        output = output + this.toString();
        this.logger.debug(output);
        for (var i = 0; i < this._children.length; i++) {
            this._children[i].logHierarchyLevels(currentLevel + 1);
        }
    };
    return ElementDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/element.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/case.data-object.collection.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CaseDataObjectCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__case_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/case.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Event System data object class that defines a Case Collection (a set of Case objects that store data that define
 * functionality for condition testing).  If the Event System is supposed to run a set of functions unconditionally,
 * those functions will still be defined within a case collection containing one case with no conditions defined.
 */
var CaseDataObjectCollection = /** @class */ (function (_super) {
    __extends(CaseDataObjectCollection, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Case Collection and the Case objects it manages.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function CaseDataObjectCollection(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    CaseDataObjectCollection.prototype.constructorPreprocessing = function () {
        this.caseCollectionLogger = __WEBPACK_IMPORTED_MODULE_2__log__["a" /* Log */].getInstance().getLogger('CaseDataObjectCollection');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
        this.caseCollection = [];
    };
    /**
     * Overrides base version.
     * Performs Case collection specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    CaseDataObjectCollection.prototype.parseElement = function (element) {
        switch (element.name) {
            case __WEBPACK_IMPORTED_MODULE_0__case_data_object__["a" /* CaseDataObject */].CASE_ELEMENT_NAME:
                this.addCase(this.createCase(element));
        }
        // Case data as provided by server and subsequently added into caseCollection might not be in order - sort it
        this.sortCaseCollection();
        // Temporary - just for testing
        // TODO: Might want to turn this into toString utility method for debugging
        this.caseCollectionLogger.debug('constructFromElement(): Sorted case array:');
        for (var _i = 0, _a = this.caseCollection; _i < _a.length; _i++) {
            var caseObject = _a[_i];
            this.caseCollectionLogger.debug('constructFromElement(): case name = ' + caseObject.name + '  order = ' + caseObject.order);
        }
    };
    Object.defineProperty(CaseDataObjectCollection.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version of
     * CaseDataObject
     *
     * @param sourceElement -> root level Element to construct an CaseDataObject from.
     */
    CaseDataObjectCollection.prototype.createCase = function (sourceElement) {
        /*
         Since this class is abstract, this version of createCase should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    /**
     * Add CaseDataObject to caseCollection array
     * @param caseDataObject - the Case to add to the collection
     */
    CaseDataObjectCollection.prototype.addCase = function (caseDataObject) {
        // Add to array
        this.caseCollection.push(caseDataObject);
        // Set parent
        caseDataObject.parent = this;
    };
    /**
     * Sorts the Case objects stored in caseCollection based on their order property
     */
    CaseDataObjectCollection.prototype.sortCaseCollection = function () {
        this.caseCollection.sort(function (caseA, caseB) {
            return caseA.order - caseB.order;
        });
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify an Element associated with a Case Collection (via name)
     * @type {string}
     */
    CaseDataObjectCollection.CASE_COLLECTION_ELEMENT_NAME = 'Cases';
    return CaseDataObjectCollection;
}(__WEBPACK_IMPORTED_MODULE_1__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/case.data-object.collection.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/case.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CaseDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__condition_branch_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/condition-branch.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__condition_leaf_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/condition-leaf.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__function_group_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/function-group.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/**
 * Event System data object class that defines a Case, which optionally specifies what conditions should be tested and
 * what set of functionality should be performed if the conditions are met.  If no conditions are specified, the
 * functions will run unconditionally.
 */
var CaseDataObject = /** @class */ (function (_super) {
    __extends(CaseDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Case and the Condition and Function Group objects it manages.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function CaseDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    CaseDataObject.prototype.constructorPreprocessing = function () {
        this.caseLogger = __WEBPACK_IMPORTED_MODULE_4__log__["a" /* Log */].getInstance().getLogger('CaseDataObject');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    /**
     * Overrides base version.
     * Performs Case specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    CaseDataObject.prototype.parseElement = function (element) {
        switch (element.name) {
            case CaseDataObject.IS_DEFAULT_CASE_ELEMENT_NAME:
                this.isDefaultCaseElement = element;
                break;
            case CaseDataObject.NAME_ELEMENT_NAME:
                this.nameElement = element;
                this.caseLogger.debug('constructFromElement(): name = ' + this.name);
                break;
            case CaseDataObject.ORDER_ELEMENT_NAME:
                this.orderElement = element;
                this.caseLogger.debug('constructFromElement(): order = ' + this.order);
                break;
            case __WEBPACK_IMPORTED_MODULE_1__condition_leaf_data_object__["a" /* ConditionLeafDataObject */].CONDITION_LEAF_ELEMENT_NAME:
                this.conditionNode = this.createConditionLeaf(element);
                this.conditionNode.parent = this;
                break;
            case __WEBPACK_IMPORTED_MODULE_0__condition_branch_data_object__["a" /* ConditionBranchDataObject */].CONDITION_BRANCH_ELEMENT_NAME:
                this.conditionNode = this.createConditionBranch(element);
                this.conditionNode.parent = this;
                break;
            case __WEBPACK_IMPORTED_MODULE_3__function_group_data_object_collection__["a" /* FunctionGroupDataObjectCollection */].FUNCTION_GROUP_COLLECTION_ELEMENT_NAME:
                this.functionGroupCollection = this.createFunctionGroupCollection(element);
                this.functionGroupCollection.parent = this;
                break;
        }
    };
    Object.defineProperty(CaseDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CaseDataObject.prototype, "name", {
        /**
         * Accessor for value of nameElement (Case name)
         * @returns {string}
         */
        get: function () {
            return this.nameElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CaseDataObject.prototype, "order", {
        /**
         * Accessor for value of orderElement(Case order)
         * @returns {number}
         */
        get: function () {
            return +this.orderElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CaseDataObject.prototype, "isDefaultCase", {
        /**
         * Accessor for value of isDefaultCaseElement (DefaultCase indicator)
         * @returns {boolean}
         */
        get: function () {
            if (this.isDefaultCaseElement) {
                return this.isDefaultCaseElement.value === 'true';
            }
            else {
                // If case has no default indicator, treat it as non-default
                return false;
            }
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     * @param sourceElement -> root level Element to construct Condition Leaf from.
     * @returns {ConditionLeafDataObject}
     */
    CaseDataObject.prototype.createConditionLeaf = function (sourceElement) {
        /*
         Since this class is abstract, this version of createEventHandler should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     * @param sourceElement -> root level Element to construct Condition Branch from.
     * @returns {ConditionBranchDataObject}
     */
    CaseDataObject.prototype.createConditionBranch = function (sourceElement) {
        /*
         Since this class is abstract, this version of createEventHandler should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     * @param sourceElement -> root level Element to construct Function Group Collection from.
     * @returns {FunctionGroupDataObjectCollection}
     */
    CaseDataObject.prototype.createFunctionGroupCollection = function (sourceElement) {
        /*
         Since this class is abstract, this version of createCase should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify an Element associated with a Case (via ElementDataObject.name)
     */
    CaseDataObject.CASE_ELEMENT_NAME = 'Case';
    /**
     * String used to identify an Element associated with the IsDefaultCase flag
     */
    CaseDataObject.IS_DEFAULT_CASE_ELEMENT_NAME = 'IsDefaultCase';
    /**
     * String used to identify an Element associated with the name property
     */
    CaseDataObject.NAME_ELEMENT_NAME = 'Name';
    /**
     * String used to identify an Element associated with the order property
     */
    CaseDataObject.ORDER_ELEMENT_NAME = 'Order';
    return CaseDataObject;
}(__WEBPACK_IMPORTED_MODULE_2__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/case.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/condition-branch.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConditionBranchDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__condition_leaf_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/condition-leaf.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__condition_node_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/condition-node.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * An Event System Condition Node based object class that represents a branch node in an Event System Condition tree
 * structure.  As a branch node, it contains the data that define the other condition nodes that it connects and the
 * the logical operator that is applied to them when an Event is triggered (i.e. if A and B, A or B).  As a nested
 * structure, it can be used to handle nested condition logic as well (i.e. if (A and B) or C, if (A or B) and C).
 */
var ConditionBranchDataObject = /** @class */ (function (_super) {
    __extends(ConditionBranchDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Condition Branch that include the logic operator and the other condition objects that it
     * should be applied to.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function ConditionBranchDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    ConditionBranchDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.conditionBranchLogger = __WEBPACK_IMPORTED_MODULE_2__log__["a" /* Log */].getInstance().getLogger('ConditionBranchDataObject');
        this.conditionBranchLogger.debug('constructorPreprocessing(): Condition Branch');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
        this.conditionNodeCollection = [];
    };
    /**
     * Overrides base version.
     * Performs Condition Leaf specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * NOTE:
     *   In AS version of this class, this additional check was added in the element for loop:
     *
     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)
     *
     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check
     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player
     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to
     *   address this for the PageDesigner though, we still may need to implements something additional for it.
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    ConditionBranchDataObject.prototype.parseElement = function (element) {
        // Call super version to apply generic Condition Node parsing
        _super.prototype.parseElement.call(this, element);
        // Apply specific Condition Branch parsing
        switch (element.name) {
            case ConditionBranchDataObject.LOGICAL_OPERATOR_ELEMENT_NAME:
                // NOTE: In AS code test for this element did not use the DatabaseElement or isActive check mentioned
                // above.  Not sure if that is significant or not (keep an eye on it).
                this.logicalOperatorElement = element;
                this.conditionBranchLogger.debug('parseElement(): operator = ' + this.logicalOperatorElement.value);
                break;
            case __WEBPACK_IMPORTED_MODULE_0__condition_leaf_data_object__["a" /* ConditionLeafDataObject */].CONDITION_LEAF_ELEMENT_NAME:
                this.addCondition(this.createConditionLeaf(element));
                break;
            case ConditionBranchDataObject.CONDITION_BRANCH_ELEMENT_NAME:
                this.addCondition(this.createConditionBranch(element));
                break;
        }
    };
    Object.defineProperty(ConditionBranchDataObject.prototype, "logicalOperator", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Accessor for value of logicalOperatorElement
         * @returns {string}
         */
        get: function () {
            return this.logicalOperatorElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     * @param sourceElement -> root level Element to construct Condition Leaf from.
     * @returns {ConditionLeafDataObject}
     */
    ConditionBranchDataObject.prototype.createConditionLeaf = function (sourceElement) {
        /*
         Since this class is abstract, this version of createEventHandler should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     * @param sourceElement -> root level Element to construct Condition Branch from.
     * @returns {ConditionBranchDataObject}
     */
    ConditionBranchDataObject.prototype.createConditionBranch = function (sourceElement) {
        /*
         Since this class is abstract, this version of createEventHandler should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    /**
     * Add Condition Node (can be either a Branch or Leaf) to conditionNodeCollection
     * @param condition -> ConditionNodeDataObject to add
     */
    ConditionBranchDataObject.prototype.addCondition = function (conditionNode) {
        this.conditionNodeCollection.push(conditionNode);
        // Set parent to this
        conditionNode.parent = this;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify the root level Element associated with the Condition Leaf (via ElementDataObject.name)
     */
    ConditionBranchDataObject.CONDITION_BRANCH_ELEMENT_NAME = 'ConditionBranch';
    /**
     * String used to identify the Element associated with the Comparison Operator
     */
    ConditionBranchDataObject.LOGICAL_OPERATOR_ELEMENT_NAME = 'LogicalOperator';
    /**
     * String used to identify the AND operator
     */
    ConditionBranchDataObject.AND_OPERATOR = 'AND';
    /**
     * String used to identify the OR operator
     */
    ConditionBranchDataObject.OR_OPERATOR = 'OR';
    return ConditionBranchDataObject;
}(__WEBPACK_IMPORTED_MODULE_1__condition_node_data_object__["a" /* ConditionNodeDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/condition-branch.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/condition-leaf.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConditionLeafDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__condition_node_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/condition-node.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * An Event System Condition Node based object class that represents a leaf node in an Event System Condition tree
 * structure.  As a leaf node, it contains the data that defines the values to be compared and the comparison operation
 * to be performed when an Event is triggered (i.e. if A == B, A > B, etc).
 */
var ConditionLeafDataObject = /** @class */ (function (_super) {
    __extends(ConditionLeafDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Condition Leaf that include the objects it must compare and the comparison operator it should
     * employ.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function ConditionLeafDataObject(sourceElement) {
        var _this = _super.call(this, sourceElement) || this;
        /**
         * String constants representing all supported comparison operations
         * @type {string}
         */
        _this.EQUAL_TO = '=';
        _this.EQUAL_TO_CASE_SENSITIVE = '==';
        _this.NOT_EQUAL_TO = '!=';
        _this.GREATER_THAN = '>';
        _this.GREATER_THAN_OR_EQUAL_TO = '>=';
        _this.LESS_THAN = '<';
        _this.LESS_THAN_OR_EQUAL_TO = '<=';
        return _this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    ConditionLeafDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.conditionLeafLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('ConditionLeafDataObject');
        this.conditionLeafLogger.debug('constructorPreprocessing(): Condition Leaf');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
        this.comparisonValueCollection = [];
    };
    /**
     * Overrides base version.
     * Performs Condition Leaf specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * NOTE:
     *   In AS version of this class, this additional check was added in the element for loop:
     *
     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)
     *
     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check
     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player
     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to
     *   address this for the PageDesigner though, we still may need to implements something additional for it.
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    ConditionLeafDataObject.prototype.parseElement = function (element) {
        // Call super version to apply generic Condition Node parsing
        _super.prototype.parseElement.call(this, element);
        // Apply specific Condition Leaf parsing
        switch (element.name) {
            case ConditionLeafDataObject.COMPARISON_OPERATOR_ELEMENT_NAME:
                this.comparisonOperatorElement = element;
                this.conditionLeafLogger.debug('parseElement(): comparison operator = ' + this.comparisonOperator);
                break;
            case ConditionLeafDataObject.VALUE_OBJECT_ELEMENT_NAME:
                this.addValueDataObject(this.createValueDataObject(element));
                break;
        }
    };
    Object.defineProperty(ConditionLeafDataObject.prototype, "comparisonOperator", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        get: function () {
            return this.comparisonOperatorElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should override in playable and editable versions of this class to return the appropriate version.
     * @param sourceElement
     * @returns {ValueDataObject}
     */
    ConditionLeafDataObject.prototype.createValueDataObject = function (sourceElement) {
        return undefined;
    };
    /**
     * Add ValueDataObject to comparisonValueCollection array
     * @param valueDataObject - the Value object to add to the collection
     */
    ConditionLeafDataObject.prototype.addValueDataObject = function (valueDataObject) {
        // Add to array
        this.comparisonValueCollection.push(valueDataObject);
        // Set parent
        valueDataObject.parent = this;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify the root level Element associated with the Condition Leaf (via ElementDataObject.name)
     */
    ConditionLeafDataObject.CONDITION_LEAF_ELEMENT_NAME = 'ConditionLeaf';
    /**
     * String used to identify the Element associated with the Comparison Operator
     */
    ConditionLeafDataObject.COMPARISON_OPERATOR_ELEMENT_NAME = 'ComparisonOperator';
    /**
     * String used to identify Elements that define the Value Objects that need to be compared
     */
    ConditionLeafDataObject.VALUE_OBJECT_ELEMENT_NAME = 'ValueObject';
    return ConditionLeafDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__condition_node_data_object__["a" /* ConditionNodeDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/condition-leaf.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/condition-node.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ConditionNodeDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/**
 * Hierarchical Event System data object class that as a tree structure, collectively resides under a Case.
 * The data stored in the hierarchical structure of Condition Nodes (via the derived ConditionBranchDataObject and
 * ConditionLeafDataObject) collectively define an Event Condition which must be tested and passed prior to running
 * the Functions defined in the Case. (i.e. if [condition] do [something])
 */
var ConditionNodeDataObject = /** @class */ (function (_super) {
    __extends(ConditionNodeDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Condition Node and the Condition Nodes under it.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function ConditionNodeDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    ConditionNodeDataObject.prototype.constructorPreprocessing = function () {
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    /**
     * Overrides base version.
     * Performs Condition Node specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * NOTE:
     *   In AS version of this class, this additional check was added in the element for loop:
     *
     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)
     *
     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check
     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player
     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to
     *   address this for the PageDesigner though, we still may need to implements something additional for it.
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    ConditionNodeDataObject.prototype.parseElement = function (element) {
        switch (element.name) {
            case ConditionNodeDataObject.ORDER_ELEMENT_NAME:
                this.orderElement = element;
                break;
        }
    };
    Object.defineProperty(ConditionNodeDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Parent Object.  Generally either a Case or a Condition Branch.  At this point, just here for consistency with
         * other Event System data objects.  Not currently reaching into parent object to process anything.
         */
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify an Element associated with the order property (via ElementDataObject.name)
     */
    ConditionNodeDataObject.ORDER_ELEMENT_NAME = 'Order';
    return ConditionNodeDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/condition-node.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/event-handler.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventHandlerDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__case_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/case.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__event_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




/**
 * Event System data object class that defines a Handler (a set of things that need to be done) when its parent Event is
 * triggered.  (i.e. performing a series of checks, running a set of functions)
 *
 * TODO: AS version implements ITreeNodeData interface - may need that eventually
 */
var EventHandlerDataObject = /** @class */ (function (_super) {
    __extends(EventHandlerDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Handler and its Case and Event Collections.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function EventHandlerDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    EventHandlerDataObject.prototype.constructorPreprocessing = function () {
        this.eventHandlerLogger = __WEBPACK_IMPORTED_MODULE_3__log__["a" /* Log */].getInstance().getLogger('EventHandlerDataObject');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs Event Handler specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    EventHandlerDataObject.prototype.parseElement = function (element) {
        switch (element.name) {
            case EventHandlerDataObject.NAME_ELEMENT_NAME:
                this.nameElement = element;
                this.eventHandlerLogger.debug('constructFromElement(): name = ' + this.nameElement.value);
                break;
            case __WEBPACK_IMPORTED_MODULE_0__case_data_object_collection__["a" /* CaseDataObjectCollection */].CASE_COLLECTION_ELEMENT_NAME:
                this.caseCollection = this.createCaseCollection(element);
                break;
            case __WEBPACK_IMPORTED_MODULE_2__event_data_object_collection__["a" /* EventDataObjectCollection */].EVENT_COLLECTION_ELEMENT_NAME:
                this.eventCollection = this.createEventCollection(element);
                break;
        }
    };
    Object.defineProperty(EventHandlerDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerDataObject.prototype, "caseCollection", {
        set: function (value) {
            this._caseCollection = value;
            this._caseCollection.parent = this;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerDataObject.prototype, "eventCollection", {
        set: function (value) {
            this._eventCollection = value;
            this._eventCollection.parent = this;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version of
     * CaseDataObjectCollection
     *
     * @param sourceElement -> root level Element to construct an CaseDataObjectCollection from.
     */
    EventHandlerDataObject.prototype.createCaseCollection = function (sourceElement) {
        /*
         Since this class is abstract, this version of createCaseCollection should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version of
     * EventDataObjectCollection
     *
     * @param sourceElement -> root level Element to construct an EventDataObjectCollection from.
     */
    EventHandlerDataObject.prototype.createEventCollection = function (sourceElement) {
        /*
            Since this class is abstract, this version of createEventCollection should never actually be called so will
            return undefined so that base classes can remain abstract
        */
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify Element associated with a Handler (via EventElementDataObject.name)
     * @type {string}
     */
    EventHandlerDataObject.EVENT_HANDLER_ELEMENT_NAME = 'EventHandler';
    /**
     * String used to identify Element associated with Handler name
     * @type {string}
     */
    EventHandlerDataObject.NAME_ELEMENT_NAME = 'Name';
    return EventHandlerDataObject;
}(__WEBPACK_IMPORTED_MODULE_1__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/event-handler.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.collection.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventDataObjectCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Event System data object class that manages its collection Events.  It is the root data object for the Event System
 *
 * TODO: This implements ITreeNodeData in Flash code - may need to add it at some point.
 */
var EventDataObjectCollection = /** @class */ (function (_super) {
    __extends(EventDataObjectCollection, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement defines the
     * collection of Events that this class manages.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function EventDataObjectCollection(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    EventDataObjectCollection.prototype.constructorPreprocessing = function () {
        this.eventCollectionLogger = __WEBPACK_IMPORTED_MODULE_2__log__["a" /* Log */].getInstance().getLogger('EventDataObjectCollection');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
        this.eventCollection = [];
    };
    /**
     * Overrides base version.
     * Performs Event Collection specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    EventDataObjectCollection.prototype.parseElement = function (element) {
        switch (element.name) {
            case __WEBPACK_IMPORTED_MODULE_1__event_data_object__["a" /* EventDataObject */].EVENT_ELEMENT_NAME:
                // Create and add Event to collection
                this.addEvent(this.createEvent(element));
                break;
        }
    };
    Object.defineProperty(EventDataObjectCollection.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version of
     * EventDataObject
     *
     * @param sourceElement -> root level Element to construct an EventDataObject from.
     */
    EventDataObjectCollection.prototype.createEvent = function (sourceElement) {
        /*
         Since this class is abstract, this version of createEvent should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    /**
     * Adds Event to Event Collection and sets this as the Event's parent
     *
     * @param event
     */
    EventDataObjectCollection.prototype.addEvent = function (event) {
        // Add to Event Collection
        this.eventCollection.push(event);
        // Set this as the parent of the Event added
        event.parent = this;
    };
    /**
     * Returns Event in eventCollection based on its trigger property
     *
     * @param trigger - the value that we want to match the trigger property with
     * @returns {undefined|EventDataObject}
     */
    EventDataObjectCollection.prototype.getEventByTrigger = function (trigger) {
        return this.eventCollection.find(function (event) {
            return event.trigger === trigger;
        });
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify an Element associated with an Event Collection (via name)
     * @type {string}
     */
    EventDataObjectCollection.EVENT_COLLECTION_ELEMENT_NAME = 'Events';
    return EventDataObjectCollection;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/event.data-object.collection.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__event_handler_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event-handler.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Event System data object class that defines an Event, including what triggers it and what it should do when it gets
 * triggered.  (i.e. what should happen when a button is clicked, a variable changes, an event completes, etc.)
 *
 * TODO: AS version implements ITreeNodeData interface - may need that eventually
 */
var EventDataObject = /** @class */ (function (_super) {
    __extends(EventDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Event and its collection of Handlers.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function EventDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    EventDataObject.prototype.constructorPreprocessing = function () {
        this.eventLogger = __WEBPACK_IMPORTED_MODULE_2__log__["a" /* Log */].getInstance().getLogger('EventDataObject');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
        this.eventHandlerCollection = [];
    };
    /**
     * Overrides base version.
     * Performs Event object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties including the Event Handlers associated with it.
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    EventDataObject.prototype.parseElement = function (element) {
        switch (element.name) {
            case EventDataObject.TRIGGER_ELEMENT_NAME:
                this.triggerElement = element;
                this.eventLogger.debug('constructFromElement(): Trigger = ' + this.trigger);
                break;
            case __WEBPACK_IMPORTED_MODULE_1__event_handler_data_object__["a" /* EventHandlerDataObject */].EVENT_HANDLER_ELEMENT_NAME:
                // Create Event Handler and add to eventHandlerCollection
                this.addEventHandler(this.createEventHandler(element));
                break;
        }
    };
    Object.defineProperty(EventDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventDataObject.prototype, "trigger", {
        /**
         * Accessor for value of triggerElement
         * @returns {string}
         */
        get: function () {
            return this.triggerElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version of
     * EventHandlerDataObject
     *
     * @param sourceElement -> root level Element to construct an Event Handler from.
     */
    EventDataObject.prototype.createEventHandler = function (sourceElement) {
        /*
         Since this class is abstract, this version of createEventHandler should never actually be called so will
         return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    /**
     * Add EventHandlerDataObject to eventHandlerCollection array
     * @param eventHandler
     */
    EventDataObject.prototype.addEventHandler = function (eventHandler) {
        // Add to array
        this.eventHandlerCollection.push(eventHandler);
        // Set parent
        eventHandler.parent = this;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify Element associated with an Event (via ElementDataObject.name)
     * @type {string}
     */
    EventDataObject.EVENT_ELEMENT_NAME = 'Event';
    /**
     * String used to identify Element identifying this Event's Trigger
     * @type {string}
     */
    EventDataObject.TRIGGER_ELEMENT_NAME = 'Trigger';
    /**
     * Constants for all possible values of trigger property
     * @type {string}
     */
    EventDataObject.ON_CHANGE = 'OnChange';
    EventDataObject.ON_CHECKED = 'OnChecked';
    EventDataObject.ON_CLICK = 'OnClick';
    EventDataObject.ON_COMPLETE = 'OnComplete';
    EventDataObject.ON_DOUBLE_CLICK = 'OnDoubleClick';
    EventDataObject.ON_EXIT = 'OnExit';
    EventDataObject.ON_FOCUS = 'OnFocus';
    EventDataObject.ON_FOCUS_LOST = 'OnFocusLost';
    EventDataObject.ON_LOAD = 'OnLoad';
    EventDataObject.ON_MOUSE_OUT = 'OnMouseOut';
    EventDataObject.ON_MOUSE_OVER = 'OnMouseOver';
    EventDataObject.ON_PAUSE = 'OnPause';
    EventDataObject.ON_PLAY = 'OnPlay';
    EventDataObject.ON_SELECTED = 'OnSelected';
    EventDataObject.ON_SELECTION_CHANGE = 'OnSelectionChange';
    EventDataObject.ON_UNSELECTED = 'OnUnselected';
    EventDataObject.ON_UNCHECKED = 'OnUnchecked';
    return EventDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/event.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/function-group.data-object.collection.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FunctionGroupDataObjectCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__function_groups_function_group_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/function-groups/function-group.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Event System data object class that manages its collection of FunctionGroupDataObjects.
 *
 * TODO: This implements IFunctionGroupContainerVO in Flash code - may need to add it at some point - not sure if it's
 *          needed.  Seems like only FunctionGroupDataObjectCollection related classes implement it - maybe not needed
 */
var FunctionGroupDataObjectCollection = /** @class */ (function (_super) {
    __extends(FunctionGroupDataObjectCollection, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Function Group Collection object that include the individual Function Group objects it is
     * composed of
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function FunctionGroupDataObjectCollection(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FunctionGroupDataObjectCollection.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.functionGroupLogger = __WEBPACK_IMPORTED_MODULE_2__log__["a" /* Log */].getInstance().getLogger('FunctionGroupDataObjectCollection');
        this.functionGroupLogger.debug('constructorPreprocessing(): Function Group Collection');
        // this.localRoot.logHierarchy();
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
        this.functionGroupCollection = [];
    };
    /**
     * Overrides base version.
     * Performs FunctionGroupDataObjectCollection specific condition testing on the children of _localRoot to identify
     * and setup class specific properties
     *
     * NOTE:
     *   In AS version of this class, this additional check was added in the element for loop:
     *
     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)
     *
     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check
     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player
     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to
     *   address this for the PageDesigner though, we still may need to implements something additional for it.
     *   Apparently this was needed to address cloning which creates these elements that then need to be filtered out.
     *
     * @param  element -> Element to be tested (typically by checking its name property)
     */
    FunctionGroupDataObjectCollection.prototype.parseElement = function (element) {
        switch (element.name) {
            case FunctionGroupDataObjectCollection.NAME_ELEMENT_NAME:
                this.nameElement = element;
                this.functionGroupLogger.debug('parseElement(): name = ' + this.name);
                break;
            case __WEBPACK_IMPORTED_MODULE_1__function_groups_function_group_data_object__["a" /* FunctionGroupDataObject */].FUNCTION_GROUP_ELEMENT_NAME:
                this.addFunctionGroup(this.createFunctionGroup(element));
                break;
        }
        // Function Group data might not have been in order - sort it so that it can be displayed and processed in order
        this.sortFunctionGroupCollection();
    };
    Object.defineProperty(FunctionGroupDataObjectCollection.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionGroupDataObjectCollection.prototype, "name", {
        /**
         * Accessor for value of nameElement (Function Group Collection name)
         * @returns {string}
         */
        get: function () {
            return this.nameElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param sourceElement -> root level Element to construct Function Group from.
     * @returns {FunctionGroupDataObject}
     */
    FunctionGroupDataObjectCollection.prototype.createFunctionGroup = function (sourceElement) {
        /*
         Since this class is abstract, this version of createFunctionGroup should never actually be called so
         will return undefined so that base classes can remain abstract
         */
        return undefined;
    };
    /**
     * Add Function Group to functionGroupCollection array
     * @param functionGroup
     */
    FunctionGroupDataObjectCollection.prototype.addFunctionGroup = function (functionGroup) {
        this.functionGroupCollection.push(functionGroup);
        functionGroup.parent = this;
    };
    /**
     * Sorts the Function Group objects stored in functionGroupCollection based on their order property
     */
    FunctionGroupDataObjectCollection.prototype.sortFunctionGroupCollection = function () {
        this.functionGroupCollection.sort(function (functionGroupA, functionGroupB) {
            return functionGroupA.order - functionGroupB.order;
        });
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify an Element associated with a collection of Event Function Group objects (via name)
     * @type {string}
     */
    FunctionGroupDataObjectCollection.FUNCTION_GROUP_COLLECTION_ELEMENT_NAME = 'FunctionGroups';
    /**
     * String used to identify an Element associated with the Function Group Collection's name
     * @type {string}
     */
    FunctionGroupDataObjectCollection.NAME_ELEMENT_NAME = 'Name';
    return FunctionGroupDataObjectCollection;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/function-group.data-object.collection.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/function-groups/function-group.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FunctionGroupDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__function_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/function.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Base class for all Event System data objects that define an Event System Function Group which specifies the actual
 * Event System Functions that it is comprised of
 */
var FunctionGroupDataObject = /** @class */ (function (_super) {
    __extends(FunctionGroupDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Function Group object that include the parameters that it takes in and its translation to
     * actual Event System Functions.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function FunctionGroupDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FunctionGroupDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.functionGroupLogger = __WEBPACK_IMPORTED_MODULE_2__log__["a" /* Log */].getInstance().getLogger('FunctionGroupDataObject');
        this.functionGroupLogger.debug('constructorPreprocessing(): Function Group');
        // this.localRoot.logHierarchy();
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    /**
     * Overrides base version.
     * Performs Function Group object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking its name property)
     */
    FunctionGroupDataObject.prototype.parseElement = function (element) {
        switch (element.name) {
            case FunctionGroupDataObject.NAME_ELEMENT_NAME:
                this.nameElement = element;
                this.functionGroupLogger.debug('parseElement(): name = ' + this.name);
                break;
            case FunctionGroupDataObject.ORDER_ELEMENT_NAME:
                this.orderElement = element;
                this.functionGroupLogger.debug('parseElement(): order = ' + this.order);
                break;
            case FunctionGroupDataObject.PARAMETERS_ELEMENT_NAME:
                this.parametersElement = element;
                this.parseParameters(element);
                break;
            case FunctionGroupDataObject.EXECUTE_ELEMENT_NAME:
                this.executeElement = element;
                break;
            case __WEBPACK_IMPORTED_MODULE_1__function_data_object_collection__["a" /* FunctionDataObjectCollection */].FUNCTION_COLLECTION_ELEMENT_NAME:
                this.functionCollectionElement = element;
                this.functionCollection = this.createFunctionCollection(element);
                this.functionCollection.parent = this;
                break;
        }
    };
    Object.defineProperty(FunctionGroupDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionGroupDataObject.prototype, "name", {
        /**
         * Accessor for value of nameElement (Function Group name)
         * @returns {string}
         */
        get: function () {
            return this.nameElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionGroupDataObject.prototype, "order", {
        /**
         * Accessor for value of orderElement(Function Group order)
         * @returns {number}
         */
        get: function () {
            return +this.orderElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionGroupDataObject.prototype, "execute", {
        /**
         * Accessor for value of executeElement (execution modifier ... either with or after previous)
         * NOTE: the "with or after previous" concept is garbage, but that's how the interface works so for now ...
         *
         * @returns {string}
         */
        get: function () {
            if (!this.executeElement) {
                return FunctionGroupDataObject.EXECUTE_DEFAULT_VALUE;
            }
            else {
                return this.executeElement.value;
            }
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct Function Collection from.
     * @returns {FunctionDataObjectCollection}
     */
    FunctionGroupDataObject.prototype.createFunctionCollection = function (element) {
        /*
         Since this class is abstract, this version of createFunctionCollection should never actually be called so
         will return undefined so that base classes can remain abstract
        */
        return undefined;
    };
    /**
     * Method to parse Function Group specific parameters.  Should be implemented in derived classes.
     * @param element
     */
    FunctionGroupDataObject.prototype.parseParameters = function (element) { };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify Element associated with a Function Group data object (via ElementDataObject.name)
     * @type {string}
     */
    FunctionGroupDataObject.FUNCTION_GROUP_ELEMENT_NAME = 'FunctionGroup';
    /**
     * String used to identify Element associated with the Function Group's name
     * @type {string}
     */
    FunctionGroupDataObject.NAME_ELEMENT_NAME = 'Name';
    /**
     * String used to identify the top level Element that contains the parameters for the Function Group
     * @type {string}
     */
    FunctionGroupDataObject.PARAMETERS_ELEMENT_NAME = 'Parameters';
    /**
     * String used to identify the Element associated with the order in which the Function Group should be run relative
     * to its siblings
     * @type {string}
     */
    FunctionGroupDataObject.ORDER_ELEMENT_NAME = 'Order';
    /**
     * String used to identify Element that indicates when Function Group should be executed (either With Previous or
     * After Previous)
     * @type {string}
     */
    FunctionGroupDataObject.EXECUTE_ELEMENT_NAME = 'Execute';
    /**
     * String constant values used for the execute property (via executeElement)
     * @type {string}
     */
    FunctionGroupDataObject.EXECUTE_WITH_VALUE = 'With Previous';
    FunctionGroupDataObject.EXECUTE_AFTER_VALUE = 'After Previous';
    FunctionGroupDataObject.EXECUTE_DEFAULT_VALUE = FunctionGroupDataObject.EXECUTE_AFTER_VALUE;
    return FunctionGroupDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/function-group.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/function.data-object.collection.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FunctionDataObjectCollection; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__functions_animate_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/animate.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__functions_change_page_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/change-page.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__functions_delay_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/delay.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__functions_display_message_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/display-message.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__functions_function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__functions_set_property_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/set-property.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__functions_set_scorm_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/set-scorm.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__functions_set_variable_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/set-variable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_wait_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/wait.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();











/**
 * Event System data object class that manages its collection of FunctionDataObjects.  Typically contains the set of
 * Event System Functions that make up a Function Group
 */
var FunctionDataObjectCollection = /** @class */ (function (_super) {
    __extends(FunctionDataObjectCollection, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Function Collection object that include the individual Function objects it manages
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function FunctionDataObjectCollection(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FunctionDataObjectCollection.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.functionCollectionLogger = __WEBPACK_IMPORTED_MODULE_6__log__["a" /* Log */].getInstance().getLogger('FunctionDataObjectCollection');
        this.functionCollectionLogger.debug('constructorPreprocessing(): Function Collection');
        // this.localRoot.logHierarchy();
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
        this.functionCollection = [];
    };
    /**
     * Overrides base version.
     * Performs FunctionDataObjectCollection specific condition testing on the children of _localRoot to identify
     * and setup class specific properties
     *
     * NOTE:
     *   In AS version of this class, this additional check was added in the element for loop:
     *
     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)
     *
     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check
     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player
     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to
     *   address this for the PageDesigner though, we still may need to implements something additional for it.
     *   Apparently this was needed to address cloning which creates these elements that then need to be filtered out.
     *
     * @param  element -> Element to be tested (typically by checking its name property)
     */
    FunctionDataObjectCollection.prototype.parseElement = function (element) {
        switch (element.name) {
            case FunctionDataObjectCollection.NAME_ELEMENT_NAME:
                this.nameElement = element;
                this.functionCollectionLogger.debug('parseElement(): name = ' + this.nameElement.value);
                break;
            case __WEBPACK_IMPORTED_MODULE_5__functions_function_data_object__["a" /* FunctionDataObject */].FUNCTION_ELEMENT_NAME:
                this.addFunction(this.createFunction(element));
                break;
        }
    };
    Object.defineProperty(FunctionDataObjectCollection.prototype, "parent", {
        get: function () {
            return this._parent;
        },
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Utility method to create appropriate Function objects based on input Element structure.
     *
     * @param element
     * @returns {FunctionDataObject}
     */
    FunctionDataObjectCollection.prototype.createFunction = function (element) {
        // Get Function Name
        var functionName = element.getFirstChildElementByName(__WEBPACK_IMPORTED_MODULE_5__functions_function_data_object__["a" /* FunctionDataObject */].NAME_ELEMENT_NAME).value;
        console.log('FunctionDataObject.createFunction(): create functionName = ' + functionName);
        switch (functionName) {
            case __WEBPACK_IMPORTED_MODULE_0__functions_animate_data_object__["a" /* AnimateDataObject */].NAME_ELEMENT_NAME:
                return this.createAnimate(element);
            case __WEBPACK_IMPORTED_MODULE_1__functions_change_page_data_object__["a" /* ChangePageDataObject */].NAME_ELEMENT_NAME:
                return this.createChangePage(element);
            case __WEBPACK_IMPORTED_MODULE_2__functions_delay_data_object__["a" /* DelayDataObject */].NAME_ELEMENT_NAME:
                return this.createDelay(element);
            case __WEBPACK_IMPORTED_MODULE_3__functions_display_message_data_object__["a" /* DisplayMessageDataObject */].NAME_ELEMENT_NAME:
                return this.createDisplayMessage(element);
            case __WEBPACK_IMPORTED_MODULE_7__functions_set_property_data_object__["a" /* SetPropertyDataObject */].NAME_ELEMENT_NAME:
                return this.createSetProperty(element);
            case __WEBPACK_IMPORTED_MODULE_8__functions_set_scorm_data_object__["a" /* SetScormDataObject */].NAME_ELEMENT_NAME:
                return this.createSetScorm(element);
            case __WEBPACK_IMPORTED_MODULE_9__functions_set_variable_data_object__["a" /* SetVariableDataObject */].NAME_ELEMENT_NAME:
                return this.createSetVariable(element);
            case __WEBPACK_IMPORTED_MODULE_10__functions_wait_data_object__["a" /* WaitDataObject */].NAME_ELEMENT_NAME:
                return this.createWait(element);
            default:
                this.functionCollectionLogger.debug('createFunction(): function ' + functionName + ' does not exist');
                return undefined;
        }
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {AnimateDataObject}
     */
    FunctionDataObjectCollection.prototype.createAnimate = function (element) {
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {ChangePageDataObject}
     */
    FunctionDataObjectCollection.prototype.createChangePage = function (element) {
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {DelayDataObject}
     */
    FunctionDataObjectCollection.prototype.createDelay = function (element) {
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {DisplayMessageDataObject}
     */
    FunctionDataObjectCollection.prototype.createDisplayMessage = function (element) {
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {SetPropertyDataObject}
     */
    FunctionDataObjectCollection.prototype.createSetProperty = function (element) {
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {SetScormDataObject}
     */
    FunctionDataObjectCollection.prototype.createSetScorm = function (element) {
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {SetVariableDataObject}
     */
    FunctionDataObjectCollection.prototype.createSetVariable = function (element) {
        return undefined;
    };
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct Function from.
     * @returns {WaitDataObject}
     */
    FunctionDataObjectCollection.prototype.createWait = function (element) {
        return undefined;
    };
    /**
     * Add Function to functionCollection array
     * @param functionDataObject -> FunctionDataObject to add to array
     */
    FunctionDataObjectCollection.prototype.addFunction = function (functionDataObject) {
        this.functionCollection.push(functionDataObject);
        functionDataObject.parent = this;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify an Element associated with a collection of Function objects (via name)
     * @type {string}
     */
    FunctionDataObjectCollection.FUNCTION_COLLECTION_ELEMENT_NAME = 'Functions';
    /**
     * String used to identify the element associated with the name of the Function
     * @type {string}
     */
    FunctionDataObjectCollection.NAME_ELEMENT_NAME = 'Name';
    return FunctionDataObjectCollection;
}(__WEBPACK_IMPORTED_MODULE_4__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/function.data-object.collection.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/animate.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnimateDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the Animate function.</p>
 */
var AnimateDataObject = /** @class */ (function (_super) {
    __extends(AnimateDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Animation object that include the parameters that it takes in and ultimately define what the
     * Animation will do.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function AnimateDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    AnimateDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.animationLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('AnimateDataObject');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
        this._motionPathDataObjectCollection = [];
    };
    /**
     * Overrides base version.
     * Performs Animation object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking its name property)
     */
    AnimateDataObject.prototype.parseElement = function (element) {
        this.animationLogger.debug('parseElement(): name = ' + element.name);
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case AnimateDataObject.COMPONENT_ID_ELEMENT_NAME:
                this._componentIdElement = element;
                break;
            case AnimateDataObject.DURATION_ELEMENT_NAME:
                this._durationElement = element;
                break;
            case AnimateDataObject.MOTION_PATHS_ELEMENT_NAME:
                this._motionPathCollectionElement = element;
                this.parseMotionPathDataObjects();
                break;
        }
    };
    /**
     * Parses Motion Path data from _motionPathCollectionElement, creates MotionPathDataObjects, and adds them to
     * _motionPathDataObjectCollection
     */
    AnimateDataObject.prototype.parseMotionPathDataObjects = function () {
        var _this = this;
        this._motionPathCollectionElement.children.forEach(function (element) {
            _this._motionPathDataObjectCollection.push(_this.createMotionPath(element));
        });
    };
    Object.defineProperty(AnimateDataObject.prototype, "componentElementID", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>The value of the ComponentID property of an AnimateDataObject Function Element</p>
         */
        get: function () {
            return this._componentIdElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AnimateDataObject.prototype, "duration", {
        ////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>The value of the Duration property of an AnimateDataObject.</p>
         */
        get: function () {
            return +this._durationElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     * @param element -> root level Element to construct Motion Path from.
     * @returns {MotionPathDataObject}
     */
    AnimateDataObject.prototype.createMotionPath = function (element) {
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * The element name of the root element that is used to build this DataObject
     */
    AnimateDataObject.NAME_ELEMENT_NAME = 'Animate';
    /**
     * <p>Element Tag Name For the ComponentID Animation Function Property</p>
     */
    AnimateDataObject.COMPONENT_ID_ELEMENT_NAME = 'ComponentElementID';
    /**
     * <p>Element Tag Name For the Duration Animation Function Property</p>
     */
    AnimateDataObject.DURATION_ELEMENT_NAME = 'Duration';
    /**
     * <p>Element Tag Name For the MotionPaths Animation Function Property</p>
     */
    AnimateDataObject.MOTION_PATHS_ELEMENT_NAME = 'MotionPaths';
    return AnimateDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/animate.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/change-page.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChangePageDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the ChangePage function.</p>
 *
 */
var ChangePageDataObject = /** @class */ (function (_super) {
    __extends(ChangePageDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this ChangePage object that include the parameters that it takes in and ultimately define what the
     * ChangePage will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function ChangePageDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    ChangePageDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.changePageLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('ChangePageDataObject');
        this.changePageLogger.debug('constructorPreprocessing(): ChangePage');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs ChangePage object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    ChangePageDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case ChangePageDataObject.PAGE_ID_ELEMENT_NAME:
                this._pageIDElement = element;
                this.changePageLogger.debug('parseElement(): name = ' + element.name);
                break;
            case ChangePageDataObject.TYPE_ELEMENT_NAME:
                this._typeElement = element;
                this.changePageLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(ChangePageDataObject.prototype, "type", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>The type of change page navigation being run.</p>
         *
         *
         */
        get: function () {
            return this._typeElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChangePageDataObject.prototype, "pageID", {
        // /**
        //  * Editable version?
        //  */
        // public set type(value: string)
        // {
        //     this._typeElement.value = value;
        // }
        ////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>ID of the target page for this navigation. Only needed for goto(select) type.</p>
         *
         *
         */
        get: function () {
            return this._pageIDElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**

    /**
     * The element name of the root element that is used to build this DataObject
     */
    ChangePageDataObject.NAME_ELEMENT_NAME = 'ChangePage';
    /**
     * <p>Value of ElementDataObject for Type element.</p>
     */
    ChangePageDataObject.TYPE_ELEMENT_NAME = 'Type';
    /**
     * <p>Value of ElementDataObject for PageID element.</p>
     */
    ChangePageDataObject.PAGE_ID_ELEMENT_NAME = 'PageID';
    return ChangePageDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/change-page.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/delay.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DelayDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the Delay function.</p>
 *
 */
var DelayDataObject = /** @class */ (function (_super) {
    __extends(DelayDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Delay object that include the parameters that it takes in and ultimately define what the
     * Delay will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function DelayDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    DelayDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.delayLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('DelayDataObject');
        this.delayLogger.debug('constructorPreprocessing(): Delay');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs Delay object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    DelayDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case DelayDataObject.DELAY_DURATION_ELEMENT_NAME:
                this._durationElement = element;
                this.delayLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(DelayDataObject.prototype, "duration", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>Length of time that the delay takes in seconds.</p>
         */
        get: function () {
            return +this._durationElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**

    /**
     * The element name of the root element that is used to build this DataObject
     */
    DelayDataObject.NAME_ELEMENT_NAME = 'Delay';
    /**
     * The element name of the delay duration element that is used to build this DataObject
     */
    DelayDataObject.DELAY_DURATION_ELEMENT_NAME = 'DelayDuration';
    return DelayDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/delay.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/display-message.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DisplayMessageDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_types_color_data_type__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/data-types/color.data-type.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * <p>Base/Editable DataObject class for the DisplayMessage </p>
 *
 */
var DisplayMessageDataObject = /** @class */ (function (_super) {
    __extends(DisplayMessageDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// readonlyructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete readonlyruction of this object.  The data in sourceElement define the
     * properties of this DisplayMessage object that include the parameters that it takes in and ultimately define
     * what the DisplayMessage will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function DisplayMessageDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    DisplayMessageDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during readonlyruction
        this.displayMessageLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('DisplayMessageDataObject');
        this.displayMessageLogger.debug('constructorPreprocessing(): DisplayMessage');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs DisplayMessage object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    DisplayMessageDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case DisplayMessageDataObject.MESSAGE_ELEMENT_NAME:
                this._messageElement = element;
                break;
            case DisplayMessageDataObject.TITLE_BAR_COLOR_ELEMENT_NAME:
                this._messageTitleBarColor = new __WEBPACK_IMPORTED_MODULE_2__data_types_color_data_type__["a" /* ColorDataType */](element);
                break;
            case DisplayMessageDataObject.TITLE_BAR_TEXT_COLOR_ELEMENT_NAME:
                this._messageTitleBarTextColor = new __WEBPACK_IMPORTED_MODULE_2__data_types_color_data_type__["a" /* ColorDataType */](element);
                break;
            case DisplayMessageDataObject.TITLE_ELEMENT_NAME:
                this._messageTitleElement = element;
                break;
        }
    };
    Object.defineProperty(DisplayMessageDataObject.prototype, "message", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>The message to be displayed in the popup window.</p>
         *
         * @default null
         */
        get: function () {
            return this._messageElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisplayMessageDataObject.prototype, "messageTitle", {
        // /**
        //  * Editable version?
        //  */
        // public set message(value:string):void
        // {
        //     this._messageElement.value = value;
        // }
        /**
         * The title to be displayed on the message
         * @default null
         */
        get: function () {
            if (!this._messageTitleElement) {
                return 'System Message';
            }
            else {
                return this._messageTitleElement.value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisplayMessageDataObject.prototype, "messageTitleBarColor", {
        // /**
        //  * Editable version?
        //  * Used to set the window title on the display message window
        //  */
        // public set messageTitle(value:string):void
        // {
        //     if(this._messageTitleElement)
        //     {
        //         this._messageTitleElement.value = value;
        //     }
        // }
        /**
         * used to get the window title bar color for the display message window
         */
        get: function () {
            if (this._messageTitleBarColor) {
                return this._messageTitleBarColor.webColor;
            }
            return '#FF6600';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisplayMessageDataObject.prototype, "messageTitleBarTextColor", {
        // /**
        //  * Used to set the display message window title bar color
        //  */
        // public set messageTitleBarColor(value:string):void
        // {
        //     if(this._messageTitleBarColorElement)
        //     {
        //         this._messageTitleBarColorElement.value = value;
        //     }
        // }
        /**
         * Used to get the window title bar text color for the display message window
         */
        get: function () {
            if (this._messageTitleBarTextColor) {
                return this._messageTitleBarTextColor.webColor;
            }
            return '#000000';
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// readonlyants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * string used to identify Element associated with a DisplayMessage data object (via ElementDataObject.name)
     */
    DisplayMessageDataObject.NAME_ELEMENT_NAME = 'DisplayMessage';
    /**
     * <p>Name of ElementDataObject for Message element.</p>
     */
    DisplayMessageDataObject.MESSAGE_ELEMENT_NAME = 'Message';
    /**
     * Name of ElementDataObject for Title Element
     */
    DisplayMessageDataObject.TITLE_ELEMENT_NAME = 'Title';
    /**
     * Name of ElementDataObject for message title bar color element
     */
    DisplayMessageDataObject.TITLE_BAR_COLOR_ELEMENT_NAME = 'TitleBarColor';
    /**
     * Name of ElementDataObject for the message title bar text color element
     */
    DisplayMessageDataObject.TITLE_BAR_TEXT_COLOR_ELEMENT_NAME = 'TitleBarTextColor';
    return DisplayMessageDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/display-message.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FunctionDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * Base class for all Event System data objects that define Event System Functions.
 */
var FunctionDataObject = /** @class */ (function (_super) {
    __extends(FunctionDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Function object that include the parameters that it takes in and ultimately define what the
     * function will do.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function FunctionDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    FunctionDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.functionLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('FunctionDataObject');
        this.functionLogger.debug('constructorPreprocessing(): Function');
        // this.localRoot.logHierarchy();
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    /**
     * Overrides base version.
     * Performs Function object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    FunctionDataObject.prototype.parseElement = function (element) {
        switch (element.name) {
            case FunctionDataObject.NAME_ELEMENT_NAME:
                this.nameElement = element;
                this.functionLogger.debug('parseElement(): name = ' + this.name);
                break;
            case FunctionDataObject.ORDER_ELEMENT_NAME:
                this.orderElement = element;
                this.functionLogger.debug('parseElement(): order = ' + this.order);
        }
    };
    Object.defineProperty(FunctionDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionDataObject.prototype, "name", {
        /**
         * Accessor for value of nameElement (Function name)
         * @returns {string}
         */
        get: function () {
            return this.nameElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunctionDataObject.prototype, "order", {
        /**
         * Accessor for value of orderElement(Function order)
         * @returns {number}
         */
        get: function () {
            return +this.orderElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify Element associated with a Function data object (via ElementDataObject.name)
     * @type {string}
     */
    FunctionDataObject.FUNCTION_ELEMENT_NAME = 'Function';
    /**
     * String used to identify Element associated with name of the Function
     * @type {string}
     */
    FunctionDataObject.NAME_ELEMENT_NAME = 'Name';
    /**
     * String used to identify Element associated with the order of this Function
     * TODO: Didn't see sorting functions in AS class - check to see if used
     * @type {string}
     */
    FunctionDataObject.ORDER_ELEMENT_NAME = 'Order';
    return FunctionDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/function.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/get-math.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetMathDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the GetMath function.</p>
 *
 */
var GetMathDataObject = /** @class */ (function (_super) {
    __extends(GetMathDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this GetMath object that include the parameters that it takes in and ultimately define what the
     * GetMath will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function GetMathDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    GetMathDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.getMathLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('GetMathDataObject');
        this.getMathLogger.debug('constructorPreprocessing(): GetMath');
        // Initialize value object array here, not in the declaration
        this._valueList = [];
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs GetMath object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    GetMathDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case GetMathDataObject.OPERATOR_ELEMENT_NAME:
                this._operator = element;
                this.getMathLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(GetMathDataObject.prototype, "operator", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Contains the + - * / opperator that will be used in this function
         */
        // public set operator(value:string) {
        // 	this._operator.value = value;
        // }
        get: function () {
            return this._operator.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GetMathDataObject.prototype, "valueList", {
        get: function () {
            return this._valueList;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////
    ////////// Value Object List Maitenence Functions
    //////////////////////////////////////////////////////////
    /**
     * This function will sort the ValueDataObjects based upon their order
     *
     */
    GetMathDataObject.prototype.sortOrder = function () {
        this._valueList.sort(function (a, b) {
            return a.order - b.order;
        });
    };
    /**
     * Add a ValueDataObject to this getfunction. If order is specified
     * then use it otherwise just add it the the back of the list.
     *
     * @param   valueObject the ValueDataObject being added.
     * @param   order   [optional] order witch this valueDataObject will be set to. (possibly not needed)
     */
    GetMathDataObject.prototype.addValueObject = function (valueObject, order) {
        this._valueList.push(valueObject);
        // TODO:Open setter? Editable version?
        // valueObject.order = order;
        // this.localRoot.children.push(valueObject.localRoot);
    };
    /**
     * Replace value At a certain order. To be used when a valueDataObject already exists.
     * This function doesn't actully replace the valueDataObject it replaces
     * the get function contained in an existing ValueDataObject
     *
     * @param order: Number position at witch to replace the valueDataObject
     * @param valueObject : ValueDataObject whoes function is relpacing the existing one
     */
    GetMathDataObject.prototype.replaceValueObjectAt = function (order, valueObject) {
        var value = this._valueList.find(function (item) { return item.order === order; });
        if (value) {
            // TODO: Create Function Object in ValueDataOBject? Editable version?
            // value.createFunctionFromDataObject(valueObject.myFunction);
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**

    /**
     * The element name of the root element that is used to build this DataObject
     */
    GetMathDataObject.NAME_ELEMENT_NAME = 'GetMath';
    /**
     * Name of the element that contains the values used by this function
     */
    GetMathDataObject.VALUE_OBJECT_ELEMENT_NAME = 'ValueObject';
    /**
     * Name of the element that cantains the Mathmatical Operator (add, subtract, multiply, divide) for this function.
     */
    GetMathDataObject.OPERATOR_ELEMENT_NAME = 'Operator';
    /**
     * String representing the addition operator
     */
    GetMathDataObject.ADD = 'add';
    /**
     * String representing the subtraction operator
     */
    GetMathDataObject.SUBTRACT = 'subtract';
    /**
     * String representing the multiplication operator
     */
    GetMathDataObject.MULTIPLY = 'multiply';
    /**
     * String representing the division operator
     */
    GetMathDataObject.DIVIDE = 'divide';
    return GetMathDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/get-math.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/get-property.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetPropertyDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the GetProperty function.</p>
 *
 */
var GetPropertyDataObject = /** @class */ (function (_super) {
    __extends(GetPropertyDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this GetProperty object that include the parameters that it takes in and ultimately define what the
     * GetProperty will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function GetPropertyDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    GetPropertyDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.getPropertyLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('GetPropertyDataObject');
        this.getPropertyLogger.debug('constructorPreprocessing(): GetProperty');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs GetProperty object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    GetPropertyDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case GetPropertyDataObject.COMPONENT_ELEMENT_ID_ELEMENT_NAME:
                this._componentElementID = element;
                this.getPropertyLogger.debug('parseElement(): name = ' + element.name);
                break;
            case GetPropertyDataObject.PROPERTY_NAME_ELEMENT_NAME:
                this._propertyName = element;
                this.getPropertyLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(GetPropertyDataObject.prototype, "componentElementID", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>Value of the ComponentElementID Element.
         * The ID of the component that contantains the desired property.</p>
         *
         */
        get: function () {
            return this._componentElementID.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GetPropertyDataObject.prototype, "propertyName", {
        /**
         * editable version
         */
        // public set componentElementID(value:string)
        // {
        // 	this._componentElementID.value = value;
        // }
        /**
         * <p>Value of the PropertyName Element. The name of the property to be returned.</p>
         *
         */
        get: function () {
            return this._propertyName.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**

    /**
     * The element name of the root element that is used to build this DataObject
     */
    GetPropertyDataObject.NAME_ELEMENT_NAME = 'GetProperty';
    /**
     * <p>Name on the Element Tag that contains the Element ID
     * of the Component that has the property we are retrivings.</p>
     */
    GetPropertyDataObject.COMPONENT_ELEMENT_ID_ELEMENT_NAME = 'ComponentElementID';
    /**
     * <p>Name on the Element Tag that contains the property's name</p>
     */
    GetPropertyDataObject.PROPERTY_NAME_ELEMENT_NAME = 'PropertyName';
    return GetPropertyDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/get-property.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/get-random-number.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetRandomNumberDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the GetRandomNumber function.</p>
 *
 */
var GetRandomNumberDataObject = /** @class */ (function (_super) {
    __extends(GetRandomNumberDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this GetRandomNumber object that include the parameters that it takes in and ultimately
     * define what the GetRandomNumber will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function GetRandomNumberDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    GetRandomNumberDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.getRandomNumberLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('GetRandomNumberDataObject');
        this.getRandomNumberLogger.debug('constructorPreprocessing(): GetRandomNumber');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs GetRandomNumber object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    GetRandomNumberDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case GetRandomNumberDataObject.FROM_ELEMENT_NAME:
                this._fromElement = element;
                this.getRandomNumberLogger.debug('parseElement(): name = ' + element.name);
                break;
            case GetRandomNumberDataObject.TO_ELEMENT_NAME:
                this._toElement = element;
                this.getRandomNumberLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(GetRandomNumberDataObject.prototype, "from", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * return one of the two extreames in the given range that will be used to generate the random number.
         * This number does not have to be the smaller number.
         *
         */
        get: function () {
            if (this._fromElement.value === '') {
                return undefined;
            }
            return +this._fromElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GetRandomNumberDataObject.prototype, "to", {
        /**
         * editable version?
         */
        // public set from(value:number)
        // {
        // 	this._fromElement.value = value.toString();
        // }
        /**
         * return one of the two extreames in the given range that will be used to generate the random number.
         * This number does not have to be the bigger number.
         *
         */
        get: function () {
            if (this._toElement.value === '') {
                return undefined;
            }
            return +this._toElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * The element name of the root element that is used to build this DataObject
     */
    GetRandomNumberDataObject.NAME_ELEMENT_NAME = 'GetRandomNumber';
    /**
     * The Element Name for the From element
     */
    GetRandomNumberDataObject.FROM_ELEMENT_NAME = 'From';
    /**
     * The Element Name for the To element
     */
    GetRandomNumberDataObject.TO_ELEMENT_NAME = 'To';
    return GetRandomNumberDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/get-random-number.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/get-typed-constant.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetTypedConstantDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the GetTypedConstant function.</p>
 *
 */
var GetTypedConstantDataObject = /** @class */ (function (_super) {
    __extends(GetTypedConstantDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this GetTypedConstant object that include the parameters that it takes in and ultimately
     * define what the GetTypedConstant will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function GetTypedConstantDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    GetTypedConstantDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.getTypedConstantLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('GetTypedConstantDataObject');
        this.getTypedConstantLogger.debug('constructorPreprocessing(): GetTypedConstant');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs GetTypedConstant object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    GetTypedConstantDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case GetTypedConstantDataObject.CONSTANT_VALUE_ELEMENT_NAME:
                this._constantValue = element;
                this.getTypedConstantLogger.debug('parseElement(): name = ' + element.name);
                break;
            case GetTypedConstantDataObject.TYPE_ELEMENT_NAME:
                this._type = element;
                this.getTypedConstantLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(GetTypedConstantDataObject.prototype, "constantValue", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>Value of the ConstantValue Element. A String reprsentation of the Value of this constant.</p>
         *
         */
        get: function () {
            return this._constantValue.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GetTypedConstantDataObject.prototype, "type", {
        /**
         * editable version?
         */
        // public set constantValue(value: string)
        // {
        // 	this._constantValue.value = value;
        // }
        /**
         * <p>Value of the Type Element. The true data of this constant.</p>
         *
         */
        get: function () {
            return this._type.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**

    /**
     * The element name of the root element that is used to build this DataObject
     */
    GetTypedConstantDataObject.NAME_ELEMENT_NAME = 'Constant';
    // /**
    //  * <p>The value of the name element thats used to identify this FunctionDataObject</p>
    //  */
    // private static NAME_ELEMENT_VALUE:string = 'Constant';
    /**
     * <p>Name on the Element Tag that contains the untyped constant value.</p>
     */
    GetTypedConstantDataObject.CONSTANT_VALUE_ELEMENT_NAME = 'ConstantValue';
    /**
     * <p>Name on the Element Tag that contains the untyped type.</p>
     */
    GetTypedConstantDataObject.TYPE_ELEMENT_NAME = 'Type';
    return GetTypedConstantDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/get-typed-constant.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/get-variable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GetVariableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the GetVariable function.</p>
 *
 */
var GetVariableDataObject = /** @class */ (function (_super) {
    __extends(GetVariableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this GetVariable object that include the parameters that it takes in and ultimately define what the
     * GetVariable will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function GetVariableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    GetVariableDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.getVariableLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('GetVariableDataObject');
        this.getVariableLogger.debug('constructorPreprocessing(): GetVariable');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs GetVariable object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    GetVariableDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case GetVariableDataObject.VARIBLE_ID_ELEMENT_NAME:
                this._variableIDElement = element;
                this.getVariableLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(GetVariableDataObject.prototype, "variableID", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         *
         */
        get: function () {
            return this._variableIDElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify Element associated with a GetVariable data object (via ElementDataObject.name)
     * @type {string}
     */
    GetVariableDataObject.NAME_ELEMENT_NAME = 'GetVariable';
    /**
     * <p>Name on the Element Tag that contains the name of the variable this function is retreiving.</p>
     */
    GetVariableDataObject.VARIBLE_ID_ELEMENT_NAME = 'VariableID';
    return GetVariableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/get-variable.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/motion-path.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MotionPathDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Helper class for Animate.  Holds information on the object property to be animated (tweened), and details on how
 * the object's property is to be changed by the tween.  Stores, parses, and provides access to data provided in source
 * ElementDataObjects.</p>
 */
var MotionPathDataObject = /** @class */ (function (_super) {
    __extends(MotionPathDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this MotionPath object that include the parameters that it takes in and ultimately define what the
     * MotionPath will do.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be undefined / undefined)
     */
    function MotionPathDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    MotionPathDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.motionPathLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('MotionPathDataObject');
        this.motionPathLogger.debug('constructorPreprocessing(): MotionPath');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs MotionPath object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking its name property)
     */
    MotionPathDataObject.prototype.parseElement = function (element) {
        this.motionPathLogger.debug('parseElement():  name = ' + element.name);
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case MotionPathDataObject.PROPERTY_ELEMENT_NAME:
                this._propertyElement = element;
                break;
            case MotionPathDataObject.VALUE_FROM_ELEMENT_NAME:
                this._valueFromElement = element;
                // From AS code: check length presumably b/c valueFromElement may exist without anything in it?
                if (this._valueFromElement.children.length) {
                    this._valueFromValueDataObject = this.createValue(this._valueFromElement.children[0]);
                }
                break;
            case MotionPathDataObject.VALUE_TO_ELEMENT_NAME:
                this._valueToElement = element;
                if (this._valueToElement.children.length) {
                    this._valueToValueDataObject = this.createValue(this._valueToElement.children[0]);
                }
                break;
            case MotionPathDataObject.VALUE_BY_ELEMENT_NAME:
                this._valueByElement = element;
                if (this._valueByElement.children.length) {
                    this._valueByValueDataObject = this.createValue(this._valueByElement.children[0]);
                }
                break;
        }
    };
    Object.defineProperty(MotionPathDataObject.prototype, "property", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>The value of the property property of a motionPath.</p>
         */
        get: function () {
            return this._propertyElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Should be overridden in playable and editable versions of this class to return the appropriate version.
     *
     * @param element -> root level Element to construct ValueDataObject from.
     * @returns {ValueDataObject}
     */
    MotionPathDataObject.prototype.createValue = function (element) {
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * <p>Tag name of root element for MotionPath</p>
     */
    MotionPathDataObject.NAME_ELEMENT_NAME = 'MotionPath';
    /**
     * <p>Tag name for element indicating object property that MotionPath specifies changes for</p>
     */
    MotionPathDataObject.PROPERTY_ELEMENT_NAME = 'Property';
    /**
     * <p>Element tag name for the valueFrom MotionPath property</p>
     */
    MotionPathDataObject.VALUE_FROM_ELEMENT_NAME = 'ValueFrom';
    /**
     * <p>Element tag name for the valueTo MotionPath Property</p>
     */
    MotionPathDataObject.VALUE_TO_ELEMENT_NAME = 'ValueTo';
    /**
     * <p>Element Tag name for the valueBy MotionPath property</p>
     */
    MotionPathDataObject.VALUE_BY_ELEMENT_NAME = 'ValueBy';
    return MotionPathDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/motion-path.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/set-property.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SetPropertyDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the SetProperty function.</p>
 *
 */
var SetPropertyDataObject = /** @class */ (function (_super) {
    __extends(SetPropertyDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this SetProperty object that include the parameters that it takes in and ultimately define what the
     * SetProperty will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function SetPropertyDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    SetPropertyDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.setPropertyLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('SetPropertyDataObject');
        this.setPropertyLogger.debug('constructorPreprocessing(): SetProperty');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs SetProperty object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    SetPropertyDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case SetPropertyDataObject.COMPONENT_ELEMENT_ID_ELEMENT_NAME:
                this._componentElementIDElement = element;
                this.setPropertyLogger.debug('parseElement(): name = ' + element.name);
                break;
            case SetPropertyDataObject.PROPERTY_ELEMENT_NAME:
                this._propertyNameElement = element;
                this.setPropertyLogger.debug('parseElement(): name = ' + element.name);
                break;
            case SetPropertyDataObject.VALUE_OBJECT_ELEMENT_NAME:
                this.createValueDataObject(element);
                this.setPropertyLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(SetPropertyDataObject.prototype, "componentElementID", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>Value of componentElementID parameter passed to function.
         * ElementID of component to change property value of.</p>
         *
         */
        get: function () {
            return this._componentElementIDElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SetPropertyDataObject.prototype, "propertyName", {
        // /**
        //  * editable version?
        //  */
        // public set componentElementID(value:string)
        // {
        // 	this._componentElementIDElement.value = value;
        // }
        ////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>Value of propertyName parameter passed to function.
         * Name of component property to change.</p>
         *
         */
        get: function () {
            return this._propertyNameElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SetPropertyDataObject.prototype, "valueObject", {
        /**
         * editable version?
         */
        // public set propertyName(value:string)
        // {
        // 	this._propertyNameElement.value = value;
        // }
        ////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>A refrence to the ValueDataObject contained in the funtion</p>
         *
         */
        get: function () {
            return this._value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Creates and returns a Value object based on Element passed in
     * overridden on playable and editable versions of this class to return the appropriate version.
     * @param sourceElement
     */
    SetPropertyDataObject.prototype.createValueDataObject = function (sourceElement) {
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**

    /**
     * The element name of the root element that is used to build this DataObject
     */
    SetPropertyDataObject.NAME_ELEMENT_NAME = 'SetValue';
    /**
     * <p>Name on the Element Tag that contains the Element ID of the Component that has the property we are setting.</p>
     */
    SetPropertyDataObject.COMPONENT_ELEMENT_ID_ELEMENT_NAME = 'ComponentElementID';
    /**
     * <p>Name on the Element Tag that contains the property's name</p>
     */
    SetPropertyDataObject.PROPERTY_ELEMENT_NAME = 'Property';
    /**
     * Name of the element that contains the values used by this function
     */
    SetPropertyDataObject.VALUE_OBJECT_ELEMENT_NAME = 'ValueObject';
    return SetPropertyDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/set-property.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/set-scorm.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SetScormDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the SetScorm function.</p>
 *
 */
var SetScormDataObject = /** @class */ (function (_super) {
    __extends(SetScormDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this SetScorm object that include the parameters that it takes in and ultimately define what the
     * SetScorm will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function SetScormDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    SetScormDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.setScormLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('SetScormDataObject');
        this.setScormLogger.debug('constructorPreprocessing(): SetScorm');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs SetScorm object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    SetScormDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case SetScormDataObject.SCORM_DATA_OBJECT_ELEMENT_NAME:
                this._ScormDataObject = element;
                this.setScormLogger.debug('parseElement(): name = ' + element.name);
                break;
            case SetScormDataObject.VALUE_OBJECT_ELEMENT_NAME:
                this.createValueDataObject(element);
                this.setScormLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(SetScormDataObject.prototype, "ScormDataObject", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * SCORMDataObject that will be set
         *
         */
        get: function () {
            return this._ScormDataObject.value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     */
    // public set SCORMDataObject(value:string)
    // {
    // 	this._SCORMDataObject.value = value;
    // }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Creates and returns a Value object based on Element passed in
     * overridden on playable and editable versions of this class to return the appropriate version.
     * @param sourceElement
     */
    SetScormDataObject.prototype.createValueDataObject = function (sourceElement) {
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**


    /**
     * The element name of the root element that is used to build this DataObject
     */
    SetScormDataObject.NAME_ELEMENT_NAME = 'SetSCORM';
    /**
     * Element Tag Name For the SCORMDataObject Property
     */
    SetScormDataObject.SCORM_DATA_OBJECT_ELEMENT_NAME = 'SCORMDataObject';
    /**
     * Element Tag Name For the ValueObject Animation Function Property
     */
    SetScormDataObject.VALUE_OBJECT_ELEMENT_NAME = 'ValueObject';
    return SetScormDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/set-scorm.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/set-variable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SetVariableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the SetVariable function.</p>
 *
 */
var SetVariableDataObject = /** @class */ (function (_super) {
    __extends(SetVariableDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this SetVariable object that include the parameters that it takes in and ultimately define what the
     * SetVariable will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function SetVariableDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    SetVariableDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.setVariableLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('SetVariableDataObject');
        this.setVariableLogger.debug('constructorPreprocessing(): SetVariable');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs SetVariable object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    SetVariableDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case SetVariableDataObject.VARIABLE_ID_ELEMENT_NAME:
                this._variableIDElement = element;
                this.setVariableLogger.debug('parseElement(): name = ' + element.name);
                break;
            case SetVariableDataObject.VALUE_OBJECT_ELEMENT_NAME:
                this.createValueDataObject(element);
                this.setVariableLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(SetVariableDataObject.prototype, "variableID", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         *
         */
        get: function () {
            return this._variableIDElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SetVariableDataObject.prototype, "valueObject", {
        /**
          * <p>A reference to the ValueDataObject contained in the function.</p>
          *
          */
        get: function () {
            return this._value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Creates and returns a Value object based on Element passed in
     * overridden on playable and editable versions of this class to return the appropriate version.
     * @param sourceElement
     */
    SetVariableDataObject.prototype.createValueDataObject = function (sourceElement) {
        return undefined;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify Element associated with a SetVariable data object (via ElementDataObject.name)
     * @type {string}
     */
    SetVariableDataObject.NAME_ELEMENT_NAME = 'SetVariable';
    /**
     * <p>Name on the Element Tag that contains the name of the variable this function is setting.</p>
     */
    SetVariableDataObject.VARIABLE_ID_ELEMENT_NAME = 'VariableID';
    /**
     * <p>Element Tag Name For the ValueObject Animation Function Property</p>
     */
    SetVariableDataObject.VALUE_OBJECT_ELEMENT_NAME = 'ValueObject';
    return SetVariableDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/set-variable.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/functions/wait.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WaitDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__function_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/functions/function.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * <p>Base/Editable Function DataObject class for the Wait function.</p>
 *
 */
var WaitDataObject = /** @class */ (function (_super) {
    __extends(WaitDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Wait object that include the parameters that it takes in and ultimately define what the
     * Wait will do.
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function WaitDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    WaitDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.waitLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('WaitDataObject');
        this.waitLogger.debug('constructorPreprocessing(): Wait');
        _super.prototype.constructorPreprocessing.call(this);
    };
    /**
     * Overrides base version.
     * Performs Wait object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    WaitDataObject.prototype.parseElement = function (element) {
        _super.prototype.parseElement.call(this, element);
        switch (element.name) {
            case WaitDataObject.COMPONENTELEMENTID_ELEMENT_NAME:
                this._componentElementIDElement = element;
                this.waitLogger.debug('parseElement(): name = ' + element.name);
                break;
            case WaitDataObject.EVENTSTRING_ELEMENT_NAME:
                this._eventStringElement = element;
                this.waitLogger.debug('parseElement(): name = ' + element.name);
                break;
        }
    };
    Object.defineProperty(WaitDataObject.prototype, "componentElementID", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * <p>Value of componentElementID parameter passed to function.
         * ElementID of component to change property value of.</p>
         *
         */
        get: function () {
            return this._componentElementIDElement.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WaitDataObject.prototype, "eventString", {
        // /**
        //  * editable version
        //  */
        // public set componentElementID(value:string)
        // {
        // 	this._componentElementIDElement.value = value;
        // }
        /**
         * <p>Value of eventString parameter passed to function.
         * Event on the component this function will listen for.</p>
         *
         */
        get: function () {
            return this._eventStringElement.value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**

    /**
     * The element name of the root element that is used to build this DataObject
     */
    WaitDataObject.NAME_ELEMENT_NAME = 'Wait';
    /**
     * <p>Name property of the ElementDataObject for componentElementID element.</p>
     */
    WaitDataObject.COMPONENTELEMENTID_ELEMENT_NAME = 'ComponentElementID';
    /**
     * <p>Name property of the ElementDataObject for Message element.</p>
     */
    WaitDataObject.EVENTSTRING_ELEMENT_NAME = 'EventString';
    return WaitDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__function_data_object__["a" /* FunctionDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/wait.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/event-system/value.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ValueDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__element_based_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element-based.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * Event System data object class that defines a Value, specifically what the value is or where it should come from.
 * Used in ConditionLeafDataObject and FunctionDataObject classes when values need to be defined or retrieved from other
 * parts of the system.
 */
var ValueDataObject = /** @class */ (function (_super) {
    __extends(ValueDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor.  Based on the ElementBasedDataObject class that this extends from, sourceElement is passed to the
     * constructFromElement method to complete construction of this object.  The data in sourceElement define the
     * properties of this Value object that includes either its value or information on where / how to get its value.
     *
     * NOTE: At this point, passing an empty sourceElement will result in an object that's largely incompatible with
     *          most of the rest of the system without adding special processing, and should generally not be done.
     *          Designers that need to create new versions of this object should use a derived, designer specific,
     *          editable version of this class that provides the additional functionality of setting up a new empty
     *          object by overriding the base constructNew method.
     *
     * @param sourceElement -> root level ElementDataObject for populating this data object and its children (though
     *                          it won't break, should not be null / undefined)
     */
    function ValueDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * Overrides base version.  Applies class specific preprocessing.
     */
    ValueDataObject.prototype.constructorPreprocessing = function () {
        // Setup logger here so that it's available during construction
        this.valueLogger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('ValueDataObject');
        this.valueLogger.debug('constructorPreprocessing(): Value Object');
        _super.prototype.constructorPreprocessing.call(this);
        // NOTE: Variable initialization needs to be done here.  If done with the declaration, somehow it isn't
        //          initialized in time for when these methods are called via the constructor of the super class.
    };
    /**
     * Overrides base version.
     * Performs Value object specific condition testing on the children of _localRoot to identify and setup
     * class specific properties
     *
     * NOTE:
     *   In AS version of this class, this additional check was added in the element for loop:
     *
     *       if(!(element is DatabaseElementVO) || DatabaseElementVO(element).isActive)
     *
     *   It looks like these Elements are excluded from the data passed to the Player from the PageDesigner so check
     *   is probably not really needed at this point.  It can't really be done either b/c this version of the player
     *   doesn't use / have a DatabaseElement or an isActive property.  Depending on whether there is another way to
     *   address this for the PageDesigner though, we still may need to implements something additional for it.
     *
     * @param  element -> Element to be tested (typically by checking it's name property)
     */
    ValueDataObject.prototype.parseElement = function (element) {
        switch (element.name) {
            case ValueDataObject.ORDER_ELEMENT_NAME:
                // NOTE: In AS code test for this element did not use the DatabaseElement or isActive check mentioned
                // above.  Not sure if that is significant or not (keep an eye on it).
                this.orderElement = element;
                break;
        }
    };
    Object.defineProperty(ValueDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueDataObject.prototype, "order", {
        /**
         * <p>Order for the ComparisonItem.  Used to determine the order in which the items will be used in the comparison operation.</p>
         *
         * @default null
         */
        get: function () {
            if (this.orderElement) {
                return +this.orderElement.value;
            }
            else {
                return undefined;
            }
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify Element associated with a Value object (via ElementDataObject.name)
     * @type {string}
     */
    ValueDataObject.VALUE_ELEMENT_NAME = 'ValueObject';
    /**
     * String used to identify Element associated with the order of the Value relative to potential siblings
     * @type {string}
     */
    ValueDataObject.ORDER_ELEMENT_NAME = 'Order';
    return ValueDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__element_based_data_object__["a" /* ElementBasedDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/value.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/page-properties.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PagePropertiesDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__player_model_data_objects_event_system_event_playable_data_object_collection__ = __webpack_require__("./src/app/player/model/data-objects/event-system/event.playable.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_variable_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/variable.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_component_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






/**
 * DataObject associated with the PageAttributes "component"
 *
 * TODO: Will need to create playable version of this class to properly implement the interface (can't have playable
 *          stuff in system-shared Data Object class
 */
var PagePropertiesDataObject = /** @class */ (function (_super) {
    __extends(PagePropertiesDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *
     * @param sourceElement
     */
    function PagePropertiesDataObject(sourceElement) {
        return _super.call(this, sourceElement) || this;
    }
    /**
     * overrides base version to add specific properties
     */
    PagePropertiesDataObject.prototype.initializePropertyNames = function () {
        _super.prototype.initializePropertyNames.call(this);
        this.initPropertyMapArray = this.initPropertyMapArray.concat([
            ['_forwardVisibleElement', 'isNextButtonVisible', 'ForwardVisible', 'element'],
            ['_forwardEnableElement', 'isNextButtonEnabled', 'ForwardEnable', 'element'],
            ['_backVisibleElement', 'isPreviousButtonVisible', 'BackVisible', 'element'],
            ['_backEnableElement', 'isPreviousButtonEnabled', 'BackEnable', 'element'],
            ['_pageCounterVisibleElement', 'isPageNumberVisible', 'PageCounterVisible', 'element'],
            ['_pageCounterEnableElement', 'isPageNumberEnabled', 'PageCounterEnable', 'element'],
            ['_audioControlVisibleElement', 'isAudioControlVisible', 'AudioControlVisible', 'element'],
            ['_audioControlEnableElement', 'isAudioControlEnable', 'AudioControlEnable', 'element'],
            ['_rewindVisibleElement', 'isReloadVisible', 'RewindVisible', 'element'],
            ['_rewindEnableElement', 'isReloadEnabled', 'RewindEnable', 'element'],
            ['_playPauseVisibleElement', 'isPlayPauseVisible', 'PlayPauseVisible', 'element'],
            ['_playPauseEnableElement', 'isPlayPauseEnable', 'PlayPauseEnable', 'element'],
            ['_printVisibleElement', 'isPrintVisible', 'PrintVisible', 'element'],
            ['_printEnableElement', 'isPrintEnabled', 'PrintEnable', 'element'],
            ['_promptTextElement', 'promptText', 'PromptText', 'element']
        ]);
    };
    /**
     * Parse all page specific properties
     * Overrides parent method
     *
     * @param   child: ElementDataObject
     */
    PagePropertiesDataObject.prototype.parseElement = function (child) {
        _super.prototype.parseElement.call(this, child);
        switch (child.name) {
            case 'Variables':
                this._variableEventCollectionElement = child;
                // Pass data to Variable Service to create Event objects and tie to Variable Data Objects
                __WEBPACK_IMPORTED_MODULE_1__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_2__services_variable_service__["a" /* VariableService */]).
                    mapEventsToVariables(this._variableEventCollectionElement);
                break;
        }
    };
    Object.defineProperty(PagePropertiesDataObject.prototype, "isNextButtonVisible", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Next button is Visible
         *
         * @returns {boolean} true if the Next button is shown for this page.
         */
        get: function () {
            return (this._forwardVisibleElement.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._forwardVisibleElement.value = 'true';
            }
            else {
                this._forwardVisibleElement.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isNextButtonEnabled", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Next button is Enabled
         *
         * @returns {boolean} true if the next button is enabled for this page.
         */
        get: function () {
            return (this._forwardEnableElement.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._forwardEnableElement.value = 'true';
            }
            else {
                this._forwardEnableElement.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isPreviousButtonVisible", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Previous button is Visible
         *
         * @returns {boolean} true if the Previous button is shown for this page.
         */
        get: function () {
            return (this._backVisibleElement.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._backVisibleElement.value = 'true';
            }
            else {
                this._backVisibleElement.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isPreviousButtonEnabled", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Previous button is Enabled
         *
         * @returns {boolean} true if the Previous button is enabled for this page.
         */
        get: function () {
            return (this._backEnableElement.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._backEnableElement.value = 'true';
            }
            else {
                this._backEnableElement.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isPageNumberVisible", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Page Number is Visible
         * NOTE: If page number is ether Disabled or invisible it will do the same thing.
         *
         * @returns {boolean} true if the Page Number is shown for this page.
         */
        get: function () {
            return (this._pageCounterVisibleElement.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._pageCounterVisibleElement.value = 'true';
            }
            else {
                this._pageCounterVisibleElement.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isPageNumberEnabled", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Page Number is Visible. No This not a typo.
         * NOTE: If page number is ether Disabled or invisible it will do the same thing.
         *
         * @returns {boolean} true if the Page Number is shown for this page.
         */
        get: function () {
            return (this._pageCounterEnableElement.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._pageCounterEnableElement.value = 'true';
            }
            else {
                this._pageCounterEnableElement.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isVolumeControlVisible", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Volume Control is Visible.
         *
         * @returns {boolean} true if the Volume Control is shown for this page.
         */
        get: function () {
            return (this._audioControlVisibleElement.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isVolumeControlEnabled", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Volume Control is Enabled.
         *
         * @returns {boolean} true if the Volume Control is enabled for this page.
         */
        get: function () {
            return (this._audioControlEnableElement.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isReloadVisible", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Page Reload Button is Visible.
         *
         * @returns {boolean} true if the Page Reload Button is shown for this page.
         */
        get: function () {
            return (this._rewindVisibleElement.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isReloadEnabled", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Page Reload Button is Enabled.
         *
         * @returns {boolean} true if the Page Reload Button is enabled for this page.
         */
        get: function () {
            return (this._rewindEnableElement.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isPlayPauseVisible", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Play / Pause Button is Visible.
         *
         * @returns {boolean} true if the Play / Pause Button is shown for this page.
         */
        get: function () {
            return (this._playPauseVisibleElement.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isPlayPauseEnabled", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Play / Pause Button is Enabled.
         *
         * @returns {boolean} true if the Play / Pause Button is enabled for this page.
         */
        get: function () {
            return (this._playPauseEnableElement.value === 'true');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isPrintVisible", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Print Button is visible Control is Visible.
         *
         * @returns {boolean} true if the Print Button is shown for this page.
         */
        get: function () {
            return (this._printVisibleElement.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._printVisibleElement.value = 'true';
            }
            else {
                this._printVisibleElement.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "isPrintEnabled", {
        //////////////////////////////////////////////////////////
        /**
         * Determines weather or not the Print Button is visible Control is Enabled.
         *
         * @returns {boolean} true if the Print Button is enabled for this page.
         */
        get: function () {
            return (this._printEnableElement.value === 'true');
        },
        set: function (value) {
            if (value) {
                this._printEnableElement.value = 'true';
            }
            else {
                this._printEnableElement.value = 'false';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagePropertiesDataObject.prototype, "promptText", {
        //////////////////////////////////////////////////////////
        /**
         * The prompt text for this page.
         * Note: Our current design Does not support / show Prompt Text
         *
         * @returns {string}
         */
        get: function () {
            return this._promptTextElement.value;
        },
        enumerable: true,
        configurable: true
    });
    //////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Creates and returns an EventDataObjectCollection
     * Should be overridden in editable versions of this class to return the editable version.
     *
     * TODO: Should probably implement class factory to deal with this
     *
     * @param element -> root level Element to construct EventDataObjectCollection from.
     * @returns {EventDataObjectCollection}
     */
    PagePropertiesDataObject.prototype.createEventCollection = function (element) {
        console.log(element);
        // TODO: Should return playable version once created - there will be no playable version ComponentDataObject
        // TODO: Can't reference playable (Player class) from shared ... need to find approach to fix this
        // return new EventDataObjectCollection(element);
        return new __WEBPACK_IMPORTED_MODULE_0__player_model_data_objects_event_system_event_playable_data_object_collection__["a" /* EventPlayableDataObjectCollection */](element);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Implement EventContainerPlayableDataObjectInterface
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    PagePropertiesDataObject.prototype.childEventComplete = function (event) {
        // If the Event is onExit, call PageService method to indicate onExit processing complete
        console.log('PagePropertiesDataObject.childEventComplete(): ' + event.trigger);
        if (event.trigger === __WEBPACK_IMPORTED_MODULE_3__event_system_event_data_object__["a" /* EventDataObject */].ON_EXIT) {
            __WEBPACK_IMPORTED_MODULE_1__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_4__services_page_service__["a" /* PageService */]).onExitEventComplete();
        }
    };
    return PagePropertiesDataObject;
}(__WEBPACK_IMPORTED_MODULE_5__components_component_data_object__["a" /* ComponentDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/page-properties.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/page.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PageDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_component_container_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/components/component-container.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__content_window__ = __webpack_require__("./src/app/shared/system-shared/model/content-window.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__page_properties_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/page-properties.data-object.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Desc: Class to hold Page object
 *
 * TODO: Fix this comment!!!
 *
 * TODO: Consider abstracting the page Data Retrieval one more level this class represents the page data as well as the
 * content (template Holder) it is currently both created from XML and Element Based. This is not clear!
 */
var PageDataObject = /** @class */ (function (_super) {
    __extends(PageDataObject, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor
     *
     * @param sourceElement - ElementDataObject containing content (from Element table - Component/Template/Page)
     * @param pageXML - Page metadata (from Page table)
     */
    function PageDataObject(sourceElement, pageXML) {
        var _this = _super.call(this, sourceElement) || this;
        /**
         *
         */
        _this.type = 'Page';
        // this.parseElementChildren();
        _this.parsePageAttributesFromPageTag(pageXML);
        return _this;
    }
    Object.defineProperty(PageDataObject.prototype, "pageXML", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        get: function () {
            return this._pageXML;
        },
        set: function (value) {
            this._pageXML = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageDataObject.prototype, "pageID", {
        get: function () {
            return this._pageID;
        },
        set: function (value) {
            this._pageID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageDataObject.prototype, "pageName", {
        get: function () {
            return this._pageName;
        },
        set: function (value) {
            this._pageName = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageDataObject.prototype, "pageDesc", {
        get: function () {
            return this._pageDesc;
        },
        set: function (value) {
            this._pageDesc = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageDataObject.prototype, "pageData", {
        //////////////////////////////////////////////////////////
        /**
         *
         */
        get: function () {
            return this._pageData;
        },
        set: function (newPageData) {
            this._pageData = newPageData;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Parsing methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Parse all page specific properties
     * Overrides parent method
     *
     * @param   child: ElementDataObject
     */
    PageDataObject.prototype.parseElement = function (child) {
        // if the child is not Name, Visible, or PageAttributes then lets handle this as something page specific
        switch (child.name) {
            case 'PageAttributes':
                this.pageProperties = new __WEBPACK_IMPORTED_MODULE_2__page_properties_data_object__["a" /* PagePropertiesDataObject */](child);
                this.components.push(this.pageProperties);
                break;
            case 'ContentWindow':
                // TODO:Do we need to special case this like this? I saving it as a component here anyway?
                this._contentWindow = new __WEBPACK_IMPORTED_MODULE_1__content_window__["a" /* ContentWindow */](child);
                this.components.push(this._contentWindow);
                break;
            default:
                break;
        }
        // NOTE: We cannot call ComponentDataObject parseElement method from here directly (super.super)
        //       Therefore, we created parseProperties method on ComponentDataObject to substitute its parseElement method
        //       which has the same name in all component data objects
        // TODO: If it can be done in a more elegant name - just do it!
        this.parseProperties(child);
        _super.prototype.parseElement.call(this, child); // parse components
    };
    /**
     * Pulls out the attributes from the Page tag that define necessary properties of this page object.
     *
     * @param pageXML	The Page Tag from the Page data XML
     */
    PageDataObject.prototype.parsePageAttributesFromPageTag = function (pageXML) {
        this.pageXML = pageXML;
        this.pageID = pageXML.getAttribute('PageID');
        this.pageName = pageXML.getAttribute('PageName');
        this.pageDesc = pageXML.getAttribute('PageDesc');
    };
    return PageDataObject;
}(__WEBPACK_IMPORTED_MODULE_0__components_component_container_data_object__["a" /* ComponentContainerDataObject */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/page.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/query-string.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return QueryStringDataObject; });
/**
 * data object represents online/offline querystring parameters
 *
 */
var QueryStringDataObject = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new QueryStringDataObject instance.
     *
     * @param   sourceXml
     */
    function QueryStringDataObject() {
    }
    return QueryStringDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/query-string.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/reference.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReferenceDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");

/**
 * The purpose of this class is to hold data used to describe a reference file.
 */
var ReferenceDataObject = /** @class */ (function () {
    //////////////////////////////////////////////////////////////////
    ////////// Constructor
    //////////////////////////////////////////////////////////////////
    /**
     * Constructor for ReferenceDataObject class.
     */
    function ReferenceDataObject() {
        //
    }
    Object.defineProperty(ReferenceDataObject.prototype, "originalFileURL", {
        //////////////////////////////////////////////////////////////////
        ////////// Getters / Setters
        //////////////////////////////////////////////////////////////////
        /**
         * This is the URL used to resolve the location of the "original file". This will be the same as
         * the referenceURL unless processing was done to make these different. For instance, if the user uploads
         * a file that will be converted on the backend. This would be the link to that original files where as
         * referenceURL would be the file that we display.
         */
        get: function () {
            return this._originalFileURL;
        },
        /**
         * @private
         */
        set: function (value) {
            this._originalFileURL = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReferenceDataObject.prototype, "unitID", {
        /**
         * This holds the UnitID of the reference
         */
        get: function () {
            return this._unitID;
        },
        /**
         * @private
         */
        set: function (value) {
            this._unitID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReferenceDataObject.prototype, "binaryData", {
        /**
         * This contains the binary data for the reference.
         * It will only have data when the user is attempting to add a reference.
         */
        get: function () {
            return this._binaryData;
        },
        /**
         * @private
         */
        set: function (value) {
            this._binaryData = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReferenceDataObject.prototype, "referenceURL", {
        /**
         * This is the URL to the reference file that will be used for display
         */
        get: function () {
            return this._referenceURL;
        },
        /**
         * @private
         */
        set: function (value) {
            this._referenceURL = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReferenceDataObject.prototype, "referenceType", {
        ////////////////////////////////////////////////////////////////////////////////
        /**
         * This is used to distinguish the type of reference file that this reference represents.
         * i.e. File, URL, Glossary, AudioScript
         */
        get: function () {
            return this._referenceType;
        },
        /**
         * @private
         */
        set: function (value) {
            this._referenceType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReferenceDataObject.prototype, "originalFileName", {
        ////////////////////////////////////////////////////////////////////////////////
        /**
         * This is the actual name of the reference file as opposed to referenceName which is the name displayed.
         */
        get: function () {
            return this._originalFileName;
        },
        /**
         * @private
         */
        set: function (value) {
            this._originalFileName = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReferenceDataObject.prototype, "referenceName", {
        ////////////////////////////////////////////////////////////////////////////////
        /**
         * This is the name of the reference as it's displayed in the interface.
         */
        get: function () {
            return this._referenceName;
        },
        /**
         * @private
         */
        set: function (value) {
            this._referenceName = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReferenceDataObject.prototype, "referenceID", {
        ////////////////////////////////////////////////////////////////////////////////
        /**
         * This is a unique identifier for the reference.
         */
        get: function () {
            return this._referenceID;
        },
        /**
         * @private
         */
        set: function (value) {
            this._referenceID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReferenceDataObject.prototype, "referenceXML", {
        /////////////////////////////////////////////////////////////
        ////////// XML Handling
        /////////////////////////////////////////////////////////////
        /**
         * This function converts the reference data that is needed for server requests into XML (Element)
         *
         * @return	Element		an XML representation of the reference needed data to make a server request
         */
        get: function () {
            // this creates a node called <Reference>
            var outReferenceXML = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].xmlStringToElement('<Reference></Reference>');
            // only add an Reference ID node if there is an ID. When making a request to add a
            // reference the reference has no ID, to delete one, we need an ID
            if (this.referenceID) {
                outReferenceXML.appendChild(__WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].xmlStringToElement('<RefID>{this.referenceID}</RefID>'));
                outReferenceXML.appendChild(__WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].xmlStringToElement('<ReferenceName>{this.referenceName}</ReferenceName>'));
                outReferenceXML.appendChild(__WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].xmlStringToElement('<OriginalFileName>{this.originalFileName}</OriginalFileName>'));
                outReferenceXML.appendChild(__WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].xmlStringToElement('<ReferenceType>{this.referenceType}</ReferenceType>'));
                if (this.referenceURL) {
                    outReferenceXML.appendChild(__WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].xmlStringToElement('<RefURL>{this.referenceURL}</RefURL>'));
                }
                outReferenceXML.appendChild(__WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].xmlStringToElement('<UnitID>{ this.unitID } < /UnitID>'));
                return outReferenceXML;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * This function initializes the data of a variable that is created in the reponse of a server transaction
     */
    ReferenceDataObject.prototype.initializeDataFromServer = function (referenceXML) {
        this.referenceID = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].findDescendantTextContentByName(referenceXML, 'RefID');
        this.referenceName = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].findDescendantTextContentByName(referenceXML, 'ReferenceName');
        this.originalFileName = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].findDescendantTextContentByName(referenceXML, 'OriginalFileName');
        this.originalFileURL = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].findDescendantTextContentByName(referenceXML, 'OriginalFileURL');
        this.referenceType = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].findDescendantTextContentByName(referenceXML, 'ReferenceType');
        this.referenceURL = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].findDescendantTextContentByName(referenceXML, 'RefURL');
    };
    ///////////////////////////////////////////////////
    ////////// Helper functions
    ///////////////////////////////////////////////////
    /**
     * This function converts Reference Data Object to string for logging
     *
     * @param tab - "tab" size to indent the output string if needed
     * @default = '' (no indent)
     */
    ReferenceDataObject.prototype.toString = function (tab) {
        if (tab === void 0) { tab = ''; }
        var outString = '';
        outString += tab + 'referenceID = ' + this._referenceID + '\n';
        outString += tab + 'referenceName = ' + this._referenceName + '\n';
        outString += tab + 'referenceType = ' + this._referenceType + '\n';
        outString += tab + 'referenceType = ' + this._referenceType + '\n';
        outString += tab + 'referenceURL = ' + this._referenceURL + '\n';
        outString += tab + 'originalFileName = ' + this._originalFileName + '\n';
        outString += tab + 'originalFileURL = ' + this._originalFileURL + '\n';
        outString += tab + 'unitID = ' + this._unitID + '\n';
        return outString;
    };
    return ReferenceDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/reference.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/unit-type.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UnitTypeDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");

////////////////////////////////////////////////////////////////
///
///		UnitType
///
///     container class for unit type data
///
////////////////////////////////////////////////////////////////
var UnitTypeDataObject = /** @class */ (function () {
    function UnitTypeDataObject() {
        //////////////////// Private Variables ////////////////////
        this._unitTypeID = 0;
        this._unitTypeName = '';
        this._unitTypeDesc = '';
        this._unitLevel = 0;
    }
    Object.defineProperty(UnitTypeDataObject.prototype, "unitTypeDesc", {
        ///////////////////////////////////////////////////////////
        ////////// Getters / Setters
        ///////////////////////////////////////////////////////////
        get: function () {
            return this._unitTypeDesc;
        },
        set: function (value) {
            this._unitTypeDesc = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitTypeDataObject.prototype, "unitTypeID", {
        ///
        get: function () {
            return this._unitTypeID;
        },
        set: function (value) {
            this._unitTypeID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitTypeDataObject.prototype, "unitLevel", {
        ///
        get: function () {
            return this._unitLevel;
        },
        set: function (value) {
            this._unitLevel = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitTypeDataObject.prototype, "unitTypeName", {
        ///
        get: function () {
            return this._unitTypeName;
        },
        set: function (value) {
            this._unitTypeName = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////
    ////////// XML Handling
    ////////////////////////////////////////////////////////////
    /**
    * This function initializes the data of a unit type that is created in the reponse of a server transaction
    */
    UnitTypeDataObject.prototype.initializeDataFromServer = function (unitTypeXML) {
        this.unitLevel = +__WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getAttribute(unitTypeXML, 'UnitLevel');
        this.unitTypeDesc = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getAttribute(unitTypeXML, 'UnitTypeDesc');
        this.unitTypeID = +__WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getAttribute(unitTypeXML, 'UnitTypeID');
        this.unitTypeName = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getAttribute(unitTypeXML, 'UnitTypeName');
    };
    ////////////////////////////////////////////////////////////
    ////////// Debug Functions
    ////////////////////////////////////////////////////////////
    UnitTypeDataObject.prototype.toString = function () {
        var outString;
        outString = 'UnitTypeID = ' + this._unitTypeID + ';';
        outString += ' UnitLevel = ' + this._unitLevel + ';';
        outString += ' UnitTypeName = ' + this._unitTypeName + ';';
        outString += ' UnitTypeDesc = ' + this._unitTypeDesc;
        return outString;
    };
    return UnitTypeDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/unit-type.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/unit.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UnitDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");


/**
 * Desc: Class to hold Unit data and list of children objects
 */
var UnitDataObject = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new UnitDataObject instance.
     * If sourceXml is supplied, it will recursively build the whole unit tree structure objects
     *
     * @param   sourceXml   The root Element of the XML that contains the data to build this UnitDataObject from.
     */
    function UnitDataObject(sourceXml) {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Properties / Instance Variables
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        this._children = [];
        this.logger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('UnitDataObject');
        /**
         * An array to hold hierarchical(ancestor) units (include self) from top to bottom
         * for this unit, for example : array[0] = course unit, array[1] = module unit, ..array[5] = page unit
         * The index of this array is used to determined the hierarchy level
         * Note: this array will not be populated in constructing time because parenting is only set after constructing
         */
        this.unitHierarchyArray = [];
        if (sourceXml) {
            this.constructFromXml(sourceXml);
        }
    }
    /**
     * This method populates the UnitataObject with data retrieved from XML.  It then calls the parseElement helper
     * method on each of its children.  Together these methods recursively create and populate this data object and all
     * of its descendants, building an entire hierarchy of UnitataObjects.
     *
     * @param   sourceXml   The root Element of the XML that contains the data to build this UnitataObject from.
     */
    UnitDataObject.prototype.constructFromXml = function (sourceXml) {
        this.unitType = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getAttribute(sourceXml, 'UnitType');
        this.hierarchyID = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getAttribute(sourceXml, 'HierarchyID');
        this.parentHierarchyID = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getAttribute(sourceXml, 'ParentHierarchyID');
        this.unitLevel = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getAttribute(sourceXml, 'UnitLevel');
        var sourceElements = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getChildElements(sourceXml);
        for (var _i = 0, sourceElements_1 = sourceElements; _i < sourceElements_1.length; _i++) {
            var element = sourceElements_1[_i];
            this.parseElement(element);
        }
        if (this.children.length > 0) {
            this.sortMyChildren();
        }
    };
    /**
     * This method is a helper of constructFromXml.  It determines if the given XML Element contains a property of this
     * UnitataObject or one of its children.  Together these methods recursively create and populate this data
     * object and all of its descendants, building an entire hierarchy of UnitataObjects.
     *
     *
     * @param  sourceElement   The XML Element we are determining to be either a property of this UnitataObject, or
     *                         an actual child.
     */
    UnitDataObject.prototype.parseElement = function (sourceElement) {
        switch (sourceElement.tagName) {
            case 'UnitLevel':
                this.unitLevel = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'UnitType':
                this.unitType = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'UnitName':
                this.unitName = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'UnitID':
                this.unitID = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'UnitDesc':
                this.unitDesc = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'SortOrder':
                this.sortOrder = +__WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'PageID':
                this.pageID = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'ThumbnailURL':
                this.thumbnailURL = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'CreatedBy':
                this.createdBy = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'CreatedDT':
                this.createdDt = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'ModifiedBy':
                this.modifiedBy = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'ModifiedDT':
                this.modifiedDt = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement);
                break;
            case 'CommentExisted':
                this.hasComments = (__WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(sourceElement).toLowerCase() === 'true');
                break;
            case 'Unit':
                // This Element actually contains a real child Unit DataObject
                this.createNewUnit(sourceElement);
                break;
        }
    };
    Object.defineProperty(UnitDataObject.prototype, "parent", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        get: function () {
            return this._parent;
        },
        set: function (value) {
            this._parent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "children", {
        get: function () {
            return this._children;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "createdBy", {
        get: function () {
            return this._createdBy;
        },
        set: function (value) {
            this._createdBy = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "createdDt", {
        get: function () {
            return this._createdDt;
        },
        set: function (value) {
            this._createdDt = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "hierarchyID", {
        get: function () {
            return this._hierarchyID;
        },
        set: function (value) {
            this._hierarchyID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "hierarchyIDIsTemp", {
        get: function () {
            return this._hierarchyIDIsTemp;
        },
        set: function (value) {
            this._hierarchyIDIsTemp = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "modifiedBy", {
        get: function () {
            return this._modifiedBy;
        },
        set: function (value) {
            this._modifiedBy = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "modifiedDt", {
        get: function () {
            return this._modifiedDt;
        },
        set: function (value) {
            this._modifiedDt = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "pageID", {
        get: function () {
            return this._pageID;
        },
        set: function (value) {
            this._pageID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "parentHierarchyID", {
        get: function () {
            return this._parentHierarchyID;
        },
        set: function (value) {
            this._parentHierarchyID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "parentHierarchyIDIsTemp", {
        get: function () {
            return this._parentHierarchyIDIsTemp;
        },
        set: function (value) {
            this._parentHierarchyIDIsTemp = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "sortOrder", {
        get: function () {
            return this._sortOrder;
        },
        set: function (value) {
            this._sortOrder = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "thumbnailURL", {
        get: function () {
            return this._thumbnailURL;
        },
        set: function (value) {
            this._thumbnailURL = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "unitDesc", {
        get: function () {
            return this._unitDesc;
        },
        set: function (value) {
            this._unitDesc = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "unitID", {
        get: function () {
            return this._unitID;
        },
        set: function (value) {
            this._unitID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "unitIDIsTemp", {
        get: function () {
            return this._unitIDIsTemp;
        },
        set: function (value) {
            this._unitIDIsTemp = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "unitLevel", {
        get: function () {
            return this._unitLevel;
        },
        set: function (value) {
            this._unitLevel = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "unitName", {
        get: function () {
            return this._unitName;
        },
        set: function (value) {
            this._unitName = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "unitStatusID", {
        get: function () {
            return this._unitStatusID;
        },
        set: function (value) {
            this._unitStatusID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "unitType", {
        get: function () {
            return this._unitType;
        },
        set: function (value) {
            this._unitType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "unitTypeID", {
        get: function () {
            return this._unitTypeID;
        },
        set: function (value) {
            this._unitTypeID = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDataObject.prototype, "hasComments", {
        get: function () {
            return this._hasComments;
        },
        set: function (value) {
            this._hasComments = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
    * create new unit data object and tie parent-child together
    *
    */
    UnitDataObject.prototype.createNewUnit = function (sourceElement) {
        var newChild = new UnitDataObject();
        this._children.push(newChild);
        newChild.parent = this;
        newChild.constructFromXml(sourceElement);
    };
    /**
     * 1. Recursively loop children units to populate supplied unit array
     * 2. Build unitHierarchy for each unit
     */
    UnitDataObject.prototype.buildUnitArray = function (unitArray) {
        this.buildHierarchy();
        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {
            var childUnit = _a[_i];
            unitArray.push(childUnit);
            childUnit.buildUnitArray(unitArray);
        }
    };
    /**
     * Add all hierarchical(ancestor) units (includes self) to the unitHierarchy Array
     *
     */
    UnitDataObject.prototype.buildHierarchy = function () {
        var _a;
        if (this.parent) {
            (_a = this.unitHierarchyArray).push.apply(_a, this.parent.unitHierarchyArray);
            // Add empty unit level ancestors, for example, if a page is directly under a course,
            // we need to add Module, TLO, ELO placeholders between Course and Page
            for (var i = this.unitHierarchyArray.length; i < +this.unitLevel - 1; i++) {
                this.unitHierarchyArray.push(undefined);
            }
        }
        // Add self to array too
        this.unitHierarchyArray.push(this);
    };
    /**
    * Sort children based on their sortOrder property
    *
    */
    UnitDataObject.prototype.sortMyChildren = function () {
        this._children.sort(function (unit1, unit2) {
            return unit1.sortOrder - unit2.sortOrder;
        });
    };
    UnitDataObject.prototype.toString = function (tab) {
        if (tab === void 0) { tab = ''; }
        var outString = '';
        outString += tab + 'unitName = ' + this._unitName + '\n';
        outString += tab + 'children.length = ' + this._children.length + '\n';
        outString += tab + 'createdBy = ' + this._createdBy + '\n';
        outString += tab + 'createdDt = ' + this._createdDt + '\n';
        outString += tab + 'hierarchyID = ' + this._hierarchyID + '\n';
        outString += tab + 'hierarchyIDIsTemp = ' + this._hierarchyIDIsTemp + '\n';
        outString += tab + 'modifiedBy = ' + this._modifiedBy + '\n';
        outString += tab + 'modifiedDt = ' + this._modifiedDt + '\n';
        outString += tab + 'pageID = ' + this._pageID + '\n';
        outString += tab + 'parentHierarchyID = ' + this._parentHierarchyID + '\n';
        outString += tab + 'parentHierarchyIDIsTemp = ' + this._parentHierarchyIDIsTemp + '\n';
        outString += tab + 'sortOrder = ' + this._sortOrder + '\n';
        outString += tab + 'thumbnailURL = ' + this._thumbnailURL + '\n';
        outString += tab + 'unitDesc = ' + this._unitDesc + '\n';
        outString += tab + 'unitID = ' + this._unitID + '\n';
        outString += tab + 'unitIDIsTemp = ' + this._unitIDIsTemp + '\n';
        outString += tab + 'unitLevel = ' + this._unitLevel + '\n';
        outString += tab + 'unitStatusID = ' + this._unitStatusID + '\n';
        outString += tab + 'unitType = ' + this._unitType + '\n';
        outString += tab + 'unitTypeID = ' + this._unitTypeID + '\n';
        outString += tab + 'hasComments = ' + this._hasComments + '\n';
        return outString;
    };
    /**
     * Recursively log debug unit tree starting with supplied three level
     *
     * @param level
     */
    UnitDataObject.prototype.traceMe = function (level) {
        if (level === void 0) { level = 0; }
        var tab = '';
        for (var i = 0; i < level; i++) {
            tab = tab + '\t';
        }
        this.logger.debug('\n' + this.toString(tab));
        for (var j = 0; j < this.children.length; j++) {
            this.children[j].traceMe(level + 1);
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    UnitDataObject.IMI_LEVEL = 1;
    UnitDataObject.MODULE_LEVEL = 2;
    UnitDataObject.TLO_LEVEL = 3;
    UnitDataObject.ELO_LEVEL = 4;
    UnitDataObject.PAGE_LEVEL = 5;
    return UnitDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/unit.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/data-objects/variable.data-object.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VariableDataObject; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");

/**
 * This class holds each variable object. This is the base class for playable and editable variable classes.
 * This is used in Event System, Variable Management interface, and merge variable.
 * It contains only getters (playable class has only one setter for value).
 */
var VariableDataObject = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new VariableDataObject instance.
     */
    function VariableDataObject() {
        /**
         * unique variable id. Any correspondence between server is done through this.
         *
         * @default undefined
         */
        this._variableID = undefined;
        /**
         * the variable name entered by user and editable. This name should be unique in a highest level unit.
         *
         * @default undefined
         */
        this._name = undefined;
        /**
         * the variable description entered by user.
         *
         * @default undefined
         */
        this._description = undefined;
        /**
         * Variable type ID.
         *
         * @default undefined
         */
        this._typeID = undefined;
        /**
         * The name of the dataType that is represented by this variable
         *
         * @default undefined
         */
        this._dataTypeName = undefined;
        /**
         * Pages in which this variable is being used.
         *
         * @internal: Should probably only be in editable version of this class
         *
         * @default undefined
         */
        this._usedOnPages = undefined;
    }
    Object.defineProperty(VariableDataObject.prototype, "variableID", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * unique variable id. Any correspondence between server is done through this.
         */
        get: function () {
            return this._variableID;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VariableDataObject.prototype, "name", {
        //////////////////////////////////////////////////////////
        /**
         * the variable name entered by user and editable. This name should be unique in a highest level unit.
         */
        get: function () {
            return this._name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VariableDataObject.prototype, "description", {
        //////////////////////////////////////////////////////////
        /**
         * the variable description entered by user.
         */
        get: function () {
            return this._description;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VariableDataObject.prototype, "value", {
        //////////////////////////////////////////////////////////
        /**
         * the variable value (initially populated with default value from DB)
         */
        get: function () {
            return this._value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VariableDataObject.prototype, "usedOnPages", {
        //////////////////////////////////////////////////////////
        /**
         * Pages in which this variable is being used.
         */
        get: function () {
            return this._usedOnPages;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VariableDataObject.prototype, "typeID", {
        //////////////////////////////////////////////////////////
        /**
         * Variable type ID.
         */
        get: function () {
            return this._typeID;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VariableDataObject.prototype, "dataTypeName", {
        //////////////////////////////////////////////////////////
        /**
         * the variable type name  derived from _typeID
         */
        get: function () {
            return this._dataTypeName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(VariableDataObject.prototype, "eventCollection", {
        //////////////////////////////////////////////////////////
        get: function () {
            return this._eventCollection;
        },
        set: function (value) {
            this._eventCollection = value;
            // Check in case value is null (clearing out event collection)
            if (this._eventCollection) {
                this._eventCollection.parent = this;
            }
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// XML Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * this function converts the variable data that is needed for server requests into XML
     *
     * @internal: Should only be needed by editable version of class - may want to remove
     *
     * @returns An XML representation of the variables needed data to make a server request
     */
    /*
    public get variableXML(): Element {

        // this creates a node called <Variable>
        let _variableXML: Element = XmlParser.xmlStringToElement('<Variable></Variable>');

        // Only add an ID node if there is an ID. When making a request to add a variable the variable has no ID, but to
        // delete one, we need an ID.
        if (this.variableID) {
            _variableXML.appendChild(XmlParser.xmlStringToElement('<ID>{ variableID } </ID>'));
        }

        _variableXML.appendChild(XmlParser.xmlStringToElement('<Name>{ name } </Name>'));
        _variableXML.appendChild(XmlParser.xmlStringToElement('<Description>{ description } </Description>'));
        _variableXML.appendChild(XmlParser.xmlStringToElement('<TypeID>{ typeID } </TypeID>'));
        _variableXML.appendChild(XmlParser.xmlStringToElement('<DefaultValue>{ value } </DefaultValue>'));

        return _variableXML;
    }
    */
    /**
     * this function initializes the data of a variable that is created in the response of a server transaction
     */
    VariableDataObject.prototype.initializeDataFromServer = function (sourceXml) {
        // Parse out all of this variable's properties.
        var propertyElements = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getChildElements(sourceXml);
        for (var i = 0; i < propertyElements.length; i++) {
            var propertyElement = propertyElements[i];
            switch (propertyElement.tagName) {
                case VariableDataObject.VARIABLE_ID_ELEMENT_NAME:
                    this._variableID = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(propertyElement);
                    break;
                case 'Name':
                    this._name = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(propertyElement);
                    break;
                case 'Description':
                    this._description = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(propertyElement);
                    break;
                case 'DefaultValue':
                    this._value = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(propertyElement);
                    break;
                case 'TypeID':
                    this._typeID = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(propertyElement);
                    break;
                case 'TypeName':
                    this._dataTypeName = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(propertyElement);
                    break;
                case 'UsedOnPages':
                    // pull out each page name from the XML, that a variable is used on
                    this._usedOnPages = [];
                    var usedOnPagesChildren = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getChildElements(propertyElement);
                    for (var j = 0; j < usedOnPagesChildren.length; j++) {
                        if (usedOnPagesChildren[j].tagName === 'Page') {
                            var pageName = __WEBPACK_IMPORTED_MODULE_0__transactions_xml_parser__["a" /* XmlParser */].getTextContent(usedOnPagesChildren[j]);
                            this._usedOnPages.push(pageName);
                        }
                    }
                    break;
            }
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Debugging
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    VariableDataObject.prototype.toString = function (tab) {
        if (tab === void 0) { tab = ''; }
        var outString = '';
        outString += tab + 'variableID = ' + this._variableID + '\n';
        outString += tab + 'name = ' + this._name + '\n';
        outString += tab + 'description = ' + this._description + '\n';
        outString += tab + 'value = ' + this._value + '\n';
        outString += tab + 'typeID = ' + this._typeID + '\n';
        outString += tab + 'dataTypeName = ' + this._dataTypeName + '\n';
        outString += tab + 'usedOnPages:\n ';
        for (var i = 0; i < this._usedOnPages.length; i++) {
            outString += tab + '  page = ' + this._usedOnPages[i] + '\n';
        }
        return outString;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Static Variables
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * String used to identify Element containing Variable ID
     * @type {string}
     */
    VariableDataObject.VARIABLE_ID_ELEMENT_NAME = 'ID';
    /**
     * <p>TypeName Value for a Number</p>
     */
    VariableDataObject.VARIABLE_TYPE_NUMBER = 'Number';
    /**
     * <p>TypeName Value for a String</p>
     */
    VariableDataObject.VARIABLE_TYPE_STRING = 'Text';
    /**
     * <p>TypeName Value for a Boolean</p>
     */
    VariableDataObject.VARIABLE_TYPE_BOOLEAN = 'Boolean';
    return VariableDataObject;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/variable.data-object.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/services/injector.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InjectorService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/*
* 	This service is to be injected in root component to get a generic injector
*   which will be used in any non-angular class to get an injectable service instance
*   for example, InjectorService.injector.get(Http)
**/
var InjectorService = /** @class */ (function () {
    function InjectorService(injector) {
        this.injector = injector;
        InjectorService_1.injector = injector;
    }
    InjectorService_1 = InjectorService;
    var InjectorService_1, _a;
    InjectorService = InjectorService_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injector"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injector"]) === "function" && _a || Object])
    ], InjectorService);
    return InjectorService;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/injector.service.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/services/page.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PageService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_service__ = __webpack_require__("./src/app/model/services/scorm-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_services_startup_configuration_service__ = __webpack_require__("./src/app/model/services/startup-configuration-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__data_objects_event_system_event_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__transactions_load_page_transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/load-page.transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/// <reference path="../../../../model/services/pop-up.service.ts" />
/// <reference path="../../../../model/services/pop-up.service.ts" />









/*
 *  Service class for handling page related services like get launch page, next page, previous page.
 */
var PageService = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *
     */
    function PageService() {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Reference to StartupConfigurationService - to access startup information
         * TODO: Will someone who understands what this is doing please comment this!!!
         */
        this.startupConfiguration = __WEBPACK_IMPORTED_MODULE_2__injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_4__model_services_startup_configuration_service__["a" /* StartupConfigurationService */]);
        /**
         * A reference to the UnitService
         */
        this.unitService = __WEBPACK_IMPORTED_MODULE_2__injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_5__unit_service__["a" /* UnitService */]);
        /**
         * Reference to ScormService
         * TODO: Since this service is in system-shared, there probably shouldn't be a reference to SCORM stuff here
         *
         * @type {ScormService}
         */
        this.scormService = __WEBPACK_IMPORTED_MODULE_2__injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_3__model_services_scorm_service__["a" /* ScormService */]);
        this.pageLoading = false;
    }
    Object.defineProperty(PageService.prototype, "isPageLoaded", {
        get: function () {
            return !this.pageLoading;
        },
        set: function (value) {
            if (value === true) {
                this.page.pageProperties.eventCollection.processEvent(__WEBPACK_IMPORTED_MODULE_6__data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_LOAD);
            }
            this.pageLoading = !value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Observable Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /*
    * Load page data and build page data object
    *
    * @param    pageID  The page ID of the page to be loaded
    **/
    PageService.prototype.getPage = function (pageID) {
        var _this = this;
        var loadPageTransaction = new __WEBPACK_IMPORTED_MODULE_7__transactions_load_page_transaction__["a" /* LoadPageTransaction */](pageID);
        return loadPageTransaction.startTransaction().
            map(function () {
            // this.pageUpdated.emit(this.page);
            // set highestPageProgress and save to LMS if scormService is Initialized
            _this.unitService.setHighestPageProgress(_this.unitService.getPageNumberFromPageID(pageID), true);
            // if it is last page, execute Course Completetion
            if (_this.unitService.isLastPageUnit()) {
                _this.scormService.executeCourseCompletetion();
            }
            return _this.page;
        });
    };
    /**
     * Get launch page data. The launch Page is the Page the the Player is being opened to.
     * In scenarios like these, the launch page is not necessarily the first page:
     *      - Player launched as a Previewer from the Designer interfaces
     *      - Player launched from an LMS resuming a previously suspended course
     *
     * @returns {Observable<any>} | undefined (if no page to launch page to load)
     */
    PageService.prototype.getLaunchPage = function () {
        var pageID;
        this.pageLoading = true;
        // Based on caller, determine starting pageID (the page the Player is supposed to load on launch)
        switch (this.startupConfiguration.caller) {
            case 'Player': // If launched standalone
                // If launched from an LMS try to use cmi.location to derive pageID
                if (this.scormService.isInitialized()) {
                    // Get cmi.location from LMS
                    var lmsLocation = this.unitService.getLocationFromLMS();
                    if (lmsLocation !== 0) {
                        // If LMS returns non zero cmi.location, use it to set highest page progress
                        // Do we need to set highest page progress in any other scenario?
                        this.unitService.setHighestPageProgress(lmsLocation, false);
                        // Also use it to derive pageID
                        pageID = this.unitService.getPageIDFromPageNumber(lmsLocation);
                    }
                }
                // If pageID not set yet (either b/c not launched from LMS or cmi.location = 0)
                if (!pageID) {
                    // Set pageID to first page in course
                    pageID = this.unitService.getFirstPageInUnit().pageID;
                }
                break;
            case 'Page': // If launched from Page Designer
                // Get pageID from StartupConfiguration data
                // NOTE: unitID passed in from page designer is actually a pageID
                pageID = this.startupConfiguration.unitId;
                break;
            case 'Template': // If launched from Template Designer
                // PageID doesn't apply for Template Designer - Template element data provided as page content
                break;
            default: // Otherwise if launched from Admin or Course Designer?
                // Use unitID from StartupConfiguration to get Unit data object
                var unit = this.unitService.getUnitByUnitID(this.startupConfiguration.unitId);
                // Get first page data object in Unit
                var pageUnitDataObject = this.unitService.getFirstPageInUnit(unit);
                // Check if page data object found (if not course has no page and there is no page to load)
                if (pageUnitDataObject) {
                    // If page data object found (test in case course has no page) get pageID from it
                    pageID = this.unitService.getFirstPageInUnit(unit).pageID;
                }
                break;
        }
        // Continue process as long as either a pageID has been identified, or the Player was launched from the Template
        // Designer (in which case having no pageID is normal and template data will be loaded from memory)
        if (pageID || this.startupConfiguration.caller === 'Template') {
            return this.getPage(pageID); // NOTE: this return is not used in app-component.ts
        }
        else {
            return undefined;
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Functions / Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Load the Page of the given ID.
     *
     * @param   pageID    the ID of the page to be loaded.
     */
    PageService.prototype.loadPage = function (pageID) {
        this.pageLoading = true;
        this.tempLoadPageID = pageID;
        var onExitEvent;
        // If there is a page loaded and it has page properties, call the page's onExit Event
        if (this.page && this.page.pageProperties) {
            onExitEvent = this.page.pageProperties.eventCollection.
                processEvent(__WEBPACK_IMPORTED_MODULE_6__data_objects_event_system_event_data_object__["a" /* EventDataObject */].ON_EXIT);
        }
        // If there's no page loaded or the page has no onExit event, call onExitEventComplete to continue process of
        // loading another page
        if (!onExitEvent) {
            this.onExitEventComplete();
        }
    };
    /**
     * Callback like function for completion of Page onExit Event to trigger loading of next page
     * @param pageID
     */
    PageService.prototype.onExitEventComplete = function () {
        var _this = this;
        // Subscribe to observable to start transaction for loading page data
        this.getPage(this.tempLoadPageID).subscribe(function () { }, function (error) { _this.handleObservableError(error); }, function () { });
        this.tempLoadPageID = '';
    };
    /*
     * Find the Next Page and Load it.
     *
     **/
    PageService.prototype.loadNextPage = function () {
        var nextPageID = this.unitService.getNextPageUnit().pageID;
        this.loadPage(nextPageID);
    };
    /*
    * Find the Previous Page and Load it.
    *
    **/
    PageService.prototype.loadPreviousPage = function () {
        var previousPageID = this.unitService.getPreviousPageUnit().pageID;
        this.loadPage(previousPageID);
    };
    PageService.prototype.handleObservableError = function (error) {
        // console.error('An http error occurred', error);
        __WEBPACK_IMPORTED_MODULE_2__injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_8__model_services_pop_up_service__["a" /* PopUpService */]).openSystemMessage(error.message);
        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["a" /* Observable */].throw(error.message || error);
    };
    /**
    * Recursively search PageDataObject to find the component object by element ID
    *
    * @param    componentElementID
    * @returns  {<ComponentDataObject>}
    */
    PageService.prototype.getComponent = function (componentElementID) {
        return this.page.findChildComponent(componentElementID);
    };
    Object.defineProperty(PageService.prototype, "pageName", {
        /**
         *  Sometimes page.pageName is not populated properly. This occurs when the page name is not in the page data
         *  coming from the designers. This data is always available in the unit data. We could always just get it from
         *  there but I don't like the idea of getting the pageName from the unit service. :( So I'm only doing it when I
         *  have too.
         *
         *  @returns {<string>} The Name of the page that is currently loaded.
         *  @TODO: fix the page in the page designer preview DATA!
         */
        get: function () {
            if (this.page && this.page.pageName) {
                // If the page object exists with a properly populated pageName (see method comments above) return the name
                return this.page.pageName;
            }
            else if (this.unitService.getCurrentPageUnit()) {
                // Otherwise try to get the name via the course structure
                return this.unitService.getCurrentPageUnit().unitName;
            }
            else {
                // Otherwise there is no name to retrieve (as when previewing from Template Designer or course with no page)
                return '';
            }
        },
        enumerable: true,
        configurable: true
    });
    PageService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], PageService);
    return PageService;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/page.service.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/services/reference.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReferenceService; });
var ReferenceService = /** @class */ (function () {
    function ReferenceService() {
    }
    ReferenceService.prototype.serializeClass = function () {
        var outString = 'References:\n';
        for (var i = 0; i < this.references.length; i++) {
            outString += 'Ref #' + (i + 1).toString() + ':\n';
            outString += this.references[i].toString();
        }
        return outString;
    };
    return ReferenceService;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/reference.service.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/services/unit-type.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UnitTypeService; });
var UnitTypeService = /** @class */ (function () {
    function UnitTypeService() {
    }
    /**
     * Return a string representation of available unit types
     */
    UnitTypeService.prototype.serializeClass = function () {
        var outString = 'Unit types:\n';
        for (var i = 0; i < this.unitTypes.length; i++) {
            outString += this.unitTypes[i].toString() + '\n';
        }
        return outString;
    };
    return UnitTypeService;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/unit-type.service.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/services/unit.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UnitService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__data_objects_unit_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/unit.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_services_scorm_service__ = __webpack_require__("./src/app/model/services/scorm-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_services_startup_configuration_service__ = __webpack_require__("./src/app/model/services/startup-configuration-service.ts");





/*
 *  Service class for handling unit tree structure related services like course tree navigatioin functions.
 */
var UnitService = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new UnitService instance.
     *
     */
    function UnitService() {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Constants
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Variables / Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //// Injected service ////
        this.scormService = __WEBPACK_IMPORTED_MODULE_2__injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_3__model_services_scorm_service__["a" /* ScormService */]);
        this.configService = __WEBPACK_IMPORTED_MODULE_2__injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_4__model_services_startup_configuration_service__["a" /* StartupConfigurationService */]);
        // private logger: Logger = Log.getInstance().getLogger('UnitService');
        this.pageType = 'Page';
        /**
         * Highest Progress Page in natural number
         */
        this.highestPageProgress = 0;
        /**
         * Hold only page-type units (in course tree structure order)
         *
         */
        this.pageUnitArray = [];
        /**
         * Hold all type units (in course tree structure order)
         *
         */
        this.UnitArray = [];
    }
    Object.defineProperty(UnitService.prototype, "unit", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        get: function () {
            return this._unit;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    UnitService.prototype.setRootUnit = function (inputXML) {
        // Create the root unit from the inputXml.
        var rootUnit = new __WEBPACK_IMPORTED_MODULE_0__data_objects_unit_data_object__["a" /* UnitDataObject */](inputXML);
        // Build pageUnitArray and populate unit hierarchy info for each unit
        this.UnitArray = [];
        rootUnit.buildUnitArray(this.UnitArray);
        this.pageUnitArray = this.UnitArray.filter(function (unit) { return +unit.unitLevel === __WEBPACK_IMPORTED_MODULE_0__data_objects_unit_data_object__["a" /* UnitDataObject */].PAGE_LEVEL; });
        // Store the root unit of course hierarchy in the UnitService.
        this._unit = rootUnit;
        // Get PageService from injector
        this.pageService = __WEBPACK_IMPORTED_MODULE_2__injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__page_service__["a" /* PageService */]);
    };
    /**
     * Get a unit by its unitID
     *
     */
    UnitService.prototype.getUnitByUnitID = function (unitID) {
        return this.UnitArray.find(function (u) { return u.unitID === unitID; });
    };
    /**
     * Get current page unit based on current PageService's Page object
     *
     */
    UnitService.prototype.getCurrentPageUnit = function () {
        var _this = this;
        return this.pageUnitArray.find(function (u) { return u.pageID === _this.pageService.page.pageID; });
    };
    /**
     * Get current page unit based on current PageService's Page object
     *
     */
    UnitService.prototype.getCurrentPageUnitIndex = function () {
        var _this = this;
        return this.pageUnitArray.findIndex(function (u) { return u.pageID === _this.pageService.page.pageID; });
    };
    /**
     * Check if current page unit is the last one in the page array
     */
    UnitService.prototype.isLastPageUnit = function () {
        return this.pageUnitArray.length === (this.getCurrentPageUnitIndex() + 1);
    };
    /**
     * Check if current page unit is the first one in the page array
     */
    UnitService.prototype.isFirstPageUnit = function () {
        return 0 === this.getCurrentPageUnitIndex();
    };
    /**
     * Get next page unit based on getCurrentPageUnit(), return undefined if already last page
     */
    UnitService.prototype.getNextPageUnit = function () {
        if (this.isLastPageUnit()) {
            return undefined;
        }
        else {
            var index = this.getCurrentPageUnitIndex();
            return this.pageUnitArray[++index];
        }
    };
    /**
     * Get previous page unit based on getCurrentPageUnit(), return undefined if already frist page
     *
     */
    UnitService.prototype.getPreviousPageUnit = function () {
        if (this.isFirstPageUnit()) {
            return undefined;
        }
        else {
            var index = this.getCurrentPageUnitIndex();
            return this.pageUnitArray[--index];
        }
    };
    /**
     * get location from LMS (highest page progessed so far)
     * scormService.getLocation() will return an empty string ('') if nothing is stored or 1,2,3... if it was saved
     *
     * TODO: may need to conbine with the completion_status 'incomplete'
     * TODO: This is in system-shared, so would theoretically be used by Designers as well, so shouldn't reference SCORM
     *          Probably need to move this elsewhere or extend this service to create a Player specific one
     *
     */
    UnitService.prototype.getLocationFromLMS = function () {
        // debug code, keep it
        /*
        let pageLocation: string = this.scormService.getLocation();

        console.log('@@@@@unitService.getLocationFromLMS pageLocation=' + pageLocation);
        console.log('@@@@@unitService.getLocationFromLMS pageLocation=' + +pageLocation);
        if (pageLocation === null) { console.log('@@@@@unitService.getLocationFromLMS pageLocation is null'); }
        if (pageLocation === undefined) { console.log
            ('@@@@@unitService.getLocationFromLMS pageLocation is undefined'); }
        if (pageLocation === '') { console.log('@@@@@unitService.getLocationFromLMS pageLocation is empty string'); }
        */
        /*
        if (!(pageLocation === null || pageLocation === '')) {

            this.highestPageProgress =
            (+pageLocation > this.highestPageProgress) ? +pageLocation : this.highestPageProgress;
            return +pageLocation;
        }
        */
        return +this.scormService.getLocation();
    };
    /**
     * set highest page progress, save to LMS if scormService is Initialized
     *
     * @param	pageNum	number we are trying to set as the highest page progress
     * @param	saveLMS	true save to LMS
     */
    UnitService.prototype.setHighestPageProgress = function (pageNum, saveLMS) {
        if (saveLMS === void 0) { saveLMS = false; }
        if (pageNum > this.highestPageProgress) {
            this.highestPageProgress = pageNum;
            if (saveLMS && this.scormService.isInitialized()) {
                this.scormService.saveLocation(String(pageNum));
            }
        }
    };
    /**
    * Get the page number as the highest page progress
    *
    */
    UnitService.prototype.getHighestPageProgress = function () {
        return this.highestPageProgress;
    };
    /**
     * Test to see if the given page is higher then the Highest page progress.
     *
     * @param pageID of the page that should be tested to see if its after the highest Page progress
     */
    UnitService.prototype.isPageAfterHighestPageProgress = function (pageID) {
        return (this.getPageNumberFromPageID(pageID) > this.highestPageProgress);
    };
    /**
     * get page number from pageID
     *
     * @param pageID
     */
    UnitService.prototype.getPageNumberFromPageID = function (pageID) {
        return this.pageUnitArray.findIndex(function (u) { return u.pageID === pageID; });
    };
    /**
     * get pageID from page number
     *
     * @param pageNumber
     */
    UnitService.prototype.getPageIDFromPageNumber = function (pageNumber) {
        return this.pageUnitArray[pageNumber].pageID;
    };
    /**
    * get level number from config's level string
    * for example, PageNumberLevel,MaxCourseMapLevel
    *
    * @param level string
    * @returns {<number>}
    */
    UnitService.prototype.getLevelNumber = function (level) {
        switch (level) {
            case 'IMI_LEVEL':
                return __WEBPACK_IMPORTED_MODULE_0__data_objects_unit_data_object__["a" /* UnitDataObject */].IMI_LEVEL;
            case 'MODULE_LEVEL':
                return __WEBPACK_IMPORTED_MODULE_0__data_objects_unit_data_object__["a" /* UnitDataObject */].MODULE_LEVEL;
            case 'TLO_LEVEL':
                return __WEBPACK_IMPORTED_MODULE_0__data_objects_unit_data_object__["a" /* UnitDataObject */].TLO_LEVEL;
            case 'ELO_LEVEL':
                return __WEBPACK_IMPORTED_MODULE_0__data_objects_unit_data_object__["a" /* UnitDataObject */].ELO_LEVEL;
            default:
                return __WEBPACK_IMPORTED_MODULE_0__data_objects_unit_data_object__["a" /* UnitDataObject */].ELO_LEVEL;
        }
    };
    /**
     * Get all page units calculated based on configuration's page-number-level and current page unit
     * page-number-level could be IMI,Module,TLO,ELO,Page
     * pageNumberLevel 1-5
     */
    UnitService.prototype.getConfigLevelPageUnits = function () {
        var configLevel = this.getLevelNumber(this.configService.config.pageNumberLevel);
        var configLevelUnit = this.getCurrentPageUnit().unitHierarchyArray[configLevel - 1];
        if (configLevelUnit) {
            return this.pageUnitArray.filter(function (u) { return u.unitHierarchyArray[configLevel - 1] === configLevelUnit; });
        }
        else {
            // current page unit doesn't have the specified-level ancestor unit
            return undefined;
        }
    };
    /**
     * Get current page number calculated based on configuration's page-number-level and current page unit
     * page-number-level could be IMI,Module,TLO,ELO,Page
     */
    UnitService.prototype.getCurrentPageNumber = function () {
        var _this = this;
        var array = this.getConfigLevelPageUnits();
        if (array) {
            return array.findIndex(function (u) { return u === _this.getCurrentPageUnit(); }) + 1;
        }
        else {
            // current page unit doesn't have the specified-level ancestor unit
            return 1;
        }
    };
    /**
     * Get total page numbers calculated based on configuration's page-number-level and current page unit
     * page-number-level could be IMI,Module,TLO,ELO,Page
     */
    UnitService.prototype.getTotalPageNumbers = function () {
        var array = this.getConfigLevelPageUnits();
        if (array) {
            return array.length;
        }
        else {
            // current page unit doesn't have the specified-level ancestor unit
            return 1;
        }
    };
    /**
     * Get current page unit's breadcrumb
     * return an array of hierarchical units(from top to bottom) for current page unit
     */
    UnitService.prototype.getCurrentPageUnitBreadcrumb = function () {
        return this.getPageUnitBreadcrumb(this.getCurrentPageUnit());
    };
    /**
     * Get page unit breadcrumb
     * return an array of hierarchical units(from top to bottom) for supplied page unit
     */
    UnitService.prototype.getPageUnitBreadcrumb = function (pageUnit) {
        // filter out undefined units
        return pageUnit.unitHierarchyArray.filter(function (unit) { return unit; });
    };
    /**
     * Get first page unit of the supplied unit. For example, find the first page inside a TLO.
     * It will also be used to find the first page of a course without supplying the unit parameter
     * @param unit - unit to start search (search root unit if not supplied)
     */
    UnitService.prototype.getFirstPageInUnit = function (unit) {
        if (!unit) {
            unit = this._unit;
        }
        return this.pageUnitArray.find(function (u) { return u.unitHierarchyArray[+unit.unitLevel - 1] === unit; });
    };
    /**
    * Get course map structure based on maximum course level from config
    *
    * @returns {Array<UnitDataObject>}
    */
    UnitService.prototype.getCourseMap = function () {
        var maxLevel = this.getLevelNumber(this.configService.config.maxCourseMapLevel);
        return this.UnitArray.filter(function (unit) { return +unit.unitLevel <= maxLevel
            && +unit.unitLevel > __WEBPACK_IMPORTED_MODULE_0__data_objects_unit_data_object__["a" /* UnitDataObject */].IMI_LEVEL; });
    };
    return UnitService;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/unit.service.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/services/variable.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VariableService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__data_objects_event_system_event_data_object_collection__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/event-system/event.data-object.collection.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__player_model_data_objects_event_system_event_playable_data_object_collection__ = __webpack_require__("./src/app/player/model/data-objects/event-system/event.playable.data-object.collection.ts");


/**
 * TODO: Write description.
 */
var VariableService = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new VariableService instance.
     */
    function VariableService() {
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Searching
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Searches our variables array for the VariableDataObject specified by the given variableID.
     *
     * @param   variableID  The ID of the VariableDataObject we are looking for.
     *
     * @returns If found, the VariableDataObject with the given ID, otherwise undefined.
     */
    VariableService.prototype.findVariable = function (variableID) {
        return this.variables.find(function (variable) { return variable.variableID === variableID; });
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event System Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Method takes ElementDataObject structure from PagePropertiesDataObject ("Page Attribute component"), parses out
     * and creates Variable related Event System Data Objects, and applies them to the appropriate Variable Data Objects
     *
     * @param element
     */
    VariableService.prototype.mapEventsToVariables = function (element) {
        // console.log('VariableService.mapEventsToVariables(): !!!!!');
        // console.log(element);
        var _this = this;
        // If there are Variables to map events to:
        if (this.variables) {
            // Clear out current Variable Event related data prior to mapping to new ones
            this.variables.forEach(function (variable) {
                // Clear by setting collection to null.  May want to watch for scenarios where undefined or [] better.
                variable.eventCollection = null;
            });
            // Loop through each Variable element under Variables
            element.children.forEach(function (variableElement) {
                // Get VariableID
                // NOTE: Can't use constant defined in VariableDataObject b/c not using consistent name for some reason
                var variableID = variableElement.getFirstChildElementByName('VariableID').value;
                // console.log('variableID=' + variableID);
                // Notes: Handle server generated XML which doesn't contain 'VariableID'
                if (!variableID) {
                    return;
                }
                // console.log('Get Event Collection Element Data Object');
                // Get Event Collection Element Data Object
                var eventCollectionElement = variableElement.getFirstChildElementByName(__WEBPACK_IMPORTED_MODULE_0__data_objects_event_system_event_data_object_collection__["a" /* EventDataObjectCollection */].EVENT_COLLECTION_ELEMENT_NAME);
                // console.log('this.findVariable(variableID).eventCollection');
                // console.log('Find result:' + this.findVariable(variableID));
                // TODO: setup class factory to return appropriate version of Event class (hard code playable for now)
                // Use VariableID to get Variable Data Object and assign its Event Collection
                // To prevent an error when variable is not found (course is not saved yet),
                // check
                var foundVariable = _this.findVariable(variableID);
                if (foundVariable) {
                    foundVariable.eventCollection = new __WEBPACK_IMPORTED_MODULE_1__player_model_data_objects_event_system_event_playable_data_object_collection__["a" /* EventPlayableDataObjectCollection */](eventCollectionElement);
                }
                // console.log('mapEventsToVariables Done!');
            });
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Debugging
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * For debugging TODO: should rename to toString()
     * @returns {string}
     */
    VariableService.prototype.serializeClass = function () {
        var outString = '\n';
        for (var i = 0; i < this.variables.length; i++) {
            outString += '--------------------------------------------\n';
            outString += 'Variable #' + (i + 1).toString() + ':\n';
            outString += this.variables[i].toString();
        }
        return outString;
    };
    return VariableService;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/variable.service.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/external-interface-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ExternalInterfaceHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Rx__ = __webpack_require__("./node_modules/rxjs/_esm5/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");


/**
 * Sets up an observable process for accessing external JS objects or making external JS calls.  It is used for
 * processes like Transaction where we want to hold processing until we have all data regardless of whether it comes
 * from file, server, or memory (external JS objects).
 *
 * @see Transaction
 * @see TransactionTaskHandler
 * @see TransactionDataSource
 */
var ExternalInterfaceHandler = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new ExternalInterfaceHandler instance.
     */
    function ExternalInterfaceHandler() {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Variables / Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * An instance of the logger class for outputting log messages.
         *
         * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before
         * each log statement that is output.
         *
         * @default A logger object named after the containing class.
         */
        this.logger = __WEBPACK_IMPORTED_MODULE_1__log__["a" /* Log */].getInstance().getLogger('ExternalInterfaceHandler');
        /* No implementation required. */
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ExternalInterfaceHandler.prototype.getObservable = function (returnObject) {
        this.logger.info('getObservable(): Get data from memory');
        // NOTE:    Logging the returnObject directly (without concatenating to any string) allows object inspection in
        //          the chrome developer tool.
        console.log(returnObject);
        return new __WEBPACK_IMPORTED_MODULE_0_rxjs_Rx__["Observable"](function (subscriber) {
            if (returnObject) {
                subscriber.next(returnObject);
            }
            else {
                subscriber.error('ExternalInterfaceHandler Data Error');
            }
            subscriber.complete();
        });
    };
    return ExternalInterfaceHandler;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/external-interface-handler.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/http-request-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HttpRequestHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_http__ = __webpack_require__("./node_modules/@angular/http/@angular/http.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__("./node_modules/rxjs/_esm5/add/operator/map.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");







/**
 * This class initiates an HTTP request to a web server external to the application and handles any responses returned.
 * This includes handling any errors that might occur, especially no response errors.
 *
 * @see Transaction
 * @see TransactionTaskHandler
 * @see TransactionDataSource
 *
 */
var HttpRequestHandler = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new HttpRequestHandler instance.
     */
    function HttpRequestHandler() {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Variables / Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * @see isDifTransaction
         */
        this._isDifTransaction = true;
        /**
         * The error message displayed to the user when their session has timed out.
         *
         * TODO: Move error constants to separate file.
         *
         * @default 'Server Error 140: Your session has timed out.  You will be redirected to the login page.'
         */
        this.SESSION_TIMEOUT = 'Server Error 140: Your session has timed out.  You will be redirected to the login page.';
        /**
         * The error message displayed to the user when an unidentified server error has occurred with the current request.
         *
         * TODO: Move error constants to separate file.
         *
         * @default 'Server Error 105: Unidentified error occurred.
         */
        this.UNIDENTIFIED_FAILURE = 'Server Error 105: Unidentified error occurred.';
        /**
         * An instance of the logger class for outputting log messages.
         *
         * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before
         * each log statement that is output.
         *
         * @default A logger object named after the containing class.
         */
        this.logger = __WEBPACK_IMPORTED_MODULE_5__log__["a" /* Log */].getInstance().getLogger('HttpRequestHandler');
        this.http = __WEBPACK_IMPORTED_MODULE_3__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_0__angular_http__["b" /* Http */]);
    }
    Object.defineProperty(HttpRequestHandler.prototype, "isDifTransaction", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * A flag that indicates whether or not the request comes from a DIF transaction.  If so, the expected response will
         * be in DIF XML format.
         *
         * @default true
         */
        set: function (value) {
            this._isDifTransaction = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HttpRequestHandler.prototype, "requestXML", {
        //////////////////////////////////////////////////////////
        /**
         * The request XML to send to the application server.
         *
         * @default undefined
         */
        get: function () {
            return this._requestXml;
        },
        set: function (value) {
            this._requestXml = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Request Initiation
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Sends a GET request to retrieve file data.
     *
     * TODO: Add input/output descriptions.
     *
     * @param   getURL
     *
     * @returns {Observable<any>}
     */
    HttpRequestHandler.prototype.sendGetRequest = function (getURL) {
        // Send get request to server
        if (this._isDifTransaction) {
            return this.http.get(getURL)
                .map(this.extractFileData, this)
                .catch(this.handleError);
        }
        else {
            return this.http.get(getURL)
                .map(function (res) {
                return res.text();
            })
                .catch(this.handleError);
        }
    };
    /**
     * Sends a POST request to retrieve server data.
     *
     * TODO: Add input/output descriptions.
     *
     * @param   postURL
     *
     * @returns
     */
    HttpRequestHandler.prototype.sendPostRequest = function (postURL) {
        var headers = new __WEBPACK_IMPORTED_MODULE_0__angular_http__["a" /* Headers */]({ 'Content-Type': 'application/x-www-form-urlencoded' });
        var options = new __WEBPACK_IMPORTED_MODULE_0__angular_http__["d" /* RequestOptions */]({ 'headers': headers });
        // Convert XML request to string
        var requestString = ((new XMLSerializer()).serializeToString(this._requestXml));
        /*
         * NOTE: Need to double encode the request to avoid this error:
         *
         * Global.Application_Error(0) - Application Error-HttpRequestValidationException:
         * A potentially dangerous Request.Form value was detected from the client (xmlData="<?xml version='1.0' ...")
         *
         */
        requestString = encodeURIComponent(requestString);
        var params = 'xmlData=' + encodeURIComponent(requestString);
        // this.logger.info('posting to server ... ' + params);
        // Send post request to server
        if (this._isDifTransaction) {
            return this.http.post(postURL, params, options)
                .map(this.extractServerData, this)
                .catch(this.handleError);
        }
        else {
            return this.http.post(postURL, params, options)
                .map(function (res) {
                return res.text();
            })
                .catch(this.handleError);
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Response Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * TODO: Improve comment.
     *
     * Callback to process response from file.
     *
     * @param   response
     *
     * @returns
     */
    HttpRequestHandler.prototype.extractFileData = function (response) {
        // this.logger.info('extractFileData(): response = ' + response.text());
        if (!response || __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(__WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].xmlStringToElement(response.text()), 'parsererror')) {
            __WEBPACK_IMPORTED_MODULE_3__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_4__model_services_pop_up_service__["a" /* PopUpService */]).openSystemMessage(this.UNIDENTIFIED_FAILURE);
            return undefined;
        }
        return __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].xmlStringToElement(response.text());
    };
    /**
     * TODO: Improve comment.
     *
     * Callback to process response data from server.
     *
     * @param   response
     *
     * @returns
     */
    HttpRequestHandler.prototype.extractServerData = function (response) {
        var popUpService = __WEBPACK_IMPORTED_MODULE_3__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_4__model_services_pop_up_service__["a" /* PopUpService */]);
        try {
            // this.logger.debug('extractServerData(): response = ' + response.text());
            // Convert responseString to XML
            this.responseXml = __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].xmlStringToElement(response.text());
            // DOM parser used to build XML doesn't throw errors
            // so checking for parsererror tag to identify abnormal responses from server
            if (__WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(this.responseXml, 'parsererror')) {
                this.logger.error('ServerTransaction.processResponse(): parsererror tag found');
                var errorString = void 0;
                // If error found check for session timeout (otherwise unrecognized response)
                var timeoutSearchString = 'action="./Login.aspx?';
                if (response.text().indexOf(timeoutSearchString) > 0) {
                    // Finding timeoutSearchString in response indicates that the user's session has timed out
                    this.logger.error('ServerTransaction.processResponse(): session timeout found');
                    errorString = '<error>' + this.SESSION_TIMEOUT + '</error>';
                    popUpService.openSystemMessage(this.SESSION_TIMEOUT);
                }
                else {
                    // Otherwise we have a response from the server that we can't identify
                    this.logger.error('##### ServerTransaction.processResponse(): unidentifiable response');
                    errorString = '<error>' + this.UNIDENTIFIED_FAILURE + '</error>';
                    popUpService.openSystemMessage(this.UNIDENTIFIED_FAILURE);
                }
                // Return error response
                this.logger.error('##### ServerTransaction.processResponse(): errorString = ' + errorString);
                return __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].xmlStringToElement(errorString);
            }
            else {
                // If no error return response from server
                this.logger.error('##### ServerTransaction.processResponse(): parsererror tag NOT found process normally');
                return this.responseXml;
            }
        }
        catch (e) {
            // Handles responses from the server that fail parsing (also not identifiable)
            this.logger.error('##### ServerTransaction.processResponse(): unidentifiable response ' + e.toString());
            popUpService.openSystemMessage(this.UNIDENTIFIED_FAILURE);
            return __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].xmlStringToElement('<error>' + this.UNIDENTIFIED_FAILURE + '</error>');
        }
    };
    /**
     * Callback to handle errors communicating with server (generally no response or bad URL).
     *
     * TODO: Add additional processing (Flash version also opened popup with error code/message (from Message.as)).
     *
     * @param   error
     *
     * @returns
     */
    HttpRequestHandler.prototype.handleError = function (error) {
        this.logger.error('http-request-handler.handleError(): ' + error);
        __WEBPACK_IMPORTED_MODULE_3__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_4__model_services_pop_up_service__["a" /* PopUpService */]).openSystemMessage('http-request-handler.handleError(): ' + error);
        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__["a" /* Observable */].throw(error);
    };
    return HttpRequestHandler;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/http-request-handler.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/load-config.transaction.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadConfigTransaction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transaction_task_handlers_load_config_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-config.task-handler.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * This class is responsible for loading configuration data from file.
 *
 * @see Transaction
 * @see TransactionDataSource
 */
var LoadConfigTransaction = /** @class */ (function (_super) {
    __extends(LoadConfigTransaction, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadConfigTransaction instance.
     */
    function LoadConfigTransaction() {
        return _super.call(this, 'LoadConfig') || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    LoadConfigTransaction.prototype.startTransaction = function () {
        // add TaskHandler for loading config data
        var taskHandler = new __WEBPACK_IMPORTED_MODULE_1__transaction_task_handlers_load_config_task_handler__["a" /* LoadConfigTaskHandler */]();
        taskHandler.buildRequestXml();
        this.addTaskHandler(taskHandler);
        // Send request to get processed
        return _super.prototype.startTransaction.call(this);
    };
    return LoadConfigTransaction;
}(__WEBPACK_IMPORTED_MODULE_0__transaction__["a" /* Transaction */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-config.transaction.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/load-page.transaction.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadPageTransaction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transaction_task_handlers_load_page_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-page.task-handler.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * This class is responsible for loading page data from the various TransactionDataSources (server/file/memory).
 *
 * @see Transaction
 * @see TransactionDataSource
 */
var LoadPageTransaction = /** @class */ (function (_super) {
    __extends(LoadPageTransaction, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadPageTransaction instance.
     *
     * @param   pageID   The unique ID of the Page whose data we will load.
     */
    function LoadPageTransaction(pageID) {
        var _this = _super.call(this, 'LoadPage') || this;
        _this.pageID = pageID;
        return _this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    LoadPageTransaction.prototype.startTransaction = function () {
        // add TaskHandler for loading page data
        var loadPageTaskHandler = new __WEBPACK_IMPORTED_MODULE_1__transaction_task_handlers_load_page_task_handler__["a" /* LoadPageTaskHandler */]();
        loadPageTaskHandler.buildRequestXml(this.pageID);
        this.addTaskHandler(loadPageTaskHandler);
        // After building up all requests, sending out all requests to get processed
        return _super.prototype.startTransaction.call(this);
    };
    return LoadPageTransaction;
}(__WEBPACK_IMPORTED_MODULE_0__transaction__["a" /* Transaction */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-page.transaction.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-config.task-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadConfigTaskHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_services_startup_configuration_service__ = __webpack_require__("./src/app/model/services/startup-configuration-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_objects_config_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/config.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__transaction_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






/**
 * This task handler makes the request to load the application's configuration file.  The response is then parsed and
 * from that data a configuration data object is created in the startup configuration service for use by the rest of the
 * application.
 *
 * @see TransactionTaskHandler
 * @see StartupConfigurationService
 * @see ConfigDataObject
 */
var LoadConfigTaskHandler = /** @class */ (function (_super) {
    __extends(LoadConfigTaskHandler, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadConfigTaskHandler instance.
     */
    function LoadConfigTaskHandler() {
        return _super.call(this, 'LoadConfig') || this;
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Accessors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    LoadConfigTaskHandler.prototype.setDataSource = function () {
        // data source is always "File"
        this._dataSource = __WEBPACK_IMPORTED_MODULE_3__transaction__["b" /* TransactionDataSource */].File;
        this.fileUrl = './assets/config.xml';
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Request Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Builds the XML for the load config request.
     *
     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the
     * response if a valid one is received.
     *
     * @returns The root element of the load config request XML.
     */
    LoadConfigTaskHandler.prototype.buildRequestXml = function () {
        return this.requestXml;
    };
    /**
     * Parse the XML response to our load configuration request, and create a configuration data object in the
     * StartupConfigurationService for use by the rest of the application.
     *
     * @inheritDoc
     */
    LoadConfigTaskHandler.prototype.processResponse = function () {
        var startupConfigurationService = __WEBPACK_IMPORTED_MODULE_0__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__model_services_startup_configuration_service__["a" /* StartupConfigurationService */]);
        startupConfigurationService.config = new __WEBPACK_IMPORTED_MODULE_2__data_objects_config_data_object__["a" /* ConfigDataObject */](this.responseData);
        // Set the logger's log level to the value we got from config.xml.
        __WEBPACK_IMPORTED_MODULE_5__log__["a" /* Log */].getInstance().configureLoggerFactory(startupConfigurationService.config.logLevel);
    };
    return LoadConfigTaskHandler;
}(__WEBPACK_IMPORTED_MODULE_4__transaction_task_handler__["a" /* TransactionTaskHandler */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-config.task-handler.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-page.task-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadPageTaskHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_objects_element_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/element.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__data_objects_page_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/page.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__transaction_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();








/**
 * This task handler makes the request to load the content data for a given page in the course.  The response is then
 * parsed and from that data a page data object is created in the page service for use by the rest of the application.
 *
 * @see TransactionTaskHandler
 * @see PageService
 * @see PageDataObject
 */
var LoadPageTaskHandler = /** @class */ (function (_super) {
    __extends(LoadPageTaskHandler, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadPageTaskHandler instance.
     */
    function LoadPageTaskHandler() {
        return _super.call(this, 'LoadEditScreen') || this;
    }
    /**
     * @inheritDoc
     */
    LoadPageTaskHandler.prototype.constructorPreprocessing = function () {
        this.loadPageTaskHandlerLogger = __WEBPACK_IMPORTED_MODULE_6__log__["a" /* Log */].getInstance().getLogger('LoadPageTaskHandler');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Accessors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * In addition to the typical factors that determine what our dataSource should be, for the LoadPageTaskHandler
     * we also need the pageID of the page we are attempting to load.
     *
     * @inheritDoc
     *
     * @param   pageID  The ID of the page we are attempting to load.
     *
     * @see TransactionDataSource
     */
    LoadPageTaskHandler.prototype.setDataSource = function (pageID) {
        // If the Player was invoked from the PageDesigner, and the pageID of the page we are trying to load belongs to
        // the page currently being edited, then we need to get our data from memory so we can show the latest changes.
        //
        // If the Player was invoked from the TemplateDesigner, there is no page to load, just the Template.  Template
        // data is also loaded from memory to show potentially unsaved changes in the TemplateDesigner.
        //
        // Otherwise we call our super's implementation to determine the dataSource.
        //
        // NOTE: The unitID passed in from the PageDesigner is actually a pageID (I know right?)
        if ((this.startupConfigurationService.caller === 'Page' && pageID === this.startupConfigurationService.unitId)
            || (this.startupConfigurationService.caller === 'Template')) {
            this._dataSource = __WEBPACK_IMPORTED_MODULE_4__transaction__["b" /* TransactionDataSource */].Memory;
        }
        else {
            _super.prototype.setDataSource.call(this);
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Request Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Builds the XML for the load page request.
     *
     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the
     * response if a valid one is received.
     *
     * @param   pageID  The page ID of the page whose content we wish to load.
     *
     * @returns The root element of the load page request XML.
     */
    LoadPageTaskHandler.prototype.buildRequestXml = function (pageID) {
        this.requestXml.appendChild(__WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].xmlStringToElement("<Page><PageID>" + pageID + "</PageID></Page>"));
        // Reset the dataSource based on the pageID.
        this.setDataSource(pageID);
        // If the Player is launched from the PageDesigner starting on the page that is currently being edited
        // (dataSource is Memory, see setDataSource for details), set the location of the page content data.
        // If player is offline, data source is File, set FileURL
        if (this.dataSource === __WEBPACK_IMPORTED_MODULE_4__transaction__["b" /* TransactionDataSource */].Memory) {
            this._memoryObject = window.opener.Preview.pageData;
        }
        else if (this.dataSource === __WEBPACK_IMPORTED_MODULE_4__transaction__["b" /* TransactionDataSource */].File) {
            this.fileUrl = this.startupConfigurationService.getPageFileUrl(pageID);
        }
        return this.requestXml;
    };
    /**
     * Creates the page data and assigns it to the PageService.
     *
     * @inheritDoc
     */
    LoadPageTaskHandler.prototype.processResponse = function () {
        var responseXML;
        // A reference to the "Page" Element which contains all of the page's properties as well as being the root of
        // all Elements that make up the page content.  Unlike many other Elements, this one does not have a direct
        // correlation with a data object.  Instead, its properties together with the child Elements of the
        // ElementContainer are used to create the PageDataObject.
        var pageElement;
        if (this.dataSource === __WEBPACK_IMPORTED_MODULE_4__transaction__["b" /* TransactionDataSource */].Memory) {
            // If response is from MEMORY, root level element is the Page element
            responseXML = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].xmlStringToElement(this.responseData);
            pageElement = responseXML;
        }
        else {
            responseXML = this.responseData;
            pageElement = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(responseXML, 'Page');
        }
        this.loadPageTaskHandlerLogger.debug('processResponse(): Load Edit Screen ResponseXML = ');
        // NOTE:    logging the responseXML directly (without concatenating to any string) allows object inspection in
        //          the chrome developer tool.
        // console.log('*** Page Data ***');
        // console.log(responseXML.innerHTML);
        var pageService = __WEBPACK_IMPORTED_MODULE_0__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__services_page_service__["a" /* PageService */]);
        // A reference to the "ElementContainer" Element which is the parent of all the Elements that make up the page
        // content.  It too does not have a direct correlation with a particular data object.
        var elementContainerElement = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(pageElement, 'ElementContainer');
        // The data object representation of the page content which we create from the "ElementContainer" Element and
        // its descendants.
        var pageContent = new __WEBPACK_IMPORTED_MODULE_2__data_objects_element_data_object__["a" /* ElementDataObject */](elementContainerElement);
        // The data object representation of the page which we create using the properties of the "Page" Element along
        // with the "ElementContainer" Element and its descendants.
        var newPage = new __WEBPACK_IMPORTED_MODULE_3__data_objects_page_data_object__["a" /* PageDataObject */](pageContent, pageElement);
        pageService.page = newPage;
        // NOTE:    logging the PageDataObject directly (without concatenating to any string) allows object inspection
        //          in the chrome developer tool.
        // console.log('*** Page Object ***');
        // console.log(newPage);
    };
    return LoadPageTaskHandler;
}(__WEBPACK_IMPORTED_MODULE_5__transaction_task_handler__["a" /* TransactionTaskHandler */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-page.task-handler.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-references.task-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadReferencesTaskHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_reference_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/reference.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_objects_reference_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/reference.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__transaction_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







/**
 * This task handler makes the request to load the list of external references associated with the course.  The response
 * is then parsed and from that data an array of reference data objects is created in the reference service for use by
 * the rest of the application.
 *
 * @see TransactionTaskHandler
 * @see ReferenceService
 * @see ReferenceDataObject
 */
var LoadReferencesTaskHandler = /** @class */ (function (_super) {
    __extends(LoadReferencesTaskHandler, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadReferencesTaskHandler instance.
     */
    function LoadReferencesTaskHandler() {
        var _this = _super.call(this, 'LoadReferenceList') || this;
        // If player is offline, data source is File, set FileURL
        if (_this.dataSource === __WEBPACK_IMPORTED_MODULE_3__transaction__["b" /* TransactionDataSource */].File) {
            _this.fileUrl = _this.startupConfigurationService.referenceFileUrl;
        }
        return _this;
    }
    /**
     * @inheritDoc
     */
    LoadReferencesTaskHandler.prototype.constructorPreprocessing = function () {
        this.loadReferencesTaskHandlerLogger = __WEBPACK_IMPORTED_MODULE_5__log__["a" /* Log */].getInstance().getLogger('LoadReferencesTaskHandler');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Request Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Builds the XML for the load reference list request.
     *
     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the
     * response if a valid one is received.
     *
     * @param   unitID  The unit ID of the course whose references we wish to load.
     * @param   pageID  The page ID of the current page in the course whose references we wish to load.
     *
     * @returns The root element of the load reference list request XML.
     */
    LoadReferencesTaskHandler.prototype.buildRequestXml = function (unitID, pageID) {
        if (pageID) {
            this.requestXml.appendChild(__WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].xmlStringToElement("<Page><PageID>" + pageID + "</PageID></Page>"));
        }
        else {
            this.requestXml.appendChild(__WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].xmlStringToElement("<Unit><UnitID>" + unitID + "</UnitID></Unit>"));
        }
        return this.requestXml;
    };
    /**
     * Creates the reference list and assigns it to the ReferenceService.
     *
     * @inheritDoc
     */
    LoadReferencesTaskHandler.prototype.processResponse = function () {
        this.loadReferencesTaskHandlerLogger.trace('Load References ResponseXML = ' + this.responseData);
        var responseXML = this.responseData;
        if (this.dataSource === __WEBPACK_IMPORTED_MODULE_3__transaction__["b" /* TransactionDataSource */].File) {
            responseXML = __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(this.responseData, 'Response');
        }
        var referencesElement = __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(responseXML, 'References');
        var responseElements = __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].getChildElements(referencesElement);
        var referenceService = __WEBPACK_IMPORTED_MODULE_0__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__services_reference_service__["a" /* ReferenceService */]);
        referenceService.references = [];
        for (var _i = 0, responseElements_1 = responseElements; _i < responseElements_1.length; _i++) {
            var element = responseElements_1[_i];
            console.log(element.innerHTML);
            console.log(element.tagName);
            if (element.tagName === 'Reference') {
                var newReference = new __WEBPACK_IMPORTED_MODULE_2__data_objects_reference_data_object__["a" /* ReferenceDataObject */]();
                newReference.initializeDataFromServer(element);
                referenceService.references.push(newReference);
            }
        }
        this.loadReferencesTaskHandlerLogger.trace(referenceService.serializeClass());
    };
    return LoadReferencesTaskHandler;
}(__WEBPACK_IMPORTED_MODULE_4__transaction_task_handler__["a" /* TransactionTaskHandler */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-references.task-handler.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-unit-type.task-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadUnitTypeTaskHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_unit_type_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit-type.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__data_objects_unit_type_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/unit-type.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__transaction_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







/**
 * This task handler makes the request to load the unit type list which specifies the various types of units that are
 * available for the course.  The response is then parsed and from that data an array of unit type data objects is
 * created in the unit type service for use by the rest of the application.
 *
 * @see TransactionTaskHandler
 * @see UnitTypeService
 * @see UnitTypeDataObject
 */
var LoadUnitTypeTaskHandler = /** @class */ (function (_super) {
    __extends(LoadUnitTypeTaskHandler, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadUnitTypeTaskHandler instance.
     */
    function LoadUnitTypeTaskHandler() {
        var _this = _super.call(this, 'LoadUnitType') || this;
        // If player is offline, data source is File, set FileURL
        if (_this.dataSource === __WEBPACK_IMPORTED_MODULE_3__transaction__["b" /* TransactionDataSource */].File) {
            _this.fileUrl = _this.startupConfigurationService.unitTypeFileUrl;
        }
        return _this;
    }
    /**
     * @inheritDoc
     */
    LoadUnitTypeTaskHandler.prototype.constructorPreprocessing = function () {
        this.loadUnitTypeTaskHandlerLogger = __WEBPACK_IMPORTED_MODULE_5__log__["a" /* Log */].getInstance().getLogger('LoadUnitTypeTaskHandler');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Request Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Builds the XML for the load unit type list request.
     *
     * The request is initiated on our behalf by the Transaction class that instantiates us.  It also returns to us the
     * response if a valid one is received.
     *
     * NOTE:
     *          Yes, this method is supposed to be basically empty. :)  Unlike most other task handlers we just need the
     *          requestXml to have a single Element with our requestName as its tagName.  This is setup in our super.
     *
     * @returns The root element of the load unit type list request XML.
     */
    LoadUnitTypeTaskHandler.prototype.buildRequestXml = function () {
        return this.requestXml;
    };
    /**
     * Creates the unit type array inside the UnitTypeService.
     *
     * @inheritDoc
     */
    LoadUnitTypeTaskHandler.prototype.processResponse = function () {
        this.loadUnitTypeTaskHandlerLogger.trace('Load Unit Type ResponseXML => ');
        console.log(this.responseData);
        var responseXML = this.responseData;
        if (this.dataSource === __WEBPACK_IMPORTED_MODULE_3__transaction__["b" /* TransactionDataSource */].File) {
            responseXML = __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(this.responseData, 'Response');
        }
        var responseElements = __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].getChildElements(responseXML);
        var unitTypeService = __WEBPACK_IMPORTED_MODULE_0__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__services_unit_type_service__["a" /* UnitTypeService */]);
        unitTypeService.unitTypes = [];
        for (var _i = 0, responseElements_1 = responseElements; _i < responseElements_1.length; _i++) {
            var element = responseElements_1[_i];
            if (element.tagName === 'UnitType') {
                var newUnitType = new __WEBPACK_IMPORTED_MODULE_2__data_objects_unit_type_data_object__["a" /* UnitTypeDataObject */]();
                newUnitType.initializeDataFromServer(element);
                unitTypeService.unitTypes.push(newUnitType);
            }
        }
        this.loadUnitTypeTaskHandlerLogger.trace(unitTypeService.serializeClass());
    };
    return LoadUnitTypeTaskHandler;
}(__WEBPACK_IMPORTED_MODULE_4__transaction_task_handler__["a" /* TransactionTaskHandler */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-unit-type.task-handler.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-unit.task-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadUnitTaskHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__transaction_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






/**
 * This task handler makes the request to load the course's unit hierarchy (A.K.A course structure, A.K.A. course map,
 * A.K.A. table of contents).  The response is then parsed and the data sent to the unit service for further processing
 * and ultimately use by the rest of the application.
 *
 * @see TransactionTaskHandler
 * @see UnitService
 */
var LoadUnitTaskHandler = /** @class */ (function (_super) {
    __extends(LoadUnitTaskHandler, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadUnitTaskHandler instance.
     */
    function LoadUnitTaskHandler() {
        var _this = _super.call(this, 'LoadTOC') || this;
        // If the Player is launched from the CourseDesigner (dataSource is Memory, see setDataSource for details), set
        // the location of the unit data.
        // If player is offline, data source is File, set FileURL
        if (_this.dataSource === __WEBPACK_IMPORTED_MODULE_2__transaction__["b" /* TransactionDataSource */].Memory) {
            _this._memoryObject = window.opener.Preview.unitData;
        }
        else if (_this.dataSource === __WEBPACK_IMPORTED_MODULE_2__transaction__["b" /* TransactionDataSource */].File) {
            _this.fileUrl = _this.startupConfigurationService.unitFileUrl;
        }
        return _this;
    }
    /**
     * @inheritDoc
     */
    LoadUnitTaskHandler.prototype.constructorPreprocessing = function () {
        this.loadUnitTaskHandlerLogger = __WEBPACK_IMPORTED_MODULE_4__log__["a" /* Log */].getInstance().getLogger('LoadUnitTaskHandler');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Accessors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * @inheritDoc
     */
    LoadUnitTaskHandler.prototype.setDataSource = function () {
        // If the Player was invoked from the CourseDesigner, then we need to get our data from memory so we can show
        // the latest changes.  Otherwise we call our super's implementation to determine the dataSource.
        if (this.startupConfigurationService.caller === 'Module') {
            this._dataSource = __WEBPACK_IMPORTED_MODULE_2__transaction__["b" /* TransactionDataSource */].Memory;
        }
        else {
            _super.prototype.setDataSource.call(this);
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Request Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Builds the XML for the load unit hierarchy request.
     *
     * @param   unitID  The unit ID of the course whose unit hierarchy we wish to load.
     * @param   pageID  The page ID of the current page in the course whose unit hierarchy we wish to load.
     *
     * @returns The root element of the load unit hierarchy request XML.
     */
    LoadUnitTaskHandler.prototype.buildRequestXml = function (unitID, pageID) {
        if (pageID) {
            this.requestXml.appendChild(__WEBPACK_IMPORTED_MODULE_5__xml_parser__["a" /* XmlParser */].xmlStringToElement("<Page><PageID>" + pageID + "</PageID></Page>"));
        }
        else {
            this.requestXml.appendChild(__WEBPACK_IMPORTED_MODULE_5__xml_parser__["a" /* XmlParser */].xmlStringToElement("<Unit><UnitID>" + unitID + "</UnitID></Unit>"));
        }
        return this.requestXml;
    };
    /**
     * Creates the course's unit hierarchy and assigns it to the UnitService.
     *
     * @inheritDoc
     */
    LoadUnitTaskHandler.prototype.processResponse = function () {
        var rootUnitResponseXML;
        // If the dataSource is TransactionDataSource.Memory, it's a root unit element XML.
        if (this.dataSource === __WEBPACK_IMPORTED_MODULE_2__transaction__["b" /* TransactionDataSource */].Memory) {
            rootUnitResponseXML = __WEBPACK_IMPORTED_MODULE_5__xml_parser__["a" /* XmlParser */].xmlStringToElement(this.responseData);
        }
        else {
            rootUnitResponseXML = __WEBPACK_IMPORTED_MODULE_5__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(this.responseData, 'Unit');
        }
        this.loadUnitTaskHandlerLogger.trace('processResponse(): Load Unit root responseXML = ');
        console.log(rootUnitResponseXML);
        // set course unit hierarchy in the UnitService to make it available to the rest of the application.
        var unitService = __WEBPACK_IMPORTED_MODULE_0__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__services_unit_service__["a" /* UnitService */]);
        unitService.setRootUnit(rootUnitResponseXML);
    };
    return LoadUnitTaskHandler;
}(__WEBPACK_IMPORTED_MODULE_3__transaction_task_handler__["a" /* TransactionTaskHandler */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-unit.task-handler.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/transaction-task-handlers/load-user-variables.task-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadUserVariablesTaskHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_variable_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/variable.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_data_objects_variable_playable_data_object__ = __webpack_require__("./src/app/model/data-objects/variable.playable.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__transaction_task_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







/**
 * This task handler makes the request to load all of the course's user-defined variables.  The response is then parsed
 * and from that data an array of variable playable data objects is created in the variable service for use by the rest
 * of the application.
 *
 * @see TransactionTaskHandler
 * @see VariableService
 * @see VariablePlayableDataObject
 */
var LoadUserVariablesTaskHandler = /** @class */ (function (_super) {
    __extends(LoadUserVariablesTaskHandler, _super);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor - creates a new LoadUserVariablesTaskHandler instance.
     */
    function LoadUserVariablesTaskHandler() {
        var _this = _super.call(this, 'LoadVariableList') || this;
        // If player is offline, data source is File, set FileURL
        if (_this.dataSource === __WEBPACK_IMPORTED_MODULE_3__transaction__["b" /* TransactionDataSource */].File) {
            _this.fileUrl = _this.startupConfigurationService.variableFileUrl;
        }
        return _this;
    }
    /**
     * @inheritDoc
     */
    LoadUserVariablesTaskHandler.prototype.constructorPreprocessing = function () {
        this.loadUserVariablesTaskHandlerLogger = __WEBPACK_IMPORTED_MODULE_5__log__["a" /* Log */].getInstance().getLogger('LoadUserVariablesTaskHandler');
        _super.prototype.constructorPreprocessing.call(this);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Request Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Builds the XML for the load user-defined variables request.
     *
     * @param   unitID  The unit ID of the course whose user defined variables we wish to load.
     * @param   pageID  The page ID of the current page in the course whose user defined variables we wish to load.
     *
     * @returns The root element of the load user-defined variables request XML.
     */
    LoadUserVariablesTaskHandler.prototype.buildRequestXml = function (unitID, pageID) {
        if (pageID) {
            this.requestXml.appendChild(__WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].xmlStringToElement("<Page><PageID>" + pageID + "</PageID></Page>"));
        }
        else {
            this.requestXml.appendChild(__WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].xmlStringToElement("<Unit><UnitID>" + unitID + "</UnitID></Unit>"));
        }
        return this.requestXml;
    };
    /**
     * Creates the user-defined variable list inside the VariableService.
     *
     * @inheritDoc
     */
    LoadUserVariablesTaskHandler.prototype.processResponse = function () {
        var responseXML = this.responseData;
        if (this.dataSource === __WEBPACK_IMPORTED_MODULE_3__transaction__["b" /* TransactionDataSource */].File) {
            responseXML = __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(this.responseData, 'Response');
        }
        var variableService = __WEBPACK_IMPORTED_MODULE_0__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__services_variable_service__["a" /* VariableService */]);
        variableService.variables = [];
        var responseElements = __WEBPACK_IMPORTED_MODULE_6__xml_parser__["a" /* XmlParser */].getChildElements(responseXML);
        for (var _i = 0, responseElements_1 = responseElements; _i < responseElements_1.length; _i++) {
            var element = responseElements_1[_i];
            if (element.tagName === 'Variable') {
                var newVariable = new __WEBPACK_IMPORTED_MODULE_2__model_data_objects_variable_playable_data_object__["a" /* VariablePlayableDataObject */]();
                newVariable.initializeDataFromServer(element);
                variableService.variables.push(newVariable);
            }
        }
        this.loadUserVariablesTaskHandlerLogger.trace(variableService.serializeClass());
    };
    return LoadUserVariablesTaskHandler;
}(__WEBPACK_IMPORTED_MODULE_4__transaction_task_handler__["a" /* TransactionTaskHandler */]));

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/load-user-variables.task-handler.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/transaction-task-handlers/transaction-task-handler.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TransactionTaskHandler; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_services_startup_configuration_service__ = __webpack_require__("./src/app/model/services/startup-configuration-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__transaction__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/transaction.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");




/**
 * This class is a helper to the Transaction class.  It lets the Transaction know what type of communication is required
 * and provides handling for any responses specific to that communication.  This includes handling any errors indicated
 * in the response. It is abstract, containing the common functionality for all transaction task handlers, and must be
 * sub-classed for each specific use case.
 *
 * @see Transaction
 */
var TransactionTaskHandler = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Abstract Constructor - provides implementation common to all TransactionTaskHandlers.
     *
     * @param   requestName The name of the request this handler uses to ask for data.  It is sent to us as a string
     *                      literal from the constructors of our derived classes.
     */
    function TransactionTaskHandler(requestName) {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Variables / Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Reference to StartupConfigurationService singleton.
         *
         * @default A StartupConfigurationService reference.
         */
        this.startupConfigurationService = __WEBPACK_IMPORTED_MODULE_0__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__model_services_startup_configuration_service__["a" /* StartupConfigurationService */]);
        this._requestName = requestName;
        var requestString = "<Request Name=\"" + this._requestName + "\">\n            </Request>";
        this._requestXml = __WEBPACK_IMPORTED_MODULE_3__xml_parser__["a" /* XmlParser */].xmlStringToElement(requestString);
        this.setDataSource();
        this.constructorPreprocessing();
    }
    /**
     * Runs any constructor process that is permitted to be overridden in derived classes.  Derived classes can use this
     * method to apply logic specific to the derived class.  Any constructor process that should not be overridden by
     * derived classes should be put directly in the constructor.
     */
    TransactionTaskHandler.prototype.constructorPreprocessing = function () {
        /* No implementation required. */
    };
    Object.defineProperty(TransactionTaskHandler.prototype, "requestXml", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The XML that defines the request this handler uses.
         *
         * @default undefined
         */
        get: function () {
            return this._requestXml;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TransactionTaskHandler.prototype, "requestName", {
        //////////////////////////////////////////////////////////
        /**
         * The value of the "Name" attribute of the Request tag in the XML that defines the request this handler uses.
         *
         * It is passed into our constructor as a string literal from the constructors of our derived classes.
         *
         * @default undefined
         */
        get: function () {
            return this._requestName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TransactionTaskHandler.prototype, "memoryObject", {
        //////////////////////////////////////////////////////////
        /**
         * A reference to the JavaScript object (it could be anything!) that contains the data required for this task
         * handler when the dataSource is set to TransactionDataSource.Memory.
         *
         * Usually it is passed into an ExternalInterfaceHandler.
         *
         * @default undefined
         */
        get: function () {
            return this._memoryObject;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TransactionTaskHandler.prototype, "responseData", {
        //////////////////////////////////////////////////////////
        /**
         * The response data sent back to us from one of the various TransactionDataSources.
         *
         * Usually it is XML data, but it could be any object when coming from an external interface.
         *
         * @default undefined
         */
        get: function () {
            return this._responseData;
        },
        set: function (value) {
            this._responseData = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TransactionTaskHandler.prototype, "fileUrl", {
        //////////////////////////////////////////////////////////
        /**
         * The URL of the file that contains the data this task handler needs when the dataSource is set to
         * TransactionDataSource.File.
         *
         * @default undefined
         */
        get: function () {
            return this._fileUrl;
        },
        set: function (value) {
            this._fileUrl = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TransactionTaskHandler.prototype, "dataSource", {
        //////////////////////////////////////////////////////////
        /**
         * The source that this task handler needs to retrieve data from.  Typical sources include: the application server,
         * a file from the filesystem, or an object in memory.
         *
         * Its value will be one of the members of the TransactionDataSource enumeration which specifies all of the sources
         * transactions can retrieve data from.
         *
         * @see TransactionDataSource
         *
         * @default undefined
         */
        get: function () {
            return this._dataSource;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * The source that this task handler needs to retrieve data from.  Typical sources include: the application server,
     * a file from the filesystem, or an object in memory.
     *
     * Its value will be one of the members of the TransactionDataSource enumeration which specifies all of the sources
     * transactions can retrieve data from.
     *
     * For basic rules, the dataSource is determined by one or two factors:
     *
     *  1. The application or module that invoked the Player.
     *  2. The name of the request that this TransactionTaskHandler uses.
     *
     * For advanced rules, see the documentation of the task handlers that override this method.
     *
     * @see TransactionDataSource
     */
    TransactionTaskHandler.prototype.setDataSource = function () {
        // This is the default data source.
        this._dataSource = __WEBPACK_IMPORTED_MODULE_2__transaction__["b" /* TransactionDataSource */].Server;
        // When running standalone we always get our data from a file.
        if (this.startupConfigurationService.caller === 'Player') {
            this._dataSource = __WEBPACK_IMPORTED_MODULE_2__transaction__["b" /* TransactionDataSource */].File;
        }
        // caller => Admin,Module,Page,Template,Player
        switch (this.startupConfigurationService.caller) {
            // TODO: create a stub for the load template request and put this in it
            case 'Template': //
                // only load template data, get from memory, othersie from server
                if (this._requestName === 'LoadTemplate') {
                    this._dataSource = __WEBPACK_IMPORTED_MODULE_2__transaction__["b" /* TransactionDataSource */].Memory;
                }
                break;
        }
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Data Handling
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * This method processes any data that may have been returned to us through our responseData property.
     *
     * Usually a Transaction will instantiate one or more TransactionTaskHandlers and then initiate any required
     * communications on their behalf.  Upon reception, it will divide up an overall response from one of the
     * TransactionDataSources.  Finally, it parses out individual responses and returns them to the
     * TransactionTaskHandler that initially required the data.
     *
     * Typically the responseData is an XML Element (when dataSource is File or Server) or an XML-formatted string (when
     * dataSource is Memory), but it could be any object when coming from an external interface.
     */
    TransactionTaskHandler.prototype.processResponse = function () {
        /* No implementation required. */
    };
    /**
     * Creates a CDATA Element by wrapping the given string in a CDATA tag and then converting the entire string to
     * an Element.
     *
     * @param   data    The content to include in the CDATA Element.
     *
     * @returns A CDATA Element containing the given string as its content.
     */
    TransactionTaskHandler.prototype.createCDATA = function (data) {
        return __WEBPACK_IMPORTED_MODULE_3__xml_parser__["a" /* XmlParser */].xmlStringToElement("<![CDATA[" + data + "]]>");
    };
    return TransactionTaskHandler;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/transaction-task-handler.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/transaction.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return TransactionDataSource; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Transaction; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__ = __webpack_require__("./node_modules/rxjs/_esm5/Observable.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__model_services_startup_configuration_service__ = __webpack_require__("./src/app/model/services/startup-configuration-service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__external_interface_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/external-interface-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__http_request_handler__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/http-request-handler.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__log__ = __webpack_require__("./src/app/shared/system-shared/log.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__xml_parser__ = __webpack_require__("./src/app/shared/system-shared/model/transactions/xml-parser.ts");








/**
 * An enumeration that defines the various sources transactions can attempt to retrieve data from.
 *
 * Sources:
 *
 *  Server  -   The data is located on the application server.
 *
 *  File    -   The data resides in a file on the filesystem (either the application server's filesystem or the local
 *              client's filesystem).
 *
 *  Memory  -   The data is already loaded into an object held in client-side memory.
 */
var TransactionDataSource;
(function (TransactionDataSource) {
    TransactionDataSource[TransactionDataSource["Server"] = 0] = "Server";
    TransactionDataSource[TransactionDataSource["File"] = 1] = "File";
    TransactionDataSource[TransactionDataSource["Memory"] = 2] = "Memory";
})(TransactionDataSource || (TransactionDataSource = {}));
/**
 * This class facilitates communication with sources external to the current module or application.  This includes
 * web servers, the file system, other application modules, etc.  It is abstract, containing the common functionality
 * for all transactions, and must be sub-classed for each specific use case.  A transaction contains one or more
 * TransactionTaskHandler helper classes that let it know what type of communication is required and provide handling
 * for any responses specific to that communication.  It also keeps track of observables returned from one or more
 * HttpRequestHandler helper classes it creates to perform the actual communication and handle any responses returned.
 *
 * A typical order of operations for a transaction is as follows:
 *
 *  1.  The service creates the appropriate transaction for a particular communication task.
 *  2.  The transaction instantiates specific TransactionTaskHandlers.
 *  3.  Where necessary, the transaction groups tasks by the destination the communications need to go to (server,
 *      file system, memory, etc.) and creates an HttpRequestHandler for each group.
 *  4.  The HttpRequestHandlers create and send their HttpRequests and return observables to the transaction.
 *  5.  The transaction subscribes to the observables returned by the HttpRequestHandlers and waits for the responses.
 *  6.  The HttpRequestHandlers receive (or don't) their responses and handle any errors such as server unavailable,
 *      and file not found.
 *  7.  The transaction is notified that the request responses have been received and validates them handling errors
 *      such as unknown response.
 *  8.  The transaction returns the individual responses back to the corresponding TransactionTaskHandlers.
 *  9.  The TransactionTaskHandlers parse their responses and potentially return data to the service or handle errors
 *      such as the response indicating that the communication did not have the desired result.
 *
 *  @see TransactionTaskHandler
 *  @see TransactionDataSource
 *  @see HttpRequestHandler
 *  @see ExternalInterfaceHandler
 */
var Transaction = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Abstract Constructor - provides implementation common to all Transactions.
     *
     * TODO: Add parameter descriptions
     *
     * @param   transactionName Needs description.
     * @param   applicationName Needs description.
     */
    function Transaction(transactionName, applicationName) {
        if (transactionName === void 0) { transactionName = null; }
        if (applicationName === void 0) { applicationName = null; }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Variables / Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * A reference to the StartupConfigurationService singleton so we can access startup info.
         *
         * TODO: Used only by some subclasses at this point - should we keep it here?
         *
         * @default A StartupConfigurationService reference.
         */
        this.startupConfigurationService = __WEBPACK_IMPORTED_MODULE_1__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_3__model_services_startup_configuration_service__["a" /* StartupConfigurationService */]);
        /**
         * @see serverUrl
         */
        this._serverUrl = '../Admin/ProcessXMLRequest.aspx';
        /**
         * An array of source handlers.
         *
         * @default An empty array of arrays of TransactionTaskHandler.
         */
        this.sourceHandlers = [];
        /**
         * An array of the task handlers contained in this transaction.
         *
         * @default An empty array of TransactionTaskHandler.
         */
        this.taskHandlers = [];
        /**
         * An instance of the logger class for outputting log messages.
         *
         * A string is passed to the logger factory to be used as part of the name of the logger.  This name appears before
         * each log statement that is output.
         *
         * @default undefined
         */
        this.logger = __WEBPACK_IMPORTED_MODULE_6__log__["a" /* Log */].getInstance().getLogger('Transaction');
        this.transactionName = transactionName;
        this.applicationName = applicationName;
        // TODO: should come up with some consistent way of handling applicationName
        if (applicationName == null) {
            this.applicationName = 'Reviewer';
        }
        this.logger.info('Transaction.constructor(): transactionName = ' + transactionName);
        this.constructorPreprocessing();
    }
    /**
     * Runs any constructor process that is permitted to be overridden in derived classes.  Derived classes can use this
     * method to apply logic specific to the derived class.  Any constructor process that should not be overridden by
     * derived classes should be put directly in the constructor.
     */
    Transaction.prototype.constructorPreprocessing = function () {
        /* No implementation required. */
    };
    Object.defineProperty(Transaction.prototype, "serverUrl", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The URL of the application server that can process our post request.
         *
         * @default '../Admin/ProcessXMLRequest.aspx'
         */
        set: function (value) {
            this._serverUrl = value;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Start Communication
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Adds a task handler to our array.
     *
     * @param   taskHandler The TransactionTaskHandler object to add to our array.
     */
    Transaction.prototype.addTaskHandler = function (taskHandler) {
        this.taskHandlers.push(taskHandler);
    };
    /**
     * Starts the process to get data from a TransactionDataSource (server/file/memory).
     *
     * @returns An array of Observables (one for each request that was dispatched).
     */
    Transaction.prototype.sendRequest = function () {
        var _this = this;
        console.log('Transaction.sendRequest(): started');
        // Array of Observables returned from transaction data sources that were asked to supply data
        var dataSourceObservables = [];
        // %%%%%%% read server data (usually with multiple task handlers sent in a single HTTP request/response) %%%%%%%
        // A subset of our taskHandlers array containing only those handlers requiring data from the application server.
        var serverTaskHandlers = this.taskHandlers.filter(function (r) { return r.dataSource === TransactionDataSource.Server; });
        // If there are any server task handlers, prepare a server request.
        if (serverTaskHandlers.length > 0) {
            // Setup an XML wrapper for the request.
            var requestString = "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n                <" + this.applicationName + "Request>\n                    <Action Event=\"" + this.transactionName + "\"></Action>\n                    <Requests></Requests>\n                </" + this.applicationName + "Request>";
            // Create an HttpRequestHandler to request data from the server.
            var httpRequestHandler = new __WEBPACK_IMPORTED_MODULE_5__http_request_handler__["a" /* HttpRequestHandler */]();
            httpRequestHandler.requestXML = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].xmlStringToElement(requestString);
            // Build the contents of the overall request XML by combining the request XMLs from each of the server
            // task handlers under the "Requests" Element in the requestString.
            var requestsElement_1 = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(httpRequestHandler.requestXML, 'Requests');
            serverTaskHandlers.forEach(function (r) {
                console.log(r.requestName + ' dataSource = ' + r.dataSource + ' Request XML = ' + r.requestXml);
                requestsElement_1.appendChild(r.requestXml);
            });
            console.log(httpRequestHandler.requestXML);
            // The observable returned by the HttpRequestHandler that sends and receives data to and from the server.
            var serverObservable = httpRequestHandler.sendPostRequest(this._serverUrl)
                .catch(this.handleObservableError);
            dataSourceObservables.push(serverObservable);
            this.sourceHandlers.push(serverTaskHandlers);
        }
        // %%%%%%%%% read file data (one file at a time) %%%%%%%%%%
        this.taskHandlers.filter(function (r) { return r.dataSource === TransactionDataSource.File; }).forEach(function (r) {
            console.log(r.requestName + ' dataSource = ' + r.dataSource + (" File URL = " + r.fileUrl));
            // Create HTTRequestHandler to get data from file
            var httpRequestFileHandler = new __WEBPACK_IMPORTED_MODULE_5__http_request_handler__["a" /* HttpRequestHandler */]();
            // Get observable from HttpRequestHandler and add to dataSourceObservables array
            var fileSource = httpRequestFileHandler.sendGetRequest(r.fileUrl)
                .catch(_this.handleObservableError);
            dataSourceObservables.push(fileSource);
            _this.sourceHandlers.push([r]);
        });
        // %%%%%%%%% read memory data %%%%%%%%%%
        this.taskHandlers.filter(function (r) { return r.dataSource === TransactionDataSource.Memory; }).forEach(function (r) {
            _this.logger.info('Transaction.sendRequest(): MEMORY Task Handler = ' + r.requestName);
            // Create ExternalInterfaceHandler to get data from memory
            var externalInterfaceHandler = new __WEBPACK_IMPORTED_MODULE_4__external_interface_handler__["a" /* ExternalInterfaceHandler */]();
            var memorySource = externalInterfaceHandler.getObservable(r.memoryObject)
                .catch(_this.handleObservableError);
            dataSourceObservables.push(memorySource);
            _this.sourceHandlers.push([r]);
        });
        return __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__["a" /* Observable */].forkJoin(dataSourceObservables);
    };
    /**
     * TODO: Needs description
     *
     * NOTE:
     *          Normally derived classes override this method in order to add their specific implementation details.
     *
     * @returns {Observable<any>}
     */
    Transaction.prototype.startTransaction = function () {
        // this.logger.debug('startTransaction(): from transaction super');
        return this.sendRequest()
            .map(this.processObservableResponses, this)
            .catch(this.handleObservableError);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Handle Communication Response
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * TODO: Needs description
     *
     * @param error
     *
     * @returns {any}
     */
    Transaction.prototype.handleObservableError = function (error) {
        __WEBPACK_IMPORTED_MODULE_1__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_2__model_services_pop_up_service__["a" /* PopUpService */]).openSystemMessage(error.message);
        // console.error('An http error occurred', error);
        return __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__["a" /* Observable */].throw(error.message || error);
    };
    /**
     * Processes the observable responses that are returned from the various transaction data sources.
     *
     * @param   responses   An array of Observable responses returned by the data sources we asked for information from.
     */
    Transaction.prototype.processObservableResponses = function (responses) {
        var _this = this;
        console.log('Observable response source array length => ' + responses.length);
        // Loop through the array of responses from the forkjoined observables
        responses.forEach(function (response, index) {
            // this.logger.info('processObservableResponses(): data = ' + responseXML);
            var handler = _this.sourceHandlers[index][0];
            switch (handler.dataSource) {
                // Right now we use this transaction class to interact with all other external files
                // (for example, config,manifest) that return other formats.  So we leave converting
                // the response to XML, if necessary, to the task handlers.
                case TransactionDataSource.File:
                    if (!response) {
                        return;
                    }
                    handler.responseData = response;
                    break;
                case TransactionDataSource.Memory:
                    // NOTE:    At this point, although Unit and Page data that we get from Designer memory are XML
                    //          strings, we may use this to interact with other external javascript in the future that
                    //          return other formats.  So we leave converting the response to XML, if necessary, to the
                    //          task handlers.
                    if (!response) {
                        return;
                    }
                    handler.responseData = response;
                    break;
                case TransactionDataSource.Server:
                    handler.responseData = response;
                    // Check for a successful response.
                    if (!_this.validateRequestResponse(response)) {
                        return;
                    }
                    // A reference to the "Responses" Element which contains a collection of "Response" Elements.
                    var responsesElement = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(response, 'Responses');
                    // The task handlers associated with this particular observable response.
                    var handlers = _this.sourceHandlers[index];
                    var _loop_1 = function (child) {
                        // Get the "Name" attribute from the "Response" Element.
                        var responseName = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].getAttribute(child, 'Name');
                        // Use the "Name" attribute to match the "Response" root Element with the appropriate task
                        // handler, then set the task handler's responseData property.
                        handlers.find(function (h) { return h.requestName === responseName; }).responseData = child;
                    };
                    // Parse the response for individual task handler results, then map those back to the appropriate
                    // task handler.
                    for (var _i = 0, _a = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].getChildElements(responsesElement); _i < _a.length; _i++) {
                        var child = _a[_i];
                        _loop_1(child);
                    }
                    break;
            }
        });
        // Call individual task handlers processResponse methods
        this.processTaskHandlerResponses();
    };
    /**
     * Handles request status errors that are indicated in the response XML. Sends a notification to open a popup
     * containing the error message and writes the error to the log.
     *
     * @param   responseXML The root Element of the XML request response.
     *
     * @return True if the request status is "Succeed", otherwise false.
     */
    Transaction.prototype.validateRequestResponse = function (responseXML) {
        var requestStatus = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].getTextContent(__WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(responseXML, 'RequestProcessStatus'));
        // this.logger.debug('validateRequestResponse(): requestStatus = ' + requestStatus);
        if (requestStatus !== 'Succeed') {
            // TODO: do we popup ErrorData here?
            var responseErrorCode = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].getTextContent(__WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(responseXML, 'ErrorCode'));
            var responseErrorMessage = __WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].getTextContent(__WEBPACK_IMPORTED_MODULE_7__xml_parser__["a" /* XmlParser */].findFirstDescendantByName(responseXML, 'ErrorMessage'));
            __WEBPACK_IMPORTED_MODULE_1__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_2__model_services_pop_up_service__["a" /* PopUpService */]).openSystemMessage(responseErrorCode + ': ' + responseErrorMessage);
            return false;
        }
        return true;
    };
    /**
     * Calls each individual task handler to process its own response data.
     */
    Transaction.prototype.processTaskHandlerResponses = function () {
        this.taskHandlers.forEach(function (handler) {
            // this.logger.debug('processResponse(): for handler -> ' + handler.requestName);
            handler.processResponse();
        });
    };
    return Transaction;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/transaction.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/model/transactions/xml-parser.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return XmlParser; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");


/**
 * This module exports utility functions that provide the ability to work with / manipulate XML.
 *
 * NOTE:
 *          Originally this was implemented as class with static methods.  We're trying it as a module to see if it's
 *          better.
 *
 * TODO: Turn this into a service.
 *
 * We're not supposed to use internal modules or namespaces anymore.  I thought this was an external module but I guess
 * it's setup wrong and I'm not sure how to do it.  Anyway now that we know better this class makes much more sense as a
 * service.
 */
var XmlParser;
(function (XmlParser) {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// XML Creation / Conversion
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Uses the ES6 DOMParser to parse the given XML string into a Document object.
     *
     * @param   xmlString   An XML formatted string.
     *
     * @returns A Document object if successful, otherwise undefined.
     */
    function xmlStringToDocument(xmlString) {
        var domParser = new DOMParser();
        try {
            return domParser.parseFromString(xmlString, 'text/xml');
        }
        catch (e) {
            __WEBPACK_IMPORTED_MODULE_0__services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_1__model_services_pop_up_service__["a" /* PopUpService */]).openSystemMessage(e.toString());
            // console.log('XmlParser.xmlStringToDocument(): error: ' + e);
            return undefined;
        }
    }
    XmlParser.xmlStringToDocument = xmlStringToDocument;
    /**
     * Convenience function that uses xmlStringToDocument to parse the given XML string into a Document object then
     * dereferences the Document in order to return its root node.
     *
     * @param   xmlString   An XML formatted string.
     *
     * @returns The root node of the new Document if successful, otherwise undefined.
     */
    function xmlStringToElement(xmlString) {
        var xmlDoc = xmlStringToDocument(xmlString);
        if (xmlDoc !== undefined) {
            return xmlDoc.documentElement;
        }
        return undefined;
    }
    XmlParser.xmlStringToElement = xmlStringToElement;
    /**
     * Converts a DOM Document or DOM Element object to a string.
     *
     * @param   xml The Document or Element to convert.
     */
    function xmlToString(xml) {
        return (new XMLSerializer()).serializeToString(xml);
    }
    XmlParser.xmlToString = xmlToString;
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// XML Hierarchy Searching
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Recursively Finds the first descendant of the given Element that has the specified tag name using a breadth-first
     * search.
     *
     * NOTE:
     *          This function is recursive.  It will search the entire element hierarchy under the given Element.
     *
     *          We made this function because the built in DOM parsing provides no method for getting just the first
     *          occurrence of a particularly named descendant element.  The traditional alternative which is to use
     *          getElementsByTagName to get all occurrences and then extract just the first one is horribly inefficient.
     *
     * @param   element The Element whose descendant we wish to find.
     * @param   tagName The tag name of the descendant we wish to find.
     *
     * @returns The first descendant Element with the specified tag name if found, otherwise undefined.
     */
    function findFirstDescendantByName(element, tagName) {
        // The Element whose children we are currently searching for the given tagName.
        var searchElement = element;
        // A queue of searchElement children we build as we go so we can search the hierarchy in the proper order.
        var searchQueue = [];
        do {
            var searchElementChildren = getChildElements(searchElement);
            for (var _i = 0, searchElementChildren_1 = searchElementChildren; _i < searchElementChildren_1.length; _i++) {
                var child = searchElementChildren_1[_i];
                if (child.tagName === tagName) {
                    return child;
                }
                else {
                    searchQueue.push(child);
                }
            }
            searchElement = searchQueue.shift();
        } while (searchElement !== undefined);
        return undefined;
    }
    XmlParser.findFirstDescendantByName = findFirstDescendantByName;
    /**
     * Convenience function that uses findFirstDescendantByName and getTextContent to find the text content of the
     * first descendant of the given Element that has the specified tag name.
     *
     * NOTE:
     *          This function assumes that the first child Node of the first descendant Element is a text Node and
     *          returns its nodeValue.  This isn't guaranteed to always be true, but it works with the use cases of our
     *          current data structure.
     *
     * @example
     *          element =   <X IsProperty="true">
     *                          <ElementID>2108163</ElementID>
     *                          <ParentElementID>2108146</ParentElementID>
     *                          <Value><![CDATA[250]]></Value>
     *                          <IsTemplate>false</IsTemplate>
     *                          <ElementSource>0</ElementSource>
     *                          <IsUpdated />
     *                      </X>
     *
     *              findDescendantTextContentByName(element, 'ParentElementID') // returns 2108146
     *
     *
     * @param   element The ancestor of the Element whose text content we wish to get.
     * @param   tagName The tag name of the Element whose text content we wish to get.
     *
     * @returns If it exists, the nodeValue of the first child Node of the first descendant of the given Element with
     *          the specified tag name, otherwise undefined.
     */
    function findDescendantTextContentByName(element, tagName) {
        var descendant = findFirstDescendantByName(element, tagName);
        var textContent;
        if (descendant) {
            textContent = getTextContent(descendant);
        }
        return textContent;
    }
    XmlParser.findDescendantTextContentByName = findDescendantTextContentByName;
    /**
     * Finds the next sibling of the given Element that has the specified tag name.
     *
     * @param   element     The Element whose sibling we wish to find.
     * @param   tagName     The tag name of the sibling Element we wish to find.
     *
     * @returns If it exists, the next sibling of the given Element with the specified name, otherwise undefined.
     */
    function findNextSiblingByName(element, tagName) {
        var searchElement = element.nextElementSibling;
        while (searchElement !== null && searchElement.tagName !== tagName) {
            searchElement = searchElement.nextElementSibling;
        }
        // When there is no next sibling, nextSibling returns null not undefined.  Following TypeScript conventions
        // we are using only undefined, so convert the result in case the caller specifically checks for undefined.
        if (searchElement === null) {
            searchElement = undefined;
        }
        return searchElement;
    }
    XmlParser.findNextSiblingByName = findNextSiblingByName;
    /**
     * Convenience function that uses findNextSiblingByName to find the next sibling of the given Element that has the
     * same tag name as the given Element.
     *
     * @param   element     The Element whose sibling we wish to find.
     *
     * @returns If it exists, the next sibling of the given Element with the same name, otherwise undefined.
     */
    function findNextSiblingWithSameName(element) {
        return findNextSiblingByName(element, element.tagName);
    }
    XmlParser.findNextSiblingWithSameName = findNextSiblingWithSameName;
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Element Data Retrieval
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Gets the value of the attribute with the given name, of the given Element.
     *
     * @param   element         The Element whose attribute we wish to get.
     * @param   attributeName   The name of the attribute we wish to get.
     *
     * @returns If it exists, the value of the attribute with the given name, of the given Element, otherwise undefined.
     */
    function getAttribute(element, attributeName) {
        var attribute = element.getAttribute(attributeName);
        if (attribute === null) {
            attribute = undefined;
        }
        return attribute;
    }
    XmlParser.getAttribute = getAttribute;
    /**
     * Gets the text content of the given Element.
     *
     * Text content is a plain text string of the text that appears between an Element's start and end tags.  This does
     * not include text that might be between the tags of any child elements it may have (as Node.innerText does).
     *
     * NOTE:
     *          This function assumes that the first child Node of the Element is a text Node and returns its nodeValue.
     *          This isn't guaranteed to always be true, but it works with the use cases of our current data structure.
     *
     * @param   element The Element whose text content we wish to get.
     *
     * @returns If it exists, the nodeValue of the first child Node of the given Element, otherwise an empty string.
     */
    function getTextContent(element) {
        // In case there is no text content, default to an empty string so the calling code can handle it gracefully.
        var textContent = '';
        // If this Element has at least one child Node and that Node has a nodeValue (depending on the actual Node type,
        // nodeValue could be null), then most likely that nodeValue is the text content we are looking for.
        // ...probably :)
        if (element.childNodes[0] && element.childNodes[0].nodeValue) {
            textContent = element.childNodes[0].nodeValue;
        }
        return textContent;
    }
    XmlParser.getTextContent = getTextContent;
    /**
     * Gets a list of the child Elements of the given Element.
     *
     * It does this by checking if the nodeType of each of the childNodes of the Element is of type "Element" and if so,
     * pushing it onto an Array.
     *
     * NOTE:    The entire reason why this function exists is because Microsoft, in their infinite wisdom, chose to
     *          ignore the standard and not implement the children getter for Elements when the document type is XML.
     *
     * @param   element The Element whose child Elements we wish to retrieve.
     *
     * @returns An Array containing any child Elements the given element has (if none, the Array is empty).
     */
    function getChildElements(element) {
        var childElements = [];
        /* tslint:disable:prefer-for-of */
        /* Temporarily disable this rule because the linter doesn't understand that element.childNodes isn't an array */
        for (var i = 0; i < element.childNodes.length; i++) {
            // If this Node is also an Element (nodeType is 1 which corresponds to the Node.ELEMENT_NODE constant), then
            // add it to the list of child Elements.
            // NOTE: We don't use the constant because it's not typed and it may not be defined in all browsers.
            if (element.childNodes[i].nodeType === 1) {
                childElements.push(element.childNodes[i]);
            }
        }
        /* tslint:enable:prefer-for-of */
        return childElements;
    }
    XmlParser.getChildElements = getChildElements;
})(XmlParser || (XmlParser = {}));
//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/xml-parser.js.map

/***/ }),

/***/ "./src/app/shared/system-shared/system-shared.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SystemSharedModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__("./node_modules/@angular/common/@angular/common.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};


var SystemSharedModule = /** @class */ (function () {
    /*
    *   Module constructor
    *
    *   NOTE: To protect against lazy loading, constructor injects SystemSharedModule into itself using the @SkipSelf
    *           decorator which tells it to look for SystemSharedModule in an injector above this one.  If it finds one,
    *           something is attempting to load this module lazily and it will trigger the error.  If there isn't one,
    *           null will be returned, which the @Optional decorator indicates is ok.
    * */
    function SystemSharedModule(singletonModule) {
        if (singletonModule) {
            throw new Error('SystemSharedModule is already loaded. Import it in the AppModule only');
        }
    }
    SystemSharedModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__["a" /* CommonModule */]],
        })
        /*
        *
        *   Shared module for DIF.  Contains code that is used by the Player as well as the future Designer modules.
        *   Should be imported once by the app using this common module when it starts and nowhere else.
        *
        * */
        ,
        __param(0, Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"])()), __param(0, Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["SkipSelf"])()),
        __metadata("design:paramtypes", [SystemSharedModule])
    ], SystemSharedModule);
    return SystemSharedModule;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/system-shared.module.js.map

/***/ }),

/***/ "./src/app/user-interface/user-interface.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserInterfaceModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common__ = __webpack_require__("./node_modules/@angular/common/@angular/common.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("./node_modules/@angular/http/@angular/http.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_material__ = __webpack_require__("./node_modules/@angular/material/@angular/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_dragula__ = __webpack_require__("./node_modules/ng2-dragula/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_dragula___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_dragula__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__view_app_bar_component__ = __webpack_require__("./src/app/user-interface/view/app-bar.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__view_sub_component_page_indicator_component__ = __webpack_require__("./src/app/user-interface/view/sub-component/page-indicator.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__view_sub_component_pathed_page_title_component__ = __webpack_require__("./src/app/user-interface/view/sub-component/pathed-page-title.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__view_comments_button_component__ = __webpack_require__("./src/app/user-interface/view/comments-button.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__view_control_bar_component__ = __webpack_require__("./src/app/user-interface/view/control-bar.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__view_pop_up_component__ = __webpack_require__("./src/app/user-interface/view/pop-up.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__view_sidenav_content_component__ = __webpack_require__("./src/app/user-interface/view/sidenav-content.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__view_sidenav_components_course_map_component__ = __webpack_require__("./src/app/user-interface/view/sidenav-components/course-map.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__view_sidenav_components_unit_display_component__ = __webpack_require__("./src/app/user-interface/view/sidenav-components/unit-display.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__view_sidenav_components_references_component__ = __webpack_require__("./src/app/user-interface/view/sidenav-components/references.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__view_sidenav_components_reference_display_component__ = __webpack_require__("./src/app/user-interface/view/sidenav-components/reference-display.component.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
















var UserInterfaceModule = /** @class */ (function () {
    /**
     * TODO: Add class description.
     */
    function UserInterfaceModule() {
    }
    UserInterfaceModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_3__angular_core__["NgModule"])({
            // TODO: If we add more modules we might want to make a shared module.
            imports: [
                __WEBPACK_IMPORTED_MODULE_0__angular_common__["a" /* CommonModule */],
                __WEBPACK_IMPORTED_MODULE_4_ng2_dragula__["DragulaModule"],
                __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* HttpModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_material__["a" /* MdButtonModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_material__["g" /* MdIconModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_material__["h" /* MdListModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_material__["l" /* MdTooltipModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_material__["k" /* MdSliderModule */],
            ],
            declarations: [
                __WEBPACK_IMPORTED_MODULE_5__view_app_bar_component__["a" /* AppBarComponent */],
                __WEBPACK_IMPORTED_MODULE_6__view_sub_component_page_indicator_component__["a" /* PageIndicatorComponent */],
                __WEBPACK_IMPORTED_MODULE_7__view_sub_component_pathed_page_title_component__["a" /* PathedPageTitleComponent */],
                __WEBPACK_IMPORTED_MODULE_8__view_comments_button_component__["a" /* CommentsButtonComponent */],
                __WEBPACK_IMPORTED_MODULE_9__view_control_bar_component__["a" /* ControlBarComponent */],
                __WEBPACK_IMPORTED_MODULE_10__view_pop_up_component__["a" /* PopUpComponent */],
                __WEBPACK_IMPORTED_MODULE_11__view_sidenav_content_component__["a" /* SideNavContentComponent */],
                __WEBPACK_IMPORTED_MODULE_12__view_sidenav_components_course_map_component__["a" /* CourseMapComponent */],
                __WEBPACK_IMPORTED_MODULE_13__view_sidenav_components_unit_display_component__["a" /* UnitDisplayComponent */],
                __WEBPACK_IMPORTED_MODULE_14__view_sidenav_components_references_component__["a" /* ReferencesComponent */],
                __WEBPACK_IMPORTED_MODULE_15__view_sidenav_components_reference_display_component__["a" /* ReferenceDisplayComponent */],
            ],
            exports: [__WEBPACK_IMPORTED_MODULE_5__view_app_bar_component__["a" /* AppBarComponent */], __WEBPACK_IMPORTED_MODULE_9__view_control_bar_component__["a" /* ControlBarComponent */], __WEBPACK_IMPORTED_MODULE_11__view_sidenav_content_component__["a" /* SideNavContentComponent */], __WEBPACK_IMPORTED_MODULE_10__view_pop_up_component__["a" /* PopUpComponent */], __WEBPACK_IMPORTED_MODULE_8__view_comments_button_component__["a" /* CommentsButtonComponent */]]
        })
        /**
         * TODO: Add class description.
         */
    ], UserInterfaceModule);
    return UserInterfaceModule;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/user-interface.module.js.map

/***/ }),

/***/ "./src/app/user-interface/view/app-bar.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"appBar\" [ngStyle]=\"{'height.px': appBarHeight}\">\r\n    <div style=\"float:left; width:80%;\">\r\n        <div class=\"menuButtonDiv\">\r\n            <button md-icon-button style=\"margin: 5px\" (click)=\"onMenuButtonClicked()\"><md-icon style=\"color: white\">menu</md-icon></button>\r\n        </div>\r\n        <div class=\"heading\">\r\n            <player-pathed-page-title></player-pathed-page-title>\r\n        </div>\r\n    </div>\r\n    <div style=\"float:left; width:19%; padding-right: 1%;\">\r\n        <div class=\"pageIndicator\">\r\n            <player-page-indicator></player-page-indicator>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/user-interface/view/app-bar.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppBarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
/**
 * Created by KRasmussen on 3/14/2017.
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var AppBarComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor for the Control Bar Component. Used to inject pageService and unitService
     *
     * @param pageService
     * @param unitService
     */
    function AppBarComponent(pageService, unitService) {
        this.pageService = pageService;
        this.unitService = unitService;
        this.menuButtonClicked = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Accessors
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handlers
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Menu Button Click handler. Emit an Event to let the app component know we have been clicked.
     */
    AppBarComponent.prototype.onMenuButtonClicked = function () {
        this.menuButtonClicked.emit();
    };
    var _a, _b, _c;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], AppBarComponent.prototype, "appBarHeight", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]) === "function" && _a || Object)
    ], AppBarComponent.prototype, "menuButtonClicked", void 0);
    AppBarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "player-app-bar",
            template: __webpack_require__("./src/app/user-interface/view/app-bar.component.html"),
            styles: [__webpack_require__("./src/app/user-interface/view/user-interface.module.css")]
        })
        /**
         * TODO: Comment Me!!
         */
        ,
        __metadata("design:paramtypes", [typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */]) === "function" && _b || Object, typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__["a" /* UnitService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__["a" /* UnitService */]) === "function" && _c || Object])
    ], AppBarComponent);
    return AppBarComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/app-bar.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/comments-button.component.html":
/***/ (function(module, exports) {

module.exports = "<div [dragula]='\"comment-bag\"'\r\n     style=\"position: absolute; top: 20px; left: 30px; width: 0px; height: 0px; padding: 0px;\"\r\n     [ngStyle]=\"{'padding-right.px': horizontalDropTargetPadding,\r\n                'padding-bottom.px': verticalDropTargetPadding}\">\r\n</div>\r\n<div [dragula]='\"comment-bag\"'\r\n     style=\"position: absolute; top: 20px; width: 0px; height: 0px; padding: 0px;\"\r\n     [ngStyle]=\"{'right.px': rightPosition,\r\n                'padding-bottom.px': verticalDropTargetPadding,\r\n                'padding-left.px': horizontalDropTargetPadding}\">\r\n</div>\r\n<div [dragula]='\"comment-bag\"'\r\n     style=\"position: absolute; width: 0px; height: 0px; padding: 0px;\"\r\n     [ngStyle]=\"{'right.px': rightPosition,\r\n                'bottom.px': bottomPosition,\r\n                'padding-left.px': horizontalDropTargetPadding,\r\n                'padding-top.px': verticalDropTargetPadding }\">\r\n    <div style=\"width: 56px; height: 56px;\">\r\n        <button md-fab color=\"accent\" (click)=\"openComment()\"><md-icon>{{commentIconState}}</md-icon></button>\r\n    </div>\r\n</div>\r\n<div [dragula]='\"comment-bag\"'\r\n     style=\"position: absolute; left: 30px; width: 0px; height: 0px; padding: 0px;\"\r\n     [ngStyle]=\"{'bottom.px': bottomPosition,\r\n                'padding-top.px': verticalDropTargetPadding,\r\n                'padding-right.px': horizontalDropTargetPadding}\">\r\n</div>"

/***/ }),

/***/ "./src/app/user-interface/view/comments-button.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CommentsButtonComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_dragula__ = __webpack_require__("./node_modules/ng2-dragula/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_dragula___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_dragula__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




// declare var DIFComment: any;
var CommentsButtonComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor inject pageService,unitService and NgZone; set angularComponentRef
     *
     * @param unitService
     * @param PageService
     * @param zone
     */
    function CommentsButtonComponent(unitService, pageService, zone, dragService) {
        var _this = this;
        this.unitService = unitService;
        this.pageService = pageService;
        this.zone = zone;
        /**
         * Property that lets us know if we are currently dragging. True if we are dragging.
         * @type {boolean}
         * @default false
         */
        this.isDragging = false;
        /**
         * Property that lats us know if we have a comment.
         * @type {boolean}
         */
        this.hasComment = false;
        /**
         * @Todo: comment me!!!
         */
        this.commentWindowHasComment = false;
        window['angularComponentRef'] = {
            component: this,
            zone: this.zone,
            componentFn: function (unitID, status) { return _this.callFromOutside(unitID, status); }
        };
        // console.log('111@@@@@@@##### constructor');
        // drag and drop event subscriptions
        dragService.drag.subscribe(function () { return _this.onDrag(); });
        dragService.dragend.subscribe(function () { return _this.onDragEnd(); });
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Outside Call
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * callFromOutside function set commentWindowUnit and commentWindowHasComment
     *
     * @param unitID
     * @param status
     */
    CommentsButtonComponent.prototype.callFromOutside = function (unitID, status) {
        // console.log('2@@@@@@@#####calledFromOutside ' + unitID + ' ' + status);
        this.commentWindowUnit = unitID;
        switch (status) {
            case 'true':
            case 'True':
                this.commentWindowHasComment = true;
                break;
            default:
                this.commentWindowHasComment = false;
                break;
        }
    };
    Object.defineProperty(CommentsButtonComponent.prototype, "commentIconState", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Determines which icon to show. The icon shows depends on weather or not current page has comment(s).
         *
         * To check weather or not current page has comment(s), need to check whether unitService is set first
         *  commentIconState is called multiple times when the player page loaded --this is bad
         *  unitService/pageservice is not ready when commentIconState is first called
         *  fortunately, unitService/pageservice is ready before the final commentIconState called
         *
         * if unit match with commentWindowUnit, commentWindowHasComment will overwrite hasComment
         *
         * @returns string
         */
        get: function () {
            if (this.pageService.page) {
                // if unit match with commentWindowUnit
                if (this.unitService.getCurrentPageUnit().unitID === this.commentWindowUnit) {
                    this.hasComment = this.commentWindowHasComment;
                }
                else {
                    this.hasComment = this.unitService.getCurrentPageUnit().hasComments;
                }
            }
            // console.log('333@@@@@@@#####this.commentIconState hasComment=' + this.hasComment);
            // console.log('333@@@@@@@#####this.commentIconState commentWindowUnit=' + this.commentWindowUnit);
            // console.log('333@@@@@@@#####this.commentIconState commentWindowHasComment=' + this.commentWindowHasComment);
            if (this.hasComment === true) {
                return 'chat';
            }
            return 'chat_bubble';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CommentsButtonComponent.prototype, "rightPosition", {
        // TODO: these numbers will have to change to account for top and bottom bar better when we make things resizable
        /**
         * Right position of the drop targets "bags" located on the right side of the screen
         * @returns {number}
         */
        get: function () {
            return (this.width - 86) * -1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CommentsButtonComponent.prototype, "bottomPosition", {
        /**
         * Bottom position of the drop targets "bags" located on the bottom of the screen
         * @returns {number}
         */
        get: function () {
            return (this.height - 156) * -1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CommentsButtonComponent.prototype, "verticalDropTargetPadding", {
        /**
         * Determines the vertical padding of the drop target. This value changes during a drag to allow from a larger
         * drop target or "bag" as Dragula calls it.
         * @returns {number}
         */
        get: function () {
            return (this.isDragging) ? this.height * .33 : 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CommentsButtonComponent.prototype, "horizontalDropTargetPadding", {
        /**
         * Determines the horizontal padding of the drop target. This value changes during a drag to allow from a larger
         * drop target or "bag" as Dragula calls it.
         * @returns {number}
         */
        get: function () {
            return (this.isDragging) ? this.width * .41 : 0;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handlers
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * openComment Handles the click event
     *
     */
    CommentsButtonComponent.prototype.openComment = function () {
        var commentwindow = window.open('../Comments/Comment.aspx?unitID=' +
            this.unitService.getCurrentPageUnit().unitID, 'htmlCommentWindow', 'location=yes,height=534,width=900,scrollbars=no,status=yes');
    };
    // drag event handlers
    /**
     * Event handler for the event that happens at the start of a drag. Used to tell if we are currently dragging.
     */
    CommentsButtonComponent.prototype.onDrag = function () {
        this.isDragging = true;
    };
    /**
     * Event handler for the event that happens at the end of a drag. Used to tell if we are currently dragging.
     */
    CommentsButtonComponent.prototype.onDragEnd = function () {
        this.isDragging = false;
    };
    var _a, _b, _c, _d;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], CommentsButtonComponent.prototype, "width", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], CommentsButtonComponent.prototype, "height", void 0);
    CommentsButtonComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-comments-button',
            template: __webpack_require__("./src/app/user-interface/view/comments-button.component.html"),
            styles: [__webpack_require__("./src/app/user-interface/view/user-interface.module.css")]
        })
        /**
         * CommentsButtonComponent
         */
        ,
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_unit_service__["a" /* UnitService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_unit_service__["a" /* UnitService */]) === "function" && _a || Object, typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_page_service__["a" /* PageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_page_service__["a" /* PageService */]) === "function" && _b || Object, typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]) === "function" && _c || Object, typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_3_ng2_dragula__["DragulaService"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_3_ng2_dragula__["DragulaService"]) === "function" && _d || Object])
    ], CommentsButtonComponent);
    return CommentsButtonComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/comments-button.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/control-bar.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"controlBar\" [ngStyle]=\"{'height.px': controlBarHeight}\" style=\"overflow: hidden; width: 100%\">\r\n    <div style=\"float:left; width:49%; height:29px; padding-left: 1%;\">\r\n        <!-- commented out not deleted because we tend to change our minds! :)\r\n        <player-play-pause-button *ngIf=\"isPlayPauseButtonVisible\" [isDisabled]=\"isPlayPauseButtonDisabled\" [isVisible]=\"isPlayPauseButtonVisible\"></player-play-pause-button>\r\n\r\n        <button md-icon-button *ngIf=\"isPreviousButtonVisible\" [disabled]=\"isPreviousButtonDisabled\" (click)=\"onPreviousPageClick()\" style=\"float: left;position: relative;top: -5px;\"><md-icon>arrow_back</md-icon></button>\r\n        <button md-icon-button *ngIf=\"isNextButtonVisible\" [disabled]=\"isNextButtonDisabled\" (click)=\"onNextPageClick()\" style=\"float: left;position: relative;top: -5px;\"><md-icon>arrow_forward</md-icon></button>\r\n        <button md-icon-button *ngIf=\"isReloadButtonVisible\" [disabled]=\"isReloadButtonDisabled\" (click)=\"onPageReloadClicked()\" style=\"float: left;position: relative;top: -5px;\"><md-icon>refresh</md-icon></button>\r\n        -->\r\n        <!--\r\n        <button md-icon-button *ngIf=\"isPrintButtonVisible\" [disabled]=\"isPrintButtonDisabled\" style=\"float: left;position: relative;top: -5px;\"><md-icon>print</md-icon></button>\r\n        <player-volume-control *ngIf=\"isVolumeControlVisible\" [isDisabled]=\"isVolumeControlDisabled\"></player-volume-control>\r\n        -->\r\n    </div>\r\n    <div style=\"float:left; width:49%; padding-right: 1%;\">\r\n        <button md-icon-button *ngIf=\"isNextButtonVisible\" [disabled]=\"isNextButtonDisabled\" (click)=\"onNextPageClick()\" style=\"float: right;position: relative;top: -5px;\"><md-icon>arrow_forward</md-icon></button>\r\n        <button md-icon-button *ngIf=\"isPreviousButtonVisible\" [disabled]=\"isPreviousButtonDisabled\" (click)=\"onPreviousPageClick()\" style=\"float: right;position: relative;top: -5px;\"><md-icon>arrow_back</md-icon></button>\r\n        <button md-icon-button *ngIf=\"isReloadButtonVisible\" [disabled]=\"isReloadButtonDisabled\" (click)=\"onPageReloadClicked()\" style=\"float: right;position: relative;top: -5px;\"><md-icon>refresh</md-icon></button>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/user-interface/view/control-bar.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ControlBarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ControlBarComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor for the Control Bar Component. Used to inject pageService and unitService
     *
     * @param pageService
     * @param unitService
     */
    function ControlBarComponent(pageService, unitService) {
        this.pageService = pageService;
        this.unitService = unitService;
        this.idOfLastPageNavigatedFrom = '';
    }
    Object.defineProperty(ControlBarComponent.prototype, "isPlayPauseButtonDisabled", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Determines if the Play / Pause Button is Disabled
         *
         * @returns {boolean} true if the Play / Pause button should be disabled or if the page is not set yet.
         */
        get: function () {
            return this.pageHasPageProperties() ? !this.pageService.page.pageProperties.isPlayPauseEnabled : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isPlayPauseButtonVisible", {
        /**
         * Determines if the Play / Pause Button is Visible. If its not visible we will not add it to the DOM.
         *
         * @returns {boolean} true if the Play / Pause button should be added to the DOM.
         */
        get: function () {
            return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isPlayPauseVisible : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isReloadButtonDisabled", {
        /**
         * Determines if the Reload Button is Disabled
         *
         * @returns {boolean} true if the Reload button should be disabled or if the page is not set yet.
         */
        get: function () {
            return this.pageHasPageProperties() ? !this.pageService.page.pageProperties.isReloadEnabled && !this.pageService.isPageLoaded : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isReloadButtonVisible", {
        /**
         * Determines if the Reload Button is Visible. If its not visible we will not add it to the DOM.
         *
         * @returns {boolean} true if the Reload button should be added to the DOM.
         */
        get: function () {
            return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isReloadVisible : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isPrintButtonDisabled", {
        /**
         * Determines if the Print Button is Disabled
         *
         * @returns {boolean} true if the Print button should be disabled or if the page is not set yet.
         */
        get: function () {
            return this.pageHasPageProperties() ? !this.pageService.page.pageProperties.isPrintEnabled : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isPrintButtonVisible", {
        /**
         * Determines if the Print Button is Visible. If its not visible we will not add it to the DOM.
         *
         * @returns {boolean} true if the Print button should be added to the DOM.
         */
        get: function () {
            return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isPrintVisible : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isVolumeControlDisabled", {
        /**
         * Determines if the Volume Control is Disabled
         *
         * @returns {boolean} true if the Volume Control should be disabled or if the page is not set yet.
         */
        get: function () {
            return this.pageHasPageProperties() ? !this.pageService.page.pageProperties.isVolumeControlEnabled : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isVolumeControlVisible", {
        /**
         * Determines if the Volume Control is Visible. If its not visible we will not add it to the DOM.
         *
         * @returns {boolean} true if the Volume Control should be added to the DOM.
         */
        get: function () {
            return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isVolumeControlVisible : false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isPreviousButtonDisabled", {
        /**
         * Determines if the Previous Button is Disabled.
         *
         * If page and unit exist. If the Previous Button is Enabled and this is not the first page
         *
         * @returns {boolean} true if the Previous button should be disabled or if the page or is not set yet.
         */
        get: function () {
            if (this.pageService.page && this.unitService.isFirstPageUnit()) {
                return true;
            }
            if (!this.pageService.isPageLoaded) {
                return true;
            }
            console.log("isPageLoaded : " + this.pageService.isPageLoaded);
            if (this.pageHasPageProperties()) {
                return !this.pageService.page.pageProperties.isPreviousButtonEnabled;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isPreviousButtonVisible", {
        /**
         * Determines if the Previous Button is Visible. If its not visible we will not add it to the DOM.
         *
         * @returns {boolean} true if the Previous button should be added to the DOM.
         */
        get: function () {
            return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isPreviousButtonVisible : true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isNextButtonDisabled", {
        /**
         * Determines if the Next Button is Disabled
         *
         * @returns {boolean} true if the Next button should be disabled or if the page is not set yet.
         */
        get: function () {
            if (this.pageService.page && this.unitService.isLastPageUnit() || !this.pageService.isPageLoaded) {
                return true;
            }
            console.log("isPageLoaded : " + this.pageService.isPageLoaded);
            if (this.pageHasPageProperties()) {
                return !this.pageService.page.pageProperties.isNextButtonEnabled;
            }
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlBarComponent.prototype, "isNextButtonVisible", {
        /**
         * Determines if the Next Button is Visible. If its not visible we will not add it to the DOM.
         *
         * @returns {boolean} true if the Next button should be added to the DOM. Defaults to true if pageProperties doesn't exist.
         */
        get: function () {
            return this.pageHasPageProperties() ? this.pageService.page.pageProperties.isNextButtonVisible : true;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Validation
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *
     * @returns {boolean}
     */
    ControlBarComponent.prototype.pageHasPageProperties = function () {
        return !!(this.pageService.page && this.pageService.page.pageProperties);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handlers
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *
     */
    ControlBarComponent.prototype.onPageReloadClicked = function () {
        this.pageService.loadPage(this.pageService.page.pageID);
    };
    /**
     * on Previous Page click handler
     *
     */
    ControlBarComponent.prototype.onPreviousPageClick = function () {
        //if (this.pageService.page && this.pageService.page.pageID !== this.idOfLastPageNavigatedFrom) {
        //console.log("^^^ page navigation information:" + this.idOfLastPageNavigatedFrom + " " + this.pageService.page.pageID);
        //  this.idOfLastPageNavigatedFrom = this.pageService.page.pageID;
        this.pageService.loadPreviousPage();
        //}
    };
    /**
     * on Next Page click handler
     *
     */
    ControlBarComponent.prototype.onNextPageClick = function () {
        //if (this.pageService.page && this.pageService.page.pageID !== this.idOfLastPageNavigatedFrom) {
        //console.log("^^^ page navigation information:" + this.idOfLastPageNavigatedFrom + " " + this.pageService.page.pageID);
        //this.idOfLastPageNavigatedFrom = this.pageService.page.pageID;
        this.pageService.loadNextPage();
        //}
    };
    var _a, _b;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Number)
    ], ControlBarComponent.prototype, "controlBarHeight", void 0);
    ControlBarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "player-control-bar",
            template: __webpack_require__("./src/app/user-interface/view/control-bar.component.html"),
            styles: [__webpack_require__("./src/app/app.component.css")] // TODO: Change this!!!
        })
        /**
         * The Component representing the bottom bar of our player. Currently it contains the buttons for reload, play/pause,
         * volume control, next and previous.
         */
        ,
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */]) === "function" && _a || Object, typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__["a" /* UnitService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__["a" /* UnitService */]) === "function" && _b || Object])
    ], ControlBarComponent);
    return ControlBarComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/control-bar.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/pop-up.component.html":
/***/ (function(module, exports) {

module.exports = "<div style=\"width: 445px; height: 276px\">\r\n    <div class=\"popUpHeader\" style=\"width: 421px; height: 30px; padding: 12px;\" [ngStyle]=\"{ 'background-color': popUpDataObject.titleBarColor}\">\r\n        <md-icon style=\"float: left; padding-top: 4px; padding-right: 14px;\" [ngStyle]=\"{ 'color': popUpDataObject.titleTextColor}\">{{popUpDataObject.titleIcon}}</md-icon>\r\n        <span class=\"popUpHeaderText\" style=\"font-weight: bold; padding: 6px; display: block; width: 371px; float: left; text-overflow: ellipsis;\" [ngStyle]=\"{ 'color': popUpDataObject.titleTextColor}\">{{popUpDataObject.titleText}}</span>\r\n    </div>\r\n    <div class=\"popUpText\" style=\"padding:12px 25px 12px 25px; width: 395px; height: 140px; overflow-y: auto\">\r\n        <p [innerHtml]=\"popUpDataObject.message\"></p>\r\n    </div>\r\n    <div [ngStyle]=\"{ 'width.px': buttonWidth }\" style=\"margin:auto\">\r\n        <button md-raised-button style=\" margin: 10px; width: 88px; font-family: 'Open Sans', sans-serif;\" (click)=\"onOkClicked()\">Ok</button>\r\n        <button md-raised-button *ngIf=\"hasCancel\" style=\" margin: 10px; width: 88px; font-family: 'Open Sans', sans-serif;\" (click)=\"onCancelClicked()\">Cancel</button>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/user-interface/view/pop-up.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PopUpComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_material__ = __webpack_require__("./node_modules/@angular/material/@angular/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var PopUpComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *
     * @param popUpService
     */
    function PopUpComponent(popUpService, dialogRef) {
        this.popUpService = popUpService;
        this.dialogRef = dialogRef;
        this.hasCancel = false;
        this.popUpDataObject = this.popUpService.popUpDataObject;
        if (this.popUpDataObject.buttonConfiguration === 'ok') {
            this.hasCancel = false;
            this.buttonWidth = 108;
        }
        else if (this.popUpDataObject.buttonConfiguration === 'okCancel') {
            this.hasCancel = true;
            this.buttonWidth = 221;
        }
    }
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handlers
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *
     */
    PopUpComponent.prototype.onOkClicked = function () {
        if (this.popUpDataObject.callBackFunction) {
            this.popUpDataObject.callBackFunction();
        }
        this.dialogRef.close();
    };
    PopUpComponent.prototype.onCancelClicked = function () {
        // close this popup
        this.dialogRef.close();
    };
    var _a, _b;
    PopUpComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-pop-up',
            template: __webpack_require__("./src/app/user-interface/view/pop-up.component.html"),
            styles: [__webpack_require__("./src/app/user-interface/view/user-interface.module.css")],
        })
        /**
         * Comment This class
         */
        ,
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__model_services_pop_up_service__["a" /* PopUpService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__model_services_pop_up_service__["a" /* PopUpService */]) === "function" && _a || Object, typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__angular_material__["f" /* MdDialogRef */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__angular_material__["f" /* MdDialogRef */]) === "function" && _b || Object])
    ], PopUpComponent);
    return PopUpComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/pop-up.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/sidenav-components/course-map.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"sidenavSeperartor\" style=\"height: 48px; background-color: white;\">\r\n    <md-icon md-list-icon class=\"subMenuIcon\">explore</md-icon><span class=\"openSans subMenuTitleText\">Course Map</span>\r\n</div>\r\n<div style=\"height: 500px; overflow-y: auto; clear: both;\">\r\n    <div *ngFor=\"let unit of units\">\r\n        <player-unit-display [unit]=\"unit\" [isProgressLocked]=\"isProgressLocked\" (unitClicked)=\"unitClickedHandler();\"></player-unit-display>\r\n    </div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/user-interface/view/sidenav-components/course-map.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CourseMapComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_services_startup_configuration_service__ = __webpack_require__("./src/app/model/services/startup-configuration-service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var CourseMapComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *  Constructor for CourseMapComponent.
     *
     * @param unitService
     * @param startUpConfig
     */
    function CourseMapComponent(unitService, startUpConfig) {
        this.unitService = unitService;
        this.startUpConfig = startUpConfig;
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Variables / Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         *  Emits when any unit in the list has ben clicked.
         *
         * @type {EventEmitter<any>}
         */
        this.unitClicked = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    Object.defineProperty(CourseMapComponent.prototype, "units", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * List of units to display in this component.
         * @returns {Array<UnitDataObject>}
         */
        get: function () {
            return this.unitService.getCourseMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CourseMapComponent.prototype, "isProgressLocked", {
        /**
         * Sets if progress is locked on the Units to determine if they should be disabled.
         * @returns {boolean}
         */
        get: function () {
            return this.startUpConfig.config.lockProgress;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handler
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Event handler to catch when one of the Unit-Displays are clicked
     */
    CourseMapComponent.prototype.unitClickedHandler = function () {
        this.unitClicked.emit(null);
    };
    var _a, _b, _c;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]) === "function" && _a || Object)
    ], CourseMapComponent.prototype, "unitClicked", void 0);
    CourseMapComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-course-map',
            template: __webpack_require__("./src/app/user-interface/view/sidenav-components/course-map.component.html"),
            styles: [__webpack_require__("./src/app/user-interface/view/user-interface.module.css")]
        })
        /**
         *The CourseMap Component contains a list of unit-displays.
         */
        ,
        __metadata("design:paramtypes", [typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_unit_service__["a" /* UnitService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_unit_service__["a" /* UnitService */]) === "function" && _b || Object, typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2__model_services_startup_configuration_service__["a" /* StartupConfigurationService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__model_services_startup_configuration_service__["a" /* StartupConfigurationService */]) === "function" && _c || Object])
    ], CourseMapComponent);
    return CourseMapComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/course-map.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/sidenav-components/reference-display.component.html":
/***/ (function(module, exports) {

module.exports = "<button md-button style=\"width: 100%; padding-left:0px;\" (click)=\"onClick()\">\r\n    <md-icon style=\"float:left; padding: 10px; padding-top: 14px\">{{typeIcon}}</md-icon>\r\n    <div style=\"text-align: left;\">\r\n        <span class=\"truncated\" style=\"display: block; font-size: 14px; font-weight: normal; height: 25px;\">{{name}}</span>\r\n        <span class=\"truncated\" style=\"display: block; font-size: 12px; color: #838383; font-weight: normal; line-height: initial\">{{detail}}</span>\r\n    </div>\r\n</button>"

/***/ }),

/***/ "./src/app/user-interface/view/sidenav-components/reference-display.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReferenceDisplayComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_reference_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/reference.data-object.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ReferenceDisplayComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor for the ReferenceDisplayComponent
     */
    function ReferenceDisplayComponent() {
        /**
         *  Name of the reference
         */
        this.name = '';
        /**
         *  The string that corresponds with the material icon the we use for this reference
         */
        this.typeIcon = '';
        /**
         * The url of this reference
         */
        this.url = '';
        /**
         * The detail information that will show in this component
         *
         * @type {string}
         */
        this.detail = '';
    }
    /**
     *  OnInit component Lifecycle hook for setting up this component when the reference is available
     */
    ReferenceDisplayComponent.prototype.ngOnInit = function () {
        // set the icon we will use for this reference based on type.
        if (this.reference.referenceType === 'FILE') {
            this.typeIcon = 'description';
            this.detail = this.reference.originalFileName;
        }
        else {
            this.typeIcon = 'public';
            this.detail = this.reference.referenceURL;
        }
        this.name = this.reference.referenceName;
        this.url = this.reference.referenceURL;
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handlers
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Handler fore when this component is clicked. Opens the URL
     */
    ReferenceDisplayComponent.prototype.onClick = function () {
        window.open(this.url);
    };
    var _a;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_reference_data_object__["a" /* ReferenceDataObject */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_data_objects_reference_data_object__["a" /* ReferenceDataObject */]) === "function" && _a || Object)
    ], ReferenceDisplayComponent.prototype, "reference", void 0);
    ReferenceDisplayComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-reference-display',
            template: __webpack_require__("./src/app/user-interface/view/sidenav-components/reference-display.component.html"),
            styles: [__webpack_require__("./src/app/user-interface/view/user-interface.module.css")]
        })
        /**
         * ReferenceDisplayComponent Displays one reference that is clickable. When clicked the reference opens in a new window.
         */
        ,
        __metadata("design:paramtypes", [])
    ], ReferenceDisplayComponent);
    return ReferenceDisplayComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/reference-display.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/sidenav-components/references.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"sidenavSeperartor\" style=\"height: 48px; background-color: white;\">\r\n    <md-icon md-list-icon class=\"subMenuIcon\">attachment</md-icon><span class=\"openSans subMenuTitleText\">References</span>\r\n</div>\r\n<div style=\"height: 500px; overflow-y: auto; clear: both; background-color: white;\">\r\n    <div *ngFor=\"let reference of referenceArray\">\r\n        <player-reference-display [reference]=\"reference\"></player-reference-display>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "./src/app/user-interface/view/sidenav-components/references.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReferencesComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_reference_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/reference.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ReferencesComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * The constructor for the ReferencesComponent
     *
     * @param referenceService
     */
    function ReferencesComponent(referenceService) {
        this.referenceService = referenceService;
    }
    Object.defineProperty(ReferencesComponent.prototype, "referenceArray", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * An array list of the references for this course.
         *
         * @returns {Array<ReferenceDataObject>}
         */
        get: function () {
            return this.referenceService.references;
        },
        enumerable: true,
        configurable: true
    });
    var _a;
    ReferencesComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-references',
            template: __webpack_require__("./src/app/user-interface/view/sidenav-components/references.component.html"),
            styles: [__webpack_require__("./src/app/user-interface/view/user-interface.module.css")]
        })
        /**
         * The ReferenceComponent contains a list of References
         */
        ,
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_reference_service__["a" /* ReferenceService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_reference_service__["a" /* ReferenceService */]) === "function" && _a || Object])
    ], ReferencesComponent);
    return ReferencesComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/references.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/sidenav-components/unit-display.component.html":
/***/ (function(module, exports) {

module.exports = "<button md-button style=\"width: 100%; height: 46px; text-align: left; font-family: 'Open Sans', sans-serif;\" [ngStyle]=\"{'padding-left.px': indentAmount}\" [disabled]=\"isDisabled\" (click)=\"onClick()\"><span class=\"truncated\">{{unit.unitName}}</span></button>"

/***/ }),

/***/ "./src/app/user-interface/view/sidenav-components/unit-display.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UnitDisplayComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_unit_data_object__ = __webpack_require__("./src/app/shared/system-shared/model/data-objects/unit.data-object.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UnitDisplayComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *  The Constructor for the UnitDisplayComponent
     *
     * @param unitService
     * @param pageService
     */
    function UnitDisplayComponent(unitService, pageService) {
        this.unitService = unitService;
        this.pageService = pageService;
        /**
         * Emits onclick of this component
         */
        this.unitClicked = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    Object.defineProperty(UnitDisplayComponent.prototype, "unitName", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         *  Name of the Unit this Component represents
         * @returns {string}
         */
        get: function () {
            return this.unit.unitName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDisplayComponent.prototype, "isDisabled", {
        /**
         * Determines if this component is Disabled.
         *
         * @returns {boolean}
         */
        get: function () {
            if (!this.pageIDToNavigateTo) {
                return true;
            }
            if (!this.isProgressLocked) {
                return false;
            }
            return (this.unitService.isPageAfterHighestPageProgress(this.pageIDToNavigateTo));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UnitDisplayComponent.prototype, "indentAmount", {
        /**
         *  Determines how much to indent this unit.
         *
         * @returns {number}
         */
        get: function () {
            return (+this.unit.unitLevel * 15) - 10;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handlers
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *  Event Handler for when this component is clicked. Emits this components unitClicked Event.
     */
    UnitDisplayComponent.prototype.onClick = function () {
        this.pageService.loadPage(this.pageIDToNavigateTo);
        this.unitClicked.emit(null);
    };
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Angular Component Lifecycle Hooks
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *  OnInt setup pageIDToNavigateTo
     */
    UnitDisplayComponent.prototype.ngOnInit = function () {
        if (this.unit) {
            var pageUnit = this.unitService.getFirstPageInUnit(this.unit);
            // find out if first page in unit exists before we set pageIDToNavigateTo
            if (pageUnit) {
                this.pageIDToNavigateTo = pageUnit.pageID;
            }
        }
    };
    var _a, _b, _c, _d;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_unit_data_object__["a" /* UnitDataObject */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_data_objects_unit_data_object__["a" /* UnitDataObject */]) === "function" && _a || Object)
    ], UnitDisplayComponent.prototype, "unit", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Boolean)
    ], UnitDisplayComponent.prototype, "isProgressLocked", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]) === "function" && _b || Object)
    ], UnitDisplayComponent.prototype, "unitClicked", void 0);
    UnitDisplayComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-unit-display',
            template: __webpack_require__("./src/app/user-interface/view/sidenav-components/unit-display.component.html"),
            styles: [__webpack_require__("./src/app/user-interface/view/user-interface.module.css")]
        })
        /**
         * The UnitDisplayComponent displays a navigable Unit. It's disables according to course progression. And indents
         * According to hierarchy level.
         */
        ,
        __metadata("design:paramtypes", [typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_unit_service__["a" /* UnitService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_unit_service__["a" /* UnitService */]) === "function" && _c || Object, typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */]) === "function" && _d || Object])
    ], UnitDisplayComponent);
    return UnitDisplayComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/unit-display.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/sidenav-content.component.html":
/***/ (function(module, exports) {

module.exports = "<div style=\"width:237px;\">\r\n    <div class=\"topDivider sidenavSeperartor\" style=\"width:100%; height:29px;\"></div>\r\n    <div style=\"overflow: hidden; width:237px;\">\r\n        <div *ngIf=\"menuState === 'mainMenu'\" [@mainMenuTrigger]=\"menuState\" style=\"position: absolute; width:237px\">\r\n            <div class=\"tinyInvisibleSeparator\" style=\"height: 3px;\"></div>\r\n            <button md-button class=\"mainMenuButton\" (click)=\"onCourseMapClicked()\" [disabled]=\"isCourseMapDisabled\">\r\n                <md-icon style=\"padding: 14px 30px 14px 0px; float:left;\">explore</md-icon>\r\n                <span class=\"backButtonText\">Course Map</span>\r\n            </button>\r\n            <button md-button class=\"mainMenuButton\" (click)=\"onReferencesClicked()\" [disabled]=\"isReferencesDisabled\">\r\n                <md-icon style=\"padding: 14px 30px 14px 0px; float:left;\">attachment</md-icon>\r\n                <span class=\"backButtonText\">References</span>\r\n            </button>\r\n            <button md-button class=\"mainMenuButton\" (click)=\"onHelpClicked()\">\r\n                <md-icon style=\"padding: 14px 30px 14px 0px; float:left;\">help</md-icon>\r\n                <span class=\"backButtonText\">Help</span>\r\n            </button>\r\n            <button *ngIf=\"isPrintVisible\" md-button class=\"mainMenuButton\" (click)=\"onPrintClicked()\" [disabled]=\"isPrintDisabled\">\r\n                <md-icon style=\"padding: 14px 30px 14px 0px; float:left;\">print</md-icon>\r\n                <span class=\"backButtonText\">Print</span>\r\n            </button>\r\n            <div class=\"exitDivider\" style=\"width:100%; height:8px; border-top: 1px solid lightgray\"></div>\r\n            <button md-button class=\"mainMenuButton\" (click)=\"onExitCourseClicked()\">\r\n                <md-icon style=\"padding: 14px 30px 14px 0px; float:left;\">cancel</md-icon>\r\n                <span class=\"backButtonText\">Exit Course</span>\r\n            </button>\r\n        </div>\r\n        <div *ngIf=\"menuState === 'courseMap'\" [@subMenuTrigger]=\"menuState\" style=\"position: absolute; width:237px\">\r\n            <player-course-map (unitClicked)=\"onUnitClicked()\"></player-course-map>\r\n        </div>\r\n        <div *ngIf=\"menuState === 'references'\" [@subMenuTrigger]=\"menuState\" style=\"position: absolute; width:237px\">\r\n            <player-references></player-references>\r\n        </div>\r\n    </div>\r\n    <a md-button *ngIf=\"menuState !== 'mainMenu'\" (click)=\"onBackButtonClicked()\" style=\"position: absolute; bottom: 10px; width: 237px; border-top: 1px solid lightgray\" [@subMenuTrigger]=\"menuState\">\r\n        <md-icon style=\"padding: 14px 30px 14px 0px; float:left;\">arrow_back</md-icon>\r\n        <span class=\"backButtonText\">Back</span>\r\n    </a>\r\n</div>"

/***/ }),

/***/ "./src/app/user-interface/view/sidenav-content.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SideNavContentComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_animations__ = __webpack_require__("./node_modules/@angular/animations/@angular/animations.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ng2_simple_timer__ = __webpack_require__("./node_modules/ng2-simple-timer/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ng2_simple_timer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_ng2_simple_timer__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_injector_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/injector.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_services_reference_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/reference.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_system_shared_model_services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__model_services_pop_up_service__ = __webpack_require__("./src/app/model/services/pop-up.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__model_data_objects_pop_up_data_object__ = __webpack_require__("./src/app/model/data-objects/pop-up.data-object.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var SideNavContentComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     *  Constructor for the SideNavContentComponent
     * @param referenceService
     * @param unitService
     * @param pageService
     * @param popUpService
     */
    function SideNavContentComponent(referenceService, unitService, pageService, popUpService) {
        this.referenceService = referenceService;
        this.unitService = unitService;
        this.pageService = pageService;
        this.popUpService = popUpService;
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Instance Variables / Properties
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * Event Dispatched to tell the main App component the we are closing the sideNav.
         *
         * @type {EventEmitter<any>}
         */
        this.closeSideNav = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /**
         * The current state of the menu
         * @type {string}
         * @default mainMenu;
         */
        this.menuState = 'mainMenu';
        /**
         *  Reference to SimpleTimer to delay the printing.
         */
        this.timer = __WEBPACK_IMPORTED_MODULE_3__shared_system_shared_model_services_injector_service__["a" /* InjectorService */].injector.get(__WEBPACK_IMPORTED_MODULE_2_ng2_simple_timer__["SimpleTimer"]);
        /**
         * Flag need because the timer method is called immediately the first time through.
         * @type {boolean}
         */
        this.timerStarted = false;
        /**
         * Location of HTML Player help file
         * @type {string} - URL
         */
        this.helpFileUrl = '../ReferenceDocuments/HtmlPlayerGuide.pdf';
    }
    Object.defineProperty(SideNavContentComponent.prototype, "isCourseMapDisabled", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         *  Determines if the course map menu item should be disabled.
         *  Disabled is true if there are no units to display or no unit is loaded
         * @returns {boolean}
         * @default true
         */
        get: function () {
            if (this.unitService.unit) {
                return (this.unitService.getCourseMap().length === 0);
            }
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SideNavContentComponent.prototype, "isReferencesDisabled", {
        /**
         *  Determines if the references menu item should be disabled.
         *  Disabled is true if this course has no references.
         *
         * @returns {boolean}
         * @default true
         */
        get: function () {
            if (this.referenceService.references) {
                return (this.referenceService.references.length === 0);
            }
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SideNavContentComponent.prototype, "isPrintDisabled", {
        /**
         * Determines if the print menu item should be disabled.
         *
         * @returns {boolean}
         * @default true this button is disabled by default.
         */
        get: function () {
            if (this.pageService.page && this.pageService.page.pageProperties) {
                return !this.pageService.page.pageProperties.isPrintEnabled;
            }
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SideNavContentComponent.prototype, "isPrintVisible", {
        /**
         * Determines if the print menu item should be added to the menu.
         *
         * @returns {boolean}
         * @default true. it is added to the menu by default (Side Note: I think this is dumb!)
         */
        get: function () {
            if (this.pageService.page && this.pageService.page.pageProperties) {
                return this.pageService.page.pageProperties.isPrintVisible;
            }
            return true;
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Event Handlers
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Sets menuState to courseMap when Course Map menu option is clicked.
     */
    SideNavContentComponent.prototype.onCourseMapClicked = function () {
        this.menuState = 'courseMap';
    };
    /**
     * Sets menuState to references when References menu option is clicked.
     */
    SideNavContentComponent.prototype.onReferencesClicked = function () {
        this.menuState = 'references';
    };
    /**
     * Opens Help PDF and closes SideNav when the Help menu option is Clicked
     */
    SideNavContentComponent.prototype.onHelpClicked = function () {
        var myWindow = window.open(this.helpFileUrl, '_blank');
        myWindow.focus();
        this.closeSideNav.emit(null);
    };
    /**
     * Closes the sidenav and calls print. Print must be delayed or the side nav will block the print view.
     */
    SideNavContentComponent.prototype.onPrintClicked = function () {
        var _this = this;
        this.closeSideNav.emit(null);
        // we have to wait for the SideNav to hide
        this.timer.newTimer('printTimer', .2);
        this.timer.subscribe('printTimer', function (e) {
            if (!_this.timerStarted) {
                _this.timerStarted = true;
            }
            else {
                _this.timer.unsubscribe('printTimer');
                _this.timer.delTimer('printTimer');
                _this.timerStarted = false;
                window.print();
            }
        });
    };
    /**
     * Opens up a Pop-up to ask if they are sure they want to exit the course when the Exit Course button is clicked.
     */
    SideNavContentComponent.prototype.onExitCourseClicked = function () {
        var popUpData = new __WEBPACK_IMPORTED_MODULE_8__model_data_objects_pop_up_data_object__["a" /* PopUpDataObject */]('Are you sure you would like to exit the course?');
        popUpData.titleText = 'Exit Course';
        popUpData.callBackFunction = function () { return window.close(); };
        popUpData.buttonConfiguration = 'okCancel';
        this.popUpService.openPopUp(popUpData);
    };
    /**
     * Sets menuState to mainMenu when back is clicked
     */
    SideNavContentComponent.prototype.onBackButtonClicked = function () {
        this.menuState = 'mainMenu';
    };
    /**
     * When the CourseMap tells us that one of its units are clicked we tell the app component to close the SideNav.
     */
    SideNavContentComponent.prototype.onUnitClicked = function () {
        this.closeSideNav.emit(null);
    };
    var _a, _b, _c, _d, _e;
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"] !== "undefined" && __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]) === "function" && _a || Object)
    ], SideNavContentComponent.prototype, "closeSideNav", void 0);
    SideNavContentComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'player-sidenav-content',
            template: __webpack_require__("./src/app/user-interface/view/sidenav-content.component.html"),
            styles: [__webpack_require__("./src/app/user-interface/view/user-interface.module.css")],
            /**
             * The Main Menu Animates in from the left and out to the left. The submenus animate in from the right and out to
             * the right. All animations defined here happen when the HTML component is created or destroyed.
             *
             * The HTML Components existence is determined in an NgFor based off of the current value of Menu State.
             */
            animations: [
                Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["j" /* trigger */])('mainMenuTrigger', [
                    Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["g" /* state */])('mainMenu', Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["h" /* style */])({ transform: 'translateX(0)' })),
                    Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["i" /* transition */])('void => *', [
                        Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["h" /* style */])({ transform: 'translateX(-100%)' }),
                        Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["e" /* animate */])(150)
                    ]),
                    Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["i" /* transition */])('* => void', [
                        Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["e" /* animate */])(150, Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["h" /* style */])({ transform: 'translateX(-100%)' }))
                    ])
                ]),
                Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["j" /* trigger */])('subMenuTrigger', [
                    Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["g" /* state */])('mainMenu', Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["h" /* style */])({ transform: 'translateX(0)' })),
                    Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["i" /* transition */])('void => *', [
                        Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["h" /* style */])({ transform: 'translateX(100%)' }),
                        Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["e" /* animate */])(150)
                    ]),
                    Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["i" /* transition */])('* => void', [
                        Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["e" /* animate */])(150, Object(__WEBPACK_IMPORTED_MODULE_1__angular_animations__["h" /* style */])({ transform: 'translateX(100%)' }))
                    ])
                ]),
            ]
        })
        /**
         *  This class holds the contents of our SideNav. It represents both the main menu and handles the menu State creating
         *  the submenus as children when appropriate.
         */
        ,
        __metadata("design:paramtypes", [typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_services_reference_service__["a" /* ReferenceService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_4__shared_system_shared_model_services_reference_service__["a" /* ReferenceService */]) === "function" && _b || Object, typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_5__shared_system_shared_model_services_unit_service__["a" /* UnitService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_5__shared_system_shared_model_services_unit_service__["a" /* UnitService */]) === "function" && _c || Object, typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_6__shared_system_shared_model_services_page_service__["a" /* PageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_6__shared_system_shared_model_services_page_service__["a" /* PageService */]) === "function" && _d || Object, typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_7__model_services_pop_up_service__["a" /* PopUpService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_7__model_services_pop_up_service__["a" /* PopUpService */]) === "function" && _e || Object])
    ], SideNavContentComponent);
    return SideNavContentComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/sidenav-content.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/sub-component/page-indicator.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"isVisible\" style=\"color: white\">\r\n    <span>Page {{currentPageNumber}} of {{totalNumberOfPages}}</span>\r\n</div>"

/***/ }),

/***/ "./src/app/user-interface/view/sub-component/page-indicator.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PageIndicatorComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var PageIndicatorComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Instance Variables / Properties
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor for the Control Bar Component. Used to inject pageService and unitService
     *
     * @param unitService
     */
    function PageIndicatorComponent(unitService, pageService) {
        this.unitService = unitService;
        this.pageService = pageService;
    }
    Object.defineProperty(PageIndicatorComponent.prototype, "currentPageNumber", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The page number for the page we are currently displaying.
         *
         * @returns {string}
         */
        get: function () {
            if (this.unitService.unit && this.pageService.page) {
                // TODO: anything but this functionality
                if (this.isDisabled) {
                    return '*';
                }
                ;
                return this.unitService.getCurrentPageNumber() + '';
            }
            return '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageIndicatorComponent.prototype, "totalNumberOfPages", {
        /**
         * The total Number of pages.
         *
         * @returns {string}
         */
        get: function () {
            if (this.unitService.unit && this.pageService.page) {
                // TODO: anything but this functionality
                if (this.isDisabled) {
                    return '*';
                }
                ;
                return this.unitService.getTotalPageNumbers() + '';
            }
            return '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageIndicatorComponent.prototype, "isDisabled", {
        /**
         * Flag indicating whether the page indicator should be disabled (shows * instead of page numbers ... dumb but ...)
         * @return {boolean}
         */
        get: function () {
            if (this.pageHasPageProperties()) {
                // Use property from PageProperties - have to flip value since property is based on being enabled
                return !this.pageService.page.pageProperties.isPageNumberEnabled;
            }
            else {
                // Otherwise set disabled false as default behavior
                return false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageIndicatorComponent.prototype, "isVisible", {
        /**
         * Flag indicating whether the page indicator should be visible.
         * @return {boolean}
         */
        get: function () {
            if (this.pageHasPageProperties()) {
                // Use property from PageProperties
                return this.pageService.page.pageProperties.isPageNumberVisible;
            }
            else {
                // Otherwise show it as the default behavior
                return true;
            }
        },
        enumerable: true,
        configurable: true
    });
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Validation
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Detect weather or not this page has page properties
     * @TODO: this should possibly be moved to the server this is also used in the control bar and the Course Map
     * @returns {boolean}
     */
    PageIndicatorComponent.prototype.pageHasPageProperties = function () {
        return !!(this.pageService.page && this.pageService.page.pageProperties);
    };
    var _a, _b;
    PageIndicatorComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "player-page-indicator",
            template: __webpack_require__("./src/app/user-interface/view/sub-component/page-indicator.component.html"),
            styles: [__webpack_require__("./src/app/user-interface/view/user-interface.module.css")]
        })
        /**
         * TODO: Comment Me!!
         */
        ,
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_unit_service__["a" /* UnitService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_unit_service__["a" /* UnitService */]) === "function" && _a || Object, typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_page_service__["a" /* PageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_page_service__["a" /* PageService */]) === "function" && _b || Object])
    ], PageIndicatorComponent);
    return PageIndicatorComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/page-indicator.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/sub-component/pathed-page-title.component.html":
/***/ (function(module, exports) {

module.exports = "<div style=\"color: white; display: block; width: 90%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;\">\r\n        <span [mdTooltip]=\"pagePath\" mdTooltipShowDelay=\"333\" mdTooltipPosition=\"below\">\r\n            <span class=\"courseName\">{{courseName}}</span>\r\n            <span>-</span>\r\n            <span class=\"pageName\">{{pageName}}</span>\r\n        </span>\r\n</div>"

/***/ }),

/***/ "./src/app/user-interface/view/sub-component/pathed-page-title.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PathedPageTitleComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/page.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__ = __webpack_require__("./src/app/shared/system-shared/model/services/unit.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * Created by KRasmussen on 3/22/2017.
 */



var PathedPageTitleComponent = /** @class */ (function () {
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Instance Variables / Properties
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////// Constructor / Initialization
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /**
     * Constructor for the Control Bar Component. Used to inject pageService and unitService
     *
     * @param pageService
     * @param unitService
     */
    function PathedPageTitleComponent(pageService, unitService) {
        this.pageService = pageService;
        this.unitService = unitService;
    }
    Object.defineProperty(PathedPageTitleComponent.prototype, "courseName", {
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////// Accessors
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /**
         * The name of the course
         *
         * @returns {string}
         */
        get: function () {
            if (!this.unitService.unit) {
                return '';
            }
            return this.unitService.unit.unitName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PathedPageTitleComponent.prototype, "pageName", {
        /**
         * The Name of the current page
         *
         * @returns {string}
         */
        get: function () {
            return this.pageService.pageName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PathedPageTitleComponent.prototype, "pagePath", {
        /**
         *  The Entire Unit path to the current page.
         *
         * @returns {string}
         */
        get: function () {
            if (!this.pageService.page || !this.unitService.unit) {
                return '';
            }
            var unitBreadcrumbList = this.unitService.getCurrentPageUnitBreadcrumb();
            var breadcrumbString = '';
            for (var i = 0; i < unitBreadcrumbList.length; i++) {
                breadcrumbString += unitBreadcrumbList[i].unitName;
                if (i !== unitBreadcrumbList.length - 1) {
                    breadcrumbString += ' - ';
                }
            }
            return breadcrumbString;
        },
        enumerable: true,
        configurable: true
    });
    var _a, _b;
    PathedPageTitleComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "player-pathed-page-title",
            template: __webpack_require__("./src/app/user-interface/view/sub-component/pathed-page-title.component.html"),
            styles: [__webpack_require__("./src/app/user-interface/view/user-interface.module.css")]
        })
        /**
         * TODO: Comment Me!!
         */
        ,
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1__shared_system_shared_model_services_page_service__["a" /* PageService */]) === "function" && _a || Object, typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__["a" /* UnitService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__shared_system_shared_model_services_unit_service__["a" /* UnitService */]) === "function" && _b || Object])
    ], PathedPageTitleComponent);
    return PathedPageTitleComponent;
}());

//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/pathed-page-title.component.js.map

/***/ }),

/***/ "./src/app/user-interface/view/user-interface.module.css":
/***/ (function(module, exports) {

module.exports = ".appBar{\r\n    background-color: #424242;\r\n    width:100%;\r\n    height:47px;\r\n    -webkit-box-shadow: 0px 2px 5px black;\r\n            box-shadow: 0px 2px 5px black;\r\n}\r\n\r\n.menuButtonDiv{\r\n    height: 47px;\r\n    width: 50px;\r\n\r\n    float: left;\r\n}\r\n\r\n.heading {\r\n    padding-top:16px;\r\n}\r\n\r\n.courseName{\r\n    font-family: 'Open Sans', sans-serif;\r\n    color: white;\r\n    font-size: 16px;\r\n}\r\n\r\n.pageName{\r\n    font-family: 'Open Sans', sans-serif;\r\n    color: white;\r\n    font-size: 14px;\r\n}\r\n\r\n.pageIndicator {\r\n    margin: 5px;\r\n    padding-top:11px;\r\n    float: right;\r\n}\r\n\r\n.controlBar{\r\n    background-color: #FAFAFA;\r\n    width:100%;\r\n    height:29px;\r\n\r\n    -webkit-box-shadow: 0px 0px 5px black;\r\n\r\n            box-shadow: 0px 0px 5px black;\r\n}\r\n\r\n.openSans{\r\n    font-family: 'Open Sans', sans-serif;\r\n    font-size: 14px; /*don't leave this here*/\r\n}\r\n\r\n/*sidenav*/\r\n\r\n.mainMenuButton{\r\n    width: 237px;\r\n    height: 47px;\r\n}\r\n\r\n.mainMenuIcon{\r\n    padding-right: 30px;\r\n}\r\n\r\n.subMenuIcon{\r\n    padding: 14px 30px 14px 16px;\r\n    float:left;\r\n}\r\n\r\n.subMenuTitleText{\r\n    font-family: 'Open Sans', sans-serif;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    display: block;\r\n    padding-top: 16px;\r\n}\r\n\r\n.backButtonText{\r\n    font-family: 'Open Sans', sans-serif;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    float:left;\r\n    position: relative;\r\n    top: 8px;\r\n}\r\n\r\n.sidenavSeperartor{\r\n    border-bottom: 1px solid lightgray;\r\n}\r\n\r\n.truncated {\r\n    display: block;\r\n    white-space: nowrap; /* forces text to single line */\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.popUpContainer{\r\n\r\n}\r\n\r\n.popUpHeader {\r\n    -webkit-box-shadow: 0px 0px 5px black;\r\n            box-shadow: 0px 0px 5px black;\r\n}\r\n"

/***/ }),

/***/ "./src/environments/environment.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.
var environment = {
    production: false
};
//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/environment.js.map

/***/ }),

/***/ "./src/main.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__ = __webpack_require__("./node_modules/@angular/platform-browser-dynamic/@angular/platform-browser-dynamic.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__("./node_modules/@angular/core/@angular/core.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_environment__ = __webpack_require__("./src/environments/environment.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__app___ = __webpack_require__("./src/app/index.ts");




if (__WEBPACK_IMPORTED_MODULE_2__environments_environment__["a" /* environment */].production) {
    Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["enableProdMode"])();
}
Object(__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_3__app___["a" /* AppModule */]);
//# sourceMappingURL=D:/DIF/DIF611Branch/Development/Player/src/main.js.map

/***/ }),

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("./src/main.ts");


/***/ })

},[0]);
//# sourceMappingURL=main.bundle.js.map